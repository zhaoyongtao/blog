{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/favicon.ico","path":"favicon.ico","modified":0,"renderable":0},{"_id":"source/readme.mdown","path":"readme.mdown","modified":0,"renderable":0},{"_id":"source/robots.txt","path":"robots.txt","modified":0,"renderable":0},{"_id":"source/images/alipay-reward-image.jpg","path":"images/alipay-reward-image.jpg","modified":0,"renderable":0},{"_id":"source/images/avatar.png","path":"images/avatar.png","modified":0,"renderable":0},{"_id":"source/images/wechat-reward-image.jpg","path":"images/wechat-reward-image.jpg","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/LICENSE","path":"vendors/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/README.md","path":"vendors/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/bower.json","path":"vendors/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/HELP-US-OUT.txt","path":"vendors/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/bower.json","path":"vendors/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/README.md","path":"vendors/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/CONTRIBUTING.md","path":"vendors/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/bower.json","path":"vendors/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.scrollstop.js","path":"vendors/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.lazyload.js","path":"vendors/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/bower.json","path":"vendors/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.min.js","path":"vendors/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.ui.js","path":"vendors/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.ui.min.js","path":"vendors/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/love.js","path":"js/src/love.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/particle.js","path":"js/src/particle.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery/index.js","path":"vendors/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/blank.gif","path":"vendors/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading.gif","path":"vendors/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_overlay.png","path":"vendors/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading@2x.gif","path":"vendors/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite.png","path":"vendors/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite@2x.png","path":"vendors/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.css","path":"vendors/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.js","path":"vendors/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.pack.js","path":"vendors/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.js","path":"vendors/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.min.js","path":"vendors/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css","path":"vendors/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.min.css","path":"vendors/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css.map","path":"vendors/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.min.js","path":"vendors/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.pack.js","path":"vendors/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/FontAwesome.otf","path":"vendors/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","path":"vendors/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.js","path":"vendors/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","path":"vendors/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","path":"vendors/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","path":"vendors/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"source/favicon.ico","hash":"377724dc63a56335c2a2b28b21dd53da9f343653","modified":1482565952073},{"_id":"source/readme.mdown","hash":"20e7361f4e4962365690034a9009449a8c99cc3c","modified":1501398483215},{"_id":"source/robots.txt","hash":"f8ad8b7a6b302378617390851df8254a0e997b31","modified":1471684505887},{"_id":"themes/next/.bowerrc","hash":"20038353db532b4c40625419d396da7359f89cbe","modified":1469973403199},{"_id":"themes/next/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1469973403199},{"_id":"themes/next/.gitignore","hash":"80710b94ff2f6c013859ebffffe90f9295fc94ed","modified":1469973403199},{"_id":"themes/next/.hound.yml","hash":"289dcf5bfe92dbd680d54d6e0668f41c9c9c0c78","modified":1469973403199},{"_id":"themes/next/.javascript_ignore","hash":"beb0b95736650284ceb712a162cc033847a83cd3","modified":1469973403199},{"_id":"themes/next/README.en.md","hash":"fa31bbc6dd8778b8dee469740c92b3b5b59702af","modified":1469973403199},{"_id":"themes/next/.jshintrc","hash":"b7d23f2ce8d99fa073f22f9960605f318acd7710","modified":1469973403199},{"_id":"themes/next/_config.yml","hash":"11a56c7ccd019d68301db852996dc5959850fea7","modified":1501401529360},{"_id":"themes/next/README.md","hash":"06aaf1241e9e1619956c86d8b1397a643840a9d1","modified":1469973403199},{"_id":"themes/next/bower.json","hash":"da39b00fcdf2e7a42af412de0a4d3617cc6d7084","modified":1469973403199},{"_id":"themes/next/gulpfile.coffee","hash":"4e8c1082fa82e383494ff5b5963b7936d9c7bb2e","modified":1469973403199},{"_id":"themes/next/package.json","hash":"95eaba1607544965e432d56406bae391dd11bcbb","modified":1469973403231},{"_id":"source/404/index.md","hash":"3fc8b5d8c482fdfc4ec90efedb443b5e665405e7","modified":1501243243967},{"_id":"source/_posts/2016-06-22-Apache配置虚拟主机的三种方式.md","hash":"8dc05c6b636f2b0ca359da29ac78629aeb302e6b","modified":1487079765392},{"_id":"source/_posts/2016-06-22-Nginx性能优化技巧.md","hash":"281ebc822e47b38b9e7e7a969440fcb223404dd6","modified":1487079765394},{"_id":"source/_posts/2016-06-22-apache编译参数.md","hash":"04fba2a8f0c255f2ebb59d055fca70733ef85489","modified":1487079765422},{"_id":"source/_posts/2016-06-22-nginx安装与常用配置.md","hash":"f961e6f06b83f62a2825483f9fb0233a1ecf0d5c","modified":1487079765422},{"_id":"source/_posts/2016-06-23-LAMP-CentOS-7平台三机FastCGI模型.md","hash":"84da6d280a7c03b0e956d1a7a7dcaa67fbc39c1d","modified":1487079765396},{"_id":"source/_posts/2016-06-25-HAProxy动静分离和负载均衡.md","hash":"ec3a48a23fe1a147dd289d488132604a457ffa00","modified":1487079765397},{"_id":"source/_posts/2016-07-01-AWK使用案例总结.md","hash":"dea74d71f196a14b84c18f6cba1ac1486f091c75","modified":1487079765398},{"_id":"source/_posts/2016-07-02-KVM总结.md","hash":"7077a51481929fb9f5817d8953fa8e406bc1c7d1","modified":1487079765399},{"_id":"source/_posts/2016-07-02-PHP工作的三种模式.md","hash":"563c285d9b17441cda17f46e7f38b6a90460ea3f","modified":1487079765400},{"_id":"source/_posts/2016-07-03-ansible.md","hash":"9080033a167ebf044e4b960556e4d141c7e4570a","modified":1487079765402},{"_id":"source/_posts/2016-07-03-ssh互信.md","hash":"3bb26362bd6361ffc99b73279c76d7350e93b4fc","modified":1487079765401},{"_id":"source/_posts/2016-07-03-tcp三次握手四次挥手的理解.md","hash":"0e39f27d6216b1b6875313e4abb89489a1f4dc0b","modified":1487079765404},{"_id":"source/_posts/2016-07-05-tomcat基础安装及简单配置与部署.md","hash":"58a6729d51e013889f26eb45dbdd5e9f61943ebc","modified":1487079765404},{"_id":"source/_posts/2016-07-08-CentOS Linux服务器安全设置.md","hash":"d11a43b61a9448fe3be7e8c2024c50d8c7422769","modified":1487079765405},{"_id":"source/_posts/2016-07-13-web网站的几个并发连接.md","hash":"bfcf67eba377760ab4c306f15167ceddc71ceb5a","modified":1487079765406},{"_id":"source/_posts/2016-07-17-MySQL主从复制.md","hash":"e7c113769bf8609039797e3743b03e95f62a0798","modified":1487079765407},{"_id":"source/_posts/2016-07-17-MySQL主从复制架构示例演示.md","hash":"b72879dce2eeb44ac93771c0e6125b86472bae2d","modified":1487079765423},{"_id":"source/_posts/2016-07-17-MySQL备份.md","hash":"ebcf9ff6da24ec0702216e3cf37c46aa4b76f3d3","modified":1487079765410},{"_id":"source/_posts/2016-07-25-MySQL高可用之MHA的搭建.md","hash":"0a503c0d9a88fb47e0b9986ac43ca1aca30099d7","modified":1487079765410},{"_id":"source/_posts/2016-08-20-二十款免费WiFi渗透测试工具.md","hash":"c5fc60d86f7aaa5e816639279c43d4e4353ef6f4","modified":1487079765409},{"_id":"source/_posts/2016-08-21-IT必备网站.md","hash":"79df63c68dfa92af60a9079f5cc573626fef1fe8","modified":1487079765411},{"_id":"source/_posts/2016-09-23-爬坑之R730服务器安装系统.md","hash":"6cdd53b948e10d3407acae8920e030e7f044bf6b","modified":1487079765412},{"_id":"source/_posts/2016-09-26-基础环境搭建-kvm.md","hash":"b733b59f8078dbdf59ffe3fff78caecc976e6c6e","modified":1487079765412},{"_id":"source/_posts/2016-09-28-基础服务-apache+php+freetds.md","hash":"56b6674554fd93a59498a39214fe46279bb507e2","modified":1487079765416},{"_id":"source/_posts/2016-09-27-基础服务-keepalived+nginx.md","hash":"914020946bd88eec256e53e2015638b088c6a67b","modified":1487079765413},{"_id":"source/_posts/2016-09-30-解决kvm虚拟机windows系统间歇性断网的问题.md","hash":"596caf7403572e4c08ed156f8bd7c17fd37769e0","modified":1487079765414},{"_id":"source/_posts/2017-01-17-Python之10分钟入门.md","hash":"f0ead4d0a284de0b6126b4c8905c473aaed7105f","modified":1501403768212},{"_id":"source/_posts/Django留言板.md","hash":"569d5dc497b4bc413f82f5d37f12b6d397e34a1c","modified":1501161893745},{"_id":"source/_posts/KVM-OSX.md","hash":"43a13a501302c56b39480b99132cad666b4e06f9","modified":1501248152164},{"_id":"source/_posts/lnmp搭建.md","hash":"d4a5dd8150e016c4183aa8abf43fbcf2c0a6a258","modified":1501248300412},{"_id":"source/_posts/函数.md","hash":"a6a6a8b77273b5d93e0e6ca9d23ffc1d221c3c36","modified":1501162165791},{"_id":"source/_posts/samba.md","hash":"618db3be555f29df277ad5f099b0ab76ca73838e","modified":1501247939253},{"_id":"source/_posts/指尖流沙.md","hash":"4620c9103dfe7bac47d33932481e059855719a3c","modified":1487170396604},{"_id":"source/about/index.md","hash":"caabcbab56c958435503b943a23d75d73e9d8d3a","modified":1501167524331},{"_id":"source/book/index.md","hash":"30f50b68b95ce15c3076741da30dd5c30c55f626","modified":1501401395562},{"_id":"source/categories/index.md","hash":"8842a8b2e5a8f87b50f7d7df83e1ed0d15c9a68a","modified":1470136889466},{"_id":"source/guestbook/index.md","hash":"359c42d5972fac4075b0e50d8b4e8b8e0f12fd2b","modified":1483170787684},{"_id":"source/images/alipay-reward-image.jpg","hash":"e7b03158dfd824a83efd4d9aa8cb4306ba57d215","modified":1470387190194},{"_id":"source/images/avatar.png","hash":"4d3b0460da9e9920a14dbca57abd07c093f8ed6c","modified":1482566617862},{"_id":"source/images/wechat-reward-image.jpg","hash":"4535680e8de23e9c13b9a2a8264018944e5ab93a","modified":1470387171085},{"_id":"source/lhl/index.md","hash":"61ec417d18ab55974d0fd04c1242bbdcb4457b70","modified":1501166265052},{"_id":"source/resume/index.md","hash":"2143596ea66aa1edd3095b4994f09e049e5e3d30","modified":1501167471916},{"_id":"source/tags/index.md","hash":"398aed4c28b8cbadbb483d7d05624a8c59a04072","modified":1470136885278},{"_id":"themes/next/.git/config","hash":"340cff4364d9733a32042fdb93097c334a781c93","modified":1469973403168},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1469973403168},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1469972928754},{"_id":"themes/next/.git/index","hash":"b65bfa9466efd1f88ae47dd0f4371131912bd93e","modified":1469973403324},{"_id":"themes/next/.git/packed-refs","hash":"c260c6d28e96faeec8fe2ead52f6103d079e2f0c","modified":1469973403152},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"4312fb37fa2b8663006be3c4fe01125ec01171c1","modified":1469973403199},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"2692e36cc35b1594530981e7727771f601720a43","modified":1469973403199},{"_id":"themes/next/languages/de.yml","hash":"4c3ffeb0d214c807a226dd98214958cb5483df1c","modified":1469973403199},{"_id":"themes/next/languages/default.yml","hash":"d2f6784b9c6567b64e58736e36025dbf96d863d4","modified":1469973403199},{"_id":"themes/next/languages/en.yml","hash":"df81ab6b1cf3c88ed053d3766381cd12eb659fe3","modified":1469973403199},{"_id":"themes/next/languages/fr-FR.yml","hash":"d8a40fe025fad6f42df0cf16d4be2d513769b062","modified":1469973403199},{"_id":"themes/next/languages/id.yml","hash":"19537c8bae42c4c2e7d06a64537e8dfd503b7e19","modified":1469973403199},{"_id":"themes/next/languages/ja.yml","hash":"e594aa42a33c489e4a65065659a01bb76c3c0cb5","modified":1469973403199},{"_id":"themes/next/languages/pt-BR.yml","hash":"81498b783372f11b2149bd2b1731e78432760a0e","modified":1469973403199},{"_id":"themes/next/languages/pt.yml","hash":"4c64594f477905d5d2d9ca2422f03175b7b0c617","modified":1469973403199},{"_id":"themes/next/languages/ru.yml","hash":"c3aedb94decf05a301662afc3398ab563dd9995a","modified":1469973403199},{"_id":"themes/next/languages/zh-Hans.yml","hash":"816ebf89016b4c883d001e7f9c738d2e234b09da","modified":1501160427325},{"_id":"themes/next/languages/zh-hk.yml","hash":"88e603eb0f3fd25c35bb37bd30372fd77bba7c46","modified":1469973403199},{"_id":"themes/next/languages/zh-tw.yml","hash":"04479b419c72b71fd34046f3fc33ebda4fe8de84","modified":1469973403199},{"_id":"themes/next/layout/_layout.swig","hash":"8fcacd6ecabc5f5ce593f279ca42033ed58fe4fb","modified":1487078678385},{"_id":"themes/next/layout/archive.swig","hash":"b867a08f6b43de8b5d700c84b943df55917407ae","modified":1469973403231},{"_id":"themes/next/layout/category.swig","hash":"58cf08388901f7549b1fca95548b2c79173aa840","modified":1469973403231},{"_id":"themes/next/layout/page.swig","hash":"a91e3fd7aef26e8a02e339e3372801c517f400cf","modified":1469973403231},{"_id":"themes/next/layout/index.swig","hash":"f21ef57fdf27159139ac924ac521eed4f25c8342","modified":1471684703520},{"_id":"themes/next/layout/post.swig","hash":"b8334c479840b7724638eec71971cbd8512ae58d","modified":1469973403231},{"_id":"themes/next/layout/tag.swig","hash":"6f764ea3ab11eeb7c530df45528d449b14f5dc62","modified":1469973403231},{"_id":"themes/next/scripts/merge-configs.js","hash":"f8cde6953939802f92da5b7a2458c6c539e9be69","modified":1469973403231},{"_id":"themes/next/test/.jshintrc","hash":"c9fca43ae0d99718e45a6f5ce736a18ba5fc8fb6","modified":1469973403324},{"_id":"themes/next/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1469973403324},{"_id":"themes/next/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1469973403324},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1469973403262},{"_id":"source/lhl/bak/lhl.css","hash":"b0c300fc283d4ac1633086d1bf03f658b1170736","modified":1501163925368},{"_id":"source/lhl/bak/index.html","hash":"f7de52a23c04c85837aa58d711b5ead0fba6a3c9","modified":1501164050601},{"_id":"source/lhl/bak/lhl.js","hash":"11a9ea4e8700c1017d88f3489e1b6663f141a6bd","modified":1501163975987},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1469972928754},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1469972928770},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1469972928770},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1469972928770},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1469972928770},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1469972928770},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1469972928785},{"_id":"themes/next/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1469972928785},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1469972928785},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1469972928785},{"_id":"themes/next/.git/logs/HEAD","hash":"8eca35f0f1bac649ee61a9f018553a2531764bbb","modified":1469973403168},{"_id":"themes/next/layout/_macro/post.swig","hash":"c73b029ef1caff3d634b08878009e05a22225df9","modified":1487169735891},{"_id":"themes/next/layout/_macro/reward.swig","hash":"b6cb171f0ed227b82b8f7601814af2df93f3a09a","modified":1469973403199},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"8aa5212d803670179222dbc80e73eadd7328d8e5","modified":1469973403199},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"b87a5122dbff1d5fccf8f3d09d1640bd4b01c4a0","modified":1469973403199},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"c5cc0070ca7c9a8dbd4b09e0398db536c3cdbe8a","modified":1469973403199},{"_id":"themes/next/layout/_partials/comments.swig","hash":"5d84f3938e99f1908a6a1d44dd530740625f0188","modified":1469973403215},{"_id":"themes/next/layout/_partials/duoshuo-hot-articles.swig","hash":"ba75672183d94f1de7c8bd0eeee497a58c70e889","modified":1469973403215},{"_id":"themes/next/layout/_partials/footer.swig","hash":"b9a7e472702366b8e55e74fc9f0f4537a56e748d","modified":1486997046012},{"_id":"themes/next/layout/_partials/head.swig","hash":"cdaa27921fc19091e5fe0d43d797fb9605fddb05","modified":1487083429668},{"_id":"themes/next/layout/_partials/header.swig","hash":"604d360c83f91f2bb840a30703893ae74e9b295c","modified":1487163677985},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"1634fb887842698e01ff6e632597fe03c75d2d01","modified":1469973403215},{"_id":"themes/next/layout/_partials/search.swig","hash":"95b55fe35f2d2c22f2cc055d4379b5435314c7ec","modified":1469973403215},{"_id":"themes/next/layout/_scripts/baidu-push.swig","hash":"c5db707b46eac6a5df1d2a77f8556945a66fd181","modified":1469973403215},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"931808ad9b8d8390c0dcf9bdeb0954eeb9185d68","modified":1469973403215},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"c0f5a0955f69ca4ed9ee64a2d5f8aa75064935ad","modified":1469973403215},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"c9d45628330ce8bf5fbe71c9f131c7d75334c1c4","modified":1469973403231},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"99b66949f18398689b904907af23c013be1b978f","modified":1469973403231},{"_id":"themes/next/scripts/tags/full-image.js","hash":"86194a05a8c6499de0b2aaa525d6de135778c0ae","modified":1469973403231},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"ac681b0d0d8d39ba3817336c0270c6787c2b6b70","modified":1469973403231},{"_id":"themes/next/source/css/main.styl","hash":"a91dbb7ef799f0a171b5e726c801139efe545176","modified":1469973403262},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1469973403262},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1469973403262},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1469973403262},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1469973403277},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1469973403277},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1469973403277},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1469973403277},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1469973403277},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1469973403277},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1469973403277},{"_id":"themes/next/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1469973403277},{"_id":"themes/next/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1469973403277},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1469973403277},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1469973403215},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1469973403215},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1469973403246},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1469973403246},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1469973403262},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1469973403262},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1469973403262},{"_id":"themes/next/.git/refs/heads/master","hash":"283a77b25951fbb3b2f10b4be4c80b6519ac6011","modified":1469973403168},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"f5e487b0d213ca0bd94aa30bc23b240d65081627","modified":1469973403215},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"efa7efcbb575381b508f9aa0e0c53140eef72a7b","modified":1469973403215},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"a8c7f9ca7c605d039a1f3bf4e4d3183700a3dd62","modified":1469973403215},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1469973403215},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"bf8e9223a40748b2e3ef77d753a8e1dbbce8095e","modified":1469973403215},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"3fdde03f45a80f7a85097a40b40358adde618fc7","modified":1469973403215},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1469973403215},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"12684840de632eb16e53ffa863166306a756fd4f","modified":1469973403215},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"9b84ab576982b2c3bb0291da49143bc77fba3cc6","modified":1469973403215},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1469973403215},{"_id":"themes/next/layout/_scripts/third-party/comments.swig","hash":"8ba01f1ac07fbca62a4b00f5a0a3a506122c1530","modified":1469973403215},{"_id":"themes/next/layout/_scripts/third-party/analytics.swig","hash":"91c5353fcb94cc3b3f265b06ad2341734bc4c826","modified":1469973403215},{"_id":"themes/next/layout/_scripts/third-party/lean-analytics.swig","hash":"e495aed8fb36bf8015ddbd64366270a7debad2b0","modified":1469973403215},{"_id":"themes/next/layout/_scripts/third-party/mathjax.swig","hash":"4a5c6df1579a4ca72ed17f7dbd6d16a509aa7dc8","modified":1469973403215},{"_id":"themes/next/layout/_scripts/third-party/localsearch.swig","hash":"f6b46096208512b4d8680c024fcb68f03ceab008","modified":1469973403215},{"_id":"themes/next/layout/_scripts/third-party/tinysou.swig","hash":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1469973403231},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"a0f23e75a137d8c996c70e2059e0074f1e97a127","modified":1469973403246},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"531934ea21ef4dc9f0978512050f54834f0a6cff","modified":1469973403262},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"a16d84cdfc9daaed4512a19945fdf0e915a102fb","modified":1487079281568},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"e55265c8a8a6ae0c3c08e3509de92ee62c3cb5f6","modified":1469973403262},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"b8e3663996b39590509d843f674360872b0242ac","modified":1469973403262},{"_id":"themes/next/source/css/_variables/base.styl","hash":"a7ae72e846393493385275d934eaa78534d9834c","modified":1469973403262},{"_id":"themes/next/source/vendors/fancybox/.bower.json","hash":"9be892a4e14e0da18ff9cb962c9ef71f163b1b22","modified":1469973403293},{"_id":"themes/next/source/vendors/fancybox/.gitattributes","hash":"672d3b5767e0eacd83bb41b188c913f2cf754793","modified":1469973403293},{"_id":"themes/next/source/vendors/fastclick/.bower.json","hash":"bf3eef9d647cd7c9b62feda3bc708c6cdd7c0877","modified":1469973403293},{"_id":"themes/next/source/vendors/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1469973403293},{"_id":"themes/next/source/vendors/fastclick/README.md","hash":"68a9b9d53126405b0fa5f3324f1fb96dbcc547aa","modified":1469973403293},{"_id":"themes/next/source/vendors/fastclick/bower.json","hash":"a9b3ee1e4db71a0e4ea6d5bed292d176dd68b261","modified":1469973403293},{"_id":"themes/next/source/vendors/font-awesome/.bower.json","hash":"bb093f2ac1f1305069d873a7941324c8e0de3135","modified":1469973403293},{"_id":"themes/next/source/vendors/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1469973403293},{"_id":"themes/next/source/vendors/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1469973403293},{"_id":"themes/next/source/vendors/font-awesome/HELP-US-OUT.txt","hash":"ed80b43dbc7e3009b2f436741b9796df8eb3be02","modified":1469973403293},{"_id":"themes/next/source/vendors/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1469973403293},{"_id":"themes/next/source/vendors/jquery/.bower.json","hash":"865d6c1328ab209a4376b9d2b7a7824369565f28","modified":1469973403309},{"_id":"themes/next/source/vendors/jquery_lazyload/.bower.json","hash":"90fa628f156d8045357ff11eaf32e61abacf10e8","modified":1469973403309},{"_id":"themes/next/source/vendors/jquery_lazyload/README.md","hash":"b930297cb98b8e1dbd5abe9bc1ed9d5935d18ce8","modified":1469973403309},{"_id":"themes/next/source/vendors/jquery_lazyload/CONTRIBUTING.md","hash":"4ded6fee668544778e97e38c2b211fc56c848e77","modified":1469973403309},{"_id":"themes/next/source/vendors/jquery_lazyload/bower.json","hash":"e0acf1db27b0cc16128a59c46db1db406b5c4c58","modified":1469973403309},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.scrollstop.js","hash":"bf773ad48a0b9aa77681a89d7569eefc0f7b7b18","modified":1469973403309},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.lazyload.js","hash":"f4a570908f6c89c6edfb1c74959e733eaadea4f2","modified":1469973403309},{"_id":"themes/next/source/vendors/velocity/bower.json","hash":"92d92860418c4216aa59eb4cb4a556290a7ad9c3","modified":1469973403324},{"_id":"themes/next/source/vendors/velocity/.bower.json","hash":"63da5e80ebb61bb66a2794d5936315ca44231f0c","modified":1469973403324},{"_id":"themes/next/source/vendors/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1469973403324},{"_id":"themes/next/source/vendors/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1469973403324},{"_id":"themes/next/source/vendors/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1469973403324},{"_id":"themes/next/source/js/src/affix.js","hash":"1b509c3b5b290a6f4607f0f06461a0c33acb69b1","modified":1469973403277},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"b35a7dc47b634197b93487cea8671a40a9fdffce","modified":1469973403277},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"4a0da1bed19e65bd7db42421b447061bc1618710","modified":1469973403277},{"_id":"themes/next/source/js/src/love.js","hash":"9e8e79d69ad8338761272f86fe5cad0ad5e503cc","modified":1483166589144},{"_id":"themes/next/source/js/src/particle.js","hash":"914c8e99af756e7004359aaa71fee4e59f214649","modified":1482580594166},{"_id":"themes/next/source/js/src/motion.js","hash":"ff9ea37d05c269e3a140c4ab448af03efc4bcc76","modified":1469973403277},{"_id":"themes/next/source/js/src/post-details.js","hash":"458af3b1bd7783c1950808e66cedfa9fb68bf21f","modified":1469973403293},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"b7657be25fc52ec67c75ab5481bdcb483573338b","modified":1469973403293},{"_id":"themes/next/source/js/src/utils.js","hash":"418d09eb4df5dcc5e8d13d7f6245b1888200b51c","modified":1469973403293},{"_id":"themes/next/source/vendors/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1469973403309},{"_id":"themes/next/.git/objects/pack/pack-e00f886c9514837626bc8d3993103c1a358412f3.idx","hash":"3f14696ebf407e84c94a306793b234758b4fbdfa","modified":1469973402934},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"8eca35f0f1bac649ee61a9f018553a2531764bbb","modified":1469973403168},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1469973403152},{"_id":"themes/next/layout/_scripts/third-party/analytics/baidu-analytics.swig","hash":"ae5b8597603d4e42ee66ed121544e7b1c644767e","modified":1469973403215},{"_id":"themes/next/layout/_scripts/third-party/analytics/busuanzi-counter.swig","hash":"24105e62d7f26946907fa14cd02589f899bf8122","modified":1469973403215},{"_id":"themes/next/layout/_scripts/third-party/analytics/cnzz-analytics.swig","hash":"3931f9c3bac3970a3f54c9d0072ae4c950aa176c","modified":1469973403215},{"_id":"themes/next/layout/_scripts/third-party/analytics/facebook-sdk.swig","hash":"a79e7e0d809fcf407593dd7ed9e023db21c3cbd6","modified":1469973403215},{"_id":"themes/next/layout/_scripts/third-party/analytics/google-analytics.swig","hash":"1b6af02fd0ba3f729675cd95429a0cea4aebf358","modified":1469973403215},{"_id":"themes/next/layout/_scripts/third-party/analytics/tencent-analytics.swig","hash":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1469973403215},{"_id":"themes/next/layout/_scripts/third-party/comments/disqus.swig","hash":"f8b6a3017ab79057ce99f1ccb512193d67f4a35f","modified":1469973403215},{"_id":"themes/next/layout/_scripts/third-party/comments/duoshuo.swig","hash":"0a2f48971d86ea72e1a8fd1d8bbf2b7d423666b2","modified":1469973403215},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"ad69cbf94eedacc27e756cdb9c7073416db697d0","modified":1469973403231},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"22828f5141c0cecb9ef25a110e194cdfa3a36423","modified":1469973403231},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"b7d5cc29586ac796a50d90974ad99d24a5982137","modified":1469973403231},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1469973403231},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"88559b13ce94311405b170a0506ded91273beceb","modified":1469973403231},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"5a35aa0381b0e1d465b952a997194441020446ea","modified":1469973403246},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"b6ee5fefa6046086a76ddbcfafc82482816fa3e0","modified":1469973403246},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1469973403246},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"c9218b48c56e52c06af9ce3cc8fbdae737cf16fe","modified":1469973403246},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"ea9069645696f86c5df64208490876fe150c8cae","modified":1469973403246},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"12662536c7a07fff548abe94171f34b768dd610f","modified":1469973403246},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1469973403246},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"25d5e45a355ee2093f3b8b8eeac125ebf3905026","modified":1469973403262},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"d0bfd1bef988c76f7d7dd72d88af6f0908a8b0db","modified":1469973403262},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"26666c1f472bf5f3fb9bc62081cca22b4de15ccb","modified":1469973403262},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1469973403262},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"55b44e03054cd20ed8129bf986b15fba5fd85aad","modified":1469973403262},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1469973403262},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9b913b73d31d21f057f97115ffab93cfa578b884","modified":1469973403262},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"124b540f059fd1ed13514362007cfc70355278c6","modified":1469973403262},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"748dbfbf9c08e719ddc775958003c64b00d39dab","modified":1469973403262},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"13af2fb21fabfc4df4b577ce5363e13d03daff71","modified":1469973403262},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1469973403262},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"5dbc0d0c897e46760e5dbee416530d485c747bba","modified":1469973403262},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c9875c010bebd77b4f59d459a10455fceb0a66a1","modified":1469973403262},{"_id":"themes/next/source/css/_schemes/Pisces/_full-image.styl","hash":"de31e923bf5102498f06b1ae6bdf2ea22409f3e0","modified":1469973403262},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"2182a6da3434a6fd4d03ab1592c645d3d3c88500","modified":1469973403262},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1487170123171},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"9887bd3894db5394c1e64e800afaae55f47e8dd0","modified":1469973403262},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"983c0723e8cfd84b67c2e66da0c26425a8db06e0","modified":1469973403262},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"88a5e0e95f93e4adb196bff1aac17d6cfb03768a","modified":1469973403262},{"_id":"themes/next/source/vendors/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1469973403293},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1469973403293},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1469973403293},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1469973403293},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1469973403293},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1469973403293},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.css","hash":"82f33ad0842aa9c154d029e0dada2497d4eb1d57","modified":1469973403293},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.js","hash":"d71602cbca33b9ecdb7ab291b7f86a49530f3601","modified":1469973403293},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.pack.js","hash":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1469973403293},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.js","hash":"1d6aeda0480d0e4cb6198edf7719d601d4ae2ccc","modified":1469973403293},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1469973403293},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css","hash":"811432ad1e2d6c1f6da9a63fd919bf2a02b71dd9","modified":1469973403293},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.min.css","hash":"4c2c5f5f6cc86d775a44b944661e038b7be98149","modified":1469973403309},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1469973403309},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","hash":"574ea2698c03ae9477db2ea3baf460ee32f1a7ea","modified":1469973403309},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.min.js","hash":"41ea797c68dbcff2f6fb3aba1d1043a22e7cc0f6","modified":1469973403309},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.pack.js","hash":"a817b6c158cbc5bab3582713de9fe18a18a80552","modified":1469973403324},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"a9d064d600ee35acd66508167e1ac8c6cfdbdcd8","modified":1469973403293},{"_id":"themes/next/source/vendors/font-awesome/fonts/FontAwesome.otf","hash":"0112e96f327d413938d37c1693806f468ffdbace","modified":1469973403309},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","hash":"b3c2f08e73320135b69c23a3908b87a12053a2f6","modified":1469973403309},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","hash":"507970402e328b2baeb05bde73bf9ded4e2c3a2d","modified":1469973403309},{"_id":"themes/next/source/vendors/velocity/velocity.js","hash":"e63dc7cea055ca60a95d286f32349d88b10c5a4d","modified":1469973403324},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"8eca35f0f1bac649ee61a9f018553a2531764bbb","modified":1469973403152},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"4c4ef6e997d0c6e21de39c2daa0c768e12c8c6fa","modified":1469973403231},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1469973403231},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"0656e753f182c9f47fef7304c847b7587a85ef0d","modified":1469973403231},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"852fd77500bda2c1a6651a14aa48d7d6222adc9d","modified":1469973403231},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"1727702eac5d326b5c81a667944a245016668231","modified":1469973403231},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"53cde051e0337f4bf42fb8d6d7a79fa3fa6d4ef2","modified":1469973403231},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"70ec8d38d2b3ee1906793d1dcb68032adfa65f03","modified":1469973403231},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"12e366f04497e3f44388fd40111a03e02f7c26af","modified":1469973403231},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"104b5c79cd891506e0beaf938b083685f1da8637","modified":1469973403231},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1469973403231},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"b8f9c95702e87fd0b170ab586c82c9718a245f8a","modified":1469973403231},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1469973403231},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"a45f5fce643eec4e1b927165229d560364bcace1","modified":1469973403231},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"a200c0a1c5a895ac9dc41e0641a5dfcd766be99b","modified":1469973403231},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"4866fb9453d7d4c83a1c4e55d74e4afed336eb8b","modified":1469973403231},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"ca20affaeaf33c0904cb6356864fc6b78e95f447","modified":1469973403231},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"cd9e214e502697f2f2db84eb721bac57a49b0fce","modified":1469973403231},{"_id":"themes/next/source/css/_common/components/post/post-more-link.styl","hash":"2bc3e33fdfbcf348c96ca60598f629dcd7ba3617","modified":1469973403246},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"929fac3a505bacbce6ba63009fd15851e2a8669d","modified":1469973403246},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"8355b0e9375b3245508efda0e18acd069c2aa767","modified":1469973403246},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1469973403246},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"350469437b20ecfd6f3ca45e400478f8e3f71cfb","modified":1469973403246},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"01567edaea6978628aa5521a122a85434c418bfd","modified":1469973403246},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"9ed93a624d44ade73ff01687834fdbe0175e702c","modified":1487170281396},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"7f2bdd6109614d35408ee5ac3335aad4464c69c7","modified":1469973403246},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"821991c0890966a512b43e8b1cf9537e738a09a0","modified":1469973403246},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"761eba9811b050b25d548cc0854de4824b41eb08","modified":1469973403246},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1469973403246},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"1153bb71edf253765145559674390e16dd67c633","modified":1469973403246},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"394888efec32749b353292a59ec7f1b609d6325e","modified":1469973403246},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"06b9a99d63b4d57fdbf70b88ab7036fbc47e3f52","modified":1469973403246},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"702be9e57dd6ff5fa99642a1f6e3df26215b8805","modified":1469973403246},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"e71652d3216e289c8548b1ea2357822c1476a425","modified":1469973403246},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1469973403246},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1469973403246},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"dd941824210733588841897457e0cc9697ca5608","modified":1469973403246},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"a83f493e494f5c73fab8f6f5b686ef1670490095","modified":1469973403246},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"5dbeed535d63a50265d96b396a5440f9bb31e4ba","modified":1469973403246},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"7f7e9df15148608a9c29326dd880d8e8e8efc0ec","modified":1469973403246},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"717cc7f82be9cc151e23a7678601ff2fd3a7fa1d","modified":1469973403246},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"dcb4548d07cbb38b645b1753cf3ee7157e16921a","modified":1469973403246},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"15975ba7456b96916b1dbac448a1a0d2c38b8f3d","modified":1469973403246},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"7bd182d918f3117335a5ee87a1b544e6d2b54d7d","modified":1469973403246},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1469973403262},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"cf900c5026ab36f31118317d0ae32a213e3ec2a9","modified":1469973403262},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"cf900c5026ab36f31118317d0ae32a213e3ec2a9","modified":1469973403262},{"_id":"themes/next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1469973403293},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1469973403293},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"ee948b4489aedeb548a77c9e45d8c7c5732fd62d","modified":1469973403293},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1469973403293},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","hash":"51139a4c79573d372a347ef01a493222a1eaf10a","modified":1469973403293},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"d22b1629cb23a6181bebb70d0cf653ffe4b835c8","modified":1469973403293},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","hash":"27cf1f2ec59aece6938c7bb2feb0e287ea778ff9","modified":1469973403309},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","hash":"f346b8b3df147e4059e1a7d66c52c9a6e1cec3e8","modified":1469973403309},{"_id":"themes/next/.git/objects/pack/pack-e00f886c9514837626bc8d3993103c1a358412f3.pack","hash":"e71ec38f27723a63ccd2acb7754e5aa948cdbc5e","modified":1469973402996},{"_id":"public/lhl/bak/lhl.css","hash":"e35f686cd04534ac361010177796d6fe51be5767","modified":1501167567566},{"_id":"public/lhl/bak/lhl.js","hash":"69a9167f9b3e011827ab212658b2edb02802ac50","modified":1501167567598},{"_id":"public/baidusitemap.xml","hash":"1d912f56403a378d1ca4519d59a0b75bdeafe049","modified":1501404120301},{"_id":"public/search.xml","hash":"6ae57fa6e54e0bb1eb59528c2cf016bc5764ede7","modified":1501404120337},{"_id":"public/sitemap.xml","hash":"6e73f4b06440cf8d16492bad91f121fd1ad0b50f","modified":1501404120337},{"_id":"public/404.html","hash":"ab06876d5b3b2ad53e8cee354f9ff091337e4ec9","modified":1501403800974},{"_id":"public/about/index.html","hash":"b204be848ad1c5bfe42cc3993a01cafde1c46ddb","modified":1501403800975},{"_id":"public/book/index.html","hash":"62c6be3631827dd6928653ed402ac201ff26b320","modified":1501403800975},{"_id":"public/categories/index.html","hash":"4bf732e5de50f1a385cfbff54f705f924490862c","modified":1501403800975},{"_id":"public/guestbook/index.html","hash":"f030f4272b99317fc473ab11e863e4a788f07742","modified":1501403800975},{"_id":"public/lhl/index.html","hash":"8ddab74dbc9ca31f80be9a0b3079611c6aaae4a4","modified":1501403800975},{"_id":"public/tags/index.html","hash":"57c1cc2ed9bf7881a84dab1d05f6cd9d813f9134","modified":1501403800975},{"_id":"public/lhl/bak/index.html","hash":"bd5fffc1bdeaf117c5991111ae5d32bbf3fcac7e","modified":1501167567635},{"_id":"public/posts/638d5663/index.html","hash":"5c6afed933a454466e8de8368c9210ecd40d1b74","modified":1501403800975},{"_id":"public/posts/7b381b54/index.html","hash":"944f5d351e613624b74f9e63afacf3d221f47398","modified":1501403800975},{"_id":"public/posts/110e9b1f/index.html","hash":"c0481dba16d4a6c36b17872966e003d6e74d03c2","modified":1501403800975},{"_id":"public/posts/eb0f8299/index.html","hash":"2f9921c70d641faf59c7421bc874a3d30cca6223","modified":1501403800975},{"_id":"public/posts/ecf0dfea/index.html","hash":"e918aa189433757c83e964b2385f1cf443b15e06","modified":1501403800975},{"_id":"public/posts/f65a1069/index.html","hash":"c9e91ecff1fc8d1d40f70d2d3b5b73a1cfe41607","modified":1501403800975},{"_id":"public/posts/3080612f/index.html","hash":"181d0bfbb27d12329633b283c682d601ffcc2ea6","modified":1501403800976},{"_id":"public/posts/d6278d54/index.html","hash":"64914c416b2b68ccf4a6da819788322c7aa9bc0a","modified":1501403800976},{"_id":"public/posts/3d6aa6c1/index.html","hash":"9a6196181cd078d822810cd4079056cd6b786f7f","modified":1501403800976},{"_id":"public/posts/bf9d2e83/index.html","hash":"b0c55c43ce54012c76e7e3bb39fedd751e227c7c","modified":1501403800976},{"_id":"public/posts/d50e1795/index.html","hash":"359aa59eda8af0753c9b3229828d2ce6fda1bd28","modified":1501403800976},{"_id":"public/posts/e11fbde0/index.html","hash":"dd155b5ae795b3e05114fb2b0016a72b02a8e472","modified":1501403800976},{"_id":"public/posts/7ab97256/index.html","hash":"e355cf1a3b041006a4960ee78250b2f6c7d395ad","modified":1501403800976},{"_id":"public/posts/d872247d/index.html","hash":"4b52a391be3120bd7ad567e5e6db56a4731db8db","modified":1501403800976},{"_id":"public/posts/a7331ce9/index.html","hash":"09a979dcbbb8ddf850f4f1770860dd4438960533","modified":1501403800976},{"_id":"public/posts/a996e9ae/index.html","hash":"22325b961b5843b98b41fecdc668b57a43cf1c55","modified":1501403800976},{"_id":"public/posts/87bc87f4/index.html","hash":"930b918982f5a8032f3680e8c69f0c1b6187d183","modified":1501403800976},{"_id":"public/posts/8255276b/index.html","hash":"20a2c1601ce5ae63b6336d8d2a2d7c5346e85343","modified":1501403800976},{"_id":"public/posts/8e49ebb7/index.html","hash":"cfaf95822b94d6cfb1583707413c49d35171961c","modified":1501403800976},{"_id":"public/posts/6d1e2a65/index.html","hash":"7e69c332012df84bd22f52438de31877cc3791c8","modified":1501403800976},{"_id":"public/posts/977dfd0f/index.html","hash":"6a87039d09deac2fc277fa2d34ec66b46d008836","modified":1501403800976},{"_id":"public/posts/d2b5ca2e/index.html","hash":"22585ed749c514591ed2db9ee9e2829bf0a04fa6","modified":1501403800976},{"_id":"public/posts/c3aadb/index.html","hash":"fcb6a88db60c1c9a52bbe491240862a5d9308632","modified":1501403800976},{"_id":"public/posts/c34b8b4a/index.html","hash":"b786782865d58d3d5b85a72f04797d5af22c815d","modified":1501403800976},{"_id":"public/posts/b2f2c31e/index.html","hash":"07cecbefe7e17a161a8466bbd14e585a51fd4d4f","modified":1501403800976},{"_id":"public/posts/1e93adae/index.html","hash":"2943e6fe3dc3e28b60b5bb0ef76a8251dbb8a865","modified":1501403800977},{"_id":"public/posts/667f3f35/index.html","hash":"5fe7ca756fc7cb6a77eddbc511666ca2080c9ead","modified":1501403800977},{"_id":"public/posts/62f0f54b/index.html","hash":"a472f8d804829267851f57dcddc5cc6d74b507c7","modified":1501403800977},{"_id":"public/posts/7997f177/index.html","hash":"596476467157ac117e08b5499fe450b16a7146aa","modified":1501403800977},{"_id":"public/posts/c3277995/index.html","hash":"236a2c5a61a059f8c513a10cc63e3405d249feb1","modified":1501403800977},{"_id":"public/posts/1aabbb95/index.html","hash":"20fb5c8c9d76c2e0da507d5ebca9536f4249383a","modified":1501403800977},{"_id":"public/posts/a7ce75d9/index.html","hash":"ebdfeb406c8cdfe8bb588cd0056d2ec7debe05e3","modified":1501403800977},{"_id":"public/posts/7608b15b/index.html","hash":"c0dd227019221c23efeea75ef80187356c115692","modified":1501403800977},{"_id":"public/archives/index.html","hash":"982392feb43ae9b8969d5840c679a9ef6e816662","modified":1501403800977},{"_id":"public/archives/page/2/index.html","hash":"e4292bfd42b22939dc5ff5c34f3e8df9a5cad04b","modified":1501403800977},{"_id":"public/archives/page/3/index.html","hash":"38e2a5dd8de9251b1429b1f81aa4de6e12c89663","modified":1501403800978},{"_id":"public/archives/page/4/index.html","hash":"79f0b8745310873b253716e38650400958351774","modified":1501403800978},{"_id":"public/archives/2016/index.html","hash":"18146a591d776aa0173031292211b78a6c299cd2","modified":1501403800980},{"_id":"public/archives/2016/page/2/index.html","hash":"4dd50126e1a24d0b5bf3026ea15c50cd130f6c5c","modified":1501403800980},{"_id":"public/archives/2016/06/index.html","hash":"5879d9283fbadfbd53115fb54f67fce8d8b334d9","modified":1501403800980},{"_id":"public/archives/2016/07/index.html","hash":"d2bbf4696c8e946d56ac0249e7445ca7b583d084","modified":1501403800980},{"_id":"public/archives/2016/page/3/index.html","hash":"dd18dde21c068b91b145ca292c40f9126dd5b94f","modified":1501403800980},{"_id":"public/archives/2016/07/page/2/index.html","hash":"22741447dbfa43756d651e6ca586f7196ac20bd4","modified":1501403800980},{"_id":"public/archives/2016/08/index.html","hash":"597934a0f668cb7bdfc858dd44a5c6b5caa6e4ca","modified":1501403800980},{"_id":"public/archives/2016/09/index.html","hash":"9e45c8df1adae4141f89f96488d6db1ec30dd263","modified":1501403800980},{"_id":"public/archives/2017/index.html","hash":"ced4be4b9deaae33e91c6866fae3f7dec688d324","modified":1501403800980},{"_id":"public/archives/2017/01/index.html","hash":"9acf2af09e74ad8fd7340703260e92b5090e184a","modified":1501403800980},{"_id":"public/archives/2017/03/index.html","hash":"07220ba34463bd1fce2e6f460dda566a61cca911","modified":1501403800980},{"_id":"public/archives/2017/04/index.html","hash":"3d5e5e0221b110cd757fbbf9f7a09bafa9ec8905","modified":1501403800980},{"_id":"public/categories/实践与总结/index.html","hash":"db1756c65c3cc6ad9be623198c81e8ad31c65b39","modified":1501403800980},{"_id":"public/categories/实践与总结/page/2/index.html","hash":"76181fa7b5ff46ca53f500d7d71c93c0f7f1f64c","modified":1501403800981},{"_id":"public/categories/技术与干货/index.html","hash":"d4adfaede7b5102cf2eea0e7812785a6fbb174e1","modified":1501403800981},{"_id":"public/categories/技术与干货/page/2/index.html","hash":"1806e3934c1d52c45e57bd874cf0171cb59ced8f","modified":1501403800981},{"_id":"public/categories/杂谈与鸡汤/index.html","hash":"d0940dade9dc052be6f96d0f882698540686cf90","modified":1501403800981},{"_id":"public/index.html","hash":"d5bedaf69b6bed17a52ab272ee0b63b15ded26cf","modified":1501404120350},{"_id":"public/page/2/index.html","hash":"e0e43c95ca733fe3b3890d68103a1f1ddd66524d","modified":1501403800981},{"_id":"public/page/3/index.html","hash":"4744f53b1531db0b8bc464a832b5115f9fa3a9e8","modified":1501403800981},{"_id":"public/page/4/index.html","hash":"e30d8b060a16ac5f3f2d5481c1d4cc7361e7acd7","modified":1501403800981},{"_id":"public/tags/web/index.html","hash":"3070caf968b13370d792dcee1c542420315e82e8","modified":1501403800981},{"_id":"public/tags/HAProxy/index.html","hash":"62a748b413895e9787c1846124a0db2a77703a9f","modified":1501403800981},{"_id":"public/tags/kvm/index.html","hash":"71175473dfb1ad941f653fc848773351b0eff7b9","modified":1501403800981},{"_id":"public/tags/技术与干货/index.html","hash":"14ed24870688d95d2f1d8a2b86c49ad605c6dbb9","modified":1501403800981},{"_id":"public/tags/shell/index.html","hash":"d6f41f136bf681da2d8e1eead7bf9c2f8dc9d0bb","modified":1501403800981},{"_id":"public/tags/实践与总结/index.html","hash":"9e5f1742713e52f9009ccddda965bcef47ef0f76","modified":1501403800981},{"_id":"public/tags/安全/index.html","hash":"71638d9b7af2a4fc58d6f1f69fc60b3b80df0254","modified":1501403800981},{"_id":"public/tags/MySQL/index.html","hash":"144d18bd20d276b4d370116900c37d12cb0724cd","modified":1501403800981},{"_id":"public/tags/高可用/index.html","hash":"c625e6bf83aa0be874569649c7bfc8d492cc1353","modified":1501403800981},{"_id":"public/tags/Python/index.html","hash":"37969597f148ea1da31d8d7b1dbfca6468b94df2","modified":1501403800982},{"_id":"public/tags/杂谈与鸡汤/index.html","hash":"00a046819c79e719dc0eb40f394b211cb4c49667","modified":1501403800982},{"_id":"public/resume/index.html","hash":"c90aee10819370027c6c0618e605320e56b7cbd5","modified":1501403800975},{"_id":"public/favicon.ico","hash":"377724dc63a56335c2a2b28b21dd53da9f343653","modified":1501167567672},{"_id":"public/readme.mdown","hash":"20e7361f4e4962365690034a9009449a8c99cc3c","modified":1501400828121},{"_id":"public/robots.txt","hash":"f8ad8b7a6b302378617390851df8254a0e997b31","modified":1501167567672},{"_id":"public/images/alipay-reward-image.jpg","hash":"e7b03158dfd824a83efd4d9aa8cb4306ba57d215","modified":1501167567672},{"_id":"public/images/avatar.png","hash":"4d3b0460da9e9920a14dbca57abd07c093f8ed6c","modified":1501167567672},{"_id":"public/images/wechat-reward-image.jpg","hash":"4535680e8de23e9c13b9a2a8264018944e5ab93a","modified":1501167567672},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1501167567672},{"_id":"public/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1501167567672},{"_id":"public/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1501167567672},{"_id":"public/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1501167567672},{"_id":"public/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1501167567672},{"_id":"public/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1501167567672},{"_id":"public/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1501167567672},{"_id":"public/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1501167567672},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1501167567672},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1501167567672},{"_id":"public/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1501167567672},{"_id":"public/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1501167567672},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1501167567672},{"_id":"public/vendors/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1501167567672},{"_id":"public/vendors/font-awesome/HELP-US-OUT.txt","hash":"ed80b43dbc7e3009b2f436741b9796df8eb3be02","modified":1501167567672},{"_id":"public/vendors/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1501167567672},{"_id":"public/vendors/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1501167567672},{"_id":"public/vendors/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1501167567673},{"_id":"public/vendors/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1501167567673},{"_id":"public/vendors/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1501167567673},{"_id":"public/vendors/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1501167567673},{"_id":"public/vendors/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1501167567673},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.woff2","hash":"574ea2698c03ae9477db2ea3baf460ee32f1a7ea","modified":1501167567673},{"_id":"public/vendors/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1501167567673},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.eot","hash":"b3c2f08e73320135b69c23a3908b87a12053a2f6","modified":1501167568420},{"_id":"public/vendors/font-awesome/fonts/FontAwesome.otf","hash":"0112e96f327d413938d37c1693806f468ffdbace","modified":1501167568436},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.woff","hash":"507970402e328b2baeb05bde73bf9ded4e2c3a2d","modified":1501167568436},{"_id":"public/vendors/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1501167568436},{"_id":"public/vendors/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1501167568436},{"_id":"public/vendors/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1501167568436},{"_id":"public/vendors/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1501167568436},{"_id":"public/vendors/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1501167568436},{"_id":"public/vendors/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1501167568436},{"_id":"public/vendors/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1501167568436},{"_id":"public/vendors/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1501167568436},{"_id":"public/vendors/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1501167568436},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1501167568436},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1501167568436},{"_id":"public/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1501167568436},{"_id":"public/js/src/love.js","hash":"9e8e79d69ad8338761272f86fe5cad0ad5e503cc","modified":1501167568436},{"_id":"public/js/src/particle.js","hash":"914c8e99af756e7004359aaa71fee4e59f214649","modified":1501167568436},{"_id":"public/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1501167568436},{"_id":"public/js/src/post-details.js","hash":"2038f54e289b6da5def09689e69f623187147be5","modified":1501167568436},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1501167568436},{"_id":"public/js/src/utils.js","hash":"e5cb720894c4bc28ca8f10b33df127fb394018d9","modified":1501167568436},{"_id":"public/vendors/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1501167568436},{"_id":"public/vendors/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1501167568436},{"_id":"public/vendors/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1501167568436},{"_id":"public/vendors/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1501167568436},{"_id":"public/vendors/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1501167568436},{"_id":"public/js/src/schemes/pisces.js","hash":"7506e7490c69a200831393c38d25e91c156bd471","modified":1501167568436},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1501167568436},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1501167568436},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1501167568436},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1501167568436},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1501167568436},{"_id":"public/css/main.css","hash":"297835e9ef129d44fb71b192c2ff6edcf8c26b33","modified":1501167568436},{"_id":"public/vendors/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1501167568436},{"_id":"public/vendors/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1501167568436},{"_id":"public/vendors/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1501167568436},{"_id":"public/vendors/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1501167568436},{"_id":"public/vendors/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1501167568436},{"_id":"public/vendors/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1501167568436},{"_id":"public/vendors/font-awesome/css/font-awesome.css","hash":"3b87c2560832748cd06f9bfd2fd6ea8edbdae8c7","modified":1501167568436},{"_id":"public/vendors/font-awesome/css/font-awesome.min.css","hash":"05ea25bc9b3ac48993e1fee322d3bc94b49a6e22","modified":1501167568436},{"_id":"public/vendors/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1501167568436},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.ttf","hash":"27cf1f2ec59aece6938c7bb2feb0e287ea778ff9","modified":1501167568436},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.svg","hash":"f346b8b3df147e4059e1a7d66c52c9a6e1cec3e8","modified":1501167568451},{"_id":"source/lhl/css.css","hash":"cc8ebbc52eec7845c010d0ac3d3535718bfaa59f","modified":1443188600889},{"_id":"source/lhl/cxy-lhl.html","hash":"837e8762da63282fb5c72d72064e302ea5886147","modified":1443234537366},{"_id":"source/lhl/cxy-qiuqian.html","hash":"bfda01bb2e12f093ac84c302f99d33000c73eaa3","modified":1501244727545},{"_id":"source/lhl/js.js","hash":"6b55b534b313c2ea1575f09794859dc62ca01b1e","modified":1443188634189},{"_id":"public/lhl/css.css","hash":"be2779b4d8dcf7a149fb154cb530a59845488bb5","modified":1501243146390},{"_id":"public/lhl/js.js","hash":"14420fd8651c935449971a93991f30306d04d6a3","modified":1501243146391},{"_id":"public/lhl/cxy-qiuqian.html","hash":"3d520958eefe3fd4aafb7ff8df2a3f211645eb9a","modified":1501403800975},{"_id":"public/lhl/cxy-lhl.html","hash":"0961ddbd908af9b95090698d47a00eaae2b1b267","modified":1501243150051},{"_id":"source/lhl/index.html","hash":"bf58324e98b480bfa67ddad3364822f7f6d5df84","modified":1501244741201},{"_id":"source/lhl/reademe.md","hash":"869dcaeed3c05fba8db329d36d37f8daa2e2feea","modified":1501245828257},{"_id":"public/lhl/reademe.html","hash":"2c7cbb452b7734ddd4f8db14de087d299e577f4f","modified":1501403800975},{"_id":"source/_posts/python进阶.md","hash":"c4de0aa47dd33176167839d2a4ae78e0c679f8a2","modified":1501404110242},{"_id":"public/posts/37f2eeef/index.html","hash":"77f8338284cebb2002f4d06ad0347bf15d87e552","modified":1501404120350}],"Category":[{"name":"实践与总结","_id":"cj5mkehq00004ao94zxfzsx30"},{"name":"技术与干货","_id":"cj5mkehqy000uao94osggh2zq"},{"name":"杂谈与鸡汤","_id":"cj5mkehsx0036ao94kyf8uhju"}],"Data":[],"Page":[{"title":"404 Not Found：该页无法显示","date":"2016-12-25T10:13:28.000Z","comments":0,"_content":"{% centerquote %}404 Not Found：由于更改了文章链接方式，该页找不到了，您可以在文章归档中查看。或者听首歌放松一下{% endcenterquote %}\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=450 src=\"//music.163.com/outchain/player?type=0&id=568792010&auto=0&height=430\"></iframe>","source":"404/index.md","raw":"---\ntitle: 404 Not Found：该页无法显示\ndate: 2016-12-25 18:13:28\ncomments: false\npermalink: /404\n---\n{% centerquote %}404 Not Found：由于更改了文章链接方式，该页找不到了，您可以在文章归档中查看。或者听首歌放松一下{% endcenterquote %}\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=450 src=\"//music.163.com/outchain/player?type=0&id=568792010&auto=0&height=430\"></iframe>","updated":"2017-07-28T12:00:43.967Z","path":"/404.html","_id":"cj5mkehpm0000ao94ulk9y1rv","layout":"page","content":"<blockquote class=\"blockquote-center\"><p>404 Not Found：由于更改了文章链接方式，该页找不到了，您可以在文章归档中查看。或者听首歌放松一下</p>\n</blockquote>\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=\"330\" height=\"450\" src=\"//music.163.com/outchain/player?type=0&id=568792010&auto=0&height=430\"></iframe>","site":{"data":{}},"excerpt":"","more":"<blockquote class=\"blockquote-center\"><p>404 Not Found：由于更改了文章链接方式，该页找不到了，您可以在文章归档中查看。或者听首歌放松一下</p>\n</blockquote>\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=\"330\" height=\"450\" src=\"//music.163.com/outchain/player?type=0&id=568792010&auto=0&height=430\"></iframe>"},{"title":"关于","date":"2016-07-03T11:40:45.000Z","comments":0,"_content":"<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=1210496&auto=1&height=66\"></iframe>\n# 关于我\n- 90后大男孩，一名正在成长的IT人。会写一些乱七八糟的生活感悟和技术分享。\n- 可能偶尔也煲煲鸡汤，但是不放油，少盐。\n- 想成为一名有思想、有内涵、善良、有责任感的人\n\n# 分享\n- 什么时候种树最合适：一个是十年前，一个是现在。\n- 只有自己变强大，才能获得更多。\n- 活好当下、不要对未来忧虑，未来未知太多;不要对过去忧虑，忧虑太多，反而束缚了自己，也不能改变什么。\n- 所有的抱怨，都是对自己无能的愤怒\n- 三年后的你会怎么看待现在的你？\n- 敢于分享、善于总结\n- 你不信任我？那我做出来，证明给你看！\n- 交流，推动做一些事\n- 要有一个努力的心态\n- 成就自己、提升自己\n\n# 关于其它\n- 科技类，财经类，读书，宅\n- 现在处于努力学习中，相信有热情加坚持一定能做好！","source":"about/index.md","raw":"---\ntitle: 关于\ndate: 2016-07-03 19:40:45\ncomments: false\n---\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=1210496&auto=1&height=66\"></iframe>\n# 关于我\n- 90后大男孩，一名正在成长的IT人。会写一些乱七八糟的生活感悟和技术分享。\n- 可能偶尔也煲煲鸡汤，但是不放油，少盐。\n- 想成为一名有思想、有内涵、善良、有责任感的人\n\n# 分享\n- 什么时候种树最合适：一个是十年前，一个是现在。\n- 只有自己变强大，才能获得更多。\n- 活好当下、不要对未来忧虑，未来未知太多;不要对过去忧虑，忧虑太多，反而束缚了自己，也不能改变什么。\n- 所有的抱怨，都是对自己无能的愤怒\n- 三年后的你会怎么看待现在的你？\n- 敢于分享、善于总结\n- 你不信任我？那我做出来，证明给你看！\n- 交流，推动做一些事\n- 要有一个努力的心态\n- 成就自己、提升自己\n\n# 关于其它\n- 科技类，财经类，读书，宅\n- 现在处于努力学习中，相信有热情加坚持一定能做好！","updated":"2017-07-27T14:58:44.331Z","path":"about/index.html","layout":"page","_id":"cj5mkehpx0002ao94h4hebzde","content":"<p><iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=\"330\" height=\"86\" src=\"//music.163.com/outchain/player?type=2&id=1210496&auto=1&height=66\"></iframe></p>\n<h1 id=\"关于我\"><a href=\"#关于我\" class=\"headerlink\" title=\"关于我\"></a>关于我</h1><ul>\n<li>90后大男孩，一名正在成长的IT人。会写一些乱七八糟的生活感悟和技术分享。</li>\n<li>可能偶尔也煲煲鸡汤，但是不放油，少盐。</li>\n<li>想成为一名有思想、有内涵、善良、有责任感的人</li>\n</ul>\n<h1 id=\"分享\"><a href=\"#分享\" class=\"headerlink\" title=\"分享\"></a>分享</h1><ul>\n<li>什么时候种树最合适：一个是十年前，一个是现在。</li>\n<li>只有自己变强大，才能获得更多。</li>\n<li>活好当下、不要对未来忧虑，未来未知太多;不要对过去忧虑，忧虑太多，反而束缚了自己，也不能改变什么。</li>\n<li>所有的抱怨，都是对自己无能的愤怒</li>\n<li>三年后的你会怎么看待现在的你？</li>\n<li>敢于分享、善于总结</li>\n<li>你不信任我？那我做出来，证明给你看！</li>\n<li>交流，推动做一些事</li>\n<li>要有一个努力的心态</li>\n<li>成就自己、提升自己</li>\n</ul>\n<h1 id=\"关于其它\"><a href=\"#关于其它\" class=\"headerlink\" title=\"关于其它\"></a>关于其它</h1><ul>\n<li>科技类，财经类，读书，宅</li>\n<li>现在处于努力学习中，相信有热情加坚持一定能做好！</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p><iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=\"330\" height=\"86\" src=\"//music.163.com/outchain/player?type=2&id=1210496&auto=1&height=66\"></iframe></p>\n<h1 id=\"关于我\"><a href=\"#关于我\" class=\"headerlink\" title=\"关于我\"></a>关于我</h1><ul>\n<li>90后大男孩，一名正在成长的IT人。会写一些乱七八糟的生活感悟和技术分享。</li>\n<li>可能偶尔也煲煲鸡汤，但是不放油，少盐。</li>\n<li>想成为一名有思想、有内涵、善良、有责任感的人</li>\n</ul>\n<h1 id=\"分享\"><a href=\"#分享\" class=\"headerlink\" title=\"分享\"></a>分享</h1><ul>\n<li>什么时候种树最合适：一个是十年前，一个是现在。</li>\n<li>只有自己变强大，才能获得更多。</li>\n<li>活好当下、不要对未来忧虑，未来未知太多;不要对过去忧虑，忧虑太多，反而束缚了自己，也不能改变什么。</li>\n<li>所有的抱怨，都是对自己无能的愤怒</li>\n<li>三年后的你会怎么看待现在的你？</li>\n<li>敢于分享、善于总结</li>\n<li>你不信任我？那我做出来，证明给你看！</li>\n<li>交流，推动做一些事</li>\n<li>要有一个努力的心态</li>\n<li>成就自己、提升自己</li>\n</ul>\n<h1 id=\"关于其它\"><a href=\"#关于其它\" class=\"headerlink\" title=\"关于其它\"></a>关于其它</h1><ul>\n<li>科技类，财经类，读书，宅</li>\n<li>现在处于努力学习中，相信有热情加坚持一定能做好！</li>\n</ul>\n"},{"title":"关于","date":"2016-07-03T11:40:45.000Z","comments":0,"_content":"\n{% centerquote %}当你的才华还撑不起你的野心时，就应该静下心来学习；当你的能力还驾驭不了目标时，就应该沉下心来历练。{% endcenterquote %}\n\n\n《鸟哥的Linux私房菜》\n> 看了基础篇和服务架设篇，都说是Linux入门必看的一本书，写的很好\n\n《python简明教程》\n> 一本Python入门读物，写的还算可以\n\n《黑客与画家》\n> 要学会独立思考，毕竟以后书呆子是会改变世界的。当然了，请不要在他们还没发达前嘲笑他们。\n\n《图解HTTP》\n> 一个日本人写的，讲解的http协议，也说了https，非常通俗易懂\n\n《我知道你不知道的自己在想什么》\n> 一本心理学科普读物，让你知道平常你发呆的时候你的脑子都干了什么，你睡觉的时候身体干了什么等等吧，也挺无聊的，哈哈\n\n《沉默的大多数》\n> 王小波写的，也看了他的《爱你就像爱生命》，好不习惯他说叙述方式啊，不过文章写的挺有意思。\n\n《小狗钱钱》\n> 网上说《小狗钱钱》是《穷爸爸富爸爸》的童话版，不知道小朋友能读明白不，梦想、计划、执行、成功日记、激励。。。\n\n《明朝那些事》\n> 很好的一本书，对于我这个伪历史迷来说，看了这本书想明白好多事，也算是改变了我的三观吧！\n\n《知行合一王阳明》\n> 度阴山写的，看了《明朝那些事》，觉得王阳明也不是很厉害啊，心学到底是什么也不了解，看了这本，也简单了解了下，\"知行合一\"经常被误解为就是\"理论与实践相结合\"，王阳明所说的知行合一，就是将知与行合作一处，才知便是行，能行便是真知。这里的知，就是指知善知恶的良知，就是要使良知时刻关照着人的行为和心理，有所为而有所不为，使人不会失其本心，不会让意志为外物所动摇，沦为外物的奴隶。\n\n《把时间当朋友》\n> 看完再说吧\n","source":"book/index.md","raw":"---\ntitle: 关于\ndate: 2016-07-03 19:40:45\ncomments: false\n---\n\n{% centerquote %}当你的才华还撑不起你的野心时，就应该静下心来学习；当你的能力还驾驭不了目标时，就应该沉下心来历练。{% endcenterquote %}\n\n\n《鸟哥的Linux私房菜》\n> 看了基础篇和服务架设篇，都说是Linux入门必看的一本书，写的很好\n\n《python简明教程》\n> 一本Python入门读物，写的还算可以\n\n《黑客与画家》\n> 要学会独立思考，毕竟以后书呆子是会改变世界的。当然了，请不要在他们还没发达前嘲笑他们。\n\n《图解HTTP》\n> 一个日本人写的，讲解的http协议，也说了https，非常通俗易懂\n\n《我知道你不知道的自己在想什么》\n> 一本心理学科普读物，让你知道平常你发呆的时候你的脑子都干了什么，你睡觉的时候身体干了什么等等吧，也挺无聊的，哈哈\n\n《沉默的大多数》\n> 王小波写的，也看了他的《爱你就像爱生命》，好不习惯他说叙述方式啊，不过文章写的挺有意思。\n\n《小狗钱钱》\n> 网上说《小狗钱钱》是《穷爸爸富爸爸》的童话版，不知道小朋友能读明白不，梦想、计划、执行、成功日记、激励。。。\n\n《明朝那些事》\n> 很好的一本书，对于我这个伪历史迷来说，看了这本书想明白好多事，也算是改变了我的三观吧！\n\n《知行合一王阳明》\n> 度阴山写的，看了《明朝那些事》，觉得王阳明也不是很厉害啊，心学到底是什么也不了解，看了这本，也简单了解了下，\"知行合一\"经常被误解为就是\"理论与实践相结合\"，王阳明所说的知行合一，就是将知与行合作一处，才知便是行，能行便是真知。这里的知，就是指知善知恶的良知，就是要使良知时刻关照着人的行为和心理，有所为而有所不为，使人不会失其本心，不会让意志为外物所动摇，沦为外物的奴隶。\n\n《把时间当朋友》\n> 看完再说吧\n","updated":"2017-07-30T07:56:35.562Z","path":"book/index.html","_id":"cj5mkehq50006ao947y4v99sz","layout":"page","content":"<blockquote class=\"blockquote-center\"><p>当你的才华还撑不起你的野心时，就应该静下心来学习；当你的能力还驾驭不了目标时，就应该沉下心来历练。</p>\n</blockquote>\n<p>《鸟哥的Linux私房菜》</p>\n<blockquote>\n<p>看了基础篇和服务架设篇，都说是Linux入门必看的一本书，写的很好</p>\n</blockquote>\n<p>《python简明教程》</p>\n<blockquote>\n<p>一本Python入门读物，写的还算可以</p>\n</blockquote>\n<p>《黑客与画家》</p>\n<blockquote>\n<p>要学会独立思考，毕竟以后书呆子是会改变世界的。当然了，请不要在他们还没发达前嘲笑他们。</p>\n</blockquote>\n<p>《图解HTTP》</p>\n<blockquote>\n<p>一个日本人写的，讲解的http协议，也说了https，非常通俗易懂</p>\n</blockquote>\n<p>《我知道你不知道的自己在想什么》</p>\n<blockquote>\n<p>一本心理学科普读物，让你知道平常你发呆的时候你的脑子都干了什么，你睡觉的时候身体干了什么等等吧，也挺无聊的，哈哈</p>\n</blockquote>\n<p>《沉默的大多数》</p>\n<blockquote>\n<p>王小波写的，也看了他的《爱你就像爱生命》，好不习惯他说叙述方式啊，不过文章写的挺有意思。</p>\n</blockquote>\n<p>《小狗钱钱》</p>\n<blockquote>\n<p>网上说《小狗钱钱》是《穷爸爸富爸爸》的童话版，不知道小朋友能读明白不，梦想、计划、执行、成功日记、激励。。。</p>\n</blockquote>\n<p>《明朝那些事》</p>\n<blockquote>\n<p>很好的一本书，对于我这个伪历史迷来说，看了这本书想明白好多事，也算是改变了我的三观吧！</p>\n</blockquote>\n<p>《知行合一王阳明》</p>\n<blockquote>\n<p>度阴山写的，看了《明朝那些事》，觉得王阳明也不是很厉害啊，心学到底是什么也不了解，看了这本，也简单了解了下，”知行合一”经常被误解为就是”理论与实践相结合”，王阳明所说的知行合一，就是将知与行合作一处，才知便是行，能行便是真知。这里的知，就是指知善知恶的良知，就是要使良知时刻关照着人的行为和心理，有所为而有所不为，使人不会失其本心，不会让意志为外物所动摇，沦为外物的奴隶。</p>\n</blockquote>\n<p>《把时间当朋友》</p>\n<blockquote>\n<p>看完再说吧</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<blockquote class=\"blockquote-center\"><p>当你的才华还撑不起你的野心时，就应该静下心来学习；当你的能力还驾驭不了目标时，就应该沉下心来历练。</p>\n</blockquote>\n<p>《鸟哥的Linux私房菜》</p>\n<blockquote>\n<p>看了基础篇和服务架设篇，都说是Linux入门必看的一本书，写的很好</p>\n</blockquote>\n<p>《python简明教程》</p>\n<blockquote>\n<p>一本Python入门读物，写的还算可以</p>\n</blockquote>\n<p>《黑客与画家》</p>\n<blockquote>\n<p>要学会独立思考，毕竟以后书呆子是会改变世界的。当然了，请不要在他们还没发达前嘲笑他们。</p>\n</blockquote>\n<p>《图解HTTP》</p>\n<blockquote>\n<p>一个日本人写的，讲解的http协议，也说了https，非常通俗易懂</p>\n</blockquote>\n<p>《我知道你不知道的自己在想什么》</p>\n<blockquote>\n<p>一本心理学科普读物，让你知道平常你发呆的时候你的脑子都干了什么，你睡觉的时候身体干了什么等等吧，也挺无聊的，哈哈</p>\n</blockquote>\n<p>《沉默的大多数》</p>\n<blockquote>\n<p>王小波写的，也看了他的《爱你就像爱生命》，好不习惯他说叙述方式啊，不过文章写的挺有意思。</p>\n</blockquote>\n<p>《小狗钱钱》</p>\n<blockquote>\n<p>网上说《小狗钱钱》是《穷爸爸富爸爸》的童话版，不知道小朋友能读明白不，梦想、计划、执行、成功日记、激励。。。</p>\n</blockquote>\n<p>《明朝那些事》</p>\n<blockquote>\n<p>很好的一本书，对于我这个伪历史迷来说，看了这本书想明白好多事，也算是改变了我的三观吧！</p>\n</blockquote>\n<p>《知行合一王阳明》</p>\n<blockquote>\n<p>度阴山写的，看了《明朝那些事》，觉得王阳明也不是很厉害啊，心学到底是什么也不了解，看了这本，也简单了解了下，”知行合一”经常被误解为就是”理论与实践相结合”，王阳明所说的知行合一，就是将知与行合作一处，才知便是行，能行便是真知。这里的知，就是指知善知恶的良知，就是要使良知时刻关照着人的行为和心理，有所为而有所不为，使人不会失其本心，不会让意志为外物所动摇，沦为外物的奴隶。</p>\n</blockquote>\n<p>《把时间当朋友》</p>\n<blockquote>\n<p>看完再说吧</p>\n</blockquote>\n"},{"title":"categories","date":"2016-08-02T10:20:27.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2016-08-02 18:20:27\ntype: \"categories\"\ncomments: false\n---\n","updated":"2016-08-02T11:21:29.466Z","path":"categories/index.html","layout":"page","_id":"cj5mkehqa0008ao94jxarxnj1","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"guestbook","date":"2016-12-31T07:11:59.000Z","comments":1,"_content":"{% centerquote %}如果您在技术上或生活上有什么问题，欢迎交流{% endcenterquote %}\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=407761576&auto=1&height=66\"></iframe>\n\n<div class=\"ds-recent-visitors\" data-num-items=\"28\" data-avatar-size=\"42\" id=\"ds-recent-visitors\"></div>\n","source":"guestbook/index.md","raw":"---\ntitle: guestbook\ndate: 2016-12-31 15:11:59\ncomments: ture\n---\n{% centerquote %}如果您在技术上或生活上有什么问题，欢迎交流{% endcenterquote %}\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=407761576&auto=1&height=66\"></iframe>\n\n<div class=\"ds-recent-visitors\" data-num-items=\"28\" data-avatar-size=\"42\" id=\"ds-recent-visitors\"></div>\n","updated":"2016-12-31T07:53:07.684Z","path":"guestbook/index.html","layout":"page","_id":"cj5mkehqf000aao94xch1qil6","content":"<blockquote class=\"blockquote-center\"><p>如果您在技术上或生活上有什么问题，欢迎交流</p>\n</blockquote>\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=\"330\" height=\"86\" src=\"//music.163.com/outchain/player?type=2&id=407761576&auto=1&height=66\"></iframe>\n\n<div class=\"ds-recent-visitors\" data-num-items=\"28\" data-avatar-size=\"42\" id=\"ds-recent-visitors\"></div>\n","site":{"data":{}},"excerpt":"","more":"<blockquote class=\"blockquote-center\"><p>如果您在技术上或生活上有什么问题，欢迎交流</p>\n</blockquote>\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=\"330\" height=\"86\" src=\"//music.163.com/outchain/player?type=2&id=407761576&auto=1&height=66\"></iframe>\n\n<div class=\"ds-recent-visitors\" data-num-items=\"28\" data-avatar-size=\"42\" id=\"ds-recent-visitors\"></div>\n"},{"title":"resume","date":"2017-07-27T14:45:15.000Z","_content":"","source":"resume/index.md","raw":"---\ntitle: resume\ndate: 2017-07-27 22:45:15\n---\n","updated":"2017-07-27T14:57:51.916Z","path":"resume/index.html","comments":1,"layout":"page","_id":"cj5mkehqp000jao94h1abimpq","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2016-08-02T10:17:33.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2016-08-02 18:17:33\ntype: \"tags\"\ncomments: false\n---\n","updated":"2016-08-02T11:21:25.278Z","path":"tags/index.html","layout":"page","_id":"cj5mkehqu000pao94rfec3oww","content":"","site":{"data":{}},"excerpt":"","more":""},{"_content":"body * {\n\tfont-family:\"Consolas\",\"Microsoft Yahei\", Arial, sans-serif;\n}\n\nbody {\n\tbackground: white;\n\tmargin: 0;\n\tpadding: 0;\n}\n\n.container {\n\twidth: 320px;\n\tmargin: 0 auto 50px;\n}\n\n.container>.title {\n\tcolor: #bbb;\n\tfont-weight: bold;\n\tmargin-bottom: 10px;\n\tbackground: #555;\n\tpadding: 5px 15px;\n}\n\n.adlink {\n\ttext-align: center;\n\tfont-size: 11pt;\n}\n\n.adlink a {\n\ttext-decoration: none;\n\tdisplay:block;\n\tcolor: #666;\n\tfont-weight: bold;\n\tmargin-bottom: 10px;\n\tbackground: #eee;\n\tborder: 1px solid #ddd;\n\tborder-radius: 4px;\n\tpadding: 10pt;\n\tmargin-top: 10pt;\n}\n\n.date{\n\tfont-size:17pt;\n\tfont-weight: bold;\n\tline-height: 30pt;\n\ttext-align: center;\n}\n\n.split, .clear {\n\tclear: both;\n\theight: 1px;\n\toverflow-y: hidden;\n}\n\n.good, .bad {\n\tclear: both;\n\tposition: relative;\n}\n\n.bad {\n\t/*top: -1px;*/\n}\n\n.good .title, .bad .title {\n\tfloat: left;\n\twidth: 100px;\n\tfont-weight: bold;\n\ttext-align: center;\n\tfont-size: 30pt;\n\tposition:absolute;\n\ttop:0;\n\tbottom:0;\n}\n\n.good .title>table, .bad .title>table {\n\tposition:absolute;\n\twidth:100%;\n\theight:100%;\n\tborder:none;\n}\n\n.good .title {\n\tbackground: #ffee44;\n}\n\n.someday .good .title {\n\tbackground: #aaaaaa;\n}\n\n.bad .title {\n\tbackground: #ff4444;\n\tcolor: #fff;\n}\n\n.someday .bad .title {\n\tbackground: #666666;\n\tcolor: #fff;\n}\n\n.good .content, .bad .content {\n\tmargin-left: 115px;\n\tpadding-right: 10px;\n\tpadding-top: 1px;\n\tfont-size:15pt;\n}\n\n.someday .good {\n\tbackground: #dddddd;\n}\n\n.someday .bad {\n\tbackground: #aaaaaa;\n}\n\n.good {\n\tbackground: #ffffaa;\n}\n\n.bad {\n\tbackground: #ffddd3;\n}\n\n.content ul {\n\tlist-style: none;\n\tmargin:10px 0 0;\n\tpadding:0;\n}\n\n.content ul li {\n\tline-height:150%;\n\tfont-size: 15pt;\n\tfont-weight: bold;\n\tcolor: #444;\n}\n\n.content ul li div.description {\n\tfont-size: 11pt;\n\tfont-weight: normal;\n\tcolor: #777;\n\tline-height: 110%;\n\tmargin-bottom: 10px;\n}\n\n.line-tip {\n\tfont-size: 11pt;\n\tmargin-top: 10px;\n\tmargin-left: 10px;\n}\n\n.direction_value {\n\tcolor:#4a4;\n\tfont-weight: bold;\n}\n\n.someday .direction_value {\n\tcolor:#888;\n}\n\n.goddes_value {\n\tcolor: #f87;\n}\n\n.someday .goddes_value {\n\tcolor: #777;\n}\n\n.comment {\n\tmargin-top: 50px;\n\tfont-size: 11pt;\n\tmargin-left: 10px;\n}\n\n.comment ul {\n\tmargin-left: 0;\n\tpadding-left: 20px;\n\tcolor: #999;\n}","source":"lhl/css.css","raw":"body * {\n\tfont-family:\"Consolas\",\"Microsoft Yahei\", Arial, sans-serif;\n}\n\nbody {\n\tbackground: white;\n\tmargin: 0;\n\tpadding: 0;\n}\n\n.container {\n\twidth: 320px;\n\tmargin: 0 auto 50px;\n}\n\n.container>.title {\n\tcolor: #bbb;\n\tfont-weight: bold;\n\tmargin-bottom: 10px;\n\tbackground: #555;\n\tpadding: 5px 15px;\n}\n\n.adlink {\n\ttext-align: center;\n\tfont-size: 11pt;\n}\n\n.adlink a {\n\ttext-decoration: none;\n\tdisplay:block;\n\tcolor: #666;\n\tfont-weight: bold;\n\tmargin-bottom: 10px;\n\tbackground: #eee;\n\tborder: 1px solid #ddd;\n\tborder-radius: 4px;\n\tpadding: 10pt;\n\tmargin-top: 10pt;\n}\n\n.date{\n\tfont-size:17pt;\n\tfont-weight: bold;\n\tline-height: 30pt;\n\ttext-align: center;\n}\n\n.split, .clear {\n\tclear: both;\n\theight: 1px;\n\toverflow-y: hidden;\n}\n\n.good, .bad {\n\tclear: both;\n\tposition: relative;\n}\n\n.bad {\n\t/*top: -1px;*/\n}\n\n.good .title, .bad .title {\n\tfloat: left;\n\twidth: 100px;\n\tfont-weight: bold;\n\ttext-align: center;\n\tfont-size: 30pt;\n\tposition:absolute;\n\ttop:0;\n\tbottom:0;\n}\n\n.good .title>table, .bad .title>table {\n\tposition:absolute;\n\twidth:100%;\n\theight:100%;\n\tborder:none;\n}\n\n.good .title {\n\tbackground: #ffee44;\n}\n\n.someday .good .title {\n\tbackground: #aaaaaa;\n}\n\n.bad .title {\n\tbackground: #ff4444;\n\tcolor: #fff;\n}\n\n.someday .bad .title {\n\tbackground: #666666;\n\tcolor: #fff;\n}\n\n.good .content, .bad .content {\n\tmargin-left: 115px;\n\tpadding-right: 10px;\n\tpadding-top: 1px;\n\tfont-size:15pt;\n}\n\n.someday .good {\n\tbackground: #dddddd;\n}\n\n.someday .bad {\n\tbackground: #aaaaaa;\n}\n\n.good {\n\tbackground: #ffffaa;\n}\n\n.bad {\n\tbackground: #ffddd3;\n}\n\n.content ul {\n\tlist-style: none;\n\tmargin:10px 0 0;\n\tpadding:0;\n}\n\n.content ul li {\n\tline-height:150%;\n\tfont-size: 15pt;\n\tfont-weight: bold;\n\tcolor: #444;\n}\n\n.content ul li div.description {\n\tfont-size: 11pt;\n\tfont-weight: normal;\n\tcolor: #777;\n\tline-height: 110%;\n\tmargin-bottom: 10px;\n}\n\n.line-tip {\n\tfont-size: 11pt;\n\tmargin-top: 10px;\n\tmargin-left: 10px;\n}\n\n.direction_value {\n\tcolor:#4a4;\n\tfont-weight: bold;\n}\n\n.someday .direction_value {\n\tcolor:#888;\n}\n\n.goddes_value {\n\tcolor: #f87;\n}\n\n.someday .goddes_value {\n\tcolor: #777;\n}\n\n.comment {\n\tmargin-top: 50px;\n\tfont-size: 11pt;\n\tmargin-left: 10px;\n}\n\n.comment ul {\n\tmargin-left: 0;\n\tpadding-left: 20px;\n\tcolor: #999;\n}","date":"2017-07-28T11:56:52.454Z","updated":"2015-09-25T13:43:20.889Z","path":"lhl/css.css","layout":"false","title":"","comments":1,"_id":"cj5ntcrwn0000ak943wkibxuc","content":"body * {\n\tfont-family:\"Consolas\",\"Microsoft Yahei\", Arial, sans-serif;\n}\n\nbody {\n\tbackground: white;\n\tmargin: 0;\n\tpadding: 0;\n}\n\n.container {\n\twidth: 320px;\n\tmargin: 0 auto 50px;\n}\n\n.container>.title {\n\tcolor: #bbb;\n\tfont-weight: bold;\n\tmargin-bottom: 10px;\n\tbackground: #555;\n\tpadding: 5px 15px;\n}\n\n.adlink {\n\ttext-align: center;\n\tfont-size: 11pt;\n}\n\n.adlink a {\n\ttext-decoration: none;\n\tdisplay:block;\n\tcolor: #666;\n\tfont-weight: bold;\n\tmargin-bottom: 10px;\n\tbackground: #eee;\n\tborder: 1px solid #ddd;\n\tborder-radius: 4px;\n\tpadding: 10pt;\n\tmargin-top: 10pt;\n}\n\n.date{\n\tfont-size:17pt;\n\tfont-weight: bold;\n\tline-height: 30pt;\n\ttext-align: center;\n}\n\n.split, .clear {\n\tclear: both;\n\theight: 1px;\n\toverflow-y: hidden;\n}\n\n.good, .bad {\n\tclear: both;\n\tposition: relative;\n}\n\n.bad {\n\t/*top: -1px;*/\n}\n\n.good .title, .bad .title {\n\tfloat: left;\n\twidth: 100px;\n\tfont-weight: bold;\n\ttext-align: center;\n\tfont-size: 30pt;\n\tposition:absolute;\n\ttop:0;\n\tbottom:0;\n}\n\n.good .title>table, .bad .title>table {\n\tposition:absolute;\n\twidth:100%;\n\theight:100%;\n\tborder:none;\n}\n\n.good .title {\n\tbackground: #ffee44;\n}\n\n.someday .good .title {\n\tbackground: #aaaaaa;\n}\n\n.bad .title {\n\tbackground: #ff4444;\n\tcolor: #fff;\n}\n\n.someday .bad .title {\n\tbackground: #666666;\n\tcolor: #fff;\n}\n\n.good .content, .bad .content {\n\tmargin-left: 115px;\n\tpadding-right: 10px;\n\tpadding-top: 1px;\n\tfont-size:15pt;\n}\n\n.someday .good {\n\tbackground: #dddddd;\n}\n\n.someday .bad {\n\tbackground: #aaaaaa;\n}\n\n.good {\n\tbackground: #ffffaa;\n}\n\n.bad {\n\tbackground: #ffddd3;\n}\n\n.content ul {\n\tlist-style: none;\n\tmargin:10px 0 0;\n\tpadding:0;\n}\n\n.content ul li {\n\tline-height:150%;\n\tfont-size: 15pt;\n\tfont-weight: bold;\n\tcolor: #444;\n}\n\n.content ul li div.description {\n\tfont-size: 11pt;\n\tfont-weight: normal;\n\tcolor: #777;\n\tline-height: 110%;\n\tmargin-bottom: 10px;\n}\n\n.line-tip {\n\tfont-size: 11pt;\n\tmargin-top: 10px;\n\tmargin-left: 10px;\n}\n\n.direction_value {\n\tcolor:#4a4;\n\tfont-weight: bold;\n}\n\n.someday .direction_value {\n\tcolor:#888;\n}\n\n.goddes_value {\n\tcolor: #f87;\n}\n\n.someday .goddes_value {\n\tcolor: #777;\n}\n\n.comment {\n\tmargin-top: 50px;\n\tfont-size: 11pt;\n\tmargin-left: 10px;\n}\n\n.comment ul {\n\tmargin-left: 0;\n\tpadding-left: 20px;\n\tcolor: #999;\n}","site":{"data":{}},"excerpt":"","more":"body * {\n\tfont-family:\"Consolas\",\"Microsoft Yahei\", Arial, sans-serif;\n}\n\nbody {\n\tbackground: white;\n\tmargin: 0;\n\tpadding: 0;\n}\n\n.container {\n\twidth: 320px;\n\tmargin: 0 auto 50px;\n}\n\n.container>.title {\n\tcolor: #bbb;\n\tfont-weight: bold;\n\tmargin-bottom: 10px;\n\tbackground: #555;\n\tpadding: 5px 15px;\n}\n\n.adlink {\n\ttext-align: center;\n\tfont-size: 11pt;\n}\n\n.adlink a {\n\ttext-decoration: none;\n\tdisplay:block;\n\tcolor: #666;\n\tfont-weight: bold;\n\tmargin-bottom: 10px;\n\tbackground: #eee;\n\tborder: 1px solid #ddd;\n\tborder-radius: 4px;\n\tpadding: 10pt;\n\tmargin-top: 10pt;\n}\n\n.date{\n\tfont-size:17pt;\n\tfont-weight: bold;\n\tline-height: 30pt;\n\ttext-align: center;\n}\n\n.split, .clear {\n\tclear: both;\n\theight: 1px;\n\toverflow-y: hidden;\n}\n\n.good, .bad {\n\tclear: both;\n\tposition: relative;\n}\n\n.bad {\n\t/*top: -1px;*/\n}\n\n.good .title, .bad .title {\n\tfloat: left;\n\twidth: 100px;\n\tfont-weight: bold;\n\ttext-align: center;\n\tfont-size: 30pt;\n\tposition:absolute;\n\ttop:0;\n\tbottom:0;\n}\n\n.good .title>table, .bad .title>table {\n\tposition:absolute;\n\twidth:100%;\n\theight:100%;\n\tborder:none;\n}\n\n.good .title {\n\tbackground: #ffee44;\n}\n\n.someday .good .title {\n\tbackground: #aaaaaa;\n}\n\n.bad .title {\n\tbackground: #ff4444;\n\tcolor: #fff;\n}\n\n.someday .bad .title {\n\tbackground: #666666;\n\tcolor: #fff;\n}\n\n.good .content, .bad .content {\n\tmargin-left: 115px;\n\tpadding-right: 10px;\n\tpadding-top: 1px;\n\tfont-size:15pt;\n}\n\n.someday .good {\n\tbackground: #dddddd;\n}\n\n.someday .bad {\n\tbackground: #aaaaaa;\n}\n\n.good {\n\tbackground: #ffffaa;\n}\n\n.bad {\n\tbackground: #ffddd3;\n}\n\n.content ul {\n\tlist-style: none;\n\tmargin:10px 0 0;\n\tpadding:0;\n}\n\n.content ul li {\n\tline-height:150%;\n\tfont-size: 15pt;\n\tfont-weight: bold;\n\tcolor: #444;\n}\n\n.content ul li div.description {\n\tfont-size: 11pt;\n\tfont-weight: normal;\n\tcolor: #777;\n\tline-height: 110%;\n\tmargin-bottom: 10px;\n}\n\n.line-tip {\n\tfont-size: 11pt;\n\tmargin-top: 10px;\n\tmargin-left: 10px;\n}\n\n.direction_value {\n\tcolor:#4a4;\n\tfont-weight: bold;\n}\n\n.someday .direction_value {\n\tcolor:#888;\n}\n\n.goddes_value {\n\tcolor: #f87;\n}\n\n.someday .goddes_value {\n\tcolor: #777;\n}\n\n.comment {\n\tmargin-top: 50px;\n\tfont-size: 11pt;\n\tmargin-left: 10px;\n}\n\n.comment ul {\n\tmargin-left: 0;\n\tpadding-left: 20px;\n\tcolor: #999;\n}"},{"_content":"\n\t<!DOCTYPE html>\n<html>\n\t<head>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\">\n\t<title>程序员求签</title>\n\t\t<script src=\"https://cdn.bootcss.com/jquery/1.10.2/jquery.min.js\"></script>\n\t</head>\n\t<body>\n\t\t<div class=\"container\">\n\t\t\t<div class=\"title\">\n        程序员求签\n\t\t\t\t<sup>\n\t\t\t\t\tbeta\n\t\t\t\t</sup>\n\t\t</div>\n\t\t<div class=\"info\">\n\t\t\t<strong>求</strong>婚丧嫁娶亲友疾病编程测试升职跳槽陨石核弹各类吉凶\n\t\t</div>\n\t\t<div class=\"date\">\n\t\t</div>\n\t\t<div class=\"check_luck\">\n\t\t\t<ul style=\"margin-top:0;padding-left:30px;line-height:130%\">\n\t\t\t\t<li>编码测试修复提交之前求一签，可避凶趋吉</li>\n\t\t\t\t<li>选择所求之事并在心中默念，再单击“求”即可</li>\n\t\t\t\t<li>同一件事只能求一次，下次再求请刷新页面</li>\n\t\t\t</ul>\n\t\t\t<table class=\"event_table selecttable\">\n\t\t\t\t<tr>\n\t\t\t\t\t<td class=\"\" data-event=\"100\">\n\t\t\t\t\t\t编码\n\t\t\t\t\t</td>\n\t\t\t\t\t<td class=\"\" data-event=\"200\">\n\t\t\t\t\t\t测试\n\t\t\t\t\t</td>\n\t\t\t\t\t<td class=\"\" data-event=\"300\">\n\t\t\t\t\t\t修复BUG\n\t\t\t\t\t</td>\n\t\t\t\t\t<td class=\"\" data-event=\"400\">\n\t\t\t\t\t\t提交代码\n\t\t\t\t\t</td>\n\t\t\t\t\t<td class=\"\" data-event=\"500\">\n\t\t\t\t\t\t其他\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t</div>\n\t\t<div class=\"roll\">\n\t\t\t<div class=\"card\" style=\"top:-1px;font-size:20pt\">\n\t\t\t\t请点击所求之事\n\t\t\t</div>\n\t\t\t<div class=\"card clickable\">\n\t\t\t\t<div class=\"title\">\n\t\t\t\t\t求\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t\t\n\t</div>\n\t</body>\n</html>\n    \t<style>body * {\n\tfont-family: \"Consolas\", \"Microsoft Yahei\", Arial, sans-serif;\n}\n\ndiv {\n\tfont-size: 10pt;\n}\n\nbody {\n\tbackground: white;\n\tmargin: 0;\n\tpadding: 0;\n}\n\n.container {\n\twidth: 320px;\n\tmargin: 0 auto 50px;\n}\n\n.info {\n\ttext-align: center;\n\tcolor: #dc143c;\n\tfont-size: 9pt;\n}\n\n.info strong {\n\tbackground:crimson;\n\tcolor: white;\n\tpadding:0 3px;\n\tmargin: 0 1px;\n}\n\n.container>.title {\n\tcolor: #bbb;\n\tfont-weight: bold;\n\tmargin-bottom: 10px;\n\tbackground: #555;\n\tpadding: 5px 15px;\n\tfont-size: 120%;\n}\n\n.date {\n\tfont-size: 17pt;\n\tfont-weight: bold;\n\tline-height: 30pt;\n\ttext-align: center;\n\tborder-bottom: 1px solid #999;\n}\n\n.check_luck {\n\tpadding-top: 10px;\n}\n\n.selecttable {\n\twidth: 100%;\n}\n\n.selecttable td {\n\ttext-align: center;\n\tpadding: 10px 0;\n\tmargin: 1px;\n\tbackground: #ccc;\n\tcursor: pointer;\n\twidth: 20%;\n\tborder-radius:2px;\n}\n\n.selecttable td:hover {\n\tbackground: #aaa;\n}\n\n.selecttable td.selected {\n\tbackground: #333;\n\tcolor: #fff;\n}\n\n.roll {\n\theight: 200px;\n\tborder:1px solid #faa;\n\tmargin-top:10px;\n\toverflow: hidden;\n\tposition: relative;\n}\n\n.card {\n\tbackground:#ffffff;\n\ttext-align: center;\n\tline-height: 200px;\n\tborder-top: 1px solid #faa;\n\tposition: absolute;\n\ttop: 201px;\n\twidth: 100%;\n}\n\n.card .title {\n\tfont-size: 70pt;\n\tfont-weight: bold;\n}\n\n.card.clickable {\n\tbackground: crimson;\n\tcolor: #ffffff;\n\tcursor: pointer;\n}\n</style>\n\t    \t\t<script>//\n/*\n * 注意：本程序中的“随机”都是伪随机概念。\n * 第一个种子相对固定，第二个种子相对有更多变化\n */\nfunction random(seed1, seed2) {\n\tvar n = seed1 % 11117;\n\tfor (var i = 0; i < 100 + seed2; i++) {\n\t\tn = n * n;\n\t\tn = n % 11117; // 11117 是个质数\n\t}\n\treturn n;\n}\n\n// 从数组中随机挑选 size 个\nfunction pickRandom(array, size) {\n\tvar result = [];\n\n\tfor (var i = 0; i < array.length; i++) {\n\t\tresult.push(array[i]);\n\t}\n\n\tfor (var j = 0; j < array.length - size; j++) {\n\t\tvar index = random(iday, j) % result.length;\n\t\tresult.splice(index, 1);\n\t}\n\n\treturn result;\n}\n\nvar weeks = [\"日\", \"一\", \"二\", \"三\", \"四\", \"五\", \"六\"];\nfunction getTodayString() {\n\treturn \"今天是\" + today.getFullYear() + \"年\" + (today.getMonth() + 1) + \"月\" + today.getDate() + \"日 星期\" + weeks[today.getDay()];\n}\n\nvar today = new Date();\nvar timeseed = today.getMilliseconds();\n\n/////////////////////////////////////////////////////////\n\nvar results = ['超大吉', '大吉', '吉', '小吉', '&nbsp;', '小凶', '凶', '大凶', '超大凶'];\nvar descriptions = ['','','','','','','','',''];\nvar luck_rate = [10, 100, 500, 800, 300, 800, 500, 100, 10]; // 吉凶概率分布，总数为 3120\n\n\n\nfunction pickRandomWithRate(seed1, seed2) {\n\tvar result = random(seed1, seed2) % 3120;\n\tvar addup = 0;\n\t\n\tfor (var i = 0; i < luck_rate.length; i++) {\n\t\taddup += luck_rate[i];\n\t\tif (result <= addup) {\n\t\t\treturn {title: results[i], desc: descriptions[i]};\n\t\t}\n\t}\n\treturn {title:' ', desc: ''};\n}\n\n/////////////////////////////////////////////////////////\nvar selectedEvent = null;\n\nfunction initEventTable() {\n\t$('.event_table td').click(function() {\n\t\t$('.event_table td').removeClass('selected');\n\t\t$(this).addClass('selected'); \n\t\tselectedEvent = $(this).data('event');\n\t\t\n\t\t$('div.card.clickable').nextAll().remove();\n\t\tshowCard('div.card.clickable', 300);\n\t});\n}\n\n// TODO 概率分布\nfunction getNextCardText() {\n\treturn pickRandomWithRate(timeseed + selectedEvent, slidecount);\n}\n\nfunction showCard(selector, duration, complete) {\n\t$(selector).animate({top:'-1px'}, duration, 'swing', complete);\n}\n\nvar tail, slidecount = 0;\n\nfunction initClickEvent() {\n\t$('div.card.clickable').click(function() {\n\t\ttail = $('div.card.clickable');\n\t\tslidecount = 0;\n\t\tslide();\n\t});\n}\n\nfunction slide() {\n\tif (slidecount > 35) {\n\t\treturn;\n\t}\n\t\n\tvar duration = slidecount > 33? 1500:\n\t\t\t(slidecount > 32? 800: \n\t\t\t (slidecount > 25? 400: \n\t\t\t  (slidecount > 20? 200: \n\t\t\t\t (slidecount > 15? 150: 100))));\n\t\n\tvar cardInfo = getNextCardText();\n\t\n\tcard = $('<div class=\"card\">' + \n\t\t\t\t\t '<div class=\"title\">' + cardInfo.title + '</div>' +\n\t\t\t\t\t '<div class=\"desc\">' + cardInfo.desc + '</div>' +\n\t\t\t\t\t '</div>');\n\ttail.after(card);\n\ttail = card;\n\tslidecount++;\n\tshowCard(card, duration, slide);\n}\n\n$(function() {\n\t$('.date').html(getTodayString());\n\tinitEventTable();\n\tinitClickEvent();\n});</script>\n\t\n<!-- Generated by RunJS (Fri Sep 25 21:46:34 CST 2015) 2ms -->","source":"lhl/cxy-qiuqian.html","raw":"\n\t<!DOCTYPE html>\n<html>\n\t<head>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\">\n\t<title>程序员求签</title>\n\t\t<script src=\"https://cdn.bootcss.com/jquery/1.10.2/jquery.min.js\"></script>\n\t</head>\n\t<body>\n\t\t<div class=\"container\">\n\t\t\t<div class=\"title\">\n        程序员求签\n\t\t\t\t<sup>\n\t\t\t\t\tbeta\n\t\t\t\t</sup>\n\t\t</div>\n\t\t<div class=\"info\">\n\t\t\t<strong>求</strong>婚丧嫁娶亲友疾病编程测试升职跳槽陨石核弹各类吉凶\n\t\t</div>\n\t\t<div class=\"date\">\n\t\t</div>\n\t\t<div class=\"check_luck\">\n\t\t\t<ul style=\"margin-top:0;padding-left:30px;line-height:130%\">\n\t\t\t\t<li>编码测试修复提交之前求一签，可避凶趋吉</li>\n\t\t\t\t<li>选择所求之事并在心中默念，再单击“求”即可</li>\n\t\t\t\t<li>同一件事只能求一次，下次再求请刷新页面</li>\n\t\t\t</ul>\n\t\t\t<table class=\"event_table selecttable\">\n\t\t\t\t<tr>\n\t\t\t\t\t<td class=\"\" data-event=\"100\">\n\t\t\t\t\t\t编码\n\t\t\t\t\t</td>\n\t\t\t\t\t<td class=\"\" data-event=\"200\">\n\t\t\t\t\t\t测试\n\t\t\t\t\t</td>\n\t\t\t\t\t<td class=\"\" data-event=\"300\">\n\t\t\t\t\t\t修复BUG\n\t\t\t\t\t</td>\n\t\t\t\t\t<td class=\"\" data-event=\"400\">\n\t\t\t\t\t\t提交代码\n\t\t\t\t\t</td>\n\t\t\t\t\t<td class=\"\" data-event=\"500\">\n\t\t\t\t\t\t其他\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t</div>\n\t\t<div class=\"roll\">\n\t\t\t<div class=\"card\" style=\"top:-1px;font-size:20pt\">\n\t\t\t\t请点击所求之事\n\t\t\t</div>\n\t\t\t<div class=\"card clickable\">\n\t\t\t\t<div class=\"title\">\n\t\t\t\t\t求\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t\t\n\t</div>\n\t</body>\n</html>\n    \t<style>body * {\n\tfont-family: \"Consolas\", \"Microsoft Yahei\", Arial, sans-serif;\n}\n\ndiv {\n\tfont-size: 10pt;\n}\n\nbody {\n\tbackground: white;\n\tmargin: 0;\n\tpadding: 0;\n}\n\n.container {\n\twidth: 320px;\n\tmargin: 0 auto 50px;\n}\n\n.info {\n\ttext-align: center;\n\tcolor: #dc143c;\n\tfont-size: 9pt;\n}\n\n.info strong {\n\tbackground:crimson;\n\tcolor: white;\n\tpadding:0 3px;\n\tmargin: 0 1px;\n}\n\n.container>.title {\n\tcolor: #bbb;\n\tfont-weight: bold;\n\tmargin-bottom: 10px;\n\tbackground: #555;\n\tpadding: 5px 15px;\n\tfont-size: 120%;\n}\n\n.date {\n\tfont-size: 17pt;\n\tfont-weight: bold;\n\tline-height: 30pt;\n\ttext-align: center;\n\tborder-bottom: 1px solid #999;\n}\n\n.check_luck {\n\tpadding-top: 10px;\n}\n\n.selecttable {\n\twidth: 100%;\n}\n\n.selecttable td {\n\ttext-align: center;\n\tpadding: 10px 0;\n\tmargin: 1px;\n\tbackground: #ccc;\n\tcursor: pointer;\n\twidth: 20%;\n\tborder-radius:2px;\n}\n\n.selecttable td:hover {\n\tbackground: #aaa;\n}\n\n.selecttable td.selected {\n\tbackground: #333;\n\tcolor: #fff;\n}\n\n.roll {\n\theight: 200px;\n\tborder:1px solid #faa;\n\tmargin-top:10px;\n\toverflow: hidden;\n\tposition: relative;\n}\n\n.card {\n\tbackground:#ffffff;\n\ttext-align: center;\n\tline-height: 200px;\n\tborder-top: 1px solid #faa;\n\tposition: absolute;\n\ttop: 201px;\n\twidth: 100%;\n}\n\n.card .title {\n\tfont-size: 70pt;\n\tfont-weight: bold;\n}\n\n.card.clickable {\n\tbackground: crimson;\n\tcolor: #ffffff;\n\tcursor: pointer;\n}\n</style>\n\t    \t\t<script>//\n/*\n * 注意：本程序中的“随机”都是伪随机概念。\n * 第一个种子相对固定，第二个种子相对有更多变化\n */\nfunction random(seed1, seed2) {\n\tvar n = seed1 % 11117;\n\tfor (var i = 0; i < 100 + seed2; i++) {\n\t\tn = n * n;\n\t\tn = n % 11117; // 11117 是个质数\n\t}\n\treturn n;\n}\n\n// 从数组中随机挑选 size 个\nfunction pickRandom(array, size) {\n\tvar result = [];\n\n\tfor (var i = 0; i < array.length; i++) {\n\t\tresult.push(array[i]);\n\t}\n\n\tfor (var j = 0; j < array.length - size; j++) {\n\t\tvar index = random(iday, j) % result.length;\n\t\tresult.splice(index, 1);\n\t}\n\n\treturn result;\n}\n\nvar weeks = [\"日\", \"一\", \"二\", \"三\", \"四\", \"五\", \"六\"];\nfunction getTodayString() {\n\treturn \"今天是\" + today.getFullYear() + \"年\" + (today.getMonth() + 1) + \"月\" + today.getDate() + \"日 星期\" + weeks[today.getDay()];\n}\n\nvar today = new Date();\nvar timeseed = today.getMilliseconds();\n\n/////////////////////////////////////////////////////////\n\nvar results = ['超大吉', '大吉', '吉', '小吉', '&nbsp;', '小凶', '凶', '大凶', '超大凶'];\nvar descriptions = ['','','','','','','','',''];\nvar luck_rate = [10, 100, 500, 800, 300, 800, 500, 100, 10]; // 吉凶概率分布，总数为 3120\n\n\n\nfunction pickRandomWithRate(seed1, seed2) {\n\tvar result = random(seed1, seed2) % 3120;\n\tvar addup = 0;\n\t\n\tfor (var i = 0; i < luck_rate.length; i++) {\n\t\taddup += luck_rate[i];\n\t\tif (result <= addup) {\n\t\t\treturn {title: results[i], desc: descriptions[i]};\n\t\t}\n\t}\n\treturn {title:' ', desc: ''};\n}\n\n/////////////////////////////////////////////////////////\nvar selectedEvent = null;\n\nfunction initEventTable() {\n\t$('.event_table td').click(function() {\n\t\t$('.event_table td').removeClass('selected');\n\t\t$(this).addClass('selected'); \n\t\tselectedEvent = $(this).data('event');\n\t\t\n\t\t$('div.card.clickable').nextAll().remove();\n\t\tshowCard('div.card.clickable', 300);\n\t});\n}\n\n// TODO 概率分布\nfunction getNextCardText() {\n\treturn pickRandomWithRate(timeseed + selectedEvent, slidecount);\n}\n\nfunction showCard(selector, duration, complete) {\n\t$(selector).animate({top:'-1px'}, duration, 'swing', complete);\n}\n\nvar tail, slidecount = 0;\n\nfunction initClickEvent() {\n\t$('div.card.clickable').click(function() {\n\t\ttail = $('div.card.clickable');\n\t\tslidecount = 0;\n\t\tslide();\n\t});\n}\n\nfunction slide() {\n\tif (slidecount > 35) {\n\t\treturn;\n\t}\n\t\n\tvar duration = slidecount > 33? 1500:\n\t\t\t(slidecount > 32? 800: \n\t\t\t (slidecount > 25? 400: \n\t\t\t  (slidecount > 20? 200: \n\t\t\t\t (slidecount > 15? 150: 100))));\n\t\n\tvar cardInfo = getNextCardText();\n\t\n\tcard = $('<div class=\"card\">' + \n\t\t\t\t\t '<div class=\"title\">' + cardInfo.title + '</div>' +\n\t\t\t\t\t '<div class=\"desc\">' + cardInfo.desc + '</div>' +\n\t\t\t\t\t '</div>');\n\ttail.after(card);\n\ttail = card;\n\tslidecount++;\n\tshowCard(card, duration, slide);\n}\n\n$(function() {\n\t$('.date').html(getTodayString());\n\tinitEventTable();\n\tinitClickEvent();\n});</script>\n\t\n<!-- Generated by RunJS (Fri Sep 25 21:46:34 CST 2015) 2ms -->","date":"2017-07-28T12:25:27.545Z","updated":"2017-07-28T12:25:27.545Z","path":"lhl/cxy-qiuqian.html","_id":"cj5ntcrwt0001ak940140ov17","title":"","comments":1,"layout":"page","content":"\n\t<!DOCTYPE html>\n<html>\n\t<head>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\">\n\t<title>程序员求签</title>\n\t\t<script src=\"https://cdn.bootcss.com/jquery/1.10.2/jquery.min.js\"></script>\n\t</head>\n\t<body>\n\t\t<div class=\"container\">\n\t\t\t<div class=\"title\">\n        程序员求签\n\t\t\t\t<sup>\n\t\t\t\t\tbeta\n\t\t\t\t</sup>\n\t\t</div>\n\t\t<div class=\"info\">\n\t\t\t<strong>求</strong>婚丧嫁娶亲友疾病编程测试升职跳槽陨石核弹各类吉凶\n\t\t</div>\n\t\t<div class=\"date\">\n\t\t</div>\n\t\t<div class=\"check_luck\">\n\t\t\t<ul style=\"margin-top:0;padding-left:30px;line-height:130%\">\n\t\t\t\t<li>编码测试修复提交之前求一签，可避凶趋吉</li>\n\t\t\t\t<li>选择所求之事并在心中默念，再单击“求”即可</li>\n\t\t\t\t<li>同一件事只能求一次，下次再求请刷新页面</li>\n\t\t\t</ul>\n\t\t\t<table class=\"event_table selecttable\">\n\t\t\t\t<tr>\n\t\t\t\t\t<td class=\"\" data-event=\"100\">\n\t\t\t\t\t\t编码\n\t\t\t\t\t</td>\n\t\t\t\t\t<td class=\"\" data-event=\"200\">\n\t\t\t\t\t\t测试\n\t\t\t\t\t</td>\n\t\t\t\t\t<td class=\"\" data-event=\"300\">\n\t\t\t\t\t\t修复BUG\n\t\t\t\t\t</td>\n\t\t\t\t\t<td class=\"\" data-event=\"400\">\n\t\t\t\t\t\t提交代码\n\t\t\t\t\t</td>\n\t\t\t\t\t<td class=\"\" data-event=\"500\">\n\t\t\t\t\t\t其他\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t</div>\n\t\t<div class=\"roll\">\n\t\t\t<div class=\"card\" style=\"top:-1px;font-size:20pt\">\n\t\t\t\t请点击所求之事\n\t\t\t</div>\n\t\t\t<div class=\"card clickable\">\n\t\t\t\t<div class=\"title\">\n\t\t\t\t\t求\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t\t\n\t</div>\n\t</body>\n</html>\n    \t<style>body * {\n\tfont-family: \"Consolas\", \"Microsoft Yahei\", Arial, sans-serif;\n}\n\ndiv {\n\tfont-size: 10pt;\n}\n\nbody {\n\tbackground: white;\n\tmargin: 0;\n\tpadding: 0;\n}\n\n.container {\n\twidth: 320px;\n\tmargin: 0 auto 50px;\n}\n\n.info {\n\ttext-align: center;\n\tcolor: #dc143c;\n\tfont-size: 9pt;\n}\n\n.info strong {\n\tbackground:crimson;\n\tcolor: white;\n\tpadding:0 3px;\n\tmargin: 0 1px;\n}\n\n.container>.title {\n\tcolor: #bbb;\n\tfont-weight: bold;\n\tmargin-bottom: 10px;\n\tbackground: #555;\n\tpadding: 5px 15px;\n\tfont-size: 120%;\n}\n\n.date {\n\tfont-size: 17pt;\n\tfont-weight: bold;\n\tline-height: 30pt;\n\ttext-align: center;\n\tborder-bottom: 1px solid #999;\n}\n\n.check_luck {\n\tpadding-top: 10px;\n}\n\n.selecttable {\n\twidth: 100%;\n}\n\n.selecttable td {\n\ttext-align: center;\n\tpadding: 10px 0;\n\tmargin: 1px;\n\tbackground: #ccc;\n\tcursor: pointer;\n\twidth: 20%;\n\tborder-radius:2px;\n}\n\n.selecttable td:hover {\n\tbackground: #aaa;\n}\n\n.selecttable td.selected {\n\tbackground: #333;\n\tcolor: #fff;\n}\n\n.roll {\n\theight: 200px;\n\tborder:1px solid #faa;\n\tmargin-top:10px;\n\toverflow: hidden;\n\tposition: relative;\n}\n\n.card {\n\tbackground:#ffffff;\n\ttext-align: center;\n\tline-height: 200px;\n\tborder-top: 1px solid #faa;\n\tposition: absolute;\n\ttop: 201px;\n\twidth: 100%;\n}\n\n.card .title {\n\tfont-size: 70pt;\n\tfont-weight: bold;\n}\n\n.card.clickable {\n\tbackground: crimson;\n\tcolor: #ffffff;\n\tcursor: pointer;\n}\n</style>\n\t    \t\t<script>//\n/*\n * 注意：本程序中的“随机”都是伪随机概念。\n * 第一个种子相对固定，第二个种子相对有更多变化\n */\nfunction random(seed1, seed2) {\n\tvar n = seed1 % 11117;\n\tfor (var i = 0; i < 100 + seed2; i++) {\n\t\tn = n * n;\n\t\tn = n % 11117; // 11117 是个质数\n\t}\n\treturn n;\n}\n\n// 从数组中随机挑选 size 个\nfunction pickRandom(array, size) {\n\tvar result = [];\n\n\tfor (var i = 0; i < array.length; i++) {\n\t\tresult.push(array[i]);\n\t}\n\n\tfor (var j = 0; j < array.length - size; j++) {\n\t\tvar index = random(iday, j) % result.length;\n\t\tresult.splice(index, 1);\n\t}\n\n\treturn result;\n}\n\nvar weeks = [\"日\", \"一\", \"二\", \"三\", \"四\", \"五\", \"六\"];\nfunction getTodayString() {\n\treturn \"今天是\" + today.getFullYear() + \"年\" + (today.getMonth() + 1) + \"月\" + today.getDate() + \"日 星期\" + weeks[today.getDay()];\n}\n\nvar today = new Date();\nvar timeseed = today.getMilliseconds();\n\n/////////////////////////////////////////////////////////\n\nvar results = ['超大吉', '大吉', '吉', '小吉', '&nbsp;', '小凶', '凶', '大凶', '超大凶'];\nvar descriptions = ['','','','','','','','',''];\nvar luck_rate = [10, 100, 500, 800, 300, 800, 500, 100, 10]; // 吉凶概率分布，总数为 3120\n\n\n\nfunction pickRandomWithRate(seed1, seed2) {\n\tvar result = random(seed1, seed2) % 3120;\n\tvar addup = 0;\n\t\n\tfor (var i = 0; i < luck_rate.length; i++) {\n\t\taddup += luck_rate[i];\n\t\tif (result <= addup) {\n\t\t\treturn {title: results[i], desc: descriptions[i]};\n\t\t}\n\t}\n\treturn {title:' ', desc: ''};\n}\n\n/////////////////////////////////////////////////////////\nvar selectedEvent = null;\n\nfunction initEventTable() {\n\t$('.event_table td').click(function() {\n\t\t$('.event_table td').removeClass('selected');\n\t\t$(this).addClass('selected'); \n\t\tselectedEvent = $(this).data('event');\n\t\t\n\t\t$('div.card.clickable').nextAll().remove();\n\t\tshowCard('div.card.clickable', 300);\n\t});\n}\n\n// TODO 概率分布\nfunction getNextCardText() {\n\treturn pickRandomWithRate(timeseed + selectedEvent, slidecount);\n}\n\nfunction showCard(selector, duration, complete) {\n\t$(selector).animate({top:'-1px'}, duration, 'swing', complete);\n}\n\nvar tail, slidecount = 0;\n\nfunction initClickEvent() {\n\t$('div.card.clickable').click(function() {\n\t\ttail = $('div.card.clickable');\n\t\tslidecount = 0;\n\t\tslide();\n\t});\n}\n\nfunction slide() {\n\tif (slidecount > 35) {\n\t\treturn;\n\t}\n\t\n\tvar duration = slidecount > 33? 1500:\n\t\t\t(slidecount > 32? 800: \n\t\t\t (slidecount > 25? 400: \n\t\t\t  (slidecount > 20? 200: \n\t\t\t\t (slidecount > 15? 150: 100))));\n\t\n\tvar cardInfo = getNextCardText();\n\t\n\tcard = $('<div class=\"card\">' + \n\t\t\t\t\t '<div class=\"title\">' + cardInfo.title + '</div>' +\n\t\t\t\t\t '<div class=\"desc\">' + cardInfo.desc + '</div>' +\n\t\t\t\t\t '</div>');\n\ttail.after(card);\n\ttail = card;\n\tslidecount++;\n\tshowCard(card, duration, slide);\n}\n\n$(function() {\n\t$('.date').html(getTodayString());\n\tinitEventTable();\n\tinitClickEvent();\n});</script>\n\t\n<!-- Generated by RunJS (Fri Sep 25 21:46:34 CST 2015) 2ms -->","site":{"data":{}},"excerpt":"","more":"\n\t<!DOCTYPE html>\n<html>\n\t<head>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\">\n\t<title>程序员求签</title>\n\t\t<script src=\"https://cdn.bootcss.com/jquery/1.10.2/jquery.min.js\"></script>\n\t</head>\n\t<body>\n\t\t<div class=\"container\">\n\t\t\t<div class=\"title\">\n        程序员求签\n\t\t\t\t<sup>\n\t\t\t\t\tbeta\n\t\t\t\t</sup>\n\t\t</div>\n\t\t<div class=\"info\">\n\t\t\t<strong>求</strong>婚丧嫁娶亲友疾病编程测试升职跳槽陨石核弹各类吉凶\n\t\t</div>\n\t\t<div class=\"date\">\n\t\t</div>\n\t\t<div class=\"check_luck\">\n\t\t\t<ul style=\"margin-top:0;padding-left:30px;line-height:130%\">\n\t\t\t\t<li>编码测试修复提交之前求一签，可避凶趋吉</li>\n\t\t\t\t<li>选择所求之事并在心中默念，再单击“求”即可</li>\n\t\t\t\t<li>同一件事只能求一次，下次再求请刷新页面</li>\n\t\t\t</ul>\n\t\t\t<table class=\"event_table selecttable\">\n\t\t\t\t<tr>\n\t\t\t\t\t<td class=\"\" data-event=\"100\">\n\t\t\t\t\t\t编码\n\t\t\t\t\t</td>\n\t\t\t\t\t<td class=\"\" data-event=\"200\">\n\t\t\t\t\t\t测试\n\t\t\t\t\t</td>\n\t\t\t\t\t<td class=\"\" data-event=\"300\">\n\t\t\t\t\t\t修复BUG\n\t\t\t\t\t</td>\n\t\t\t\t\t<td class=\"\" data-event=\"400\">\n\t\t\t\t\t\t提交代码\n\t\t\t\t\t</td>\n\t\t\t\t\t<td class=\"\" data-event=\"500\">\n\t\t\t\t\t\t其他\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t</div>\n\t\t<div class=\"roll\">\n\t\t\t<div class=\"card\" style=\"top:-1px;font-size:20pt\">\n\t\t\t\t请点击所求之事\n\t\t\t</div>\n\t\t\t<div class=\"card clickable\">\n\t\t\t\t<div class=\"title\">\n\t\t\t\t\t求\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t\t\n\t</div>\n\t</body>\n</html>\n    \t<style>body * {\n\tfont-family: \"Consolas\", \"Microsoft Yahei\", Arial, sans-serif;\n}\n\ndiv {\n\tfont-size: 10pt;\n}\n\nbody {\n\tbackground: white;\n\tmargin: 0;\n\tpadding: 0;\n}\n\n.container {\n\twidth: 320px;\n\tmargin: 0 auto 50px;\n}\n\n.info {\n\ttext-align: center;\n\tcolor: #dc143c;\n\tfont-size: 9pt;\n}\n\n.info strong {\n\tbackground:crimson;\n\tcolor: white;\n\tpadding:0 3px;\n\tmargin: 0 1px;\n}\n\n.container>.title {\n\tcolor: #bbb;\n\tfont-weight: bold;\n\tmargin-bottom: 10px;\n\tbackground: #555;\n\tpadding: 5px 15px;\n\tfont-size: 120%;\n}\n\n.date {\n\tfont-size: 17pt;\n\tfont-weight: bold;\n\tline-height: 30pt;\n\ttext-align: center;\n\tborder-bottom: 1px solid #999;\n}\n\n.check_luck {\n\tpadding-top: 10px;\n}\n\n.selecttable {\n\twidth: 100%;\n}\n\n.selecttable td {\n\ttext-align: center;\n\tpadding: 10px 0;\n\tmargin: 1px;\n\tbackground: #ccc;\n\tcursor: pointer;\n\twidth: 20%;\n\tborder-radius:2px;\n}\n\n.selecttable td:hover {\n\tbackground: #aaa;\n}\n\n.selecttable td.selected {\n\tbackground: #333;\n\tcolor: #fff;\n}\n\n.roll {\n\theight: 200px;\n\tborder:1px solid #faa;\n\tmargin-top:10px;\n\toverflow: hidden;\n\tposition: relative;\n}\n\n.card {\n\tbackground:#ffffff;\n\ttext-align: center;\n\tline-height: 200px;\n\tborder-top: 1px solid #faa;\n\tposition: absolute;\n\ttop: 201px;\n\twidth: 100%;\n}\n\n.card .title {\n\tfont-size: 70pt;\n\tfont-weight: bold;\n}\n\n.card.clickable {\n\tbackground: crimson;\n\tcolor: #ffffff;\n\tcursor: pointer;\n}\n</style>\n\t    \t\t<script>//\n/*\n * 注意：本程序中的“随机”都是伪随机概念。\n * 第一个种子相对固定，第二个种子相对有更多变化\n */\nfunction random(seed1, seed2) {\n\tvar n = seed1 % 11117;\n\tfor (var i = 0; i < 100 + seed2; i++) {\n\t\tn = n * n;\n\t\tn = n % 11117; // 11117 是个质数\n\t}\n\treturn n;\n}\n\n// 从数组中随机挑选 size 个\nfunction pickRandom(array, size) {\n\tvar result = [];\n\n\tfor (var i = 0; i < array.length; i++) {\n\t\tresult.push(array[i]);\n\t}\n\n\tfor (var j = 0; j < array.length - size; j++) {\n\t\tvar index = random(iday, j) % result.length;\n\t\tresult.splice(index, 1);\n\t}\n\n\treturn result;\n}\n\nvar weeks = [\"日\", \"一\", \"二\", \"三\", \"四\", \"五\", \"六\"];\nfunction getTodayString() {\n\treturn \"今天是\" + today.getFullYear() + \"年\" + (today.getMonth() + 1) + \"月\" + today.getDate() + \"日 星期\" + weeks[today.getDay()];\n}\n\nvar today = new Date();\nvar timeseed = today.getMilliseconds();\n\n/////////////////////////////////////////////////////////\n\nvar results = ['超大吉', '大吉', '吉', '小吉', '&nbsp;', '小凶', '凶', '大凶', '超大凶'];\nvar descriptions = ['','','','','','','','',''];\nvar luck_rate = [10, 100, 500, 800, 300, 800, 500, 100, 10]; // 吉凶概率分布，总数为 3120\n\n\n\nfunction pickRandomWithRate(seed1, seed2) {\n\tvar result = random(seed1, seed2) % 3120;\n\tvar addup = 0;\n\t\n\tfor (var i = 0; i < luck_rate.length; i++) {\n\t\taddup += luck_rate[i];\n\t\tif (result <= addup) {\n\t\t\treturn {title: results[i], desc: descriptions[i]};\n\t\t}\n\t}\n\treturn {title:' ', desc: ''};\n}\n\n/////////////////////////////////////////////////////////\nvar selectedEvent = null;\n\nfunction initEventTable() {\n\t$('.event_table td').click(function() {\n\t\t$('.event_table td').removeClass('selected');\n\t\t$(this).addClass('selected'); \n\t\tselectedEvent = $(this).data('event');\n\t\t\n\t\t$('div.card.clickable').nextAll().remove();\n\t\tshowCard('div.card.clickable', 300);\n\t});\n}\n\n// TODO 概率分布\nfunction getNextCardText() {\n\treturn pickRandomWithRate(timeseed + selectedEvent, slidecount);\n}\n\nfunction showCard(selector, duration, complete) {\n\t$(selector).animate({top:'-1px'}, duration, 'swing', complete);\n}\n\nvar tail, slidecount = 0;\n\nfunction initClickEvent() {\n\t$('div.card.clickable').click(function() {\n\t\ttail = $('div.card.clickable');\n\t\tslidecount = 0;\n\t\tslide();\n\t});\n}\n\nfunction slide() {\n\tif (slidecount > 35) {\n\t\treturn;\n\t}\n\t\n\tvar duration = slidecount > 33? 1500:\n\t\t\t(slidecount > 32? 800: \n\t\t\t (slidecount > 25? 400: \n\t\t\t  (slidecount > 20? 200: \n\t\t\t\t (slidecount > 15? 150: 100))));\n\t\n\tvar cardInfo = getNextCardText();\n\t\n\tcard = $('<div class=\"card\">' + \n\t\t\t\t\t '<div class=\"title\">' + cardInfo.title + '</div>' +\n\t\t\t\t\t '<div class=\"desc\">' + cardInfo.desc + '</div>' +\n\t\t\t\t\t '</div>');\n\ttail.after(card);\n\ttail = card;\n\tslidecount++;\n\tshowCard(card, duration, slide);\n}\n\n$(function() {\n\t$('.date').html(getTodayString());\n\tinitEventTable();\n\tinitClickEvent();\n});</script>\n\t\n<!-- Generated by RunJS (Fri Sep 25 21:46:34 CST 2015) 2ms -->"},{"_content":"//\n\n/*\n * 注意：本程序中的“随机”都是伪随机概念，以当前的天为种子。\n */\nfunction random(dayseed, indexseed) {\n\tvar n = dayseed % 11117;\n\tfor (var i = 0; i < 100 + indexseed; i++) {\n\t\tn = n * n;\n\t\tn = n % 11117;   // 11117 是个质数\n\t}\n\treturn n;\n}\n\nvar today = new Date();\nvar iday = today.getFullYear() * 10000 + (today.getMonth() + 1) * 100 + today.getDate();\n\nvar weeks = [\"日\",\"一\",\"二\",\"三\",\"四\",\"五\",\"六\"];\nvar directions = [\"北方\",\"东北方\",\"东方\",\"东南方\",\"南方\",\"西南方\",\"西方\",\"西北方\"];\nvar activities = [\n\t{name:\"写单元测试\", good:\"写单元测试将减少出错\",bad:\"写单元测试会降低你的开发效率\"},\n\t{name:\"洗澡\", good:\"你几天没洗澡了？\",bad:\"会把设计方面的灵感洗掉\", weekend: true},\n\t{name:\"锻炼一下身体\", good:\"\",bad:\"能量没消耗多少，吃得却更多\", weekend: true},\n\t{name:\"抽烟\", good:\"抽烟有利于提神，增加思维敏捷\",bad:\"除非你活够了，死得早点没关系\", weekend: true},\n\t{name:\"白天上线\", good:\"今天白天上线是安全的\",bad:\"可能导致灾难性后果\"},\n\t{name:\"重构\", good:\"代码质量得到提高\",bad:\"你很有可能会陷入泥潭\"},\n\t{name:\"使用%t\", good:\"你看起来更有品位\",bad:\"别人会觉得你在装逼\"},\n\t{name:\"跳槽\", good:\"该放手时就放手\",bad:\"鉴于当前的经济形势，你的下一份工作未必比现在强\"},\n\t{name:\"招人\", good:\"你面前这位有成为牛人的潜质\",bad:\"这人会写程序吗？\"},\n\t{name:\"面试\", good:\"面试官今天心情很好\",bad:\"面试官不爽，会拿你出气\"},\n\t{name:\"提交辞职申请\", good:\"公司找到了一个比你更能干更便宜的家伙，巴不得你赶快滚蛋\",bad:\"鉴于当前的经济形势，你的下一份工作未必比现在强\"},\n\t{name:\"申请加薪\", good:\"老板今天心情很好\",bad:\"公司正在考虑裁员\"},\n\t{name:\"晚上加班\", good:\"晚上是程序员精神最好的时候\",bad:\"\", weekend: true},\n\t{name:\"在妹子面前吹牛\", good:\"改善你矮穷挫的形象\",bad:\"会被识破\", weekend: true},\n\t{name:\"撸管\", good:\"避免缓冲区溢出\",bad:\"强撸灰飞烟灭\", weekend: true},\n\t{name:\"浏览成人网站\", good:\"重拾对生活的信心\",bad:\"你会心神不宁\", weekend: true},\n\t{name:\"命名变量\\\"%v\\\"\", good:\"\",bad:\"\"},\n\t{name:\"写超过%l行的方法\", good:\"你的代码组织的很好，长一点没关系\",bad:\"你的代码将混乱不堪，你自己都看不懂\"},\n\t{name:\"提交代码\", good:\"遇到冲突的几率是最低的\",bad:\"你遇到的一大堆冲突会让你觉得自己是不是时间穿越了\"},\n\t{name:\"代码复审\", good:\"发现重要问题的几率大大增加\",bad:\"你什么问题都发现不了，白白浪费时间\"},\n\t{name:\"开会\", good:\"写代码之余放松一下打个盹，有益健康\",bad:\"小心被扣屎盆子背黑锅\"},\n\t{name:\"打DOTA\", good:\"你将有如神助\",bad:\"你会被虐的很惨\", weekend: true},\n\t{name:\"晚上上线\", good:\"晚上是程序员精神最好的时候\",bad:\"你白天已经筋疲力尽了\"},\n\t{name:\"修复BUG\", good:\"你今天对BUG的嗅觉大大提高\",bad:\"新产生的BUG将比修复的更多\"},\n\t{name:\"设计评审\", good:\"设计评审会议将变成头脑风暴\",bad:\"人人筋疲力尽，评审就这么过了\"},\n\t{name:\"需求评审\", good:\"\",bad:\"\"},\n\t{name:\"上微博\", good:\"今天发生的事不能错过\",bad:\"今天的微博充满负能量\", weekend: true},\n\t{name:\"上AB站\", good:\"还需要理由吗？\",bad:\"满屏兄贵亮瞎你的眼\", weekend: true},\n\t{name:\"玩FlappyBird\", good:\"今天破纪录的几率很高\",bad:\"除非你想玩到把手机砸了\", weekend: true}\n];\n\nvar specials = [\n\t{date:20140214, type:'bad', name:'待在男（女）友身边', description:'脱团火葬场，入团保平安。'}\n];\n\nvar tools = [\"Eclipse写程序\", \"MSOffice写文档\", \"记事本写程序\", \"Windows8\", \"Linux\", \"MacOS\", \"IE\", \"Android设备\", \"iOS设备\"];\n\nvar varNames = [\"jieguo\", \"huodong\", \"pay\", \"expire\", \"zhangdan\", \"every\", \"free\", \"i1\", \"a\", \"virtual\", \"ad\", \"spider\", \"mima\", \"pass\", \"ui\"];\n\nvar drinks = [\"水\",\"茶\",\"红茶\",\"绿茶\",\"咖啡\",\"奶茶\",\"可乐\",\"鲜奶\",\"豆奶\",\"果汁\",\"果味汽水\",\"苏打水\",\"运动饮料\",\"酸奶\",\"酒\"];\n\nfunction is_someday() {\n\treturn today.getMonth() == 5 && today.getDate() == 4;\n}\n\nfunction getTodayString() {\n\treturn \"今天是\" + today.getFullYear() + \"年\" + (today.getMonth() + 1) + \"月\" + today.getDate() + \"日 星期\" + weeks[today.getDay()];\n}\n\nfunction star(num) {\n\tvar result = \"\";\n\tvar i = 0;\n\twhile (i < num) {\n\t\tresult += \"★\";\n\t\ti++;\n\t}\n\twhile(i < 5) {\n\t\tresult += \"☆\";\n\t\ti++;\n\t}\n\treturn result;\n} \n\n// 生成今日运势\nfunction pickTodaysLuck() {\n  var _activities = filter(activities);\n    \n\tvar numGood = random(iday, 98) % 3 + 2;\n\tvar numBad = random(iday, 87) % 3 + 2;\n\tvar eventArr = pickRandomActivity(_activities, numGood + numBad);\n\t\n\tvar specialSize = pickSpecials();\n\t\n\tfor (var i = 0; i < numGood; i++) {\n\t\taddToGood(eventArr[i]);\n\t}\n\t\n\tfor (var i = 0; i < numBad; i++) {\n\t\taddToBad(eventArr[numGood + i]);\n\t}\n}\n\n// 去掉一些不合今日的事件\nfunction filter(activities) {\n    var result = [];\n    \n    // 周末的话，只留下 weekend = true 的事件\n    if (isWeekend()) {\n        \n        for (var i = 0; i < activities.length; i++) {\n            if (activities[i].weekend) {\n                result.push(activities[i]);\n            }\n        }\n        \n        return result;\n    }\n    \n    return activities;\n}\n\nfunction isWeekend() {\n    return today.getDay() == 0 || today.getDay() == 6;\n}\n\n// 添加预定义事件\nfunction pickSpecials() {\n\tvar specialSize = [0,0];\n\t\n\tfor (var i = 0; i < specials.length; i++) {\n\t\tvar special = specials[i];\n\t\t\n\t\tif (iday == special.date) {\n\t\t\tif (special.type == 'good') {\n\t\t\t\tspecialSize[0]++;\n\t\t\t\taddToGood({name: special.name, good: special.description});\n\t\t\t} else {\n\t\t\t\tspecialSize[1]++;\n\t\t\t\taddToBad({name: special.name, bad: special.description});\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn specialSize;\n}\n\n// 从 activities 中随机挑选 size 个\nfunction pickRandomActivity(activities, size) {\n\tvar picked_events = pickRandom(activities, size);\n\t\n\tfor (var i = 0; i < picked_events.length; i++) {\n\t\tpicked_events[i] = parse(picked_events[i]);\n\t}\n\t\n\treturn picked_events;\n}\n\n// 从数组中随机挑选 size 个\nfunction pickRandom(array, size) {\n\tvar result = [];\n\t\n\tfor (var i = 0; i < array.length; i++) {\n\t\tresult.push(array[i]);\n\t}\n\t\n\tfor (var j = 0; j < array.length - size; j++) {\n\t\tvar index = random(iday, j) % result.length;\n\t\tresult.splice(index, 1);\n\t}\n\t\n\treturn result;\n}\n\n// 解析占位符并替换成随机内容\nfunction parse(event) {\n\tvar result = {name: event.name, good: event.good, bad: event.bad};  // clone\n\t\n\tif (result.name.indexOf('%v') != -1) {\n\t\tresult.name = result.name.replace('%v', varNames[random(iday, 12) % varNames.length]);\n\t}\n\t\n\tif (result.name.indexOf('%t') != -1) {\n\t\tresult.name = result.name.replace('%t', tools[random(iday, 11) % tools.length]);\n\t}\n\t\n\tif (result.name.indexOf('%l') != -1) {\n\t\tresult.name = result.name.replace('%l', (random(iday, 12) % 247 + 30).toString());\n\t}\n\t\n\treturn result;\n}\n\n// 添加到“宜”\nfunction addToGood(event) {\n\t$('.good .content ul').append('<li><div class=\"name\">' + event.name + '</div><div class=\"description\">' + event.good + '</div></li>');\n}\n\n// 添加到“不宜”\nfunction addToBad(event) {\n\t$('.bad .content ul').append('<li><div class=\"name\">' + event.name + '</div><div class=\"description\">' + event.bad + '</div></li>');\n}\n\n$(function(){\n\tif (is_someday()) {document.body.className = 'someday'};\n\t$('.date').html(getTodayString());\n\t$('.direction_value').html(directions[random(iday, 2) % directions.length]);\n\t$('.drink_value').html(pickRandom(drinks,2).join('，'));\n\t$('.goddes_value').html(star(random(iday, 6) % 5 + 1));\n\tpickTodaysLuck();\n});","source":"lhl/js.js","raw":"//\n\n/*\n * 注意：本程序中的“随机”都是伪随机概念，以当前的天为种子。\n */\nfunction random(dayseed, indexseed) {\n\tvar n = dayseed % 11117;\n\tfor (var i = 0; i < 100 + indexseed; i++) {\n\t\tn = n * n;\n\t\tn = n % 11117;   // 11117 是个质数\n\t}\n\treturn n;\n}\n\nvar today = new Date();\nvar iday = today.getFullYear() * 10000 + (today.getMonth() + 1) * 100 + today.getDate();\n\nvar weeks = [\"日\",\"一\",\"二\",\"三\",\"四\",\"五\",\"六\"];\nvar directions = [\"北方\",\"东北方\",\"东方\",\"东南方\",\"南方\",\"西南方\",\"西方\",\"西北方\"];\nvar activities = [\n\t{name:\"写单元测试\", good:\"写单元测试将减少出错\",bad:\"写单元测试会降低你的开发效率\"},\n\t{name:\"洗澡\", good:\"你几天没洗澡了？\",bad:\"会把设计方面的灵感洗掉\", weekend: true},\n\t{name:\"锻炼一下身体\", good:\"\",bad:\"能量没消耗多少，吃得却更多\", weekend: true},\n\t{name:\"抽烟\", good:\"抽烟有利于提神，增加思维敏捷\",bad:\"除非你活够了，死得早点没关系\", weekend: true},\n\t{name:\"白天上线\", good:\"今天白天上线是安全的\",bad:\"可能导致灾难性后果\"},\n\t{name:\"重构\", good:\"代码质量得到提高\",bad:\"你很有可能会陷入泥潭\"},\n\t{name:\"使用%t\", good:\"你看起来更有品位\",bad:\"别人会觉得你在装逼\"},\n\t{name:\"跳槽\", good:\"该放手时就放手\",bad:\"鉴于当前的经济形势，你的下一份工作未必比现在强\"},\n\t{name:\"招人\", good:\"你面前这位有成为牛人的潜质\",bad:\"这人会写程序吗？\"},\n\t{name:\"面试\", good:\"面试官今天心情很好\",bad:\"面试官不爽，会拿你出气\"},\n\t{name:\"提交辞职申请\", good:\"公司找到了一个比你更能干更便宜的家伙，巴不得你赶快滚蛋\",bad:\"鉴于当前的经济形势，你的下一份工作未必比现在强\"},\n\t{name:\"申请加薪\", good:\"老板今天心情很好\",bad:\"公司正在考虑裁员\"},\n\t{name:\"晚上加班\", good:\"晚上是程序员精神最好的时候\",bad:\"\", weekend: true},\n\t{name:\"在妹子面前吹牛\", good:\"改善你矮穷挫的形象\",bad:\"会被识破\", weekend: true},\n\t{name:\"撸管\", good:\"避免缓冲区溢出\",bad:\"强撸灰飞烟灭\", weekend: true},\n\t{name:\"浏览成人网站\", good:\"重拾对生活的信心\",bad:\"你会心神不宁\", weekend: true},\n\t{name:\"命名变量\\\"%v\\\"\", good:\"\",bad:\"\"},\n\t{name:\"写超过%l行的方法\", good:\"你的代码组织的很好，长一点没关系\",bad:\"你的代码将混乱不堪，你自己都看不懂\"},\n\t{name:\"提交代码\", good:\"遇到冲突的几率是最低的\",bad:\"你遇到的一大堆冲突会让你觉得自己是不是时间穿越了\"},\n\t{name:\"代码复审\", good:\"发现重要问题的几率大大增加\",bad:\"你什么问题都发现不了，白白浪费时间\"},\n\t{name:\"开会\", good:\"写代码之余放松一下打个盹，有益健康\",bad:\"小心被扣屎盆子背黑锅\"},\n\t{name:\"打DOTA\", good:\"你将有如神助\",bad:\"你会被虐的很惨\", weekend: true},\n\t{name:\"晚上上线\", good:\"晚上是程序员精神最好的时候\",bad:\"你白天已经筋疲力尽了\"},\n\t{name:\"修复BUG\", good:\"你今天对BUG的嗅觉大大提高\",bad:\"新产生的BUG将比修复的更多\"},\n\t{name:\"设计评审\", good:\"设计评审会议将变成头脑风暴\",bad:\"人人筋疲力尽，评审就这么过了\"},\n\t{name:\"需求评审\", good:\"\",bad:\"\"},\n\t{name:\"上微博\", good:\"今天发生的事不能错过\",bad:\"今天的微博充满负能量\", weekend: true},\n\t{name:\"上AB站\", good:\"还需要理由吗？\",bad:\"满屏兄贵亮瞎你的眼\", weekend: true},\n\t{name:\"玩FlappyBird\", good:\"今天破纪录的几率很高\",bad:\"除非你想玩到把手机砸了\", weekend: true}\n];\n\nvar specials = [\n\t{date:20140214, type:'bad', name:'待在男（女）友身边', description:'脱团火葬场，入团保平安。'}\n];\n\nvar tools = [\"Eclipse写程序\", \"MSOffice写文档\", \"记事本写程序\", \"Windows8\", \"Linux\", \"MacOS\", \"IE\", \"Android设备\", \"iOS设备\"];\n\nvar varNames = [\"jieguo\", \"huodong\", \"pay\", \"expire\", \"zhangdan\", \"every\", \"free\", \"i1\", \"a\", \"virtual\", \"ad\", \"spider\", \"mima\", \"pass\", \"ui\"];\n\nvar drinks = [\"水\",\"茶\",\"红茶\",\"绿茶\",\"咖啡\",\"奶茶\",\"可乐\",\"鲜奶\",\"豆奶\",\"果汁\",\"果味汽水\",\"苏打水\",\"运动饮料\",\"酸奶\",\"酒\"];\n\nfunction is_someday() {\n\treturn today.getMonth() == 5 && today.getDate() == 4;\n}\n\nfunction getTodayString() {\n\treturn \"今天是\" + today.getFullYear() + \"年\" + (today.getMonth() + 1) + \"月\" + today.getDate() + \"日 星期\" + weeks[today.getDay()];\n}\n\nfunction star(num) {\n\tvar result = \"\";\n\tvar i = 0;\n\twhile (i < num) {\n\t\tresult += \"★\";\n\t\ti++;\n\t}\n\twhile(i < 5) {\n\t\tresult += \"☆\";\n\t\ti++;\n\t}\n\treturn result;\n} \n\n// 生成今日运势\nfunction pickTodaysLuck() {\n  var _activities = filter(activities);\n    \n\tvar numGood = random(iday, 98) % 3 + 2;\n\tvar numBad = random(iday, 87) % 3 + 2;\n\tvar eventArr = pickRandomActivity(_activities, numGood + numBad);\n\t\n\tvar specialSize = pickSpecials();\n\t\n\tfor (var i = 0; i < numGood; i++) {\n\t\taddToGood(eventArr[i]);\n\t}\n\t\n\tfor (var i = 0; i < numBad; i++) {\n\t\taddToBad(eventArr[numGood + i]);\n\t}\n}\n\n// 去掉一些不合今日的事件\nfunction filter(activities) {\n    var result = [];\n    \n    // 周末的话，只留下 weekend = true 的事件\n    if (isWeekend()) {\n        \n        for (var i = 0; i < activities.length; i++) {\n            if (activities[i].weekend) {\n                result.push(activities[i]);\n            }\n        }\n        \n        return result;\n    }\n    \n    return activities;\n}\n\nfunction isWeekend() {\n    return today.getDay() == 0 || today.getDay() == 6;\n}\n\n// 添加预定义事件\nfunction pickSpecials() {\n\tvar specialSize = [0,0];\n\t\n\tfor (var i = 0; i < specials.length; i++) {\n\t\tvar special = specials[i];\n\t\t\n\t\tif (iday == special.date) {\n\t\t\tif (special.type == 'good') {\n\t\t\t\tspecialSize[0]++;\n\t\t\t\taddToGood({name: special.name, good: special.description});\n\t\t\t} else {\n\t\t\t\tspecialSize[1]++;\n\t\t\t\taddToBad({name: special.name, bad: special.description});\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn specialSize;\n}\n\n// 从 activities 中随机挑选 size 个\nfunction pickRandomActivity(activities, size) {\n\tvar picked_events = pickRandom(activities, size);\n\t\n\tfor (var i = 0; i < picked_events.length; i++) {\n\t\tpicked_events[i] = parse(picked_events[i]);\n\t}\n\t\n\treturn picked_events;\n}\n\n// 从数组中随机挑选 size 个\nfunction pickRandom(array, size) {\n\tvar result = [];\n\t\n\tfor (var i = 0; i < array.length; i++) {\n\t\tresult.push(array[i]);\n\t}\n\t\n\tfor (var j = 0; j < array.length - size; j++) {\n\t\tvar index = random(iday, j) % result.length;\n\t\tresult.splice(index, 1);\n\t}\n\t\n\treturn result;\n}\n\n// 解析占位符并替换成随机内容\nfunction parse(event) {\n\tvar result = {name: event.name, good: event.good, bad: event.bad};  // clone\n\t\n\tif (result.name.indexOf('%v') != -1) {\n\t\tresult.name = result.name.replace('%v', varNames[random(iday, 12) % varNames.length]);\n\t}\n\t\n\tif (result.name.indexOf('%t') != -1) {\n\t\tresult.name = result.name.replace('%t', tools[random(iday, 11) % tools.length]);\n\t}\n\t\n\tif (result.name.indexOf('%l') != -1) {\n\t\tresult.name = result.name.replace('%l', (random(iday, 12) % 247 + 30).toString());\n\t}\n\t\n\treturn result;\n}\n\n// 添加到“宜”\nfunction addToGood(event) {\n\t$('.good .content ul').append('<li><div class=\"name\">' + event.name + '</div><div class=\"description\">' + event.good + '</div></li>');\n}\n\n// 添加到“不宜”\nfunction addToBad(event) {\n\t$('.bad .content ul').append('<li><div class=\"name\">' + event.name + '</div><div class=\"description\">' + event.bad + '</div></li>');\n}\n\n$(function(){\n\tif (is_someday()) {document.body.className = 'someday'};\n\t$('.date').html(getTodayString());\n\t$('.direction_value').html(directions[random(iday, 2) % directions.length]);\n\t$('.drink_value').html(pickRandom(drinks,2).join('，'));\n\t$('.goddes_value').html(star(random(iday, 6) % 5 + 1));\n\tpickTodaysLuck();\n});","date":"2017-07-28T11:56:52.464Z","updated":"2015-09-25T13:43:54.189Z","path":"lhl/js.js","layout":"false","title":"","comments":1,"_id":"cj5ntcrxo0003ak94i5stfw0h","content":"//\n\n/*\n * 注意：本程序中的“随机”都是伪随机概念，以当前的天为种子。\n */\nfunction random(dayseed, indexseed) {\n\tvar n = dayseed % 11117;\n\tfor (var i = 0; i < 100 + indexseed; i++) {\n\t\tn = n * n;\n\t\tn = n % 11117;   // 11117 是个质数\n\t}\n\treturn n;\n}\n\nvar today = new Date();\nvar iday = today.getFullYear() * 10000 + (today.getMonth() + 1) * 100 + today.getDate();\n\nvar weeks = [\"日\",\"一\",\"二\",\"三\",\"四\",\"五\",\"六\"];\nvar directions = [\"北方\",\"东北方\",\"东方\",\"东南方\",\"南方\",\"西南方\",\"西方\",\"西北方\"];\nvar activities = [\n\t{name:\"写单元测试\", good:\"写单元测试将减少出错\",bad:\"写单元测试会降低你的开发效率\"},\n\t{name:\"洗澡\", good:\"你几天没洗澡了？\",bad:\"会把设计方面的灵感洗掉\", weekend: true},\n\t{name:\"锻炼一下身体\", good:\"\",bad:\"能量没消耗多少，吃得却更多\", weekend: true},\n\t{name:\"抽烟\", good:\"抽烟有利于提神，增加思维敏捷\",bad:\"除非你活够了，死得早点没关系\", weekend: true},\n\t{name:\"白天上线\", good:\"今天白天上线是安全的\",bad:\"可能导致灾难性后果\"},\n\t{name:\"重构\", good:\"代码质量得到提高\",bad:\"你很有可能会陷入泥潭\"},\n\t{name:\"使用%t\", good:\"你看起来更有品位\",bad:\"别人会觉得你在装逼\"},\n\t{name:\"跳槽\", good:\"该放手时就放手\",bad:\"鉴于当前的经济形势，你的下一份工作未必比现在强\"},\n\t{name:\"招人\", good:\"你面前这位有成为牛人的潜质\",bad:\"这人会写程序吗？\"},\n\t{name:\"面试\", good:\"面试官今天心情很好\",bad:\"面试官不爽，会拿你出气\"},\n\t{name:\"提交辞职申请\", good:\"公司找到了一个比你更能干更便宜的家伙，巴不得你赶快滚蛋\",bad:\"鉴于当前的经济形势，你的下一份工作未必比现在强\"},\n\t{name:\"申请加薪\", good:\"老板今天心情很好\",bad:\"公司正在考虑裁员\"},\n\t{name:\"晚上加班\", good:\"晚上是程序员精神最好的时候\",bad:\"\", weekend: true},\n\t{name:\"在妹子面前吹牛\", good:\"改善你矮穷挫的形象\",bad:\"会被识破\", weekend: true},\n\t{name:\"撸管\", good:\"避免缓冲区溢出\",bad:\"强撸灰飞烟灭\", weekend: true},\n\t{name:\"浏览成人网站\", good:\"重拾对生活的信心\",bad:\"你会心神不宁\", weekend: true},\n\t{name:\"命名变量\\\"%v\\\"\", good:\"\",bad:\"\"},\n\t{name:\"写超过%l行的方法\", good:\"你的代码组织的很好，长一点没关系\",bad:\"你的代码将混乱不堪，你自己都看不懂\"},\n\t{name:\"提交代码\", good:\"遇到冲突的几率是最低的\",bad:\"你遇到的一大堆冲突会让你觉得自己是不是时间穿越了\"},\n\t{name:\"代码复审\", good:\"发现重要问题的几率大大增加\",bad:\"你什么问题都发现不了，白白浪费时间\"},\n\t{name:\"开会\", good:\"写代码之余放松一下打个盹，有益健康\",bad:\"小心被扣屎盆子背黑锅\"},\n\t{name:\"打DOTA\", good:\"你将有如神助\",bad:\"你会被虐的很惨\", weekend: true},\n\t{name:\"晚上上线\", good:\"晚上是程序员精神最好的时候\",bad:\"你白天已经筋疲力尽了\"},\n\t{name:\"修复BUG\", good:\"你今天对BUG的嗅觉大大提高\",bad:\"新产生的BUG将比修复的更多\"},\n\t{name:\"设计评审\", good:\"设计评审会议将变成头脑风暴\",bad:\"人人筋疲力尽，评审就这么过了\"},\n\t{name:\"需求评审\", good:\"\",bad:\"\"},\n\t{name:\"上微博\", good:\"今天发生的事不能错过\",bad:\"今天的微博充满负能量\", weekend: true},\n\t{name:\"上AB站\", good:\"还需要理由吗？\",bad:\"满屏兄贵亮瞎你的眼\", weekend: true},\n\t{name:\"玩FlappyBird\", good:\"今天破纪录的几率很高\",bad:\"除非你想玩到把手机砸了\", weekend: true}\n];\n\nvar specials = [\n\t{date:20140214, type:'bad', name:'待在男（女）友身边', description:'脱团火葬场，入团保平安。'}\n];\n\nvar tools = [\"Eclipse写程序\", \"MSOffice写文档\", \"记事本写程序\", \"Windows8\", \"Linux\", \"MacOS\", \"IE\", \"Android设备\", \"iOS设备\"];\n\nvar varNames = [\"jieguo\", \"huodong\", \"pay\", \"expire\", \"zhangdan\", \"every\", \"free\", \"i1\", \"a\", \"virtual\", \"ad\", \"spider\", \"mima\", \"pass\", \"ui\"];\n\nvar drinks = [\"水\",\"茶\",\"红茶\",\"绿茶\",\"咖啡\",\"奶茶\",\"可乐\",\"鲜奶\",\"豆奶\",\"果汁\",\"果味汽水\",\"苏打水\",\"运动饮料\",\"酸奶\",\"酒\"];\n\nfunction is_someday() {\n\treturn today.getMonth() == 5 && today.getDate() == 4;\n}\n\nfunction getTodayString() {\n\treturn \"今天是\" + today.getFullYear() + \"年\" + (today.getMonth() + 1) + \"月\" + today.getDate() + \"日 星期\" + weeks[today.getDay()];\n}\n\nfunction star(num) {\n\tvar result = \"\";\n\tvar i = 0;\n\twhile (i < num) {\n\t\tresult += \"★\";\n\t\ti++;\n\t}\n\twhile(i < 5) {\n\t\tresult += \"☆\";\n\t\ti++;\n\t}\n\treturn result;\n} \n\n// 生成今日运势\nfunction pickTodaysLuck() {\n  var _activities = filter(activities);\n    \n\tvar numGood = random(iday, 98) % 3 + 2;\n\tvar numBad = random(iday, 87) % 3 + 2;\n\tvar eventArr = pickRandomActivity(_activities, numGood + numBad);\n\t\n\tvar specialSize = pickSpecials();\n\t\n\tfor (var i = 0; i < numGood; i++) {\n\t\taddToGood(eventArr[i]);\n\t}\n\t\n\tfor (var i = 0; i < numBad; i++) {\n\t\taddToBad(eventArr[numGood + i]);\n\t}\n}\n\n// 去掉一些不合今日的事件\nfunction filter(activities) {\n    var result = [];\n    \n    // 周末的话，只留下 weekend = true 的事件\n    if (isWeekend()) {\n        \n        for (var i = 0; i < activities.length; i++) {\n            if (activities[i].weekend) {\n                result.push(activities[i]);\n            }\n        }\n        \n        return result;\n    }\n    \n    return activities;\n}\n\nfunction isWeekend() {\n    return today.getDay() == 0 || today.getDay() == 6;\n}\n\n// 添加预定义事件\nfunction pickSpecials() {\n\tvar specialSize = [0,0];\n\t\n\tfor (var i = 0; i < specials.length; i++) {\n\t\tvar special = specials[i];\n\t\t\n\t\tif (iday == special.date) {\n\t\t\tif (special.type == 'good') {\n\t\t\t\tspecialSize[0]++;\n\t\t\t\taddToGood({name: special.name, good: special.description});\n\t\t\t} else {\n\t\t\t\tspecialSize[1]++;\n\t\t\t\taddToBad({name: special.name, bad: special.description});\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn specialSize;\n}\n\n// 从 activities 中随机挑选 size 个\nfunction pickRandomActivity(activities, size) {\n\tvar picked_events = pickRandom(activities, size);\n\t\n\tfor (var i = 0; i < picked_events.length; i++) {\n\t\tpicked_events[i] = parse(picked_events[i]);\n\t}\n\t\n\treturn picked_events;\n}\n\n// 从数组中随机挑选 size 个\nfunction pickRandom(array, size) {\n\tvar result = [];\n\t\n\tfor (var i = 0; i < array.length; i++) {\n\t\tresult.push(array[i]);\n\t}\n\t\n\tfor (var j = 0; j < array.length - size; j++) {\n\t\tvar index = random(iday, j) % result.length;\n\t\tresult.splice(index, 1);\n\t}\n\t\n\treturn result;\n}\n\n// 解析占位符并替换成随机内容\nfunction parse(event) {\n\tvar result = {name: event.name, good: event.good, bad: event.bad};  // clone\n\t\n\tif (result.name.indexOf('%v') != -1) {\n\t\tresult.name = result.name.replace('%v', varNames[random(iday, 12) % varNames.length]);\n\t}\n\t\n\tif (result.name.indexOf('%t') != -1) {\n\t\tresult.name = result.name.replace('%t', tools[random(iday, 11) % tools.length]);\n\t}\n\t\n\tif (result.name.indexOf('%l') != -1) {\n\t\tresult.name = result.name.replace('%l', (random(iday, 12) % 247 + 30).toString());\n\t}\n\t\n\treturn result;\n}\n\n// 添加到“宜”\nfunction addToGood(event) {\n\t$('.good .content ul').append('<li><div class=\"name\">' + event.name + '</div><div class=\"description\">' + event.good + '</div></li>');\n}\n\n// 添加到“不宜”\nfunction addToBad(event) {\n\t$('.bad .content ul').append('<li><div class=\"name\">' + event.name + '</div><div class=\"description\">' + event.bad + '</div></li>');\n}\n\n$(function(){\n\tif (is_someday()) {document.body.className = 'someday'};\n\t$('.date').html(getTodayString());\n\t$('.direction_value').html(directions[random(iday, 2) % directions.length]);\n\t$('.drink_value').html(pickRandom(drinks,2).join('，'));\n\t$('.goddes_value').html(star(random(iday, 6) % 5 + 1));\n\tpickTodaysLuck();\n});","site":{"data":{}},"excerpt":"","more":"//\n\n/*\n * 注意：本程序中的“随机”都是伪随机概念，以当前的天为种子。\n */\nfunction random(dayseed, indexseed) {\n\tvar n = dayseed % 11117;\n\tfor (var i = 0; i < 100 + indexseed; i++) {\n\t\tn = n * n;\n\t\tn = n % 11117;   // 11117 是个质数\n\t}\n\treturn n;\n}\n\nvar today = new Date();\nvar iday = today.getFullYear() * 10000 + (today.getMonth() + 1) * 100 + today.getDate();\n\nvar weeks = [\"日\",\"一\",\"二\",\"三\",\"四\",\"五\",\"六\"];\nvar directions = [\"北方\",\"东北方\",\"东方\",\"东南方\",\"南方\",\"西南方\",\"西方\",\"西北方\"];\nvar activities = [\n\t{name:\"写单元测试\", good:\"写单元测试将减少出错\",bad:\"写单元测试会降低你的开发效率\"},\n\t{name:\"洗澡\", good:\"你几天没洗澡了？\",bad:\"会把设计方面的灵感洗掉\", weekend: true},\n\t{name:\"锻炼一下身体\", good:\"\",bad:\"能量没消耗多少，吃得却更多\", weekend: true},\n\t{name:\"抽烟\", good:\"抽烟有利于提神，增加思维敏捷\",bad:\"除非你活够了，死得早点没关系\", weekend: true},\n\t{name:\"白天上线\", good:\"今天白天上线是安全的\",bad:\"可能导致灾难性后果\"},\n\t{name:\"重构\", good:\"代码质量得到提高\",bad:\"你很有可能会陷入泥潭\"},\n\t{name:\"使用%t\", good:\"你看起来更有品位\",bad:\"别人会觉得你在装逼\"},\n\t{name:\"跳槽\", good:\"该放手时就放手\",bad:\"鉴于当前的经济形势，你的下一份工作未必比现在强\"},\n\t{name:\"招人\", good:\"你面前这位有成为牛人的潜质\",bad:\"这人会写程序吗？\"},\n\t{name:\"面试\", good:\"面试官今天心情很好\",bad:\"面试官不爽，会拿你出气\"},\n\t{name:\"提交辞职申请\", good:\"公司找到了一个比你更能干更便宜的家伙，巴不得你赶快滚蛋\",bad:\"鉴于当前的经济形势，你的下一份工作未必比现在强\"},\n\t{name:\"申请加薪\", good:\"老板今天心情很好\",bad:\"公司正在考虑裁员\"},\n\t{name:\"晚上加班\", good:\"晚上是程序员精神最好的时候\",bad:\"\", weekend: true},\n\t{name:\"在妹子面前吹牛\", good:\"改善你矮穷挫的形象\",bad:\"会被识破\", weekend: true},\n\t{name:\"撸管\", good:\"避免缓冲区溢出\",bad:\"强撸灰飞烟灭\", weekend: true},\n\t{name:\"浏览成人网站\", good:\"重拾对生活的信心\",bad:\"你会心神不宁\", weekend: true},\n\t{name:\"命名变量\\\"%v\\\"\", good:\"\",bad:\"\"},\n\t{name:\"写超过%l行的方法\", good:\"你的代码组织的很好，长一点没关系\",bad:\"你的代码将混乱不堪，你自己都看不懂\"},\n\t{name:\"提交代码\", good:\"遇到冲突的几率是最低的\",bad:\"你遇到的一大堆冲突会让你觉得自己是不是时间穿越了\"},\n\t{name:\"代码复审\", good:\"发现重要问题的几率大大增加\",bad:\"你什么问题都发现不了，白白浪费时间\"},\n\t{name:\"开会\", good:\"写代码之余放松一下打个盹，有益健康\",bad:\"小心被扣屎盆子背黑锅\"},\n\t{name:\"打DOTA\", good:\"你将有如神助\",bad:\"你会被虐的很惨\", weekend: true},\n\t{name:\"晚上上线\", good:\"晚上是程序员精神最好的时候\",bad:\"你白天已经筋疲力尽了\"},\n\t{name:\"修复BUG\", good:\"你今天对BUG的嗅觉大大提高\",bad:\"新产生的BUG将比修复的更多\"},\n\t{name:\"设计评审\", good:\"设计评审会议将变成头脑风暴\",bad:\"人人筋疲力尽，评审就这么过了\"},\n\t{name:\"需求评审\", good:\"\",bad:\"\"},\n\t{name:\"上微博\", good:\"今天发生的事不能错过\",bad:\"今天的微博充满负能量\", weekend: true},\n\t{name:\"上AB站\", good:\"还需要理由吗？\",bad:\"满屏兄贵亮瞎你的眼\", weekend: true},\n\t{name:\"玩FlappyBird\", good:\"今天破纪录的几率很高\",bad:\"除非你想玩到把手机砸了\", weekend: true}\n];\n\nvar specials = [\n\t{date:20140214, type:'bad', name:'待在男（女）友身边', description:'脱团火葬场，入团保平安。'}\n];\n\nvar tools = [\"Eclipse写程序\", \"MSOffice写文档\", \"记事本写程序\", \"Windows8\", \"Linux\", \"MacOS\", \"IE\", \"Android设备\", \"iOS设备\"];\n\nvar varNames = [\"jieguo\", \"huodong\", \"pay\", \"expire\", \"zhangdan\", \"every\", \"free\", \"i1\", \"a\", \"virtual\", \"ad\", \"spider\", \"mima\", \"pass\", \"ui\"];\n\nvar drinks = [\"水\",\"茶\",\"红茶\",\"绿茶\",\"咖啡\",\"奶茶\",\"可乐\",\"鲜奶\",\"豆奶\",\"果汁\",\"果味汽水\",\"苏打水\",\"运动饮料\",\"酸奶\",\"酒\"];\n\nfunction is_someday() {\n\treturn today.getMonth() == 5 && today.getDate() == 4;\n}\n\nfunction getTodayString() {\n\treturn \"今天是\" + today.getFullYear() + \"年\" + (today.getMonth() + 1) + \"月\" + today.getDate() + \"日 星期\" + weeks[today.getDay()];\n}\n\nfunction star(num) {\n\tvar result = \"\";\n\tvar i = 0;\n\twhile (i < num) {\n\t\tresult += \"★\";\n\t\ti++;\n\t}\n\twhile(i < 5) {\n\t\tresult += \"☆\";\n\t\ti++;\n\t}\n\treturn result;\n} \n\n// 生成今日运势\nfunction pickTodaysLuck() {\n  var _activities = filter(activities);\n    \n\tvar numGood = random(iday, 98) % 3 + 2;\n\tvar numBad = random(iday, 87) % 3 + 2;\n\tvar eventArr = pickRandomActivity(_activities, numGood + numBad);\n\t\n\tvar specialSize = pickSpecials();\n\t\n\tfor (var i = 0; i < numGood; i++) {\n\t\taddToGood(eventArr[i]);\n\t}\n\t\n\tfor (var i = 0; i < numBad; i++) {\n\t\taddToBad(eventArr[numGood + i]);\n\t}\n}\n\n// 去掉一些不合今日的事件\nfunction filter(activities) {\n    var result = [];\n    \n    // 周末的话，只留下 weekend = true 的事件\n    if (isWeekend()) {\n        \n        for (var i = 0; i < activities.length; i++) {\n            if (activities[i].weekend) {\n                result.push(activities[i]);\n            }\n        }\n        \n        return result;\n    }\n    \n    return activities;\n}\n\nfunction isWeekend() {\n    return today.getDay() == 0 || today.getDay() == 6;\n}\n\n// 添加预定义事件\nfunction pickSpecials() {\n\tvar specialSize = [0,0];\n\t\n\tfor (var i = 0; i < specials.length; i++) {\n\t\tvar special = specials[i];\n\t\t\n\t\tif (iday == special.date) {\n\t\t\tif (special.type == 'good') {\n\t\t\t\tspecialSize[0]++;\n\t\t\t\taddToGood({name: special.name, good: special.description});\n\t\t\t} else {\n\t\t\t\tspecialSize[1]++;\n\t\t\t\taddToBad({name: special.name, bad: special.description});\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn specialSize;\n}\n\n// 从 activities 中随机挑选 size 个\nfunction pickRandomActivity(activities, size) {\n\tvar picked_events = pickRandom(activities, size);\n\t\n\tfor (var i = 0; i < picked_events.length; i++) {\n\t\tpicked_events[i] = parse(picked_events[i]);\n\t}\n\t\n\treturn picked_events;\n}\n\n// 从数组中随机挑选 size 个\nfunction pickRandom(array, size) {\n\tvar result = [];\n\t\n\tfor (var i = 0; i < array.length; i++) {\n\t\tresult.push(array[i]);\n\t}\n\t\n\tfor (var j = 0; j < array.length - size; j++) {\n\t\tvar index = random(iday, j) % result.length;\n\t\tresult.splice(index, 1);\n\t}\n\t\n\treturn result;\n}\n\n// 解析占位符并替换成随机内容\nfunction parse(event) {\n\tvar result = {name: event.name, good: event.good, bad: event.bad};  // clone\n\t\n\tif (result.name.indexOf('%v') != -1) {\n\t\tresult.name = result.name.replace('%v', varNames[random(iday, 12) % varNames.length]);\n\t}\n\t\n\tif (result.name.indexOf('%t') != -1) {\n\t\tresult.name = result.name.replace('%t', tools[random(iday, 11) % tools.length]);\n\t}\n\t\n\tif (result.name.indexOf('%l') != -1) {\n\t\tresult.name = result.name.replace('%l', (random(iday, 12) % 247 + 30).toString());\n\t}\n\t\n\treturn result;\n}\n\n// 添加到“宜”\nfunction addToGood(event) {\n\t$('.good .content ul').append('<li><div class=\"name\">' + event.name + '</div><div class=\"description\">' + event.good + '</div></li>');\n}\n\n// 添加到“不宜”\nfunction addToBad(event) {\n\t$('.bad .content ul').append('<li><div class=\"name\">' + event.name + '</div><div class=\"description\">' + event.bad + '</div></li>');\n}\n\n$(function(){\n\tif (is_someday()) {document.body.className = 'someday'};\n\t$('.date').html(getTodayString());\n\t$('.direction_value').html(directions[random(iday, 2) % directions.length]);\n\t$('.drink_value').html(pickRandom(drinks,2).join('，'));\n\t$('.goddes_value').html(star(random(iday, 6) % 5 + 1));\n\tpickTodaysLuck();\n});"},{"_content":"<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\">\n\t\t<title>程序员老黄历</title>\n\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"css.css\" />\n\t\t<script src=\"https://cdn.bootcss.com/jquery/1.10.2/jquery.min.js\"></script>\n\t\t<script type=\"text/javascript\" src=\"js.js\"></script>\n\t</head>\n\t<body>\n\t\t<div class=\"container\">\n\t\t\t<div class=\"title\">\n\t\t\t\t程序员老黄历<sup>beta</sup>\n\t\t\t</div>\n\t\t\t<div class=\"date\">\n\t\t\t</div>\n\t\t\t<div class=\"good\">\n\t\t\t\t<div class=\"title\">\n\t\t\t\t\t<table>\n\t\t\t\t\t\t<tr><td>宜</td></tr>\n\t\t\t\t\t</table>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"content\">\n\t\t\t\t\t<ul></ul>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"clear\"></div>\n\t\t\t</div>\n\t\t\t<div class=\"split\"></div>\n\t\t\t<div class=\"bad\">\n\t\t\t\t<div class=\"title\">\n\t\t\t\t\t<table>\n\t\t\t\t\t\t<tr><td>不宜</td></tr>\n\t\t\t\t\t</table>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"content\">\n\t\t\t\t\t<ul></ul>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"clear\"></div>\n\t\t\t</div>\n\t\t\t<div class=\"split\"></div>\n\t\t\t<div class=\"line-tip\">\n\t\t\t\t<strong>座位朝向：</strong>面向<span class=\"direction_value\"></span>写程序，BUG 最少。\n\t\t\t</div>\n\t\t\t<div class=\"line-tip\">\n\t\t\t\t<strong>今日宜饮：</strong><span class=\"drink_value\"></span>\n\t\t\t</div>\n\t\t\t<div class=\"line-tip\">\n\t\t\t\t<strong>女神亲近指数：</strong><span class=\"goddes_value\"></span>\n\t\t\t</div>\n\t\t\t<div class=\"adlink\">\n\t\t\t\t<a href=\"cxy-qiuqian.html\" target=\"dev_qiu_qian\">想求签？</a>\n\t\t\t</div>\n\t\t\t\n\t\t\t<div class=\"comment\">\n\t\t\t\t<ul>\n\t\t\t\t\t<li>本老黄历尚处于beta阶段，作者随时会修改，所以如果上午看到的内容跟下午不同，请勿惊慌；</li>\n\t\t\t\t\t<li>本老黄历仅面向程序员；</li>\n\t\t\t\t\t<li>本老黄历内容是程序生成的，因为只有这样程序员才会信。</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</div>\n\t</body>\n</html>","source":"lhl/index.html","raw":"<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\">\n\t\t<title>程序员老黄历</title>\n\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"css.css\" />\n\t\t<script src=\"https://cdn.bootcss.com/jquery/1.10.2/jquery.min.js\"></script>\n\t\t<script type=\"text/javascript\" src=\"js.js\"></script>\n\t</head>\n\t<body>\n\t\t<div class=\"container\">\n\t\t\t<div class=\"title\">\n\t\t\t\t程序员老黄历<sup>beta</sup>\n\t\t\t</div>\n\t\t\t<div class=\"date\">\n\t\t\t</div>\n\t\t\t<div class=\"good\">\n\t\t\t\t<div class=\"title\">\n\t\t\t\t\t<table>\n\t\t\t\t\t\t<tr><td>宜</td></tr>\n\t\t\t\t\t</table>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"content\">\n\t\t\t\t\t<ul></ul>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"clear\"></div>\n\t\t\t</div>\n\t\t\t<div class=\"split\"></div>\n\t\t\t<div class=\"bad\">\n\t\t\t\t<div class=\"title\">\n\t\t\t\t\t<table>\n\t\t\t\t\t\t<tr><td>不宜</td></tr>\n\t\t\t\t\t</table>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"content\">\n\t\t\t\t\t<ul></ul>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"clear\"></div>\n\t\t\t</div>\n\t\t\t<div class=\"split\"></div>\n\t\t\t<div class=\"line-tip\">\n\t\t\t\t<strong>座位朝向：</strong>面向<span class=\"direction_value\"></span>写程序，BUG 最少。\n\t\t\t</div>\n\t\t\t<div class=\"line-tip\">\n\t\t\t\t<strong>今日宜饮：</strong><span class=\"drink_value\"></span>\n\t\t\t</div>\n\t\t\t<div class=\"line-tip\">\n\t\t\t\t<strong>女神亲近指数：</strong><span class=\"goddes_value\"></span>\n\t\t\t</div>\n\t\t\t<div class=\"adlink\">\n\t\t\t\t<a href=\"cxy-qiuqian.html\" target=\"dev_qiu_qian\">想求签？</a>\n\t\t\t</div>\n\t\t\t\n\t\t\t<div class=\"comment\">\n\t\t\t\t<ul>\n\t\t\t\t\t<li>本老黄历尚处于beta阶段，作者随时会修改，所以如果上午看到的内容跟下午不同，请勿惊慌；</li>\n\t\t\t\t\t<li>本老黄历仅面向程序员；</li>\n\t\t\t\t\t<li>本老黄历内容是程序生成的，因为只有这样程序员才会信。</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</div>\n\t</body>\n</html>","date":"2017-07-28T12:26:07.241Z","updated":"2017-07-28T12:25:41.201Z","path":"lhl/index.html","_id":"cj5ntimjh0000pk9486wu4w63","title":"","comments":1,"layout":"page","content":"<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\">\n\t\t<title>程序员老黄历</title>\n\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"css.css\">\n\t\t<script src=\"https://cdn.bootcss.com/jquery/1.10.2/jquery.min.js\"></script>\n\t\t<script type=\"text/javascript\" src=\"js.js\"></script>\n\t</head>\n\t<body>\n\t\t<div class=\"container\">\n\t\t\t<div class=\"title\">\n\t\t\t\t程序员老黄历<sup>beta</sup>\n\t\t\t</div>\n\t\t\t<div class=\"date\">\n\t\t\t</div>\n\t\t\t<div class=\"good\">\n\t\t\t\t<div class=\"title\">\n\t\t\t\t\t<table>\n\t\t\t\t\t\t<tr><td>宜</td></tr>\n\t\t\t\t\t</table>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"content\">\n\t\t\t\t\t<ul></ul>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"clear\"></div>\n\t\t\t</div>\n\t\t\t<div class=\"split\"></div>\n\t\t\t<div class=\"bad\">\n\t\t\t\t<div class=\"title\">\n\t\t\t\t\t<table>\n\t\t\t\t\t\t<tr><td>不宜</td></tr>\n\t\t\t\t\t</table>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"content\">\n\t\t\t\t\t<ul></ul>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"clear\"></div>\n\t\t\t</div>\n\t\t\t<div class=\"split\"></div>\n\t\t\t<div class=\"line-tip\">\n\t\t\t\t<strong>座位朝向：</strong>面向<span class=\"direction_value\"></span>写程序，BUG 最少。\n\t\t\t</div>\n\t\t\t<div class=\"line-tip\">\n\t\t\t\t<strong>今日宜饮：</strong><span class=\"drink_value\"></span>\n\t\t\t</div>\n\t\t\t<div class=\"line-tip\">\n\t\t\t\t<strong>女神亲近指数：</strong><span class=\"goddes_value\"></span>\n\t\t\t</div>\n\t\t\t<div class=\"adlink\">\n\t\t\t\t<a href=\"cxy-qiuqian.html\" target=\"dev_qiu_qian\">想求签？</a>\n\t\t\t</div>\n\t\t\t\n\t\t\t<div class=\"comment\">\n\t\t\t\t<ul>\n\t\t\t\t\t<li>本老黄历尚处于beta阶段，作者随时会修改，所以如果上午看到的内容跟下午不同，请勿惊慌；</li>\n\t\t\t\t\t<li>本老黄历仅面向程序员；</li>\n\t\t\t\t\t<li>本老黄历内容是程序生成的，因为只有这样程序员才会信。</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</div>\n\t</body>\n</html>","site":{"data":{}},"excerpt":"","more":"<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\">\n\t\t<title>程序员老黄历</title>\n\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"css.css\">\n\t\t<script src=\"https://cdn.bootcss.com/jquery/1.10.2/jquery.min.js\"></script>\n\t\t<script type=\"text/javascript\" src=\"js.js\"></script>\n\t</head>\n\t<body>\n\t\t<div class=\"container\">\n\t\t\t<div class=\"title\">\n\t\t\t\t程序员老黄历<sup>beta</sup>\n\t\t\t</div>\n\t\t\t<div class=\"date\">\n\t\t\t</div>\n\t\t\t<div class=\"good\">\n\t\t\t\t<div class=\"title\">\n\t\t\t\t\t<table>\n\t\t\t\t\t\t<tr><td>宜</td></tr>\n\t\t\t\t\t</table>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"content\">\n\t\t\t\t\t<ul></ul>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"clear\"></div>\n\t\t\t</div>\n\t\t\t<div class=\"split\"></div>\n\t\t\t<div class=\"bad\">\n\t\t\t\t<div class=\"title\">\n\t\t\t\t\t<table>\n\t\t\t\t\t\t<tr><td>不宜</td></tr>\n\t\t\t\t\t</table>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"content\">\n\t\t\t\t\t<ul></ul>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"clear\"></div>\n\t\t\t</div>\n\t\t\t<div class=\"split\"></div>\n\t\t\t<div class=\"line-tip\">\n\t\t\t\t<strong>座位朝向：</strong>面向<span class=\"direction_value\"></span>写程序，BUG 最少。\n\t\t\t</div>\n\t\t\t<div class=\"line-tip\">\n\t\t\t\t<strong>今日宜饮：</strong><span class=\"drink_value\"></span>\n\t\t\t</div>\n\t\t\t<div class=\"line-tip\">\n\t\t\t\t<strong>女神亲近指数：</strong><span class=\"goddes_value\"></span>\n\t\t\t</div>\n\t\t\t<div class=\"adlink\">\n\t\t\t\t<a href=\"cxy-qiuqian.html\" target=\"dev_qiu_qian\">想求签？</a>\n\t\t\t</div>\n\t\t\t\n\t\t\t<div class=\"comment\">\n\t\t\t\t<ul>\n\t\t\t\t\t<li>本老黄历尚处于beta阶段，作者随时会修改，所以如果上午看到的内容跟下午不同，请勿惊慌；</li>\n\t\t\t\t\t<li>本老黄历仅面向程序员；</li>\n\t\t\t\t\t<li>本老黄历内容是程序生成的，因为只有这样程序员才会信。</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</div>\n\t</body>\n</html>"},{"title":"IT人员老黄历","date":"2017-07-27T16:00:00.000Z","_content":"","source":"lhl/reademe.md","raw":"---\ntitle: IT人员老黄历\ndate: 2017-7-28\n---\n","updated":"2017-07-28T12:43:48.257Z","path":"lhl/reademe.html","comments":1,"layout":"page","_id":"cj5nvimdb00009k94yulnwb8w","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Apache配置虚拟主机的三种方式","abbrlink":"667f3f35","date":"2016-06-23T08:02:32.000Z","_content":"\n# Apache 配置虚拟主机三种方式\n\n## 一、基于IP\n> 1. 假设服务器有个IP地址为192.168.1.10，使用ifconfig在同一个网络接口eth0上绑定3个IP：\n\n```\n[root@localhost root]# ifconfig eth0:1 192.168.1.11\n[root@localhost root]# ifconfig eth0:2 192.168.1.12\n[root@localhost root]# ifconfig eth0:3 192.168.1.13\n```\n <!-- more -->\n\n> 2. 修改hosts文件，添加三个域名与之一一对应：\n\n```\n192.168.1.11   www.test1.com\n192.168.1.12   www.test2.com\n192.168.1.13   www.test3.com\n```\n> 3. 建立虚拟主机存放网页的根目录，如在/www目录下建立test1、test2、test3文件夹，其中分别存放1.html、2.html、3.html\n\n```\n/www/test1/1.html\n/www/test2/2.html\n/www/test3/3.html\n```\n \n> 4. 在httpd.conf中将附加配置文件httpd-vhosts.conf包含进来，接着在httpd-vhosts.conf中写入如下配置：\n\n```\n<VirtualHost 192.168.1.11:80>\n\tServerName www.test1.com\n    DocumentRoot /www/test1/\n\t<Directory \"/www/test1\">\n\t\toptions Indexes FollowSymLinks\n\t\tAllowOverride None\n\t\tOrder allow,deny\n\t\tAllow From All\n\t</Directory>\n</VirtualHost>\n<VirtualHost 192.168.1.12:80>\n\tServerName www.test1.com\n\tDocumentRoot /www/test2/\n\t<Directory \"/www/test2\">\n\t\tOptions Indexes FollowSymLinks\n\t\tAllowOverride None\n\t\tOrder allow,deny\n\t\tAllow From All\n\t\t</Directory>\n</VirtualHost>\n<VirtualHost 192.168.1.13:80>\n\tServerName www.test1.com\n\tDocumentRoot /www/test3/\n\t<Directory \"/www/test3\">\n\t\tOptions Indexes FollowSymLinks\n\t\tAllowOverride None\n\t\tOrder allow,deny\n\t\tAllow From All\n\t</Directory>\n</VirtualHost>\n```\n\n> 5. 大功告成，测试下每个虚拟主机，分别访问www.test1.com、www.test2.com、www.test3.com\n\n\n## 二、基于主机名\n> 1. 设置域名映射同一个IP，修改hosts：\n\n```\n192.168.1.10  www.test1.com\n192.168.1.10  www.test2.com\n192.168.1.10  www.test3.com\n```\n> 2. 跟上面一样，建立虚拟主机存放网页的根目录\n\n```\n/www/test1/1.html\n/www/test2/2.html\n/www/test3/3.html\n```\n> 3. 在httpd.conf中将附加配置文件httpd-vhosts.conf包含进来，接着在httpd-vhosts.conf中写入如下配置：\n>　为了使用基于域名的虚拟主机，必须指定服务器IP地址（和可能的端口）来使主机接受请求。可以用NameVirtualHost指令来进行配置。 如果服务器上所有的IP地址都会用到， 你可以用*作为NameVirtualHost的参数。在NameVirtualHost指令中指明IP地址并不会使服务器自动侦听那个IP地址。 这里设定的IP地址必须对应服务器上的一个网络接口。\n>　下一步就是为你建立的每个虚拟主机设定<VirtualHost>配置块，<VirtualHost>的参数与NameVirtualHost指令的参数是一样的。每个<VirtualHost>定义块中，至少都会有一个ServerName指令来指定伺服哪个主机和一个DocumentRoot指令来说明这个主机的内容存在于文件系统的什么地方。\n>　如果在现有的web服务器上增加虚拟主机，必须也为现存的主机建造一个<VirtualHost>定义块。其中ServerName和DocumentRoot所包含的内容应该与全局的保持一致，且要放在配置文件的最前面，扮演默认主机的角色。\n\n```\nNameVirtualHost *:80\n<VirtualHost *:80>  \n\tServerName *\n\tDocumentRoot /www/ \n</VirtualHost>\n#虚拟主机1\n<VirtualHost *:80>\n    ServerName www.test1.com\n    DocumentRoot /www/test1/\n    <Directory \"/www/test1\">\n\t\tOptions Indexes FollowSymLinks\n\t\tAllowOverride None\n\t\tOrder allow,deny\n\t\tAllow from all\n\t</Directory>\n</VirtualHost> \n#虚拟主机2\n<VirtualHost *:80>\n    ServerName www.test2.com\n    DocumentRoot /www/test2/\n\t<Directory \"/www/test2\">\n\t\tOptions Indexes FollowSymLinks\n\t\tAllowOverride None\n\t\tOrder allow,deny\n\t\tAllow from all\n　　</Directory>\n</VirtualHost>\n#虚拟主机3\n<VirtualHost *:80>\n\tServerName www.test3.com\n\tDocumentRoot /www/test3/\n\t<Directory \"/www/test3\">\n\t\tOptions Indexes FollowSymLinks\n\t\tAllowOverride None\n\t\tOrder allow,deny\n\t\tAllow from all\n　　</Directory>\n</VirtualHost>\n```\n\t\n> 4. 大功告成，测试下每个虚拟主机，分别访问www.test1.com、www.test2.com、www.test3.com\n\n## 三、基于端口\n> 1.  修改配置文件\n>　　将原来的\n\t\tListen 80\n>      改为\n\t\tListen 80\n\t\tListen 8080\n\n\n> 2. 更改虚拟主机设置\n\n```\n<VirtualHost 192.168.1.10:80>\n\tDocumentRoot /var/www/test1/\n\tServerName www.test1.com\n</VirtualHost>\n#虚拟主机2\n<VirtualHost 192.168.1.10:8080>\n\tDocumentRoot /var/www/test2\n\tServerName www.test2.com\n</VirtualHost>\n```\n \n### 验证即可","source":"_posts/2016-06-22-Apache配置虚拟主机的三种方式.md","raw":"---\ntitle: Apache配置虚拟主机的三种方式\ncategories: 实践与总结\ntag: web\nabbrlink: 667f3f35\ndate: 2016-06-23 16:02:32\n---\n\n# Apache 配置虚拟主机三种方式\n\n## 一、基于IP\n> 1. 假设服务器有个IP地址为192.168.1.10，使用ifconfig在同一个网络接口eth0上绑定3个IP：\n\n```\n[root@localhost root]# ifconfig eth0:1 192.168.1.11\n[root@localhost root]# ifconfig eth0:2 192.168.1.12\n[root@localhost root]# ifconfig eth0:3 192.168.1.13\n```\n <!-- more -->\n\n> 2. 修改hosts文件，添加三个域名与之一一对应：\n\n```\n192.168.1.11   www.test1.com\n192.168.1.12   www.test2.com\n192.168.1.13   www.test3.com\n```\n> 3. 建立虚拟主机存放网页的根目录，如在/www目录下建立test1、test2、test3文件夹，其中分别存放1.html、2.html、3.html\n\n```\n/www/test1/1.html\n/www/test2/2.html\n/www/test3/3.html\n```\n \n> 4. 在httpd.conf中将附加配置文件httpd-vhosts.conf包含进来，接着在httpd-vhosts.conf中写入如下配置：\n\n```\n<VirtualHost 192.168.1.11:80>\n\tServerName www.test1.com\n    DocumentRoot /www/test1/\n\t<Directory \"/www/test1\">\n\t\toptions Indexes FollowSymLinks\n\t\tAllowOverride None\n\t\tOrder allow,deny\n\t\tAllow From All\n\t</Directory>\n</VirtualHost>\n<VirtualHost 192.168.1.12:80>\n\tServerName www.test1.com\n\tDocumentRoot /www/test2/\n\t<Directory \"/www/test2\">\n\t\tOptions Indexes FollowSymLinks\n\t\tAllowOverride None\n\t\tOrder allow,deny\n\t\tAllow From All\n\t\t</Directory>\n</VirtualHost>\n<VirtualHost 192.168.1.13:80>\n\tServerName www.test1.com\n\tDocumentRoot /www/test3/\n\t<Directory \"/www/test3\">\n\t\tOptions Indexes FollowSymLinks\n\t\tAllowOverride None\n\t\tOrder allow,deny\n\t\tAllow From All\n\t</Directory>\n</VirtualHost>\n```\n\n> 5. 大功告成，测试下每个虚拟主机，分别访问www.test1.com、www.test2.com、www.test3.com\n\n\n## 二、基于主机名\n> 1. 设置域名映射同一个IP，修改hosts：\n\n```\n192.168.1.10  www.test1.com\n192.168.1.10  www.test2.com\n192.168.1.10  www.test3.com\n```\n> 2. 跟上面一样，建立虚拟主机存放网页的根目录\n\n```\n/www/test1/1.html\n/www/test2/2.html\n/www/test3/3.html\n```\n> 3. 在httpd.conf中将附加配置文件httpd-vhosts.conf包含进来，接着在httpd-vhosts.conf中写入如下配置：\n>　为了使用基于域名的虚拟主机，必须指定服务器IP地址（和可能的端口）来使主机接受请求。可以用NameVirtualHost指令来进行配置。 如果服务器上所有的IP地址都会用到， 你可以用*作为NameVirtualHost的参数。在NameVirtualHost指令中指明IP地址并不会使服务器自动侦听那个IP地址。 这里设定的IP地址必须对应服务器上的一个网络接口。\n>　下一步就是为你建立的每个虚拟主机设定<VirtualHost>配置块，<VirtualHost>的参数与NameVirtualHost指令的参数是一样的。每个<VirtualHost>定义块中，至少都会有一个ServerName指令来指定伺服哪个主机和一个DocumentRoot指令来说明这个主机的内容存在于文件系统的什么地方。\n>　如果在现有的web服务器上增加虚拟主机，必须也为现存的主机建造一个<VirtualHost>定义块。其中ServerName和DocumentRoot所包含的内容应该与全局的保持一致，且要放在配置文件的最前面，扮演默认主机的角色。\n\n```\nNameVirtualHost *:80\n<VirtualHost *:80>  \n\tServerName *\n\tDocumentRoot /www/ \n</VirtualHost>\n#虚拟主机1\n<VirtualHost *:80>\n    ServerName www.test1.com\n    DocumentRoot /www/test1/\n    <Directory \"/www/test1\">\n\t\tOptions Indexes FollowSymLinks\n\t\tAllowOverride None\n\t\tOrder allow,deny\n\t\tAllow from all\n\t</Directory>\n</VirtualHost> \n#虚拟主机2\n<VirtualHost *:80>\n    ServerName www.test2.com\n    DocumentRoot /www/test2/\n\t<Directory \"/www/test2\">\n\t\tOptions Indexes FollowSymLinks\n\t\tAllowOverride None\n\t\tOrder allow,deny\n\t\tAllow from all\n　　</Directory>\n</VirtualHost>\n#虚拟主机3\n<VirtualHost *:80>\n\tServerName www.test3.com\n\tDocumentRoot /www/test3/\n\t<Directory \"/www/test3\">\n\t\tOptions Indexes FollowSymLinks\n\t\tAllowOverride None\n\t\tOrder allow,deny\n\t\tAllow from all\n　　</Directory>\n</VirtualHost>\n```\n\t\n> 4. 大功告成，测试下每个虚拟主机，分别访问www.test1.com、www.test2.com、www.test3.com\n\n## 三、基于端口\n> 1.  修改配置文件\n>　　将原来的\n\t\tListen 80\n>      改为\n\t\tListen 80\n\t\tListen 8080\n\n\n> 2. 更改虚拟主机设置\n\n```\n<VirtualHost 192.168.1.10:80>\n\tDocumentRoot /var/www/test1/\n\tServerName www.test1.com\n</VirtualHost>\n#虚拟主机2\n<VirtualHost 192.168.1.10:8080>\n\tDocumentRoot /var/www/test2\n\tServerName www.test2.com\n</VirtualHost>\n```\n \n### 验证即可","slug":"2016-06-22-Apache配置虚拟主机的三种方式","published":1,"updated":"2017-02-14T13:42:45.392Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5mkehpq0001ao94ma0vdpxj","content":"<h1 id=\"Apache-配置虚拟主机三种方式\"><a href=\"#Apache-配置虚拟主机三种方式\" class=\"headerlink\" title=\"Apache 配置虚拟主机三种方式\"></a>Apache 配置虚拟主机三种方式</h1><h2 id=\"一、基于IP\"><a href=\"#一、基于IP\" class=\"headerlink\" title=\"一、基于IP\"></a>一、基于IP</h2><blockquote>\n<ol>\n<li>假设服务器有个IP地址为192.168.1.10，使用ifconfig在同一个网络接口eth0上绑定3个IP：</li>\n</ol>\n</blockquote>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-attr\">[root@localhost root]</span># <span class=\"selector-tag\">ifconfig</span> <span class=\"selector-tag\">eth0</span><span class=\"selector-pseudo\">:1</span> 192<span class=\"selector-class\">.168</span><span class=\"selector-class\">.1</span><span class=\"selector-class\">.11</span></div><div class=\"line\"><span class=\"selector-attr\">[root@localhost root]</span># <span class=\"selector-tag\">ifconfig</span> <span class=\"selector-tag\">eth0</span><span class=\"selector-pseudo\">:2</span> 192<span class=\"selector-class\">.168</span><span class=\"selector-class\">.1</span><span class=\"selector-class\">.12</span></div><div class=\"line\"><span class=\"selector-attr\">[root@localhost root]</span># <span class=\"selector-tag\">ifconfig</span> <span class=\"selector-tag\">eth0</span><span class=\"selector-pseudo\">:3</span> 192<span class=\"selector-class\">.168</span><span class=\"selector-class\">.1</span><span class=\"selector-class\">.13</span></div></pre></td></tr></table></figure>\n <a id=\"more\"></a>\n<blockquote>\n<ol>\n<li>修改hosts文件，添加三个域名与之一一对应：</li>\n</ol>\n</blockquote>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">192<span class=\"selector-class\">.168</span><span class=\"selector-class\">.1</span><span class=\"selector-class\">.11</span>   <span class=\"selector-tag\">www</span><span class=\"selector-class\">.test1</span><span class=\"selector-class\">.com</span></div><div class=\"line\">192<span class=\"selector-class\">.168</span><span class=\"selector-class\">.1</span><span class=\"selector-class\">.12</span>   <span class=\"selector-tag\">www</span><span class=\"selector-class\">.test2</span><span class=\"selector-class\">.com</span></div><div class=\"line\">192<span class=\"selector-class\">.168</span><span class=\"selector-class\">.1</span><span class=\"selector-class\">.13</span>   <span class=\"selector-tag\">www</span><span class=\"selector-class\">.test3</span><span class=\"selector-class\">.com</span></div></pre></td></tr></table></figure>\n<blockquote>\n<ol>\n<li>建立虚拟主机存放网页的根目录，如在/www目录下建立test1、test2、test3文件夹，其中分别存放1.html、2.html、3.html</li>\n</ol>\n</blockquote>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">/www/test1/<span class=\"number\">1</span><span class=\"selector-class\">.html</span></div><div class=\"line\">/www/test2/<span class=\"number\">2</span><span class=\"selector-class\">.html</span></div><div class=\"line\">/www/test3/<span class=\"number\">3</span>.html</div></pre></td></tr></table></figure>\n<blockquote>\n<ol>\n<li>在httpd.conf中将附加配置文件httpd-vhosts.conf包含进来，接着在httpd-vhosts.conf中写入如下配置：</li>\n</ol>\n</blockquote>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"section\">&lt;VirtualHost 192.168.1.11:80&gt;</span></div><div class=\"line\">\t<span class=\"attribute\"><span class=\"nomarkup\">ServerName</span></span> www.test1.com</div><div class=\"line\">    <span class=\"attribute\"><span class=\"nomarkup\">DocumentRoot</span></span> /www/test1/</div><div class=\"line\">\t<span class=\"section\">&lt;Directory \"/www/test1\"&gt;</span></div><div class=\"line\">\t\t<span class=\"attribute\"><span class=\"nomarkup\">options</span></span> Indexes FollowSymLinks</div><div class=\"line\">\t\t<span class=\"attribute\">AllowOverride</span> None</div><div class=\"line\">\t\t<span class=\"attribute\"><span class=\"nomarkup\">Order</span></span> allow,deny</div><div class=\"line\">\t\t<span class=\"attribute\"><span class=\"nomarkup\">Allow</span></span> From <span class=\"literal\">All</span></div><div class=\"line\">\t<span class=\"section\">&lt;/Directory&gt;</span></div><div class=\"line\"><span class=\"section\">&lt;/VirtualHost&gt;</span></div><div class=\"line\"><span class=\"section\">&lt;VirtualHost 192.168.1.12:80&gt;</span></div><div class=\"line\">\t<span class=\"attribute\"><span class=\"nomarkup\">ServerName</span></span> www.test1.com</div><div class=\"line\">\t<span class=\"attribute\"><span class=\"nomarkup\">DocumentRoot</span></span> /www/test2/</div><div class=\"line\">\t<span class=\"section\">&lt;Directory \"/www/test2\"&gt;</span></div><div class=\"line\">\t\t<span class=\"attribute\"><span class=\"nomarkup\">Options</span></span> Indexes FollowSymLinks</div><div class=\"line\">\t\t<span class=\"attribute\">AllowOverride</span> None</div><div class=\"line\">\t\t<span class=\"attribute\"><span class=\"nomarkup\">Order</span></span> allow,deny</div><div class=\"line\">\t\t<span class=\"attribute\"><span class=\"nomarkup\">Allow</span></span> From <span class=\"literal\">All</span></div><div class=\"line\">\t\t<span class=\"section\">&lt;/Directory&gt;</span></div><div class=\"line\"><span class=\"section\">&lt;/VirtualHost&gt;</span></div><div class=\"line\"><span class=\"section\">&lt;VirtualHost 192.168.1.13:80&gt;</span></div><div class=\"line\">\t<span class=\"attribute\"><span class=\"nomarkup\">ServerName</span></span> www.test1.com</div><div class=\"line\">\t<span class=\"attribute\"><span class=\"nomarkup\">DocumentRoot</span></span> /www/test3/</div><div class=\"line\">\t<span class=\"section\">&lt;Directory \"/www/test3\"&gt;</span></div><div class=\"line\">\t\t<span class=\"attribute\"><span class=\"nomarkup\">Options</span></span> Indexes FollowSymLinks</div><div class=\"line\">\t\t<span class=\"attribute\">AllowOverride</span> None</div><div class=\"line\">\t\t<span class=\"attribute\"><span class=\"nomarkup\">Order</span></span> allow,deny</div><div class=\"line\">\t\t<span class=\"attribute\"><span class=\"nomarkup\">Allow</span></span> From <span class=\"literal\">All</span></div><div class=\"line\">\t<span class=\"section\">&lt;/Directory&gt;</span></div><div class=\"line\"><span class=\"section\">&lt;/VirtualHost&gt;</span></div></pre></td></tr></table></figure>\n<blockquote>\n<ol>\n<li>大功告成，测试下每个虚拟主机，分别访问www.test1.com、www.test2.com、www.test3.com</li>\n</ol>\n</blockquote>\n<h2 id=\"二、基于主机名\"><a href=\"#二、基于主机名\" class=\"headerlink\" title=\"二、基于主机名\"></a>二、基于主机名</h2><blockquote>\n<ol>\n<li>设置域名映射同一个IP，修改hosts：</li>\n</ol>\n</blockquote>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">192<span class=\"selector-class\">.168</span><span class=\"selector-class\">.1</span><span class=\"selector-class\">.10</span>  <span class=\"selector-tag\">www</span><span class=\"selector-class\">.test1</span><span class=\"selector-class\">.com</span></div><div class=\"line\">192<span class=\"selector-class\">.168</span><span class=\"selector-class\">.1</span><span class=\"selector-class\">.10</span>  <span class=\"selector-tag\">www</span><span class=\"selector-class\">.test2</span><span class=\"selector-class\">.com</span></div><div class=\"line\">192<span class=\"selector-class\">.168</span><span class=\"selector-class\">.1</span><span class=\"selector-class\">.10</span>  <span class=\"selector-tag\">www</span><span class=\"selector-class\">.test3</span><span class=\"selector-class\">.com</span></div></pre></td></tr></table></figure>\n<blockquote>\n<ol>\n<li>跟上面一样，建立虚拟主机存放网页的根目录</li>\n</ol>\n</blockquote>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">/www/test1/<span class=\"number\">1</span><span class=\"selector-class\">.html</span></div><div class=\"line\">/www/test2/<span class=\"number\">2</span><span class=\"selector-class\">.html</span></div><div class=\"line\">/www/test3/<span class=\"number\">3</span>.html</div></pre></td></tr></table></figure>\n<blockquote>\n<ol>\n<li>在httpd.conf中将附加配置文件httpd-vhosts.conf包含进来，接着在httpd-vhosts.conf中写入如下配置：<br>　为了使用基于域名的虚拟主机，必须指定服务器IP地址（和可能的端口）来使主机接受请求。可以用NameVirtualHost指令来进行配置。 如果服务器上所有的IP地址都会用到， 你可以用*作为NameVirtualHost的参数。在NameVirtualHost指令中指明IP地址并不会使服务器自动侦听那个IP地址。 这里设定的IP地址必须对应服务器上的一个网络接口。<br>　下一步就是为你建立的每个虚拟主机设定<virtualhost>配置块，<virtualhost>的参数与NameVirtualHost指令的参数是一样的。每个<virtualhost>定义块中，至少都会有一个ServerName指令来指定伺服哪个主机和一个DocumentRoot指令来说明这个主机的内容存在于文件系统的什么地方。<br>　如果在现有的web服务器上增加虚拟主机，必须也为现存的主机建造一个<virtualhost>定义块。其中ServerName和DocumentRoot所包含的内容应该与全局的保持一致，且要放在配置文件的最前面，扮演默认主机的角色。</virtualhost></virtualhost></virtualhost></virtualhost></li>\n</ol>\n</blockquote>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attribute\">NameVirtualHost</span> *:80</div><div class=\"line\"><span class=\"section\">&lt;VirtualHost *:80&gt;</span>  </div><div class=\"line\">\t<span class=\"attribute\"><span class=\"nomarkup\">ServerName</span></span> *</div><div class=\"line\">\t<span class=\"attribute\"><span class=\"nomarkup\">DocumentRoot</span></span> /www/ </div><div class=\"line\"><span class=\"section\">&lt;/VirtualHost&gt;</span></div><div class=\"line\"><span class=\"comment\">#虚拟主机1</span></div><div class=\"line\"><span class=\"section\">&lt;VirtualHost *:80&gt;</span></div><div class=\"line\">    <span class=\"attribute\"><span class=\"nomarkup\">ServerName</span></span> www.test1.com</div><div class=\"line\">    <span class=\"attribute\"><span class=\"nomarkup\">DocumentRoot</span></span> /www/test1/</div><div class=\"line\">    <span class=\"section\">&lt;Directory \"/www/test1\"&gt;</span></div><div class=\"line\">\t\t<span class=\"attribute\"><span class=\"nomarkup\">Options</span></span> Indexes FollowSymLinks</div><div class=\"line\">\t\t<span class=\"attribute\">AllowOverride</span> None</div><div class=\"line\">\t\t<span class=\"attribute\"><span class=\"nomarkup\">Order</span></span> allow,deny</div><div class=\"line\">\t\t<span class=\"attribute\"><span class=\"nomarkup\">Allow</span></span> from <span class=\"literal\">all</span></div><div class=\"line\">\t<span class=\"section\">&lt;/Directory&gt;</span></div><div class=\"line\"><span class=\"section\">&lt;/VirtualHost&gt;</span> </div><div class=\"line\"><span class=\"comment\">#虚拟主机2</span></div><div class=\"line\"><span class=\"section\">&lt;VirtualHost *:80&gt;</span></div><div class=\"line\">    <span class=\"attribute\"><span class=\"nomarkup\">ServerName</span></span> www.test2.com</div><div class=\"line\">    <span class=\"attribute\"><span class=\"nomarkup\">DocumentRoot</span></span> /www/test2/</div><div class=\"line\">\t<span class=\"section\">&lt;Directory \"/www/test2\"&gt;</span></div><div class=\"line\">\t\t<span class=\"attribute\"><span class=\"nomarkup\">Options</span></span> Indexes FollowSymLinks</div><div class=\"line\">\t\t<span class=\"attribute\">AllowOverride</span> None</div><div class=\"line\">\t\t<span class=\"attribute\"><span class=\"nomarkup\">Order</span></span> allow,deny</div><div class=\"line\">\t\t<span class=\"attribute\"><span class=\"nomarkup\">Allow</span></span> from <span class=\"literal\">all</span></div><div class=\"line\">　　<span class=\"section\">&lt;/Directory&gt;</span></div><div class=\"line\"><span class=\"section\">&lt;/VirtualHost&gt;</span></div><div class=\"line\"><span class=\"comment\">#虚拟主机3</span></div><div class=\"line\"><span class=\"section\">&lt;VirtualHost *:80&gt;</span></div><div class=\"line\">\t<span class=\"attribute\"><span class=\"nomarkup\">ServerName</span></span> www.test3.com</div><div class=\"line\">\t<span class=\"attribute\"><span class=\"nomarkup\">DocumentRoot</span></span> /www/test3/</div><div class=\"line\">\t<span class=\"section\">&lt;Directory \"/www/test3\"&gt;</span></div><div class=\"line\">\t\t<span class=\"attribute\"><span class=\"nomarkup\">Options</span></span> Indexes FollowSymLinks</div><div class=\"line\">\t\t<span class=\"attribute\">AllowOverride</span> None</div><div class=\"line\">\t\t<span class=\"attribute\"><span class=\"nomarkup\">Order</span></span> allow,deny</div><div class=\"line\">\t\t<span class=\"attribute\"><span class=\"nomarkup\">Allow</span></span> from <span class=\"literal\">all</span></div><div class=\"line\">　　<span class=\"section\">&lt;/Directory&gt;</span></div><div class=\"line\"><span class=\"section\">&lt;/VirtualHost&gt;</span></div></pre></td></tr></table></figure>\n<blockquote>\n<ol>\n<li>大功告成，测试下每个虚拟主机，分别访问www.test1.com、www.test2.com、www.test3.com</li>\n</ol>\n</blockquote>\n<h2 id=\"三、基于端口\"><a href=\"#三、基于端口\" class=\"headerlink\" title=\"三、基于端口\"></a>三、基于端口</h2><blockquote>\n<ol>\n<li>修改配置文件<br>　　将原来的<pre><code>Listen 80\n</code></pre> 改为<pre><code>Listen 80\nListen 8080\n</code></pre></li>\n</ol>\n<ol>\n<li>更改虚拟主机设置</li>\n</ol>\n</blockquote>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"section\">&lt;VirtualHost 192.168.1.10:80&gt;</span></div><div class=\"line\">\t<span class=\"attribute\"><span class=\"nomarkup\">DocumentRoot</span></span> /var/www/test1/</div><div class=\"line\">\t<span class=\"attribute\"><span class=\"nomarkup\">ServerName</span></span> www.test1.com</div><div class=\"line\"><span class=\"section\">&lt;/VirtualHost&gt;</span></div><div class=\"line\"><span class=\"comment\">#虚拟主机2</span></div><div class=\"line\"><span class=\"section\">&lt;VirtualHost 192.168.1.10:8080&gt;</span></div><div class=\"line\">\t<span class=\"attribute\"><span class=\"nomarkup\">DocumentRoot</span></span> /var/www/test2</div><div class=\"line\">\t<span class=\"attribute\"><span class=\"nomarkup\">ServerName</span></span> www.test2.com</div><div class=\"line\"><span class=\"section\">&lt;/VirtualHost&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"验证即可\"><a href=\"#验证即可\" class=\"headerlink\" title=\"验证即可\"></a>验证即可</h3>","site":{"data":{}},"excerpt":"<h1 id=\"Apache-配置虚拟主机三种方式\"><a href=\"#Apache-配置虚拟主机三种方式\" class=\"headerlink\" title=\"Apache 配置虚拟主机三种方式\"></a>Apache 配置虚拟主机三种方式</h1><h2 id=\"一、基于IP\"><a href=\"#一、基于IP\" class=\"headerlink\" title=\"一、基于IP\"></a>一、基于IP</h2><blockquote>\n<ol>\n<li>假设服务器有个IP地址为192.168.1.10，使用ifconfig在同一个网络接口eth0上绑定3个IP：</li>\n</ol>\n</blockquote>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-attr\">[root@localhost root]</span># <span class=\"selector-tag\">ifconfig</span> <span class=\"selector-tag\">eth0</span><span class=\"selector-pseudo\">:1</span> 192<span class=\"selector-class\">.168</span><span class=\"selector-class\">.1</span><span class=\"selector-class\">.11</span></div><div class=\"line\"><span class=\"selector-attr\">[root@localhost root]</span># <span class=\"selector-tag\">ifconfig</span> <span class=\"selector-tag\">eth0</span><span class=\"selector-pseudo\">:2</span> 192<span class=\"selector-class\">.168</span><span class=\"selector-class\">.1</span><span class=\"selector-class\">.12</span></div><div class=\"line\"><span class=\"selector-attr\">[root@localhost root]</span># <span class=\"selector-tag\">ifconfig</span> <span class=\"selector-tag\">eth0</span><span class=\"selector-pseudo\">:3</span> 192<span class=\"selector-class\">.168</span><span class=\"selector-class\">.1</span><span class=\"selector-class\">.13</span></div></pre></td></tr></table></figure>","more":"<blockquote>\n<ol>\n<li>修改hosts文件，添加三个域名与之一一对应：</li>\n</ol>\n</blockquote>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">192<span class=\"selector-class\">.168</span><span class=\"selector-class\">.1</span><span class=\"selector-class\">.11</span>   <span class=\"selector-tag\">www</span><span class=\"selector-class\">.test1</span><span class=\"selector-class\">.com</span></div><div class=\"line\">192<span class=\"selector-class\">.168</span><span class=\"selector-class\">.1</span><span class=\"selector-class\">.12</span>   <span class=\"selector-tag\">www</span><span class=\"selector-class\">.test2</span><span class=\"selector-class\">.com</span></div><div class=\"line\">192<span class=\"selector-class\">.168</span><span class=\"selector-class\">.1</span><span class=\"selector-class\">.13</span>   <span class=\"selector-tag\">www</span><span class=\"selector-class\">.test3</span><span class=\"selector-class\">.com</span></div></pre></td></tr></table></figure>\n<blockquote>\n<ol>\n<li>建立虚拟主机存放网页的根目录，如在/www目录下建立test1、test2、test3文件夹，其中分别存放1.html、2.html、3.html</li>\n</ol>\n</blockquote>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">/www/test1/<span class=\"number\">1</span><span class=\"selector-class\">.html</span></div><div class=\"line\">/www/test2/<span class=\"number\">2</span><span class=\"selector-class\">.html</span></div><div class=\"line\">/www/test3/<span class=\"number\">3</span>.html</div></pre></td></tr></table></figure>\n<blockquote>\n<ol>\n<li>在httpd.conf中将附加配置文件httpd-vhosts.conf包含进来，接着在httpd-vhosts.conf中写入如下配置：</li>\n</ol>\n</blockquote>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"section\">&lt;VirtualHost 192.168.1.11:80&gt;</span></div><div class=\"line\">\t<span class=\"attribute\"><span class=\"nomarkup\">ServerName</span></span> www.test1.com</div><div class=\"line\">    <span class=\"attribute\"><span class=\"nomarkup\">DocumentRoot</span></span> /www/test1/</div><div class=\"line\">\t<span class=\"section\">&lt;Directory \"/www/test1\"&gt;</span></div><div class=\"line\">\t\t<span class=\"attribute\"><span class=\"nomarkup\">options</span></span> Indexes FollowSymLinks</div><div class=\"line\">\t\t<span class=\"attribute\">AllowOverride</span> None</div><div class=\"line\">\t\t<span class=\"attribute\"><span class=\"nomarkup\">Order</span></span> allow,deny</div><div class=\"line\">\t\t<span class=\"attribute\"><span class=\"nomarkup\">Allow</span></span> From <span class=\"literal\">All</span></div><div class=\"line\">\t<span class=\"section\">&lt;/Directory&gt;</span></div><div class=\"line\"><span class=\"section\">&lt;/VirtualHost&gt;</span></div><div class=\"line\"><span class=\"section\">&lt;VirtualHost 192.168.1.12:80&gt;</span></div><div class=\"line\">\t<span class=\"attribute\"><span class=\"nomarkup\">ServerName</span></span> www.test1.com</div><div class=\"line\">\t<span class=\"attribute\"><span class=\"nomarkup\">DocumentRoot</span></span> /www/test2/</div><div class=\"line\">\t<span class=\"section\">&lt;Directory \"/www/test2\"&gt;</span></div><div class=\"line\">\t\t<span class=\"attribute\"><span class=\"nomarkup\">Options</span></span> Indexes FollowSymLinks</div><div class=\"line\">\t\t<span class=\"attribute\">AllowOverride</span> None</div><div class=\"line\">\t\t<span class=\"attribute\"><span class=\"nomarkup\">Order</span></span> allow,deny</div><div class=\"line\">\t\t<span class=\"attribute\"><span class=\"nomarkup\">Allow</span></span> From <span class=\"literal\">All</span></div><div class=\"line\">\t\t<span class=\"section\">&lt;/Directory&gt;</span></div><div class=\"line\"><span class=\"section\">&lt;/VirtualHost&gt;</span></div><div class=\"line\"><span class=\"section\">&lt;VirtualHost 192.168.1.13:80&gt;</span></div><div class=\"line\">\t<span class=\"attribute\"><span class=\"nomarkup\">ServerName</span></span> www.test1.com</div><div class=\"line\">\t<span class=\"attribute\"><span class=\"nomarkup\">DocumentRoot</span></span> /www/test3/</div><div class=\"line\">\t<span class=\"section\">&lt;Directory \"/www/test3\"&gt;</span></div><div class=\"line\">\t\t<span class=\"attribute\"><span class=\"nomarkup\">Options</span></span> Indexes FollowSymLinks</div><div class=\"line\">\t\t<span class=\"attribute\">AllowOverride</span> None</div><div class=\"line\">\t\t<span class=\"attribute\"><span class=\"nomarkup\">Order</span></span> allow,deny</div><div class=\"line\">\t\t<span class=\"attribute\"><span class=\"nomarkup\">Allow</span></span> From <span class=\"literal\">All</span></div><div class=\"line\">\t<span class=\"section\">&lt;/Directory&gt;</span></div><div class=\"line\"><span class=\"section\">&lt;/VirtualHost&gt;</span></div></pre></td></tr></table></figure>\n<blockquote>\n<ol>\n<li>大功告成，测试下每个虚拟主机，分别访问www.test1.com、www.test2.com、www.test3.com</li>\n</ol>\n</blockquote>\n<h2 id=\"二、基于主机名\"><a href=\"#二、基于主机名\" class=\"headerlink\" title=\"二、基于主机名\"></a>二、基于主机名</h2><blockquote>\n<ol>\n<li>设置域名映射同一个IP，修改hosts：</li>\n</ol>\n</blockquote>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">192<span class=\"selector-class\">.168</span><span class=\"selector-class\">.1</span><span class=\"selector-class\">.10</span>  <span class=\"selector-tag\">www</span><span class=\"selector-class\">.test1</span><span class=\"selector-class\">.com</span></div><div class=\"line\">192<span class=\"selector-class\">.168</span><span class=\"selector-class\">.1</span><span class=\"selector-class\">.10</span>  <span class=\"selector-tag\">www</span><span class=\"selector-class\">.test2</span><span class=\"selector-class\">.com</span></div><div class=\"line\">192<span class=\"selector-class\">.168</span><span class=\"selector-class\">.1</span><span class=\"selector-class\">.10</span>  <span class=\"selector-tag\">www</span><span class=\"selector-class\">.test3</span><span class=\"selector-class\">.com</span></div></pre></td></tr></table></figure>\n<blockquote>\n<ol>\n<li>跟上面一样，建立虚拟主机存放网页的根目录</li>\n</ol>\n</blockquote>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">/www/test1/<span class=\"number\">1</span><span class=\"selector-class\">.html</span></div><div class=\"line\">/www/test2/<span class=\"number\">2</span><span class=\"selector-class\">.html</span></div><div class=\"line\">/www/test3/<span class=\"number\">3</span>.html</div></pre></td></tr></table></figure>\n<blockquote>\n<ol>\n<li>在httpd.conf中将附加配置文件httpd-vhosts.conf包含进来，接着在httpd-vhosts.conf中写入如下配置：<br>　为了使用基于域名的虚拟主机，必须指定服务器IP地址（和可能的端口）来使主机接受请求。可以用NameVirtualHost指令来进行配置。 如果服务器上所有的IP地址都会用到， 你可以用*作为NameVirtualHost的参数。在NameVirtualHost指令中指明IP地址并不会使服务器自动侦听那个IP地址。 这里设定的IP地址必须对应服务器上的一个网络接口。<br>　下一步就是为你建立的每个虚拟主机设定<virtualhost>配置块，<virtualhost>的参数与NameVirtualHost指令的参数是一样的。每个<virtualhost>定义块中，至少都会有一个ServerName指令来指定伺服哪个主机和一个DocumentRoot指令来说明这个主机的内容存在于文件系统的什么地方。<br>　如果在现有的web服务器上增加虚拟主机，必须也为现存的主机建造一个<virtualhost>定义块。其中ServerName和DocumentRoot所包含的内容应该与全局的保持一致，且要放在配置文件的最前面，扮演默认主机的角色。</virtualhost></virtualhost></virtualhost></virtualhost></li>\n</ol>\n</blockquote>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attribute\">NameVirtualHost</span> *:80</div><div class=\"line\"><span class=\"section\">&lt;VirtualHost *:80&gt;</span>  </div><div class=\"line\">\t<span class=\"attribute\"><span class=\"nomarkup\">ServerName</span></span> *</div><div class=\"line\">\t<span class=\"attribute\"><span class=\"nomarkup\">DocumentRoot</span></span> /www/ </div><div class=\"line\"><span class=\"section\">&lt;/VirtualHost&gt;</span></div><div class=\"line\"><span class=\"comment\">#虚拟主机1</span></div><div class=\"line\"><span class=\"section\">&lt;VirtualHost *:80&gt;</span></div><div class=\"line\">    <span class=\"attribute\"><span class=\"nomarkup\">ServerName</span></span> www.test1.com</div><div class=\"line\">    <span class=\"attribute\"><span class=\"nomarkup\">DocumentRoot</span></span> /www/test1/</div><div class=\"line\">    <span class=\"section\">&lt;Directory \"/www/test1\"&gt;</span></div><div class=\"line\">\t\t<span class=\"attribute\"><span class=\"nomarkup\">Options</span></span> Indexes FollowSymLinks</div><div class=\"line\">\t\t<span class=\"attribute\">AllowOverride</span> None</div><div class=\"line\">\t\t<span class=\"attribute\"><span class=\"nomarkup\">Order</span></span> allow,deny</div><div class=\"line\">\t\t<span class=\"attribute\"><span class=\"nomarkup\">Allow</span></span> from <span class=\"literal\">all</span></div><div class=\"line\">\t<span class=\"section\">&lt;/Directory&gt;</span></div><div class=\"line\"><span class=\"section\">&lt;/VirtualHost&gt;</span> </div><div class=\"line\"><span class=\"comment\">#虚拟主机2</span></div><div class=\"line\"><span class=\"section\">&lt;VirtualHost *:80&gt;</span></div><div class=\"line\">    <span class=\"attribute\"><span class=\"nomarkup\">ServerName</span></span> www.test2.com</div><div class=\"line\">    <span class=\"attribute\"><span class=\"nomarkup\">DocumentRoot</span></span> /www/test2/</div><div class=\"line\">\t<span class=\"section\">&lt;Directory \"/www/test2\"&gt;</span></div><div class=\"line\">\t\t<span class=\"attribute\"><span class=\"nomarkup\">Options</span></span> Indexes FollowSymLinks</div><div class=\"line\">\t\t<span class=\"attribute\">AllowOverride</span> None</div><div class=\"line\">\t\t<span class=\"attribute\"><span class=\"nomarkup\">Order</span></span> allow,deny</div><div class=\"line\">\t\t<span class=\"attribute\"><span class=\"nomarkup\">Allow</span></span> from <span class=\"literal\">all</span></div><div class=\"line\">　　<span class=\"section\">&lt;/Directory&gt;</span></div><div class=\"line\"><span class=\"section\">&lt;/VirtualHost&gt;</span></div><div class=\"line\"><span class=\"comment\">#虚拟主机3</span></div><div class=\"line\"><span class=\"section\">&lt;VirtualHost *:80&gt;</span></div><div class=\"line\">\t<span class=\"attribute\"><span class=\"nomarkup\">ServerName</span></span> www.test3.com</div><div class=\"line\">\t<span class=\"attribute\"><span class=\"nomarkup\">DocumentRoot</span></span> /www/test3/</div><div class=\"line\">\t<span class=\"section\">&lt;Directory \"/www/test3\"&gt;</span></div><div class=\"line\">\t\t<span class=\"attribute\"><span class=\"nomarkup\">Options</span></span> Indexes FollowSymLinks</div><div class=\"line\">\t\t<span class=\"attribute\">AllowOverride</span> None</div><div class=\"line\">\t\t<span class=\"attribute\"><span class=\"nomarkup\">Order</span></span> allow,deny</div><div class=\"line\">\t\t<span class=\"attribute\"><span class=\"nomarkup\">Allow</span></span> from <span class=\"literal\">all</span></div><div class=\"line\">　　<span class=\"section\">&lt;/Directory&gt;</span></div><div class=\"line\"><span class=\"section\">&lt;/VirtualHost&gt;</span></div></pre></td></tr></table></figure>\n<blockquote>\n<ol>\n<li>大功告成，测试下每个虚拟主机，分别访问www.test1.com、www.test2.com、www.test3.com</li>\n</ol>\n</blockquote>\n<h2 id=\"三、基于端口\"><a href=\"#三、基于端口\" class=\"headerlink\" title=\"三、基于端口\"></a>三、基于端口</h2><blockquote>\n<ol>\n<li>修改配置文件<br>　　将原来的<pre><code>Listen 80\n</code></pre> 改为<pre><code>Listen 80\nListen 8080\n</code></pre></li>\n</ol>\n<ol>\n<li>更改虚拟主机设置</li>\n</ol>\n</blockquote>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"section\">&lt;VirtualHost 192.168.1.10:80&gt;</span></div><div class=\"line\">\t<span class=\"attribute\"><span class=\"nomarkup\">DocumentRoot</span></span> /var/www/test1/</div><div class=\"line\">\t<span class=\"attribute\"><span class=\"nomarkup\">ServerName</span></span> www.test1.com</div><div class=\"line\"><span class=\"section\">&lt;/VirtualHost&gt;</span></div><div class=\"line\"><span class=\"comment\">#虚拟主机2</span></div><div class=\"line\"><span class=\"section\">&lt;VirtualHost 192.168.1.10:8080&gt;</span></div><div class=\"line\">\t<span class=\"attribute\"><span class=\"nomarkup\">DocumentRoot</span></span> /var/www/test2</div><div class=\"line\">\t<span class=\"attribute\"><span class=\"nomarkup\">ServerName</span></span> www.test2.com</div><div class=\"line\"><span class=\"section\">&lt;/VirtualHost&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"验证即可\"><a href=\"#验证即可\" class=\"headerlink\" title=\"验证即可\"></a>验证即可</h3>"},{"title":"Nginx性能优化技巧","abbrlink":"1aabbb95","date":"2016-06-22T10:06:20.000Z","_content":"\n# 一、编译安装过程优化\n## 1、减小Nginx编译后的文件大小\n\n> 在编译nginx时，默认以debug模式进行，而在debug的模式下会插入很多跟踪和ASSERT之类的信息，编译完成后，一个nginx要有好几兆字节，而编译之前取消debug模式，编译完成之后只有几百千字节，因此，在编译之前，修改相关源码：\n在解压nginx源码文件后，找到源码目录下的auto/cc/gcc文件。打开然后在其中找到如下几行：\n<!-- more -->\n```\n#debug\nCFLAGS=\"$CFLAGS -g\"\n注释或者删掉这两行。\n```\n\n## 2、为特定的CPU指定CPU类型编译优化\n> 在编译nginx时，默认的GCC编译参数是\"-O\"，要优化GCC编译，可以使用以下两个参数：\n\n```\n--with-cc-opt='-o3'\n--with-cpu-opt=CPU   #为特定的CPU编译，有效的值包括：pentium、pentiumpro、pentium3、pentium4、athlon、opteron、amd64、sparc32、sparc64、ppc64\n\n要确定CPU类型，可以通过如下命令实现：\ncat /proc/cpuinfo |grep \"model name\"\n```\n# 二、利用TCMalloc优化Nginx的性能\n> 为了Nginx支持Tcmalloc，需要在安装的过程中添加--with-google_perftools_module，其他都一样。在安装完成之后，需要对配置文档做相应的一些配置，否则Nginx默认不会启用Tcmalloc。具体的配置如下：\n\n```\n# mkdir /tmp/tcmalloc\n# chown -R www.www /tmp/tcmalloc\n# vim nginx.conf\n···\npid        logs/nginx.pid;\ngoogle_perftools_profiles /tmp/tcmalloc/;\n···\n```\n检查Nginx是否使用Tcmalloc的命令可以使用：\n```\nlsof | grep tcmalloc\n```\n# 三、Nginx内核参数优化\n\n> Nginx内核参数的优化主要是在Linux系统中针对Nginx应用而进行的系统内核参数优化。\n下面给出的一个优化实例以供参考：\n\n```\nnet.ipv4.tcp_max_tw_buckets = 6000\nnet.ipv4.ip_local_port_range = 1024 65000\nnet.ipv4.tcp_tw_recyle = 1\nnet.ipv4.tcp_tw_reuse = 1\nnet.ipv4.tcp_syncookies = 1\nnet.core.somaxconn = 262144\nnet.core.netdev_max_backlog = 262144\n```\n","source":"_posts/2016-06-22-Nginx性能优化技巧.md","raw":"---\ntitle: Nginx性能优化技巧\ncategories: 实践与总结\ntag: web\nabbrlink: 1aabbb95\ndate: 2016-06-22 18:06:20\n---\n\n# 一、编译安装过程优化\n## 1、减小Nginx编译后的文件大小\n\n> 在编译nginx时，默认以debug模式进行，而在debug的模式下会插入很多跟踪和ASSERT之类的信息，编译完成后，一个nginx要有好几兆字节，而编译之前取消debug模式，编译完成之后只有几百千字节，因此，在编译之前，修改相关源码：\n在解压nginx源码文件后，找到源码目录下的auto/cc/gcc文件。打开然后在其中找到如下几行：\n<!-- more -->\n```\n#debug\nCFLAGS=\"$CFLAGS -g\"\n注释或者删掉这两行。\n```\n\n## 2、为特定的CPU指定CPU类型编译优化\n> 在编译nginx时，默认的GCC编译参数是\"-O\"，要优化GCC编译，可以使用以下两个参数：\n\n```\n--with-cc-opt='-o3'\n--with-cpu-opt=CPU   #为特定的CPU编译，有效的值包括：pentium、pentiumpro、pentium3、pentium4、athlon、opteron、amd64、sparc32、sparc64、ppc64\n\n要确定CPU类型，可以通过如下命令实现：\ncat /proc/cpuinfo |grep \"model name\"\n```\n# 二、利用TCMalloc优化Nginx的性能\n> 为了Nginx支持Tcmalloc，需要在安装的过程中添加--with-google_perftools_module，其他都一样。在安装完成之后，需要对配置文档做相应的一些配置，否则Nginx默认不会启用Tcmalloc。具体的配置如下：\n\n```\n# mkdir /tmp/tcmalloc\n# chown -R www.www /tmp/tcmalloc\n# vim nginx.conf\n···\npid        logs/nginx.pid;\ngoogle_perftools_profiles /tmp/tcmalloc/;\n···\n```\n检查Nginx是否使用Tcmalloc的命令可以使用：\n```\nlsof | grep tcmalloc\n```\n# 三、Nginx内核参数优化\n\n> Nginx内核参数的优化主要是在Linux系统中针对Nginx应用而进行的系统内核参数优化。\n下面给出的一个优化实例以供参考：\n\n```\nnet.ipv4.tcp_max_tw_buckets = 6000\nnet.ipv4.ip_local_port_range = 1024 65000\nnet.ipv4.tcp_tw_recyle = 1\nnet.ipv4.tcp_tw_reuse = 1\nnet.ipv4.tcp_syncookies = 1\nnet.core.somaxconn = 262144\nnet.core.netdev_max_backlog = 262144\n```\n","slug":"2016-06-22-Nginx性能优化技巧","published":1,"updated":"2017-02-14T13:42:45.394Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5mkehpy0003ao946iobfjxh","content":"<h1 id=\"一、编译安装过程优化\"><a href=\"#一、编译安装过程优化\" class=\"headerlink\" title=\"一、编译安装过程优化\"></a>一、编译安装过程优化</h1><h2 id=\"1、减小Nginx编译后的文件大小\"><a href=\"#1、减小Nginx编译后的文件大小\" class=\"headerlink\" title=\"1、减小Nginx编译后的文件大小\"></a>1、减小Nginx编译后的文件大小</h2><blockquote>\n<p>在编译nginx时，默认以debug模式进行，而在debug的模式下会插入很多跟踪和ASSERT之类的信息，编译完成后，一个nginx要有好几兆字节，而编译之前取消debug模式，编译完成之后只有几百千字节，因此，在编译之前，修改相关源码：<br>在解压nginx源码文件后，找到源码目录下的auto/cc/gcc文件。打开然后在其中找到如下几行：<br><a id=\"more\"></a><br><figure class=\"highlight makefile\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#debug</span></div><div class=\"line\">CFLAGS=<span class=\"string\">\"$CFLAGS -g\"</span></div><div class=\"line\">注释或者删掉这两行。</div></pre></td></tr></table></figure></p>\n</blockquote>\n<h2 id=\"2、为特定的CPU指定CPU类型编译优化\"><a href=\"#2、为特定的CPU指定CPU类型编译优化\" class=\"headerlink\" title=\"2、为特定的CPU指定CPU类型编译优化\"></a>2、为特定的CPU指定CPU类型编译优化</h2><blockquote>\n<p>在编译nginx时，默认的GCC编译参数是”-O”，要优化GCC编译，可以使用以下两个参数：</p>\n</blockquote>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">--with-<span class=\"keyword\">cc</span>-<span class=\"keyword\">opt</span>=<span class=\"string\">'-o3'</span></div><div class=\"line\">--with-cpu-<span class=\"keyword\">opt</span>=CPU   #为特定的CPU编译，有效的值包括：pentium、pentiumpro、pentium3、pentium4、athlon、opteron、amd64、sparc32、sparc64、ppc64</div><div class=\"line\"></div><div class=\"line\">要确定CPU类型，可以通过如下命令实现：</div><div class=\"line\"><span class=\"keyword\">cat</span> /proc/cpuinfo |<span class=\"keyword\">grep</span> <span class=\"string\">\"model name\"</span></div></pre></td></tr></table></figure>\n<h1 id=\"二、利用TCMalloc优化Nginx的性能\"><a href=\"#二、利用TCMalloc优化Nginx的性能\" class=\"headerlink\" title=\"二、利用TCMalloc优化Nginx的性能\"></a>二、利用TCMalloc优化Nginx的性能</h1><blockquote>\n<p>为了Nginx支持Tcmalloc，需要在安装的过程中添加–with-google_perftools_module，其他都一样。在安装完成之后，需要对配置文档做相应的一些配置，否则Nginx默认不会启用Tcmalloc。具体的配置如下：</p>\n</blockquote>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> mkdir /tmp/tcmalloc</span></div><div class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> chown -R www.www /tmp/tcmalloc</span></div><div class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> vim nginx.conf</span></div><div class=\"line\">···</div><div class=\"line\">pid        logs/nginx.pid;</div><div class=\"line\">google_perftools_profiles /tmp/tcmalloc/;</div><div class=\"line\">···</div></pre></td></tr></table></figure>\n<p>检查Nginx是否使用Tcmalloc的命令可以使用：<br><figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">lsof <span class=\"string\">| grep tcmalloc</span></div></pre></td></tr></table></figure></p>\n<h1 id=\"三、Nginx内核参数优化\"><a href=\"#三、Nginx内核参数优化\" class=\"headerlink\" title=\"三、Nginx内核参数优化\"></a>三、Nginx内核参数优化</h1><blockquote>\n<p>Nginx内核参数的优化主要是在Linux系统中针对Nginx应用而进行的系统内核参数优化。<br>下面给出的一个优化实例以供参考：</p>\n</blockquote>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">net<span class=\"selector-class\">.ipv4</span><span class=\"selector-class\">.tcp_max_tw_buckets</span> = <span class=\"number\">6000</span></div><div class=\"line\">net<span class=\"selector-class\">.ipv4</span><span class=\"selector-class\">.ip_local_port_range</span> = <span class=\"number\">1024</span> <span class=\"number\">65000</span></div><div class=\"line\">net<span class=\"selector-class\">.ipv4</span><span class=\"selector-class\">.tcp_tw_recyle</span> = <span class=\"number\">1</span></div><div class=\"line\">net<span class=\"selector-class\">.ipv4</span><span class=\"selector-class\">.tcp_tw_reuse</span> = <span class=\"number\">1</span></div><div class=\"line\">net<span class=\"selector-class\">.ipv4</span><span class=\"selector-class\">.tcp_syncookies</span> = <span class=\"number\">1</span></div><div class=\"line\">net<span class=\"selector-class\">.core</span><span class=\"selector-class\">.somaxconn</span> = <span class=\"number\">262144</span></div><div class=\"line\">net<span class=\"selector-class\">.core</span><span class=\"selector-class\">.netdev_max_backlog</span> = <span class=\"number\">262144</span></div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<h1 id=\"一、编译安装过程优化\"><a href=\"#一、编译安装过程优化\" class=\"headerlink\" title=\"一、编译安装过程优化\"></a>一、编译安装过程优化</h1><h2 id=\"1、减小Nginx编译后的文件大小\"><a href=\"#1、减小Nginx编译后的文件大小\" class=\"headerlink\" title=\"1、减小Nginx编译后的文件大小\"></a>1、减小Nginx编译后的文件大小</h2><blockquote>\n<p>在编译nginx时，默认以debug模式进行，而在debug的模式下会插入很多跟踪和ASSERT之类的信息，编译完成后，一个nginx要有好几兆字节，而编译之前取消debug模式，编译完成之后只有几百千字节，因此，在编译之前，修改相关源码：<br>在解压nginx源码文件后，找到源码目录下的auto/cc/gcc文件。打开然后在其中找到如下几行：<br>","more":"<br><figure class=\"highlight makefile\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#debug</span></div><div class=\"line\">CFLAGS=<span class=\"string\">\"$CFLAGS -g\"</span></div><div class=\"line\">注释或者删掉这两行。</div></pre></td></tr></table></figure></p>\n</blockquote>\n<h2 id=\"2、为特定的CPU指定CPU类型编译优化\"><a href=\"#2、为特定的CPU指定CPU类型编译优化\" class=\"headerlink\" title=\"2、为特定的CPU指定CPU类型编译优化\"></a>2、为特定的CPU指定CPU类型编译优化</h2><blockquote>\n<p>在编译nginx时，默认的GCC编译参数是”-O”，要优化GCC编译，可以使用以下两个参数：</p>\n</blockquote>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">--with-<span class=\"keyword\">cc</span>-<span class=\"keyword\">opt</span>=<span class=\"string\">'-o3'</span></div><div class=\"line\">--with-cpu-<span class=\"keyword\">opt</span>=CPU   #为特定的CPU编译，有效的值包括：pentium、pentiumpro、pentium3、pentium4、athlon、opteron、amd64、sparc32、sparc64、ppc64</div><div class=\"line\"></div><div class=\"line\">要确定CPU类型，可以通过如下命令实现：</div><div class=\"line\"><span class=\"keyword\">cat</span> /proc/cpuinfo |<span class=\"keyword\">grep</span> <span class=\"string\">\"model name\"</span></div></pre></td></tr></table></figure>\n<h1 id=\"二、利用TCMalloc优化Nginx的性能\"><a href=\"#二、利用TCMalloc优化Nginx的性能\" class=\"headerlink\" title=\"二、利用TCMalloc优化Nginx的性能\"></a>二、利用TCMalloc优化Nginx的性能</h1><blockquote>\n<p>为了Nginx支持Tcmalloc，需要在安装的过程中添加–with-google_perftools_module，其他都一样。在安装完成之后，需要对配置文档做相应的一些配置，否则Nginx默认不会启用Tcmalloc。具体的配置如下：</p>\n</blockquote>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> mkdir /tmp/tcmalloc</span></div><div class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> chown -R www.www /tmp/tcmalloc</span></div><div class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> vim nginx.conf</span></div><div class=\"line\">···</div><div class=\"line\">pid        logs/nginx.pid;</div><div class=\"line\">google_perftools_profiles /tmp/tcmalloc/;</div><div class=\"line\">···</div></pre></td></tr></table></figure>\n<p>检查Nginx是否使用Tcmalloc的命令可以使用：<br><figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">lsof <span class=\"string\">| grep tcmalloc</span></div></pre></td></tr></table></figure></p>\n<h1 id=\"三、Nginx内核参数优化\"><a href=\"#三、Nginx内核参数优化\" class=\"headerlink\" title=\"三、Nginx内核参数优化\"></a>三、Nginx内核参数优化</h1><blockquote>\n<p>Nginx内核参数的优化主要是在Linux系统中针对Nginx应用而进行的系统内核参数优化。<br>下面给出的一个优化实例以供参考：</p>\n</blockquote>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">net<span class=\"selector-class\">.ipv4</span><span class=\"selector-class\">.tcp_max_tw_buckets</span> = <span class=\"number\">6000</span></div><div class=\"line\">net<span class=\"selector-class\">.ipv4</span><span class=\"selector-class\">.ip_local_port_range</span> = <span class=\"number\">1024</span> <span class=\"number\">65000</span></div><div class=\"line\">net<span class=\"selector-class\">.ipv4</span><span class=\"selector-class\">.tcp_tw_recyle</span> = <span class=\"number\">1</span></div><div class=\"line\">net<span class=\"selector-class\">.ipv4</span><span class=\"selector-class\">.tcp_tw_reuse</span> = <span class=\"number\">1</span></div><div class=\"line\">net<span class=\"selector-class\">.ipv4</span><span class=\"selector-class\">.tcp_syncookies</span> = <span class=\"number\">1</span></div><div class=\"line\">net<span class=\"selector-class\">.core</span><span class=\"selector-class\">.somaxconn</span> = <span class=\"number\">262144</span></div><div class=\"line\">net<span class=\"selector-class\">.core</span><span class=\"selector-class\">.netdev_max_backlog</span> = <span class=\"number\">262144</span></div></pre></td></tr></table></figure>"},{"title":"Apache编译参数及编译安装方法","abbrlink":"7608b15b","date":"2016-06-22T08:02:32.000Z","_content":"\n## 常用编译参数一览\n## 本文列举一些apache编译过程中常见的编译参数和编译步骤，大致如下所示\n<!-- more -->\n```\n./configure   #配置源代码树\n\n–prefix=/usr/local/apache2   #体系无关文件的顶级安装目录PREFIX ，也就Apache的安装目录。\n\n–enable-module=so   //打开 so 模块，so 模块是用来提 DSO 支持的 apache 核心模块\n\n–enable-deflate=shared   //支持网页压缩\n\n–enable-expires=shared   //支持 HTTP 控制\n\n–enable-rewrite=shared   //支持 URL 重写\n\n–enable-cache //支持缓存\n\n–enable-file-cache //支持文件缓存\n\n–enable-mem-cache //支持记忆缓存\n\n–enable-disk-cache //支持磁盘缓存\n\n–enable-static-support   //支持静态连接(默认为动态连接)\n\n–enable-static-htpasswd   //使用静态连接编译 htpasswd – 管理用于基本认证的用户文件\n\n–enable-static-htdigest   //使用静态连接编译 htdigest – 管理用于摘要认证的用户文件\n\n–enable-static-rotatelogs   //使用静态连接编译 rotatelogs – 滚动 Apache 日志的管道日志程序\n\n–enable-static-logresolve   //使用静态连接编译 logresolve – 解析 Apache 日志中的IP地址为主机名\n\n–enable-static-htdbm   //使用静态连接编译 htdbm – 操作 DBM 密码数据库\n\n–enable-static-ab   //使用静态连接编译 ab – Apache HTTP 服务器性能测试工具\n\n–enable-static-checkgid   //使用静态连接编译 checkgid\n\n–disable-cgid   //禁止用一个外部 CGI 守护进程执行CGI脚本\n\n–disable-cgi   //禁止编译 CGI 版本的 PHP\n\n–disable-userdir   //禁止用户从自己的主目录中提供页面\n\n–-with-mpm=worker // 让apache以worker方式运行\n\n–enable-authn-dbm=shared // 对动态数据库进行操作。Rewrite时需要。\n\n```\n\n>以下是分门别类的更多参数注解，与上面的会有重复\n\n## 用于apr的configure脚本的选项：\n\n> 可选特性\n```\n--enable-experimental-libtool\n启用试验性质的自定义libtool\n\n--disable-libtool-lock\n取消锁定(可能导致并行编译崩溃)\n\n--enable-debug\n启用调试编译，仅供开发人员使用。\n\n--enable-maintainer-mode\n打开调试和编译时警告，仅供开发人员使用。\n\n--enable-profile\n打开编译profiling(GCC)\n\n--enable-pool-debug[=yes|no|verbose|verbose-alloc|lifetime|owner|all]\n打开pools调试\n\n--enable-malloc-debug\n打开BeOS平台上的malloc_debug\n\n--disable-lfs\n在32-bit平台上禁用大文件支持(large file support)\n\n--enable-nonportable-atomics\n若只打算在486以上的CPU上运行Apache ，那么使用该选项可以启用更加高效的基于互斥执行的原子操作。\n\n--enable-threads\n启用线程支持，在线程型的MPM上必须打开它\n\n--disable-threads\n禁用线程支持，如果不使用线程化的MPM ，可以关闭它以减少系统开销。\n\n--disable-dso\n禁用DSO支持\n\n--enable-other-child\n启用可靠子进程支持\n\n--disable-ipv6\n禁用IPv6支持\n```\n\n```\n\n> 可选的额外程序包\n--with-gnu-ld\n指定C编译器使用 GNU ld\n\n--with-pic\n只使用 PIC/non-PIC 对象[默认为两者都使用]\n\n--with-tags[=TAGS]\n包含额外的配置\n\n--with-installbuilddir=DIR\n指定APR编译文件的存放位置(默认值为：’${datadir}/build’)\n\n--without-libtool\n禁止使用libtool连接库文件\n\n--with-efence[=DIR]\n指定Electric Fence的安装目录\n\n--with-sendfile\n强制使用sendfile(译者注：Linux2.4/2.6内核都支持)\n\n--with-egd[=DIR]\n使用EDG兼容的socket\n\n--with-devrandom[=DEV]\n指定随机设备[默认为：/dev/random]\n```\n\n## 用于apr-util的configure脚本的选项：\n> 可选的额外程序包\n```\n--with-apr=PATH\n指定APR的安装目录(–prefix选项值或apr-config的路径)\n\n--with-ldap-include=PATH\nldap包含文件目录(带结尾斜线)\n\n--with-ldap-lib=PATH\nldap库文件路径\n\n--with-ldap=library\n使用的ldap库\n\n--with-dbm=DBM\n选择使用的DBM类型DBM={sdbm,gdbm,ndbm,db,db1,db185,db2,db3,db4,db41,db42,db43,db44}\n\n--with-gdbm=PATH\n指定GDBM的位置\n\n--with-ndbm=PATH\n指定NDBM的位置\n\n--with-berkeley-db=PATH\n指定Berkeley DB的位置\n\n--with-pgsql=PATH\n指定PostgreSQL的位置\n\n--with-mysql=PATH\n参看INSTALL.MySQL文件的内容\n\n--with-sqlite3=PATH\n指定sqlite3的位置\n\n--with-sqlite2=PATH\n指定sqlite2的位置\n\n--with-expat=PATH\n指定Expat的位置或’builtin’\n\n--with-iconv=PATH\niconv的安装目录\n```\n## 编译安装\n\n> 任何一个程序包被编译操作依赖到时，需要安装此程序包的“开发”组件，其包名一般类似于name-devel-VERSION；\n\n\n> 实验环境：CentOS 7 httpd-2.4\n\n```\n~]# yum install pcre-devel apr-devel apr-util-devel openssl-devel\n\n~]# ./configure \\\n--prefix=/usr/local/apache24 \\\n--sysconfdir=/etc/httpd24 \\\n--enable-so \\\n--enable-ssl \\\n--enable-rewrite \\\n--with-zlib \\\n--with-pcre \\\n--with-apr=/usr \\\n--with-apr-util=/usr \\\n--enable-modules=most \\\n--enable-mpms-shared=all \\\n--with-mpm=prefork\n\n~]# make -j 4 && make install\n```\n","source":"_posts/2016-06-22-apache编译参数.md","raw":"---\ntitle: Apache编译参数及编译安装方法\ncategories: 实践与总结\ntag: web\nabbrlink: 7608b15b\ndate: 2016-06-22 16:02:32\n---\n\n## 常用编译参数一览\n## 本文列举一些apache编译过程中常见的编译参数和编译步骤，大致如下所示\n<!-- more -->\n```\n./configure   #配置源代码树\n\n–prefix=/usr/local/apache2   #体系无关文件的顶级安装目录PREFIX ，也就Apache的安装目录。\n\n–enable-module=so   //打开 so 模块，so 模块是用来提 DSO 支持的 apache 核心模块\n\n–enable-deflate=shared   //支持网页压缩\n\n–enable-expires=shared   //支持 HTTP 控制\n\n–enable-rewrite=shared   //支持 URL 重写\n\n–enable-cache //支持缓存\n\n–enable-file-cache //支持文件缓存\n\n–enable-mem-cache //支持记忆缓存\n\n–enable-disk-cache //支持磁盘缓存\n\n–enable-static-support   //支持静态连接(默认为动态连接)\n\n–enable-static-htpasswd   //使用静态连接编译 htpasswd – 管理用于基本认证的用户文件\n\n–enable-static-htdigest   //使用静态连接编译 htdigest – 管理用于摘要认证的用户文件\n\n–enable-static-rotatelogs   //使用静态连接编译 rotatelogs – 滚动 Apache 日志的管道日志程序\n\n–enable-static-logresolve   //使用静态连接编译 logresolve – 解析 Apache 日志中的IP地址为主机名\n\n–enable-static-htdbm   //使用静态连接编译 htdbm – 操作 DBM 密码数据库\n\n–enable-static-ab   //使用静态连接编译 ab – Apache HTTP 服务器性能测试工具\n\n–enable-static-checkgid   //使用静态连接编译 checkgid\n\n–disable-cgid   //禁止用一个外部 CGI 守护进程执行CGI脚本\n\n–disable-cgi   //禁止编译 CGI 版本的 PHP\n\n–disable-userdir   //禁止用户从自己的主目录中提供页面\n\n–-with-mpm=worker // 让apache以worker方式运行\n\n–enable-authn-dbm=shared // 对动态数据库进行操作。Rewrite时需要。\n\n```\n\n>以下是分门别类的更多参数注解，与上面的会有重复\n\n## 用于apr的configure脚本的选项：\n\n> 可选特性\n```\n--enable-experimental-libtool\n启用试验性质的自定义libtool\n\n--disable-libtool-lock\n取消锁定(可能导致并行编译崩溃)\n\n--enable-debug\n启用调试编译，仅供开发人员使用。\n\n--enable-maintainer-mode\n打开调试和编译时警告，仅供开发人员使用。\n\n--enable-profile\n打开编译profiling(GCC)\n\n--enable-pool-debug[=yes|no|verbose|verbose-alloc|lifetime|owner|all]\n打开pools调试\n\n--enable-malloc-debug\n打开BeOS平台上的malloc_debug\n\n--disable-lfs\n在32-bit平台上禁用大文件支持(large file support)\n\n--enable-nonportable-atomics\n若只打算在486以上的CPU上运行Apache ，那么使用该选项可以启用更加高效的基于互斥执行的原子操作。\n\n--enable-threads\n启用线程支持，在线程型的MPM上必须打开它\n\n--disable-threads\n禁用线程支持，如果不使用线程化的MPM ，可以关闭它以减少系统开销。\n\n--disable-dso\n禁用DSO支持\n\n--enable-other-child\n启用可靠子进程支持\n\n--disable-ipv6\n禁用IPv6支持\n```\n\n```\n\n> 可选的额外程序包\n--with-gnu-ld\n指定C编译器使用 GNU ld\n\n--with-pic\n只使用 PIC/non-PIC 对象[默认为两者都使用]\n\n--with-tags[=TAGS]\n包含额外的配置\n\n--with-installbuilddir=DIR\n指定APR编译文件的存放位置(默认值为：’${datadir}/build’)\n\n--without-libtool\n禁止使用libtool连接库文件\n\n--with-efence[=DIR]\n指定Electric Fence的安装目录\n\n--with-sendfile\n强制使用sendfile(译者注：Linux2.4/2.6内核都支持)\n\n--with-egd[=DIR]\n使用EDG兼容的socket\n\n--with-devrandom[=DEV]\n指定随机设备[默认为：/dev/random]\n```\n\n## 用于apr-util的configure脚本的选项：\n> 可选的额外程序包\n```\n--with-apr=PATH\n指定APR的安装目录(–prefix选项值或apr-config的路径)\n\n--with-ldap-include=PATH\nldap包含文件目录(带结尾斜线)\n\n--with-ldap-lib=PATH\nldap库文件路径\n\n--with-ldap=library\n使用的ldap库\n\n--with-dbm=DBM\n选择使用的DBM类型DBM={sdbm,gdbm,ndbm,db,db1,db185,db2,db3,db4,db41,db42,db43,db44}\n\n--with-gdbm=PATH\n指定GDBM的位置\n\n--with-ndbm=PATH\n指定NDBM的位置\n\n--with-berkeley-db=PATH\n指定Berkeley DB的位置\n\n--with-pgsql=PATH\n指定PostgreSQL的位置\n\n--with-mysql=PATH\n参看INSTALL.MySQL文件的内容\n\n--with-sqlite3=PATH\n指定sqlite3的位置\n\n--with-sqlite2=PATH\n指定sqlite2的位置\n\n--with-expat=PATH\n指定Expat的位置或’builtin’\n\n--with-iconv=PATH\niconv的安装目录\n```\n## 编译安装\n\n> 任何一个程序包被编译操作依赖到时，需要安装此程序包的“开发”组件，其包名一般类似于name-devel-VERSION；\n\n\n> 实验环境：CentOS 7 httpd-2.4\n\n```\n~]# yum install pcre-devel apr-devel apr-util-devel openssl-devel\n\n~]# ./configure \\\n--prefix=/usr/local/apache24 \\\n--sysconfdir=/etc/httpd24 \\\n--enable-so \\\n--enable-ssl \\\n--enable-rewrite \\\n--with-zlib \\\n--with-pcre \\\n--with-apr=/usr \\\n--with-apr-util=/usr \\\n--enable-modules=most \\\n--enable-mpms-shared=all \\\n--with-mpm=prefork\n\n~]# make -j 4 && make install\n```\n","slug":"2016-06-22-apache编译参数","published":1,"updated":"2017-02-14T13:42:45.422Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5mkehq70007ao94fl9buc0c","content":"<h2 id=\"常用编译参数一览\"><a href=\"#常用编译参数一览\" class=\"headerlink\" title=\"常用编译参数一览\"></a>常用编译参数一览</h2><h2 id=\"本文列举一些apache编译过程中常见的编译参数和编译步骤，大致如下所示\"><a href=\"#本文列举一些apache编译过程中常见的编译参数和编译步骤，大致如下所示\" class=\"headerlink\" title=\"本文列举一些apache编译过程中常见的编译参数和编译步骤，大致如下所示\"></a>本文列举一些apache编译过程中常见的编译参数和编译步骤，大致如下所示</h2><a id=\"more\"></a>\n<figure class=\"highlight gauss\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div></pre></td><td class=\"code\"><pre><div class=\"line\">./configure   <span class=\"meta\">#配置源代码树</span></div><div class=\"line\"></div><div class=\"line\">–prefix=/usr/<span class=\"keyword\">local</span>/apache2   <span class=\"meta\">#体系无关文件的顶级安装目录PREFIX ，也就Apache的安装目录。</span></div><div class=\"line\"></div><div class=\"line\">–<span class=\"keyword\">enable</span>-module=so   <span class=\"comment\">//打开 so 模块，so 模块是用来提 DSO 支持的 apache 核心模块</span></div><div class=\"line\"></div><div class=\"line\">–<span class=\"keyword\">enable</span>-deflate=shared   <span class=\"comment\">//支持网页压缩</span></div><div class=\"line\"></div><div class=\"line\">–<span class=\"keyword\">enable</span>-expires=shared   <span class=\"comment\">//支持 HTTP 控制</span></div><div class=\"line\"></div><div class=\"line\">–<span class=\"keyword\">enable</span>-rewrite=shared   <span class=\"comment\">//支持 URL 重写</span></div><div class=\"line\"></div><div class=\"line\">–<span class=\"keyword\">enable</span>-cache <span class=\"comment\">//支持缓存</span></div><div class=\"line\"></div><div class=\"line\">–<span class=\"keyword\">enable</span>-file-cache <span class=\"comment\">//支持文件缓存</span></div><div class=\"line\"></div><div class=\"line\">–<span class=\"keyword\">enable</span>-mem-cache <span class=\"comment\">//支持记忆缓存</span></div><div class=\"line\"></div><div class=\"line\">–<span class=\"keyword\">enable</span>-disk-cache <span class=\"comment\">//支持磁盘缓存</span></div><div class=\"line\"></div><div class=\"line\">–<span class=\"keyword\">enable</span>-static-support   <span class=\"comment\">//支持静态连接(默认为动态连接)</span></div><div class=\"line\"></div><div class=\"line\">–<span class=\"keyword\">enable</span>-static-htpasswd   <span class=\"comment\">//使用静态连接编译 htpasswd – 管理用于基本认证的用户文件</span></div><div class=\"line\"></div><div class=\"line\">–<span class=\"keyword\">enable</span>-static-htdigest   <span class=\"comment\">//使用静态连接编译 htdigest – 管理用于摘要认证的用户文件</span></div><div class=\"line\"></div><div class=\"line\">–<span class=\"keyword\">enable</span>-static-rotatelogs   <span class=\"comment\">//使用静态连接编译 rotatelogs – 滚动 Apache 日志的管道日志程序</span></div><div class=\"line\"></div><div class=\"line\">–<span class=\"keyword\">enable</span>-static-logresolve   <span class=\"comment\">//使用静态连接编译 logresolve – 解析 Apache 日志中的IP地址为主机名</span></div><div class=\"line\"></div><div class=\"line\">–<span class=\"keyword\">enable</span>-static-htdbm   <span class=\"comment\">//使用静态连接编译 htdbm – 操作 DBM 密码数据库</span></div><div class=\"line\"></div><div class=\"line\">–<span class=\"keyword\">enable</span>-static-ab   <span class=\"comment\">//使用静态连接编译 ab – Apache HTTP 服务器性能测试工具</span></div><div class=\"line\"></div><div class=\"line\">–<span class=\"keyword\">enable</span>-static-checkgid   <span class=\"comment\">//使用静态连接编译 checkgid</span></div><div class=\"line\"></div><div class=\"line\">–<span class=\"keyword\">disable</span>-cgid   <span class=\"comment\">//禁止用一个外部 CGI 守护进程执行CGI脚本</span></div><div class=\"line\"></div><div class=\"line\">–<span class=\"keyword\">disable</span>-cgi   <span class=\"comment\">//禁止编译 CGI 版本的 PHP</span></div><div class=\"line\"></div><div class=\"line\">–<span class=\"keyword\">disable</span>-userdir   <span class=\"comment\">//禁止用户从自己的主目录中提供页面</span></div><div class=\"line\"></div><div class=\"line\">–-with-mpm=worker <span class=\"comment\">// 让apache以worker方式运行</span></div><div class=\"line\"></div><div class=\"line\">–<span class=\"keyword\">enable</span>-authn-dbm=shared <span class=\"comment\">// 对动态数据库进行操作。Rewrite时需要。</span></div></pre></td></tr></table></figure>\n<blockquote>\n<p>以下是分门别类的更多参数注解，与上面的会有重复</p>\n</blockquote>\n<h2 id=\"用于apr的configure脚本的选项：\"><a href=\"#用于apr的configure脚本的选项：\" class=\"headerlink\" title=\"用于apr的configure脚本的选项：\"></a>用于apr的configure脚本的选项：</h2><blockquote>\n<p>可选特性<br><figure class=\"highlight haml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div></pre></td><td class=\"code\"><pre><div class=\"line\">-<span class=\"ruby\">-enable-experimental-libtool</span></div><div class=\"line\">启用试验性质的自定义libtool</div><div class=\"line\"></div><div class=\"line\">-<span class=\"ruby\">-disable-libtool-lock</span></div><div class=\"line\">取消锁定(可能导致并行编译崩溃)</div><div class=\"line\"></div><div class=\"line\">-<span class=\"ruby\">-enable-debug</span></div><div class=\"line\">启用调试编译，仅供开发人员使用。</div><div class=\"line\"></div><div class=\"line\">-<span class=\"ruby\">-enable-maintainer-mode</span></div><div class=\"line\">打开调试和编译时警告，仅供开发人员使用。</div><div class=\"line\"></div><div class=\"line\">-<span class=\"ruby\">-enable-profile</span></div><div class=\"line\">打开编译profiling(GCC)</div><div class=\"line\"></div><div class=\"line\">-<span class=\"ruby\">-enable-pool-debug[=yes<span class=\"params\">|no|</span>verbose<span class=\"params\">|verbose-alloc|</span>lifetime<span class=\"params\">|owner|</span>all]</span></div><div class=\"line\">打开pools调试</div><div class=\"line\"></div><div class=\"line\">-<span class=\"ruby\">-enable-malloc-debug</span></div><div class=\"line\">打开BeOS平台上的malloc_debug</div><div class=\"line\"></div><div class=\"line\">-<span class=\"ruby\">-disable-lfs</span></div><div class=\"line\">在32-bit平台上禁用大文件支持(large file support)</div><div class=\"line\"></div><div class=\"line\">-<span class=\"ruby\">-enable-nonportable-atomics</span></div><div class=\"line\">若只打算在486以上的CPU上运行Apache ，那么使用该选项可以启用更加高效的基于互斥执行的原子操作。</div><div class=\"line\"></div><div class=\"line\">-<span class=\"ruby\">-enable-threads</span></div><div class=\"line\">启用线程支持，在线程型的MPM上必须打开它</div><div class=\"line\"></div><div class=\"line\">-<span class=\"ruby\">-disable-threads</span></div><div class=\"line\">禁用线程支持，如果不使用线程化的MPM ，可以关闭它以减少系统开销。</div><div class=\"line\"></div><div class=\"line\">-<span class=\"ruby\">-disable-dso</span></div><div class=\"line\">禁用DSO支持</div><div class=\"line\"></div><div class=\"line\">-<span class=\"ruby\">-enable-other-child</span></div><div class=\"line\">启用可靠子进程支持</div><div class=\"line\"></div><div class=\"line\">-<span class=\"ruby\">-disable-ipv6</span></div><div class=\"line\">禁用IPv6支持</div></pre></td></tr></table></figure></p>\n</blockquote>\n<figure class=\"highlight haml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">&gt; 可选的额外程序包</div><div class=\"line\">-<span class=\"ruby\">-with-gnu-ld</span></div><div class=\"line\">指定C编译器使用 GNU ld</div><div class=\"line\"></div><div class=\"line\">-<span class=\"ruby\">-with-pic</span></div><div class=\"line\">只使用 PIC/non-PIC 对象[默认为两者都使用]</div><div class=\"line\"></div><div class=\"line\">-<span class=\"ruby\">-with-tags[=TAGS]</span></div><div class=\"line\">包含额外的配置</div><div class=\"line\"></div><div class=\"line\">-<span class=\"ruby\">-with-installbuilddir=DIR</span></div><div class=\"line\">指定APR编译文件的存放位置(默认值为：’$&#123;datadir&#125;/build’)</div><div class=\"line\"></div><div class=\"line\">-<span class=\"ruby\">-without-libtool</span></div><div class=\"line\">禁止使用libtool连接库文件</div><div class=\"line\"></div><div class=\"line\">-<span class=\"ruby\">-with-efence[=DIR]</span></div><div class=\"line\">指定Electric Fence的安装目录</div><div class=\"line\"></div><div class=\"line\">-<span class=\"ruby\">-with-sendfile</span></div><div class=\"line\">强制使用sendfile(译者注：Linux2.4/2.6内核都支持)</div><div class=\"line\"></div><div class=\"line\">-<span class=\"ruby\">-with-egd[=DIR]</span></div><div class=\"line\">使用EDG兼容的socket</div><div class=\"line\"></div><div class=\"line\">-<span class=\"ruby\">-with-devrandom[=DEV]</span></div><div class=\"line\">指定随机设备[默认为：/dev/random]</div></pre></td></tr></table></figure>\n<h2 id=\"用于apr-util的configure脚本的选项：\"><a href=\"#用于apr-util的configure脚本的选项：\" class=\"headerlink\" title=\"用于apr-util的configure脚本的选项：\"></a>用于apr-util的configure脚本的选项：</h2><blockquote>\n<p>可选的额外程序包<br><figure class=\"highlight haml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div></pre></td><td class=\"code\"><pre><div class=\"line\">-<span class=\"ruby\">-with-apr=PATH</span></div><div class=\"line\">指定APR的安装目录(–prefix选项值或apr-config的路径)</div><div class=\"line\"></div><div class=\"line\">-<span class=\"ruby\">-with-ldap-<span class=\"keyword\">include</span>=PATH</span></div><div class=\"line\">ldap包含文件目录(带结尾斜线)</div><div class=\"line\"></div><div class=\"line\">-<span class=\"ruby\">-with-ldap-lib=PATH</span></div><div class=\"line\">ldap库文件路径</div><div class=\"line\"></div><div class=\"line\">-<span class=\"ruby\">-with-ldap=library</span></div><div class=\"line\">使用的ldap库</div><div class=\"line\"></div><div class=\"line\">-<span class=\"ruby\">-with-dbm=DBM</span></div><div class=\"line\">选择使用的DBM类型DBM=&#123;sdbm,gdbm,ndbm,db,db1,db185,db2,db3,db4,db41,db42,db43,db44&#125;</div><div class=\"line\"></div><div class=\"line\">-<span class=\"ruby\">-with-gdbm=PATH</span></div><div class=\"line\">指定GDBM的位置</div><div class=\"line\"></div><div class=\"line\">-<span class=\"ruby\">-with-ndbm=PATH</span></div><div class=\"line\">指定NDBM的位置</div><div class=\"line\"></div><div class=\"line\">-<span class=\"ruby\">-with-berkeley-db=PATH</span></div><div class=\"line\">指定Berkeley DB的位置</div><div class=\"line\"></div><div class=\"line\">-<span class=\"ruby\">-with-pgsql=PATH</span></div><div class=\"line\">指定PostgreSQL的位置</div><div class=\"line\"></div><div class=\"line\">-<span class=\"ruby\">-with-mysql=PATH</span></div><div class=\"line\">参看INSTALL.MySQL文件的内容</div><div class=\"line\"></div><div class=\"line\">-<span class=\"ruby\">-with-sqlite3=PATH</span></div><div class=\"line\">指定sqlite3的位置</div><div class=\"line\"></div><div class=\"line\">-<span class=\"ruby\">-with-sqlite2=PATH</span></div><div class=\"line\">指定sqlite2的位置</div><div class=\"line\"></div><div class=\"line\">-<span class=\"ruby\">-with-expat=PATH</span></div><div class=\"line\">指定Expat的位置或’builtin’</div><div class=\"line\"></div><div class=\"line\">-<span class=\"ruby\">-with-iconv=PATH</span></div><div class=\"line\">iconv的安装目录</div></pre></td></tr></table></figure></p>\n</blockquote>\n<h2 id=\"编译安装\"><a href=\"#编译安装\" class=\"headerlink\" title=\"编译安装\"></a>编译安装</h2><blockquote>\n<p>任何一个程序包被编译操作依赖到时，需要安装此程序包的“开发”组件，其包名一般类似于name-devel-VERSION；</p>\n<p>实验环境：CentOS 7 httpd-2.4</p>\n</blockquote>\n<figure class=\"highlight haml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">~]# yum install pcre-devel apr-devel apr-util-devel openssl-devel</div><div class=\"line\"></div><div class=\"line\">~]# ./configure \\</div><div class=\"line\">-<span class=\"ruby\">-prefix=<span class=\"regexp\">/usr/local</span><span class=\"regexp\">/apache24 \\</span></span></div><div class=\"line\">-<span class=\"ruby\"><span class=\"regexp\">-sysconfdir=/etc</span><span class=\"regexp\">/httpd24 \\</span></span></div><div class=\"line\">-<span class=\"ruby\"><span class=\"regexp\">-enable-so \\</span></span></div><div class=\"line\">-<span class=\"ruby\"><span class=\"regexp\">-enable-ssl \\</span></span></div><div class=\"line\">-<span class=\"ruby\"><span class=\"regexp\">-enable-rewrite \\</span></span></div><div class=\"line\">-<span class=\"ruby\"><span class=\"regexp\">-with-zlib \\</span></span></div><div class=\"line\">-<span class=\"ruby\"><span class=\"regexp\">-with-pcre \\</span></span></div><div class=\"line\">-<span class=\"ruby\"><span class=\"regexp\">-with-apr=/usr</span> \\</span></div><div class=\"line\">-<span class=\"ruby\">-with-apr-util=<span class=\"regexp\">/usr \\</span></span></div><div class=\"line\">-<span class=\"ruby\"><span class=\"regexp\">-enable-modules=most \\</span></span></div><div class=\"line\">-<span class=\"ruby\"><span class=\"regexp\">-enable-mpms-shared=all \\</span></span></div><div class=\"line\">-<span class=\"ruby\"><span class=\"regexp\">-with-mpm=prefork</span></span></div><div class=\"line\"></div><div class=\"line\">~]# make -j 4 &amp;&amp; make install</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<h2 id=\"常用编译参数一览\"><a href=\"#常用编译参数一览\" class=\"headerlink\" title=\"常用编译参数一览\"></a>常用编译参数一览</h2><h2 id=\"本文列举一些apache编译过程中常见的编译参数和编译步骤，大致如下所示\"><a href=\"#本文列举一些apache编译过程中常见的编译参数和编译步骤，大致如下所示\" class=\"headerlink\" title=\"本文列举一些apache编译过程中常见的编译参数和编译步骤，大致如下所示\"></a>本文列举一些apache编译过程中常见的编译参数和编译步骤，大致如下所示</h2>","more":"<figure class=\"highlight gauss\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div></pre></td><td class=\"code\"><pre><div class=\"line\">./configure   <span class=\"meta\">#配置源代码树</span></div><div class=\"line\"></div><div class=\"line\">–prefix=/usr/<span class=\"keyword\">local</span>/apache2   <span class=\"meta\">#体系无关文件的顶级安装目录PREFIX ，也就Apache的安装目录。</span></div><div class=\"line\"></div><div class=\"line\">–<span class=\"keyword\">enable</span>-module=so   <span class=\"comment\">//打开 so 模块，so 模块是用来提 DSO 支持的 apache 核心模块</span></div><div class=\"line\"></div><div class=\"line\">–<span class=\"keyword\">enable</span>-deflate=shared   <span class=\"comment\">//支持网页压缩</span></div><div class=\"line\"></div><div class=\"line\">–<span class=\"keyword\">enable</span>-expires=shared   <span class=\"comment\">//支持 HTTP 控制</span></div><div class=\"line\"></div><div class=\"line\">–<span class=\"keyword\">enable</span>-rewrite=shared   <span class=\"comment\">//支持 URL 重写</span></div><div class=\"line\"></div><div class=\"line\">–<span class=\"keyword\">enable</span>-cache <span class=\"comment\">//支持缓存</span></div><div class=\"line\"></div><div class=\"line\">–<span class=\"keyword\">enable</span>-file-cache <span class=\"comment\">//支持文件缓存</span></div><div class=\"line\"></div><div class=\"line\">–<span class=\"keyword\">enable</span>-mem-cache <span class=\"comment\">//支持记忆缓存</span></div><div class=\"line\"></div><div class=\"line\">–<span class=\"keyword\">enable</span>-disk-cache <span class=\"comment\">//支持磁盘缓存</span></div><div class=\"line\"></div><div class=\"line\">–<span class=\"keyword\">enable</span>-static-support   <span class=\"comment\">//支持静态连接(默认为动态连接)</span></div><div class=\"line\"></div><div class=\"line\">–<span class=\"keyword\">enable</span>-static-htpasswd   <span class=\"comment\">//使用静态连接编译 htpasswd – 管理用于基本认证的用户文件</span></div><div class=\"line\"></div><div class=\"line\">–<span class=\"keyword\">enable</span>-static-htdigest   <span class=\"comment\">//使用静态连接编译 htdigest – 管理用于摘要认证的用户文件</span></div><div class=\"line\"></div><div class=\"line\">–<span class=\"keyword\">enable</span>-static-rotatelogs   <span class=\"comment\">//使用静态连接编译 rotatelogs – 滚动 Apache 日志的管道日志程序</span></div><div class=\"line\"></div><div class=\"line\">–<span class=\"keyword\">enable</span>-static-logresolve   <span class=\"comment\">//使用静态连接编译 logresolve – 解析 Apache 日志中的IP地址为主机名</span></div><div class=\"line\"></div><div class=\"line\">–<span class=\"keyword\">enable</span>-static-htdbm   <span class=\"comment\">//使用静态连接编译 htdbm – 操作 DBM 密码数据库</span></div><div class=\"line\"></div><div class=\"line\">–<span class=\"keyword\">enable</span>-static-ab   <span class=\"comment\">//使用静态连接编译 ab – Apache HTTP 服务器性能测试工具</span></div><div class=\"line\"></div><div class=\"line\">–<span class=\"keyword\">enable</span>-static-checkgid   <span class=\"comment\">//使用静态连接编译 checkgid</span></div><div class=\"line\"></div><div class=\"line\">–<span class=\"keyword\">disable</span>-cgid   <span class=\"comment\">//禁止用一个外部 CGI 守护进程执行CGI脚本</span></div><div class=\"line\"></div><div class=\"line\">–<span class=\"keyword\">disable</span>-cgi   <span class=\"comment\">//禁止编译 CGI 版本的 PHP</span></div><div class=\"line\"></div><div class=\"line\">–<span class=\"keyword\">disable</span>-userdir   <span class=\"comment\">//禁止用户从自己的主目录中提供页面</span></div><div class=\"line\"></div><div class=\"line\">–-with-mpm=worker <span class=\"comment\">// 让apache以worker方式运行</span></div><div class=\"line\"></div><div class=\"line\">–<span class=\"keyword\">enable</span>-authn-dbm=shared <span class=\"comment\">// 对动态数据库进行操作。Rewrite时需要。</span></div></pre></td></tr></table></figure>\n<blockquote>\n<p>以下是分门别类的更多参数注解，与上面的会有重复</p>\n</blockquote>\n<h2 id=\"用于apr的configure脚本的选项：\"><a href=\"#用于apr的configure脚本的选项：\" class=\"headerlink\" title=\"用于apr的configure脚本的选项：\"></a>用于apr的configure脚本的选项：</h2><blockquote>\n<p>可选特性<br><figure class=\"highlight haml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div></pre></td><td class=\"code\"><pre><div class=\"line\">-<span class=\"ruby\">-enable-experimental-libtool</span></div><div class=\"line\">启用试验性质的自定义libtool</div><div class=\"line\"></div><div class=\"line\">-<span class=\"ruby\">-disable-libtool-lock</span></div><div class=\"line\">取消锁定(可能导致并行编译崩溃)</div><div class=\"line\"></div><div class=\"line\">-<span class=\"ruby\">-enable-debug</span></div><div class=\"line\">启用调试编译，仅供开发人员使用。</div><div class=\"line\"></div><div class=\"line\">-<span class=\"ruby\">-enable-maintainer-mode</span></div><div class=\"line\">打开调试和编译时警告，仅供开发人员使用。</div><div class=\"line\"></div><div class=\"line\">-<span class=\"ruby\">-enable-profile</span></div><div class=\"line\">打开编译profiling(GCC)</div><div class=\"line\"></div><div class=\"line\">-<span class=\"ruby\">-enable-pool-debug[=yes<span class=\"params\">|no|</span>verbose<span class=\"params\">|verbose-alloc|</span>lifetime<span class=\"params\">|owner|</span>all]</span></div><div class=\"line\">打开pools调试</div><div class=\"line\"></div><div class=\"line\">-<span class=\"ruby\">-enable-malloc-debug</span></div><div class=\"line\">打开BeOS平台上的malloc_debug</div><div class=\"line\"></div><div class=\"line\">-<span class=\"ruby\">-disable-lfs</span></div><div class=\"line\">在32-bit平台上禁用大文件支持(large file support)</div><div class=\"line\"></div><div class=\"line\">-<span class=\"ruby\">-enable-nonportable-atomics</span></div><div class=\"line\">若只打算在486以上的CPU上运行Apache ，那么使用该选项可以启用更加高效的基于互斥执行的原子操作。</div><div class=\"line\"></div><div class=\"line\">-<span class=\"ruby\">-enable-threads</span></div><div class=\"line\">启用线程支持，在线程型的MPM上必须打开它</div><div class=\"line\"></div><div class=\"line\">-<span class=\"ruby\">-disable-threads</span></div><div class=\"line\">禁用线程支持，如果不使用线程化的MPM ，可以关闭它以减少系统开销。</div><div class=\"line\"></div><div class=\"line\">-<span class=\"ruby\">-disable-dso</span></div><div class=\"line\">禁用DSO支持</div><div class=\"line\"></div><div class=\"line\">-<span class=\"ruby\">-enable-other-child</span></div><div class=\"line\">启用可靠子进程支持</div><div class=\"line\"></div><div class=\"line\">-<span class=\"ruby\">-disable-ipv6</span></div><div class=\"line\">禁用IPv6支持</div></pre></td></tr></table></figure></p>\n</blockquote>\n<figure class=\"highlight haml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">&gt; 可选的额外程序包</div><div class=\"line\">-<span class=\"ruby\">-with-gnu-ld</span></div><div class=\"line\">指定C编译器使用 GNU ld</div><div class=\"line\"></div><div class=\"line\">-<span class=\"ruby\">-with-pic</span></div><div class=\"line\">只使用 PIC/non-PIC 对象[默认为两者都使用]</div><div class=\"line\"></div><div class=\"line\">-<span class=\"ruby\">-with-tags[=TAGS]</span></div><div class=\"line\">包含额外的配置</div><div class=\"line\"></div><div class=\"line\">-<span class=\"ruby\">-with-installbuilddir=DIR</span></div><div class=\"line\">指定APR编译文件的存放位置(默认值为：’$&#123;datadir&#125;/build’)</div><div class=\"line\"></div><div class=\"line\">-<span class=\"ruby\">-without-libtool</span></div><div class=\"line\">禁止使用libtool连接库文件</div><div class=\"line\"></div><div class=\"line\">-<span class=\"ruby\">-with-efence[=DIR]</span></div><div class=\"line\">指定Electric Fence的安装目录</div><div class=\"line\"></div><div class=\"line\">-<span class=\"ruby\">-with-sendfile</span></div><div class=\"line\">强制使用sendfile(译者注：Linux2.4/2.6内核都支持)</div><div class=\"line\"></div><div class=\"line\">-<span class=\"ruby\">-with-egd[=DIR]</span></div><div class=\"line\">使用EDG兼容的socket</div><div class=\"line\"></div><div class=\"line\">-<span class=\"ruby\">-with-devrandom[=DEV]</span></div><div class=\"line\">指定随机设备[默认为：/dev/random]</div></pre></td></tr></table></figure>\n<h2 id=\"用于apr-util的configure脚本的选项：\"><a href=\"#用于apr-util的configure脚本的选项：\" class=\"headerlink\" title=\"用于apr-util的configure脚本的选项：\"></a>用于apr-util的configure脚本的选项：</h2><blockquote>\n<p>可选的额外程序包<br><figure class=\"highlight haml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div></pre></td><td class=\"code\"><pre><div class=\"line\">-<span class=\"ruby\">-with-apr=PATH</span></div><div class=\"line\">指定APR的安装目录(–prefix选项值或apr-config的路径)</div><div class=\"line\"></div><div class=\"line\">-<span class=\"ruby\">-with-ldap-<span class=\"keyword\">include</span>=PATH</span></div><div class=\"line\">ldap包含文件目录(带结尾斜线)</div><div class=\"line\"></div><div class=\"line\">-<span class=\"ruby\">-with-ldap-lib=PATH</span></div><div class=\"line\">ldap库文件路径</div><div class=\"line\"></div><div class=\"line\">-<span class=\"ruby\">-with-ldap=library</span></div><div class=\"line\">使用的ldap库</div><div class=\"line\"></div><div class=\"line\">-<span class=\"ruby\">-with-dbm=DBM</span></div><div class=\"line\">选择使用的DBM类型DBM=&#123;sdbm,gdbm,ndbm,db,db1,db185,db2,db3,db4,db41,db42,db43,db44&#125;</div><div class=\"line\"></div><div class=\"line\">-<span class=\"ruby\">-with-gdbm=PATH</span></div><div class=\"line\">指定GDBM的位置</div><div class=\"line\"></div><div class=\"line\">-<span class=\"ruby\">-with-ndbm=PATH</span></div><div class=\"line\">指定NDBM的位置</div><div class=\"line\"></div><div class=\"line\">-<span class=\"ruby\">-with-berkeley-db=PATH</span></div><div class=\"line\">指定Berkeley DB的位置</div><div class=\"line\"></div><div class=\"line\">-<span class=\"ruby\">-with-pgsql=PATH</span></div><div class=\"line\">指定PostgreSQL的位置</div><div class=\"line\"></div><div class=\"line\">-<span class=\"ruby\">-with-mysql=PATH</span></div><div class=\"line\">参看INSTALL.MySQL文件的内容</div><div class=\"line\"></div><div class=\"line\">-<span class=\"ruby\">-with-sqlite3=PATH</span></div><div class=\"line\">指定sqlite3的位置</div><div class=\"line\"></div><div class=\"line\">-<span class=\"ruby\">-with-sqlite2=PATH</span></div><div class=\"line\">指定sqlite2的位置</div><div class=\"line\"></div><div class=\"line\">-<span class=\"ruby\">-with-expat=PATH</span></div><div class=\"line\">指定Expat的位置或’builtin’</div><div class=\"line\"></div><div class=\"line\">-<span class=\"ruby\">-with-iconv=PATH</span></div><div class=\"line\">iconv的安装目录</div></pre></td></tr></table></figure></p>\n</blockquote>\n<h2 id=\"编译安装\"><a href=\"#编译安装\" class=\"headerlink\" title=\"编译安装\"></a>编译安装</h2><blockquote>\n<p>任何一个程序包被编译操作依赖到时，需要安装此程序包的“开发”组件，其包名一般类似于name-devel-VERSION；</p>\n<p>实验环境：CentOS 7 httpd-2.4</p>\n</blockquote>\n<figure class=\"highlight haml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">~]# yum install pcre-devel apr-devel apr-util-devel openssl-devel</div><div class=\"line\"></div><div class=\"line\">~]# ./configure \\</div><div class=\"line\">-<span class=\"ruby\">-prefix=<span class=\"regexp\">/usr/local</span><span class=\"regexp\">/apache24 \\</span></span></div><div class=\"line\">-<span class=\"ruby\"><span class=\"regexp\">-sysconfdir=/etc</span><span class=\"regexp\">/httpd24 \\</span></span></div><div class=\"line\">-<span class=\"ruby\"><span class=\"regexp\">-enable-so \\</span></span></div><div class=\"line\">-<span class=\"ruby\"><span class=\"regexp\">-enable-ssl \\</span></span></div><div class=\"line\">-<span class=\"ruby\"><span class=\"regexp\">-enable-rewrite \\</span></span></div><div class=\"line\">-<span class=\"ruby\"><span class=\"regexp\">-with-zlib \\</span></span></div><div class=\"line\">-<span class=\"ruby\"><span class=\"regexp\">-with-pcre \\</span></span></div><div class=\"line\">-<span class=\"ruby\"><span class=\"regexp\">-with-apr=/usr</span> \\</span></div><div class=\"line\">-<span class=\"ruby\">-with-apr-util=<span class=\"regexp\">/usr \\</span></span></div><div class=\"line\">-<span class=\"ruby\"><span class=\"regexp\">-enable-modules=most \\</span></span></div><div class=\"line\">-<span class=\"ruby\"><span class=\"regexp\">-enable-mpms-shared=all \\</span></span></div><div class=\"line\">-<span class=\"ruby\"><span class=\"regexp\">-with-mpm=prefork</span></span></div><div class=\"line\"></div><div class=\"line\">~]# make -j 4 &amp;&amp; make install</div></pre></td></tr></table></figure>"},{"title":"nginx反向代理、负载均衡、页面缓存、URL重写及读写分离","abbrlink":"a7ce75d9","date":"2016-06-22T08:12:23.000Z","_content":"\n\n## 官网下载：\n\n> http://nginx.org/download/nginx-1.8.1.tar.gz\n\n## 一、安装nginx时必须先安装相应的编译工具\n\n```\n~]# yum -y install pcre-devel openssl-devel zlib-devel\n```\n<!-- more -->\n### 建立nginx 组\n```\n~]# groupadd -r nginx\n~]# useradd -s /sbin/nologin -g nginx -r nginx\n~]# id nginx\n```\n\n- zlib:nginx提供gzip模块，需要zlib库支持\n- openssl:nginx提供ssl功能\n- pcre:支持地址重写rewrite功能\n\n## 二、解压\n```\ntar -zxvf nginx-1.8.1.tar.gz\n```\n## 三、进入目录\n```\ncd nginx-1.8.1\n```\n## 四、配置\n```\n~]# ./configure \\\n--prefix=/usr/local\n--sbin-path=/usr/sbin/nginx\n--conf-path=/etc/nginx/nginx.conf\n--error-log-path=/var/log/nginx/error.log\n--http-log-path=/var/log/nginx/access.log\n--pid-path=/var/run/nginx.pid\n--lock-path=/var/run/nginx.lock\n--http-client-body-temp-path=/var/cache/nginx/client_temp\n--http-proxy-temp-path=/var/cache/nginx/proxy_temp\n--http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp\n--http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp\n--http-scgi-temp-path=/var/cache/nginx/scgi_temp\n--user=nginx\n--group=nginx\n--with-http_ssl_module\n--with-http_realip_module\n--with-http_addition_module\n--with-http_sub_module\n--with-http_dav_module\n--with-http_flv_module\n--with-http_mp4_module\n--with-http_gunzip_module\n--with-http_gzip_static_module\n--with-http_random_index_module\n--with-http_secure_link_module\n--with-http_stub_status_module\n--with-http_auth_request_module\n--with-threads\n--with-stream\n--with-stream_ssl_module\n--with-http_slice_module\n--with-file-aio\n--with-http_v2_module\t\n```\n\n## 五、编译&&安装\n```\nmake && make install\n```\n\n## 六、配置反向代理(proxy_pass模块)\n\n> apache服务器：172.18.1.49\n> nginx服务器：172.18.1.180\n\n```\nvim /etc/nginx/nginx.conf\n#添加此location\nlocation / {\n            proxy_pass  http://172.18.1.49;\n\t\t\tproxy_set_header  X-Real-IP  $remote_addr; #显示客户机真实IP\n        }\n\n```\n注，大家可以看到日志记录的还是代理的IP，没有显示真实客户端的IP，需要修改一下httpd的配置文件。\n## 查看并修改httpd配置文件\n[root@web1 ~]# vim /etc/httpd/conf/httpd.conf\n```\n#注，大家可以这里记录日志的参数还是%h，下面我们修改一下参数。\nLogFormat \"%h %l %u %t \\\"%r\\\" %>s %b \\\"%{Referer}i\\\" \\\"%{User-Agent}i\\\"\" combined\nLogFormat \"%h %l %u %t \\\"%r\\\" %>s %b\" common\nLogFormat \"%{Referer}i -> %U\" referer\nLogFormat \"%{User-agent}i\" agent\n\n#修改为：\nLogFormat \"%{X-Real-IP}i %l %u %t \\\"%r\\\" %>s %b \\\"%{Referer}i\\\" \\\"%{User-Agent}i\\\"\" combined\nLogFormat \"%h %l %u %t \\\"%r\\\" %>s %b\" common\nLogFormat \"%{Referer}i -> %U\" referer\nLogFormat \"%{User-agent}i\" agent\n```\n\n注，这是修改后的参数，将h%修改为%{X-Real-IP}i，好的下面我们再来测试一下。\n## 七、添加upstream实现负载均衡\n> upstream支持的负载均衡算法：\n- 轮询(默认):可指定weight权重\n- ip_hash:来自同一个IP的发往固定的后端主机\n- fair:根据后端服务器的响应时间分配请求\n- url_hash:使url定向到同一个后端服务器\n\n### 配置nginx负载均衡\n```\n#vim /etc/nginx/nginx.conf\n\nupstream webservers {\n      server 192.168.18.201 weight=1;\n      server 192.168.18.202 weight=1;\n  }\n  server {\n      listen       80;\n      server_name  localhost;\n      location / {\n              proxy_pass      http://webservers;\n              proxy_set_header  X-Real-IP  $remote_addr;\n      }\n}\n```\n> 注，upstream是定义在server{ }之外的，不能定义在server{ }内部。定义好upstream之后，用proxy_pass引用一下即可。\n\n## 八、配置nginx对健康状态进行检查\n```\n[root@nginx ~]# vim /etc/nginx/nginx.conf\nupstream webservers {\n        server 192.168.18.201 weight=1 max_fails=2 fail_timeout=2;\n        server 192.168.18.202 weight=1 max_fails=2 fail_timeout=2;\n    }\n```\n重载配置\n```\n[root@nginx ~]# service nginx reload\nnginx: the configuration file /etc/nginx/nginx.conf syntax is ok\nnginx: configuration file /etc/nginx/nginx.conf test is successful\n重新载入 nginx：\n```\n\n## 九、配置sorrysever\n> 如果不幸的是后端所有服务器都不能提供服务了怎么办，用户打开页面就会出现出错页面，那么会带来用户体验的降低，所以我们能不能像配置LVS是配置sorry_server呢，答案是可以的，但这里不是配置sorry_server而是配置backup。\n\n```\nroot@nginx ~]# vim /etc/nginx/nginx.conf\nserver {\n                listen 8080;\n                server_name localhost;\n                root /data/www/errorpage;\n                index index.html;\n        }\nupstream webservers {\n        server 192.168.18.201 weight=1 max_fails=2 fail_timeout=2;\n        server 192.168.18.202 weight=1 max_fails=2 fail_timeout=2;\n        server 127.0.0.1:8080 backup;\n    }\n[root@nginx ~]# mkdir -pv /data/www/errorpage\n[root@nginx errorpage]# cat index.html\n<h1>Sorry......</h1>\n```\n\n## 十、Nginx之页面缓存\n\n### 1.指令说明\n> proxy_cache_path\n\n\n语法：proxy_cache_path path [levels=number] keys_zone=zone_name:zone_size [inactive=time] [max_size=size];  \n默认值：None  \n使用字段：http  \n\n指令指定缓存的路径和一些其他参数，缓存的数据存储在文件中，并且使用代理url的哈希值作为关键字与文件名。levels参数指定缓存的子目录数，例如：\n\n```\nproxy_cache_path  /data/nginx/cache  levels=1:2   keys_zone=one:10m;\n```\n\n文件名类似于：\n\n```\n/data/nginx/cache/c/29/b7f54b2df7773722d382f4809d65029c\n```\n\n> levels指定目录结构，可以使用任意的1位或2位数字作为目录结构，如 X, X:X,或X:X:X 例如: “2”, “2:2”, “1:1:2“，但是最多只能是三级目录。  \n所有活动的key和元数据存储在共享的内存池中，这个区域用keys_zone参数指定。one指的是共享池的名称，10m指的是共享池的大小。  \n\n注意每一个定义的内存池必须是不重复的路径，例如：\n\n```\nproxy_cache_path  /data/nginx/cache/one    levels=1      keys_zone=one:10m;\nproxy_cache_path  /data/nginx/cache/two    levels=2:2    keys_zone=two:100m;\nproxy_cache_path  /data/nginx/cache/three  levels=1:1:2  keys_zone=three:1000m;\n```\n\n如果在inactive参数指定的时间内缓存的数据没有被请求则被删除，默认inactive为10分钟。一个名为cache manager的进程控制磁盘的缓存大小，它被用来删除不活动的缓存和控制缓存大小，这些都在max_size参数中定义，当目前缓存的值超出max_size指定的值之后，超过其大小后最少使用数据（LRU替换算法）将被删除。内存池的大小按照缓存页面数的比例进行设置，一个页面（文件）的元数据大小按照操作系统来定，如FreeBSD/i386下为64字节，FreeBSD/amd64下为128字节。\n\n### proxy_cache\n### 语法：proxy_cache zone_name;  \n### 默认值：None  \n### 使用字段：http, server, location  \n> 设置一个缓存区域的名称，一个相同的区域可以在不同的地方使用。  \n在0.7.48后，缓存遵循后端的”Expires”, “Cache-Control: no-cache”, “Cache-Control: max-age=XXX”头部字段，0.7.66版本以后，”Cache-Control:“private”和”no-store”头同样被遵循。nginx在缓存过程中不会处理”Vary”头，为了确保一些私有数据不被所有的用户看到，后端必须设置 “no-cache”或者”max-age=0”头，或者proxy_cache_key包含用户指定的数据如$cookie_xxx，使用cookie的值作为proxy_cache_key的一部分可以防止缓存私有数据，所以可以在不同的location中分别指定proxy_cache_key的值以便分开私有数据和公有数据。  \n缓存指令依赖代理缓冲区(buffers)，如果proxy_buffers设置为off，缓存不会生效。\n\n### proxy_cache_valid\n> 语法：proxy_cache_valid reply_code [reply_code …] time;  \n默认值：None  \n使用字段：http, server, location  \n为不同的应答设置不同的缓存时间，例如：\n\n```\nproxy_cache_valid  200 302  10m;\nproxy_cache_valid  404      1m;\n```\n\n为应答代码为200和302的设置缓存时间为10分钟，404代码缓存1分钟。  \n如果只定义时间：\n\n```\nproxy_cache_valid 5m;\n```\n\n那么只对代码为200, 301和302的应答进行缓存。  \n同样可以使用any参数任何应答。\n\n```\nproxy_cache_valid  200 302 10m;\nproxy_cache_valid  301 1h;\nproxy_cache_valid  any 1m;\n```\n\n### 定义一个简单nginx缓存服务器\n\n```\n[root@nginx ~]# vim /etc/nginx/nginx.conf\nproxy_cache_path /data/nginx/cache/webserver levels=1:2 keys_zone=webserver:20m max_size=1g;\n   server {\n       listen       80;\n       server_name  localhost;\n       #charset koi8-r;\n       #access_log  logs/host.access.log  main;\n       location / {\n               proxy_pass      http://webservers;\n               proxy_set_header  X-Real-IP  $remote_addr;\n               proxy_cache webserver;\n               proxy_cache_valid 200 10m;\n       }\n}\n```\n\n### 新建缓存目录\n\n```\n[root@nginx ~]# mkdir -pv /data/nginx/cache/webserver\n```\n\n### 重新加载一下配置文件\n\n```\n[root@nginx webserver]# service nginx reload\nnginx: the configuration file /etc/nginx/nginx.conf syntax is ok\nnginx: configuration file /etc/nginx/nginx.conf test is successful\n重新载入 nginx：                                           [确定]\n```\n\n### 缓存变量说明\n#### $server_addr\n> 服务器地址，在完成一次系统调用后可以确定这个值，如果要绕开系统调用，则必须在listen中指定地址并且使用bind参数。\n\n#### $upstream_cache_status\n> 0.8.3版本中其值可能为：\n- MISS 未命中\n- EXPIRED expired。请求被传送到后端。\n- UPDATING expired。由于proxy/fastcgi_cache_use_stale正在更新，将使用旧的应答。\n- STALE expired。由于proxy/fastcgi_cache_use_stale，后端将得到过期的应答。\n- HIT 命中\n\n```\n[root@nginx ~]# vim /etc/nginx/nginx.conf\nproxy_cache_path /data/nginx/cache/webserver levels=1:2 keys_zone=webserver:20m max_size=1g;\n    server {\n        listen       80;\n        server_name  localhost;\n        #charset koi8-r;\n        #access_log  logs/host.access.log  main;\n       #增加两头部\n        add_header X-Via $server_addr;\n        add_header X-Cache $upstream_cache_status;\n        location / {\n                proxy_pass      http://webservers;\n                proxy_set_header  X-Real-IP  $remote_addr;\n                proxy_cache webserver;\n                proxy_cache_valid 200 10m;\n        }\n}\n```\n\n### 重新加载一下配置文件\n\n```\n[root@nginx ~]# service nginx reload\nnginx: the configuration file /etc/nginx/nginx.conf syntax is ok\nnginx: configuration file /etc/nginx/nginx.conf test is successful\n重新载入 nginx：                                           [确定]                       \n```\n\n> 浏览器开调试模式，选择Network选项，我们可以看到，Response Headers，在这里我们可以看到，我们请求的是否是缓存\n\n## Nginx之URL重写\n\n### 1.URL重写模块（Rewrite）\n> 摘要\n这个模块允许使用正则表达式重写URI（需PCRE库），并且可以根据相关变量重定向和选择不同的配置。如果这个指令在server字段中指定，那么将在被请求的location确定之前执行，如果在指令执行后所选择的location中有其他的重写规则，那么它们也被执行。如果在location中执行这个指令产生了新的URI，那么location又一次确定了新的URI。这样的循环可以最多执行10次，超过以后nginx将返回500错误。\n\n### 指令\n#### break\n- 语法：break  \n- 默认值：none  \n- 使用字段：server, location, if  \n- 完成当前设置的规则，停止执行其他的重写指令。  \n示例：\n\n```\nif ($slow) {\n  limit_rate  10k;\n  break;\n}\n```\n\n#### if\n- 语法：if (condition) { … }  \n- 默认值：none  \n- 使用字段：server, location  \n> 注意：在使用if指令之前请查看if is evil page并且尽量考虑用try_files代替。  \n判断一个条件，如果条件成立，则后面的大括号内的语句将执行，相关配置从上级继承。  \n可以在判断语句中指定下列值：\n- 一个变量的名称；不成立的值为：空字符传”“或者一些用“0”开始的字符串。\n- 一个使用=或者!=运算符的比较语句。\n- 使用符号~*和~模式匹配的正则表达式：\n- ~为区分大小写的匹配。\n- ~*不区分大小写的匹配（firefox匹配FireFox）。\n- !~和!~*意为“不匹配的”。\n- 使用-f和!-f检查一个文件是否存在。\n- 使用-d和!-d检查一个目录是否存在。\n- 使用-e和!-e检查一个文件，目录或者软链接是否存在。\n- 使用-x和!-x检查一个文件是否为可执行文件。\n- 正则表达式的一部分可以用圆括号，方便之后按照顺序用$1-$9来引用。  \n\n示例配置：\n```\nif ($http_user_agent ~ MSIE) {\n  rewrite  ^(.*)$  /msie/$1  break;\n}\n                                                                                                                                                        \nif ($http_cookie ~* \"id=([^;] +)(?:;|$)\" ) {\n  set  $id  $1;\n}\n                                                                                                                                                        \nif ($request_method = POST ) {\n  return 405;\n}\n                                                                                                                                                        \nif (!-f $request_filename) {\n  break;\n  proxy_pass  http://127.0.0.1;\n}\n                                                                                                                                                        \nif ($slow) {\n  limit_rate  10k;\n}\n                                                                                                                                                        \nif ($invalid_referer) {\n  return   403;\n}\n                                                                                                                                                        \nif ($args ~ post=140){\n  rewrite ^ http://example.com/ permanent;\n}\n```\n> 内置变量$invalid_referer用指令valid_referers指定。\n\n### return\n- 语法：return code  \n- 默认值：none  \n- 使用字段：server, location, if  \n\n\n> 这个指令结束执行配置语句并为客户端返回状态代码，可以使用下列的值：204，400，402-406，408，410, 411, 413, 416与500-504。此外，非标准代码444将关闭连接并且不发送任何的头部。\n\n### rewrite\n- 语法：rewrite regex replacement flag  \n- 默认值：none  \n- 使用字段：server, location, if  \n\n> 按照相关的正则表达式与字符串修改URI，指令按照在配置文件中出现的顺序执行。  \n可以在重写指令后面添加标记。  \n如果替换的字符串以http://开头，请求将被重定向，并且不再执行多余的rewrite指令。 \n \n尾部的标记(flag)可以是以下的值：\n- last 完成重写指令，之后搜索相应的URI或location。\n- break 完成重写指令。\n- redirect 返回302临时重定向，如果替换字段用http://开头则被使用。\n- permanent 返回301永久重定向。\n\n\n> 注意如果一个重定向是相对的（没有主机名部分），nginx将在重定向的过程中使用匹配server_name指令的“Host”头或者server_name指令指定的第一个名称，如果头不匹配或不存在，如果没有设置server_name，将使用本地主机名，如果你总是想让nginx使用“Host”头，可以在server_name使用“*”通配符（查看http核心模块中的server_name）。例如：\n\n\n```\nrewrite  ^(/download/.*)/media/(.*)\\..*$  $1/mp3/$2.mp3  last;\nrewrite  ^(/download/.*)/audio/(.*)\\..*$  $1/mp3/$2.ra   last;\nreturn   403;\n```\n\n但是如果我们将其放入一个名为/download/的location中，则需要将last标记改为break，否则nginx将执行10次循环并返回500错误。\n\n```\nlocation /download/ {\n  rewrite  ^(/download/.*)/media/(.*)\\..*$  $1/mp3/$2.mp3  break;\n  rewrite  ^(/download/.*)/audio/(.*)\\..*$  $1/mp3/$2.ra   break;\n  return   403;\n}\n```\n\n如果替换字段中包含参数，那么其余的请求参数将附加到后面，为了防止附加，可以在最后一个字符后面跟一个问号：\n```\nrewrite  ^/users/(.*)$  /show?user=$1?  last;\n```\n注意：大括号（{和}），可以同时用在正则表达式和配置块中，为了防止冲突，正则表达式使用大括号需要用双引号（或者单引号）。例如要重写以下的URL：\n```\n/photos/123456\n```\n为:\n```\n/path/to/photos/12/1234/123456.png\n```\n则使用以下正则表达式（注意引号）：\n```\nrewrite  \"/photos/([0-9] {2})([0-9] {2})([0-9] {2})\" /path/to/photos/$1/$1$2/$1$2$3.png;\n```\n\n> 如果指定一个“？”在重写的结尾，Nginx将丢弃请求中的参数，即变量$args，当使用$request_uri或$uri&$args时可以在rewrite结尾使用“？”以避免nginx处理两次参数串。  \n在rewrite中使用$request_uri将www.example.com重写到example.com：\n\n```\nserver {\n   server_name www.example.com;\n   rewrite ^ http://example.com$request_uri? permanent;\n}\n```\n> 同样，重写只对路径进行操作，而不是参数，如果要重写一个带参数的URL，可以使用以下代替：\n\n```\nif ($args ^~ post=100){\n  rewrite ^ http://example.com/new-address.html? permanent;\n}\n```\n>注意$args变量不会被编译，与location过程中的URI不同（参考http核心模块中的location）。\n\n### rewrite_log\n- 语法：rewrite_log on | off  \n- 默认值：rewrite_log off  \n- 使用字段：server, location, if  \n- 变量：无  \n- 启用时将在error log中记录notice 标记的重写日志。\n### set ###\n- 语法：set variable value  \n- 默认值：none  \n- 使用字段：server, location, if  \n\n> 指令设置一个变量并为其赋值，其值可以是文本，变量和它们的组合。  \n可以使用set定义一个新的变量，但是不能使用set设置$http_xxx头部变量的值。\n\n### uninitialized_variable_warn\n- 语法：uninitialized_variable_warn on|off  \n- 默认值：uninitialized_variable_warn on  \n- 使用字段：http, server, location, if  \n- 开启或关闭在未初始化变量中记录警告日志。  \n\n>事实上，rewrite指令在配置文件加载时已经编译到内部代码中，在解释器产生请求时使用。  \n\n这个解释器是一个简单的堆栈虚拟机，如下列指令：\n\n```\nlocation /download/ {\n  if ($forbidden) {\n    return   403;\n  }\n  if ($slow) {\n    limit_rate  10k;\n  }\n  rewrite  ^/(download/.*)/media/(.*)\\..*$  /$1/mp3/$2.mp3  break;\n```\n\n将被编译成以下顺序：\n\n```\nvariable $forbidden\nchecking to zero\nrecovery 403\ncompletion of entire code\nvariable $slow\nchecking to zero\ncheckings of regular excodession\ncopying \"/\"\ncopying $1\ncopying \"/mp3/\"\ncopying $2\ncopying \".mp3\"\ncompletion of regular excodession\ncompletion of entire sequence\n```\n\n> 注意并没有关于limit_rate的代码，因为它没有提及ngx_http_rewrite_module模块，“if”块可以类似”location”指令在配置文件的相同部分同时存在。  \n如果$slow为真，对应的if块将生效，在这个配置中limit_rate的值为10k。  \n\n指令：\n```\nrewrite  ^/(download/.*)/media/(.*)\\..*$  /$1/mp3/$2.mp3  break;\n```\n\n如果我们将第一个斜杠括入圆括号，则可以减少执行顺序：\n```\nrewrite  ^(/download/.*)/media/(.*)\\..*$  $1/mp3/$2.mp3  break;\n```\n\n之后的顺序类似如下：\n```\nchecking regular excodession\ncopying $1\ncopying \"/mp3/\"\ncopying $2\ncopying \".mp3\"\ncompletion of regular excodession\ncompletion of entire code\n```\n\n## 2.简单案例\n> 注，由于配置文件内容较多，为了让大家看着方便，我们备份一下配置文件，打开一个新的配置文件。\n\n```\n[root@nginx ~]# cd /etc/nginx/\n[root@nginx nginx]# mv nginx.conf nginx.conf.proxy\n[root@nginx nginx]# cp nginx.conf.bak nginx.conf\n[root@nginx nginx]# vim /etc/nginx/nginx.conf\nserver {\n      listen       80;\n      server_name  localhost;\n      #charset koi8-r;\n      #access_log  logs/host.access.log  main;\n      location / {\n          root   html;\n          index  index.html index.htm;\n          rewrite ^/bbs/(.*)$ http://192.168.18.201/forum/$1;\n      }\n}\n```\n\n准备forum目录与测试文件\n\n```\n[root@web1 ~]# cd /var/www/html/\n[root@web1 html]# ls\nindex.html\n[root@web1 html]# mkdir forum\n[root@web1 html]# cd forum/\n[root@web1 forum]# vim index.html\n<h1>forum page!</h1>\n```\n\n测试一下\n![](http://img1.51cto.com/attachment/201309/4/2033581_1378277139Z0NA.png)\n\n下面我们来测试一下rewrite重写。\n### 3.重新加载一下配置文件\n\n```\n[root@nginx 63]# service nginx reload\nnginx: the configuration file /etc/nginx/nginx.conf syntax is ok\nnginx: configuration file /etc/nginx/nginx.conf test is successful\n重新载入 nginx：                                           [确定]\n```\n\n### 4.测试一下\n![](http://img1.51cto.com/attachment/201309/4/2033581_1378277140aPFs.png)\n\n> 注，大家可以从图中看出，status code 302指的是临时重定向，那就说明我们rewrite重写配置成功。大家知道302是临时重定向而301是永久重定向，那么怎么实现永久重定向呢。一般服务器与服务器之间是临时重定向，服务器内部是永久重定向。下面我们来演示一下永久重定向\n\n### 5.配置永久重定向\n\n```\n[root@nginx nginx]# vim /etc/nginx/nginx.conf\nserver {\n        listen       80;\n        server_name  localhost;\n        #charset koi8-r;\n        #access_log  logs/host.access.log  main;\n        location / {\n            root   html;\n            index  index.html index.htm;\n            rewrite ^/bbs/(.*)$ /forum/$1;\n        }\n}\n```\n\n准备forum目录与测试文件\n\n```\n[root@nginx ~]# cd /usr/html/\n[root@nginx html]# ls\n50x.html  index.html\n[root@nginx html]# mkdir forum\n[root@nginx html]# cd forum/\n[root@nginx forum]# vim index.html\n<h1>192.168.18.208 forum page</h1>\n```\n\n6.重新加载一下配置文件\n\n```\n[root@nginx ~]# service nginx reload\nnginx: the configuration file /etc/nginx/nginx.conf syntax is ok\nnginx: configuration file /etc/nginx/nginx.conf test is successful\n重新载入 nginx：                                           [确定]\n\n```        \n\n7.测试一下\n![](http://img1.51cto.com/attachment/201309/4/2033581_1378277141NTPi.png)\n\n\n> 注，大家从图中可以看到，我们访问bbs/是直接帮我们跳转到forum/下，这种本机的跳转就是永久重定向也叫隐式重定向。好了，rewrite重定向我们就说到这里了，想要查询更多关于重定向的指令请参考官方文档。最后，我们来说一下读写分离。\n\n\n## 十二、Nginx读写分离\n\n### 1.实验拓扑\n![](http://img1.51cto.com/attachment/201309/4/2033581_1378277142c7NS.png)\n\n> 需求分析，前端一台nginx做负载均衡反向代理，后面两台httpd服务器。整个架构是提供BBS(论坛)服务，有一需求得实现读写分离，就是上传附件的功能，我们上传的附件只能上传到Web1，然后在Web1上利用rsync+inotify实现附件同步，大家都知道rsync+inotify只能是主向从同步，不能双向同步。所以Web1可进行写操作，而Web2只能进行读操作，这就带来读写分离的需求，下面我们就来说一下，读写分离怎么实现。\n\n\n### 2.WebDAV功能说明\n> WebDAV （Web-based Distributed Authoring and Versioning） 一种基于 HTTP 1.1协议的通信协议。它扩展了HTTP 1.1，在GET、POST、HEAD等几个HTTP标准方法以外添加了一些新的方法，使应用程序可直接对Web Server直接读写，并支持写文件锁定(Locking)及解锁(Unlock)，还可以支持文件的版本控制。这样我们就能配置读写分离功能了，下面我们来具体配置一下。\n\n\n### 3.修改配置文件\n\n```\n[root@nginx nginx]# vim /etc/nginx/nginx.conf\nserver {\n        listen       80;\n        server_name  localhost;\n        #charset koi8-r;\n        #access_log  logs/host.access.log  main;\n        location / {\n                proxy_pass http://192.168.18.202;\n                if ($request_method = \"PUT\"){\n                        proxy_pass http://192.168.18.201;\n                }\n        }\n}\n```\n\n### 4.重新加载一下配置文件\n\n```\n[root@nginx ~]# service nginx reload\nnginx: the configuration file /etc/nginx/nginx.conf syntax is ok\nnginx: configuration file /etc/nginx/nginx.conf test is successful\n重新载入 nginx：                                           [确定]\n```\n\n### 5.配置httpd的WebDAV功能\n\n```\n[root@web1 ~]# vim /etc/httpd/conf/httpd.conf\n```\n\n![](http://img1.51cto.com/attachment/201309/4/2033581_1378277143SBSg.png)\n\n> 注，在<Directory \"/var/www/html\">下启用就行。\n\n\n### 6.重新启动一下httpd\n\n```\n[root@web1 ~]# service httpd restart\n停止 httpd：                                               [确定]\n正在启动 httpd：                                           [确定]\n```\n\n### 7.测试一下\n\n```\n[root@nginx ~]# curl http://192.168.18.201\n<h1>web1.test.com</h1>\n[root@nginx ~]# curl http://192.168.18.202\n<h1>web2.test.com</h1>\n```\n\n> 注，web1与web2访问都没问题。\n\n```\n[root@nginx ~]# curl -T /etc/issue  http://192.168.18.202\n<!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\n<html><head>\n<title>405 Method Not Allowed</title>\n</head><body>\n<h1>Method Not Allowed</h1>\nThe requested method PUT is not allowed for the URL /issue.\n<hr>\n<address>Apache/2.2.15 (CentOS) Server at 192.168.18.202 Port 80</address>\n</body></html>\n```\n\n> 注，我们上传文件到，web2上时，因为web2只人读功能，所以没有开户WebDAV功能，所以显示是405 Method Not Allowed。  \n\n```\n[root@nginx ~]# curl -T /etc/issue  http://192.168.18.201\n<!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\n<html><head>\n<title>403 Forbidden</title>\n</head><body>\n<h1>Forbidden</h1>\nYou don't have permission to access /issue\non this server.\n<hr>\n<address>Apache/2.2.15 (CentOS) Server at 192.168.18.201 Port 80</address>\n</body></html>\n```\n\n> 注，我们在Web1开启了WebDAV功能，但我们目录是root目录是不允许apache用户上传的，所以显示的是403 Forbidden。下面我们给apache授权，允许上传。\n\n```\n[root@web1 ~]# setfacl -m u:apache:rwx /var/www/html/\n```\n下面我们再来测试一下，\n\n```\n[root@nginx ~]# curl -T /etc/issue  http://192.168.18.201\n<!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\n<html><head>\n<title>201 Created</title>\n</head><body>\n<h1>Created</h1>\nResource /issue has been created.\n<hr />\n<address>Apache/2.2.15 (CentOS) Server at 192.168.18.201 Port 80</address>\n</body></html>\n```\n\n> 注，大家可以看到我们成功的上传了文件，说明nginx读写分离功能配置完成。最后，我们来查看一下上传的文件。\n\n\n```\n[root@web1 ~]# cd /var/www/html/\n[root@web1 html]# ll\n总用量 12\ndrwxr-xr-x 2 root   root   4096 9月   4 13:16 forum\n-rw-r--r-- 1 root   root     23 9月   3 23:37 index.html\n-rw-r--r-- 1 apache apache   47 9月   4 14:06 issue\n```\n\n好了，到这里nginx的反向代理、负载均衡、页面缓存、URL重写及读写分离就全部讲解完成。希望大家有所收获","source":"_posts/2016-06-22-nginx安装与常用配置.md","raw":"---\ntitle: nginx反向代理、负载均衡、页面缓存、URL重写及读写分离\ncategories: 实践与总结\ntag: web\nabbrlink: a7ce75d9\ndate: 2016-06-22 16:12:23\n---\n\n\n## 官网下载：\n\n> http://nginx.org/download/nginx-1.8.1.tar.gz\n\n## 一、安装nginx时必须先安装相应的编译工具\n\n```\n~]# yum -y install pcre-devel openssl-devel zlib-devel\n```\n<!-- more -->\n### 建立nginx 组\n```\n~]# groupadd -r nginx\n~]# useradd -s /sbin/nologin -g nginx -r nginx\n~]# id nginx\n```\n\n- zlib:nginx提供gzip模块，需要zlib库支持\n- openssl:nginx提供ssl功能\n- pcre:支持地址重写rewrite功能\n\n## 二、解压\n```\ntar -zxvf nginx-1.8.1.tar.gz\n```\n## 三、进入目录\n```\ncd nginx-1.8.1\n```\n## 四、配置\n```\n~]# ./configure \\\n--prefix=/usr/local\n--sbin-path=/usr/sbin/nginx\n--conf-path=/etc/nginx/nginx.conf\n--error-log-path=/var/log/nginx/error.log\n--http-log-path=/var/log/nginx/access.log\n--pid-path=/var/run/nginx.pid\n--lock-path=/var/run/nginx.lock\n--http-client-body-temp-path=/var/cache/nginx/client_temp\n--http-proxy-temp-path=/var/cache/nginx/proxy_temp\n--http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp\n--http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp\n--http-scgi-temp-path=/var/cache/nginx/scgi_temp\n--user=nginx\n--group=nginx\n--with-http_ssl_module\n--with-http_realip_module\n--with-http_addition_module\n--with-http_sub_module\n--with-http_dav_module\n--with-http_flv_module\n--with-http_mp4_module\n--with-http_gunzip_module\n--with-http_gzip_static_module\n--with-http_random_index_module\n--with-http_secure_link_module\n--with-http_stub_status_module\n--with-http_auth_request_module\n--with-threads\n--with-stream\n--with-stream_ssl_module\n--with-http_slice_module\n--with-file-aio\n--with-http_v2_module\t\n```\n\n## 五、编译&&安装\n```\nmake && make install\n```\n\n## 六、配置反向代理(proxy_pass模块)\n\n> apache服务器：172.18.1.49\n> nginx服务器：172.18.1.180\n\n```\nvim /etc/nginx/nginx.conf\n#添加此location\nlocation / {\n            proxy_pass  http://172.18.1.49;\n\t\t\tproxy_set_header  X-Real-IP  $remote_addr; #显示客户机真实IP\n        }\n\n```\n注，大家可以看到日志记录的还是代理的IP，没有显示真实客户端的IP，需要修改一下httpd的配置文件。\n## 查看并修改httpd配置文件\n[root@web1 ~]# vim /etc/httpd/conf/httpd.conf\n```\n#注，大家可以这里记录日志的参数还是%h，下面我们修改一下参数。\nLogFormat \"%h %l %u %t \\\"%r\\\" %>s %b \\\"%{Referer}i\\\" \\\"%{User-Agent}i\\\"\" combined\nLogFormat \"%h %l %u %t \\\"%r\\\" %>s %b\" common\nLogFormat \"%{Referer}i -> %U\" referer\nLogFormat \"%{User-agent}i\" agent\n\n#修改为：\nLogFormat \"%{X-Real-IP}i %l %u %t \\\"%r\\\" %>s %b \\\"%{Referer}i\\\" \\\"%{User-Agent}i\\\"\" combined\nLogFormat \"%h %l %u %t \\\"%r\\\" %>s %b\" common\nLogFormat \"%{Referer}i -> %U\" referer\nLogFormat \"%{User-agent}i\" agent\n```\n\n注，这是修改后的参数，将h%修改为%{X-Real-IP}i，好的下面我们再来测试一下。\n## 七、添加upstream实现负载均衡\n> upstream支持的负载均衡算法：\n- 轮询(默认):可指定weight权重\n- ip_hash:来自同一个IP的发往固定的后端主机\n- fair:根据后端服务器的响应时间分配请求\n- url_hash:使url定向到同一个后端服务器\n\n### 配置nginx负载均衡\n```\n#vim /etc/nginx/nginx.conf\n\nupstream webservers {\n      server 192.168.18.201 weight=1;\n      server 192.168.18.202 weight=1;\n  }\n  server {\n      listen       80;\n      server_name  localhost;\n      location / {\n              proxy_pass      http://webservers;\n              proxy_set_header  X-Real-IP  $remote_addr;\n      }\n}\n```\n> 注，upstream是定义在server{ }之外的，不能定义在server{ }内部。定义好upstream之后，用proxy_pass引用一下即可。\n\n## 八、配置nginx对健康状态进行检查\n```\n[root@nginx ~]# vim /etc/nginx/nginx.conf\nupstream webservers {\n        server 192.168.18.201 weight=1 max_fails=2 fail_timeout=2;\n        server 192.168.18.202 weight=1 max_fails=2 fail_timeout=2;\n    }\n```\n重载配置\n```\n[root@nginx ~]# service nginx reload\nnginx: the configuration file /etc/nginx/nginx.conf syntax is ok\nnginx: configuration file /etc/nginx/nginx.conf test is successful\n重新载入 nginx：\n```\n\n## 九、配置sorrysever\n> 如果不幸的是后端所有服务器都不能提供服务了怎么办，用户打开页面就会出现出错页面，那么会带来用户体验的降低，所以我们能不能像配置LVS是配置sorry_server呢，答案是可以的，但这里不是配置sorry_server而是配置backup。\n\n```\nroot@nginx ~]# vim /etc/nginx/nginx.conf\nserver {\n                listen 8080;\n                server_name localhost;\n                root /data/www/errorpage;\n                index index.html;\n        }\nupstream webservers {\n        server 192.168.18.201 weight=1 max_fails=2 fail_timeout=2;\n        server 192.168.18.202 weight=1 max_fails=2 fail_timeout=2;\n        server 127.0.0.1:8080 backup;\n    }\n[root@nginx ~]# mkdir -pv /data/www/errorpage\n[root@nginx errorpage]# cat index.html\n<h1>Sorry......</h1>\n```\n\n## 十、Nginx之页面缓存\n\n### 1.指令说明\n> proxy_cache_path\n\n\n语法：proxy_cache_path path [levels=number] keys_zone=zone_name:zone_size [inactive=time] [max_size=size];  \n默认值：None  \n使用字段：http  \n\n指令指定缓存的路径和一些其他参数，缓存的数据存储在文件中，并且使用代理url的哈希值作为关键字与文件名。levels参数指定缓存的子目录数，例如：\n\n```\nproxy_cache_path  /data/nginx/cache  levels=1:2   keys_zone=one:10m;\n```\n\n文件名类似于：\n\n```\n/data/nginx/cache/c/29/b7f54b2df7773722d382f4809d65029c\n```\n\n> levels指定目录结构，可以使用任意的1位或2位数字作为目录结构，如 X, X:X,或X:X:X 例如: “2”, “2:2”, “1:1:2“，但是最多只能是三级目录。  \n所有活动的key和元数据存储在共享的内存池中，这个区域用keys_zone参数指定。one指的是共享池的名称，10m指的是共享池的大小。  \n\n注意每一个定义的内存池必须是不重复的路径，例如：\n\n```\nproxy_cache_path  /data/nginx/cache/one    levels=1      keys_zone=one:10m;\nproxy_cache_path  /data/nginx/cache/two    levels=2:2    keys_zone=two:100m;\nproxy_cache_path  /data/nginx/cache/three  levels=1:1:2  keys_zone=three:1000m;\n```\n\n如果在inactive参数指定的时间内缓存的数据没有被请求则被删除，默认inactive为10分钟。一个名为cache manager的进程控制磁盘的缓存大小，它被用来删除不活动的缓存和控制缓存大小，这些都在max_size参数中定义，当目前缓存的值超出max_size指定的值之后，超过其大小后最少使用数据（LRU替换算法）将被删除。内存池的大小按照缓存页面数的比例进行设置，一个页面（文件）的元数据大小按照操作系统来定，如FreeBSD/i386下为64字节，FreeBSD/amd64下为128字节。\n\n### proxy_cache\n### 语法：proxy_cache zone_name;  \n### 默认值：None  \n### 使用字段：http, server, location  \n> 设置一个缓存区域的名称，一个相同的区域可以在不同的地方使用。  \n在0.7.48后，缓存遵循后端的”Expires”, “Cache-Control: no-cache”, “Cache-Control: max-age=XXX”头部字段，0.7.66版本以后，”Cache-Control:“private”和”no-store”头同样被遵循。nginx在缓存过程中不会处理”Vary”头，为了确保一些私有数据不被所有的用户看到，后端必须设置 “no-cache”或者”max-age=0”头，或者proxy_cache_key包含用户指定的数据如$cookie_xxx，使用cookie的值作为proxy_cache_key的一部分可以防止缓存私有数据，所以可以在不同的location中分别指定proxy_cache_key的值以便分开私有数据和公有数据。  \n缓存指令依赖代理缓冲区(buffers)，如果proxy_buffers设置为off，缓存不会生效。\n\n### proxy_cache_valid\n> 语法：proxy_cache_valid reply_code [reply_code …] time;  \n默认值：None  \n使用字段：http, server, location  \n为不同的应答设置不同的缓存时间，例如：\n\n```\nproxy_cache_valid  200 302  10m;\nproxy_cache_valid  404      1m;\n```\n\n为应答代码为200和302的设置缓存时间为10分钟，404代码缓存1分钟。  \n如果只定义时间：\n\n```\nproxy_cache_valid 5m;\n```\n\n那么只对代码为200, 301和302的应答进行缓存。  \n同样可以使用any参数任何应答。\n\n```\nproxy_cache_valid  200 302 10m;\nproxy_cache_valid  301 1h;\nproxy_cache_valid  any 1m;\n```\n\n### 定义一个简单nginx缓存服务器\n\n```\n[root@nginx ~]# vim /etc/nginx/nginx.conf\nproxy_cache_path /data/nginx/cache/webserver levels=1:2 keys_zone=webserver:20m max_size=1g;\n   server {\n       listen       80;\n       server_name  localhost;\n       #charset koi8-r;\n       #access_log  logs/host.access.log  main;\n       location / {\n               proxy_pass      http://webservers;\n               proxy_set_header  X-Real-IP  $remote_addr;\n               proxy_cache webserver;\n               proxy_cache_valid 200 10m;\n       }\n}\n```\n\n### 新建缓存目录\n\n```\n[root@nginx ~]# mkdir -pv /data/nginx/cache/webserver\n```\n\n### 重新加载一下配置文件\n\n```\n[root@nginx webserver]# service nginx reload\nnginx: the configuration file /etc/nginx/nginx.conf syntax is ok\nnginx: configuration file /etc/nginx/nginx.conf test is successful\n重新载入 nginx：                                           [确定]\n```\n\n### 缓存变量说明\n#### $server_addr\n> 服务器地址，在完成一次系统调用后可以确定这个值，如果要绕开系统调用，则必须在listen中指定地址并且使用bind参数。\n\n#### $upstream_cache_status\n> 0.8.3版本中其值可能为：\n- MISS 未命中\n- EXPIRED expired。请求被传送到后端。\n- UPDATING expired。由于proxy/fastcgi_cache_use_stale正在更新，将使用旧的应答。\n- STALE expired。由于proxy/fastcgi_cache_use_stale，后端将得到过期的应答。\n- HIT 命中\n\n```\n[root@nginx ~]# vim /etc/nginx/nginx.conf\nproxy_cache_path /data/nginx/cache/webserver levels=1:2 keys_zone=webserver:20m max_size=1g;\n    server {\n        listen       80;\n        server_name  localhost;\n        #charset koi8-r;\n        #access_log  logs/host.access.log  main;\n       #增加两头部\n        add_header X-Via $server_addr;\n        add_header X-Cache $upstream_cache_status;\n        location / {\n                proxy_pass      http://webservers;\n                proxy_set_header  X-Real-IP  $remote_addr;\n                proxy_cache webserver;\n                proxy_cache_valid 200 10m;\n        }\n}\n```\n\n### 重新加载一下配置文件\n\n```\n[root@nginx ~]# service nginx reload\nnginx: the configuration file /etc/nginx/nginx.conf syntax is ok\nnginx: configuration file /etc/nginx/nginx.conf test is successful\n重新载入 nginx：                                           [确定]                       \n```\n\n> 浏览器开调试模式，选择Network选项，我们可以看到，Response Headers，在这里我们可以看到，我们请求的是否是缓存\n\n## Nginx之URL重写\n\n### 1.URL重写模块（Rewrite）\n> 摘要\n这个模块允许使用正则表达式重写URI（需PCRE库），并且可以根据相关变量重定向和选择不同的配置。如果这个指令在server字段中指定，那么将在被请求的location确定之前执行，如果在指令执行后所选择的location中有其他的重写规则，那么它们也被执行。如果在location中执行这个指令产生了新的URI，那么location又一次确定了新的URI。这样的循环可以最多执行10次，超过以后nginx将返回500错误。\n\n### 指令\n#### break\n- 语法：break  \n- 默认值：none  \n- 使用字段：server, location, if  \n- 完成当前设置的规则，停止执行其他的重写指令。  \n示例：\n\n```\nif ($slow) {\n  limit_rate  10k;\n  break;\n}\n```\n\n#### if\n- 语法：if (condition) { … }  \n- 默认值：none  \n- 使用字段：server, location  \n> 注意：在使用if指令之前请查看if is evil page并且尽量考虑用try_files代替。  \n判断一个条件，如果条件成立，则后面的大括号内的语句将执行，相关配置从上级继承。  \n可以在判断语句中指定下列值：\n- 一个变量的名称；不成立的值为：空字符传”“或者一些用“0”开始的字符串。\n- 一个使用=或者!=运算符的比较语句。\n- 使用符号~*和~模式匹配的正则表达式：\n- ~为区分大小写的匹配。\n- ~*不区分大小写的匹配（firefox匹配FireFox）。\n- !~和!~*意为“不匹配的”。\n- 使用-f和!-f检查一个文件是否存在。\n- 使用-d和!-d检查一个目录是否存在。\n- 使用-e和!-e检查一个文件，目录或者软链接是否存在。\n- 使用-x和!-x检查一个文件是否为可执行文件。\n- 正则表达式的一部分可以用圆括号，方便之后按照顺序用$1-$9来引用。  \n\n示例配置：\n```\nif ($http_user_agent ~ MSIE) {\n  rewrite  ^(.*)$  /msie/$1  break;\n}\n                                                                                                                                                        \nif ($http_cookie ~* \"id=([^;] +)(?:;|$)\" ) {\n  set  $id  $1;\n}\n                                                                                                                                                        \nif ($request_method = POST ) {\n  return 405;\n}\n                                                                                                                                                        \nif (!-f $request_filename) {\n  break;\n  proxy_pass  http://127.0.0.1;\n}\n                                                                                                                                                        \nif ($slow) {\n  limit_rate  10k;\n}\n                                                                                                                                                        \nif ($invalid_referer) {\n  return   403;\n}\n                                                                                                                                                        \nif ($args ~ post=140){\n  rewrite ^ http://example.com/ permanent;\n}\n```\n> 内置变量$invalid_referer用指令valid_referers指定。\n\n### return\n- 语法：return code  \n- 默认值：none  \n- 使用字段：server, location, if  \n\n\n> 这个指令结束执行配置语句并为客户端返回状态代码，可以使用下列的值：204，400，402-406，408，410, 411, 413, 416与500-504。此外，非标准代码444将关闭连接并且不发送任何的头部。\n\n### rewrite\n- 语法：rewrite regex replacement flag  \n- 默认值：none  \n- 使用字段：server, location, if  \n\n> 按照相关的正则表达式与字符串修改URI，指令按照在配置文件中出现的顺序执行。  \n可以在重写指令后面添加标记。  \n如果替换的字符串以http://开头，请求将被重定向，并且不再执行多余的rewrite指令。 \n \n尾部的标记(flag)可以是以下的值：\n- last 完成重写指令，之后搜索相应的URI或location。\n- break 完成重写指令。\n- redirect 返回302临时重定向，如果替换字段用http://开头则被使用。\n- permanent 返回301永久重定向。\n\n\n> 注意如果一个重定向是相对的（没有主机名部分），nginx将在重定向的过程中使用匹配server_name指令的“Host”头或者server_name指令指定的第一个名称，如果头不匹配或不存在，如果没有设置server_name，将使用本地主机名，如果你总是想让nginx使用“Host”头，可以在server_name使用“*”通配符（查看http核心模块中的server_name）。例如：\n\n\n```\nrewrite  ^(/download/.*)/media/(.*)\\..*$  $1/mp3/$2.mp3  last;\nrewrite  ^(/download/.*)/audio/(.*)\\..*$  $1/mp3/$2.ra   last;\nreturn   403;\n```\n\n但是如果我们将其放入一个名为/download/的location中，则需要将last标记改为break，否则nginx将执行10次循环并返回500错误。\n\n```\nlocation /download/ {\n  rewrite  ^(/download/.*)/media/(.*)\\..*$  $1/mp3/$2.mp3  break;\n  rewrite  ^(/download/.*)/audio/(.*)\\..*$  $1/mp3/$2.ra   break;\n  return   403;\n}\n```\n\n如果替换字段中包含参数，那么其余的请求参数将附加到后面，为了防止附加，可以在最后一个字符后面跟一个问号：\n```\nrewrite  ^/users/(.*)$  /show?user=$1?  last;\n```\n注意：大括号（{和}），可以同时用在正则表达式和配置块中，为了防止冲突，正则表达式使用大括号需要用双引号（或者单引号）。例如要重写以下的URL：\n```\n/photos/123456\n```\n为:\n```\n/path/to/photos/12/1234/123456.png\n```\n则使用以下正则表达式（注意引号）：\n```\nrewrite  \"/photos/([0-9] {2})([0-9] {2})([0-9] {2})\" /path/to/photos/$1/$1$2/$1$2$3.png;\n```\n\n> 如果指定一个“？”在重写的结尾，Nginx将丢弃请求中的参数，即变量$args，当使用$request_uri或$uri&$args时可以在rewrite结尾使用“？”以避免nginx处理两次参数串。  \n在rewrite中使用$request_uri将www.example.com重写到example.com：\n\n```\nserver {\n   server_name www.example.com;\n   rewrite ^ http://example.com$request_uri? permanent;\n}\n```\n> 同样，重写只对路径进行操作，而不是参数，如果要重写一个带参数的URL，可以使用以下代替：\n\n```\nif ($args ^~ post=100){\n  rewrite ^ http://example.com/new-address.html? permanent;\n}\n```\n>注意$args变量不会被编译，与location过程中的URI不同（参考http核心模块中的location）。\n\n### rewrite_log\n- 语法：rewrite_log on | off  \n- 默认值：rewrite_log off  \n- 使用字段：server, location, if  \n- 变量：无  \n- 启用时将在error log中记录notice 标记的重写日志。\n### set ###\n- 语法：set variable value  \n- 默认值：none  \n- 使用字段：server, location, if  \n\n> 指令设置一个变量并为其赋值，其值可以是文本，变量和它们的组合。  \n可以使用set定义一个新的变量，但是不能使用set设置$http_xxx头部变量的值。\n\n### uninitialized_variable_warn\n- 语法：uninitialized_variable_warn on|off  \n- 默认值：uninitialized_variable_warn on  \n- 使用字段：http, server, location, if  \n- 开启或关闭在未初始化变量中记录警告日志。  \n\n>事实上，rewrite指令在配置文件加载时已经编译到内部代码中，在解释器产生请求时使用。  \n\n这个解释器是一个简单的堆栈虚拟机，如下列指令：\n\n```\nlocation /download/ {\n  if ($forbidden) {\n    return   403;\n  }\n  if ($slow) {\n    limit_rate  10k;\n  }\n  rewrite  ^/(download/.*)/media/(.*)\\..*$  /$1/mp3/$2.mp3  break;\n```\n\n将被编译成以下顺序：\n\n```\nvariable $forbidden\nchecking to zero\nrecovery 403\ncompletion of entire code\nvariable $slow\nchecking to zero\ncheckings of regular excodession\ncopying \"/\"\ncopying $1\ncopying \"/mp3/\"\ncopying $2\ncopying \".mp3\"\ncompletion of regular excodession\ncompletion of entire sequence\n```\n\n> 注意并没有关于limit_rate的代码，因为它没有提及ngx_http_rewrite_module模块，“if”块可以类似”location”指令在配置文件的相同部分同时存在。  \n如果$slow为真，对应的if块将生效，在这个配置中limit_rate的值为10k。  \n\n指令：\n```\nrewrite  ^/(download/.*)/media/(.*)\\..*$  /$1/mp3/$2.mp3  break;\n```\n\n如果我们将第一个斜杠括入圆括号，则可以减少执行顺序：\n```\nrewrite  ^(/download/.*)/media/(.*)\\..*$  $1/mp3/$2.mp3  break;\n```\n\n之后的顺序类似如下：\n```\nchecking regular excodession\ncopying $1\ncopying \"/mp3/\"\ncopying $2\ncopying \".mp3\"\ncompletion of regular excodession\ncompletion of entire code\n```\n\n## 2.简单案例\n> 注，由于配置文件内容较多，为了让大家看着方便，我们备份一下配置文件，打开一个新的配置文件。\n\n```\n[root@nginx ~]# cd /etc/nginx/\n[root@nginx nginx]# mv nginx.conf nginx.conf.proxy\n[root@nginx nginx]# cp nginx.conf.bak nginx.conf\n[root@nginx nginx]# vim /etc/nginx/nginx.conf\nserver {\n      listen       80;\n      server_name  localhost;\n      #charset koi8-r;\n      #access_log  logs/host.access.log  main;\n      location / {\n          root   html;\n          index  index.html index.htm;\n          rewrite ^/bbs/(.*)$ http://192.168.18.201/forum/$1;\n      }\n}\n```\n\n准备forum目录与测试文件\n\n```\n[root@web1 ~]# cd /var/www/html/\n[root@web1 html]# ls\nindex.html\n[root@web1 html]# mkdir forum\n[root@web1 html]# cd forum/\n[root@web1 forum]# vim index.html\n<h1>forum page!</h1>\n```\n\n测试一下\n![](http://img1.51cto.com/attachment/201309/4/2033581_1378277139Z0NA.png)\n\n下面我们来测试一下rewrite重写。\n### 3.重新加载一下配置文件\n\n```\n[root@nginx 63]# service nginx reload\nnginx: the configuration file /etc/nginx/nginx.conf syntax is ok\nnginx: configuration file /etc/nginx/nginx.conf test is successful\n重新载入 nginx：                                           [确定]\n```\n\n### 4.测试一下\n![](http://img1.51cto.com/attachment/201309/4/2033581_1378277140aPFs.png)\n\n> 注，大家可以从图中看出，status code 302指的是临时重定向，那就说明我们rewrite重写配置成功。大家知道302是临时重定向而301是永久重定向，那么怎么实现永久重定向呢。一般服务器与服务器之间是临时重定向，服务器内部是永久重定向。下面我们来演示一下永久重定向\n\n### 5.配置永久重定向\n\n```\n[root@nginx nginx]# vim /etc/nginx/nginx.conf\nserver {\n        listen       80;\n        server_name  localhost;\n        #charset koi8-r;\n        #access_log  logs/host.access.log  main;\n        location / {\n            root   html;\n            index  index.html index.htm;\n            rewrite ^/bbs/(.*)$ /forum/$1;\n        }\n}\n```\n\n准备forum目录与测试文件\n\n```\n[root@nginx ~]# cd /usr/html/\n[root@nginx html]# ls\n50x.html  index.html\n[root@nginx html]# mkdir forum\n[root@nginx html]# cd forum/\n[root@nginx forum]# vim index.html\n<h1>192.168.18.208 forum page</h1>\n```\n\n6.重新加载一下配置文件\n\n```\n[root@nginx ~]# service nginx reload\nnginx: the configuration file /etc/nginx/nginx.conf syntax is ok\nnginx: configuration file /etc/nginx/nginx.conf test is successful\n重新载入 nginx：                                           [确定]\n\n```        \n\n7.测试一下\n![](http://img1.51cto.com/attachment/201309/4/2033581_1378277141NTPi.png)\n\n\n> 注，大家从图中可以看到，我们访问bbs/是直接帮我们跳转到forum/下，这种本机的跳转就是永久重定向也叫隐式重定向。好了，rewrite重定向我们就说到这里了，想要查询更多关于重定向的指令请参考官方文档。最后，我们来说一下读写分离。\n\n\n## 十二、Nginx读写分离\n\n### 1.实验拓扑\n![](http://img1.51cto.com/attachment/201309/4/2033581_1378277142c7NS.png)\n\n> 需求分析，前端一台nginx做负载均衡反向代理，后面两台httpd服务器。整个架构是提供BBS(论坛)服务，有一需求得实现读写分离，就是上传附件的功能，我们上传的附件只能上传到Web1，然后在Web1上利用rsync+inotify实现附件同步，大家都知道rsync+inotify只能是主向从同步，不能双向同步。所以Web1可进行写操作，而Web2只能进行读操作，这就带来读写分离的需求，下面我们就来说一下，读写分离怎么实现。\n\n\n### 2.WebDAV功能说明\n> WebDAV （Web-based Distributed Authoring and Versioning） 一种基于 HTTP 1.1协议的通信协议。它扩展了HTTP 1.1，在GET、POST、HEAD等几个HTTP标准方法以外添加了一些新的方法，使应用程序可直接对Web Server直接读写，并支持写文件锁定(Locking)及解锁(Unlock)，还可以支持文件的版本控制。这样我们就能配置读写分离功能了，下面我们来具体配置一下。\n\n\n### 3.修改配置文件\n\n```\n[root@nginx nginx]# vim /etc/nginx/nginx.conf\nserver {\n        listen       80;\n        server_name  localhost;\n        #charset koi8-r;\n        #access_log  logs/host.access.log  main;\n        location / {\n                proxy_pass http://192.168.18.202;\n                if ($request_method = \"PUT\"){\n                        proxy_pass http://192.168.18.201;\n                }\n        }\n}\n```\n\n### 4.重新加载一下配置文件\n\n```\n[root@nginx ~]# service nginx reload\nnginx: the configuration file /etc/nginx/nginx.conf syntax is ok\nnginx: configuration file /etc/nginx/nginx.conf test is successful\n重新载入 nginx：                                           [确定]\n```\n\n### 5.配置httpd的WebDAV功能\n\n```\n[root@web1 ~]# vim /etc/httpd/conf/httpd.conf\n```\n\n![](http://img1.51cto.com/attachment/201309/4/2033581_1378277143SBSg.png)\n\n> 注，在<Directory \"/var/www/html\">下启用就行。\n\n\n### 6.重新启动一下httpd\n\n```\n[root@web1 ~]# service httpd restart\n停止 httpd：                                               [确定]\n正在启动 httpd：                                           [确定]\n```\n\n### 7.测试一下\n\n```\n[root@nginx ~]# curl http://192.168.18.201\n<h1>web1.test.com</h1>\n[root@nginx ~]# curl http://192.168.18.202\n<h1>web2.test.com</h1>\n```\n\n> 注，web1与web2访问都没问题。\n\n```\n[root@nginx ~]# curl -T /etc/issue  http://192.168.18.202\n<!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\n<html><head>\n<title>405 Method Not Allowed</title>\n</head><body>\n<h1>Method Not Allowed</h1>\nThe requested method PUT is not allowed for the URL /issue.\n<hr>\n<address>Apache/2.2.15 (CentOS) Server at 192.168.18.202 Port 80</address>\n</body></html>\n```\n\n> 注，我们上传文件到，web2上时，因为web2只人读功能，所以没有开户WebDAV功能，所以显示是405 Method Not Allowed。  \n\n```\n[root@nginx ~]# curl -T /etc/issue  http://192.168.18.201\n<!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\n<html><head>\n<title>403 Forbidden</title>\n</head><body>\n<h1>Forbidden</h1>\nYou don't have permission to access /issue\non this server.\n<hr>\n<address>Apache/2.2.15 (CentOS) Server at 192.168.18.201 Port 80</address>\n</body></html>\n```\n\n> 注，我们在Web1开启了WebDAV功能，但我们目录是root目录是不允许apache用户上传的，所以显示的是403 Forbidden。下面我们给apache授权，允许上传。\n\n```\n[root@web1 ~]# setfacl -m u:apache:rwx /var/www/html/\n```\n下面我们再来测试一下，\n\n```\n[root@nginx ~]# curl -T /etc/issue  http://192.168.18.201\n<!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\n<html><head>\n<title>201 Created</title>\n</head><body>\n<h1>Created</h1>\nResource /issue has been created.\n<hr />\n<address>Apache/2.2.15 (CentOS) Server at 192.168.18.201 Port 80</address>\n</body></html>\n```\n\n> 注，大家可以看到我们成功的上传了文件，说明nginx读写分离功能配置完成。最后，我们来查看一下上传的文件。\n\n\n```\n[root@web1 ~]# cd /var/www/html/\n[root@web1 html]# ll\n总用量 12\ndrwxr-xr-x 2 root   root   4096 9月   4 13:16 forum\n-rw-r--r-- 1 root   root     23 9月   3 23:37 index.html\n-rw-r--r-- 1 apache apache   47 9月   4 14:06 issue\n```\n\n好了，到这里nginx的反向代理、负载均衡、页面缓存、URL重写及读写分离就全部讲解完成。希望大家有所收获","slug":"2016-06-22-nginx安装与常用配置","published":1,"updated":"2017-02-14T13:42:45.422Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5mkehqc0009ao943jufbacq","content":"<h2 id=\"官网下载：\"><a href=\"#官网下载：\" class=\"headerlink\" title=\"官网下载：\"></a>官网下载：</h2><blockquote>\n<p><a href=\"http://nginx.org/download/nginx-1.8.1.tar.gz\" target=\"_blank\" rel=\"external\">http://nginx.org/download/nginx-1.8.1.tar.gz</a></p>\n</blockquote>\n<h2 id=\"一、安装nginx时必须先安装相应的编译工具\"><a href=\"#一、安装nginx时必须先安装相应的编译工具\" class=\"headerlink\" title=\"一、安装nginx时必须先安装相应的编译工具\"></a>一、安装nginx时必须先安装相应的编译工具</h2><figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">~]<span class=\"comment\"># yum -y install pcre-devel openssl-devel zlib-devel</span></div></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h3 id=\"建立nginx-组\"><a href=\"#建立nginx-组\" class=\"headerlink\" title=\"建立nginx 组\"></a>建立nginx 组</h3><figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">~]<span class=\"comment\"># groupadd -r nginx</span></div><div class=\"line\">~]<span class=\"comment\"># useradd -s /sbin/nologin -g nginx -r nginx</span></div><div class=\"line\">~]<span class=\"comment\"># id nginx</span></div></pre></td></tr></table></figure>\n<ul>\n<li>zlib:nginx提供gzip模块，需要zlib库支持</li>\n<li>openssl:nginx提供ssl功能</li>\n<li>pcre:支持地址重写rewrite功能</li>\n</ul>\n<h2 id=\"二、解压\"><a href=\"#二、解压\" class=\"headerlink\" title=\"二、解压\"></a>二、解压</h2><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">tar</span> <span class=\"selector-tag\">-zxvf</span> <span class=\"selector-tag\">nginx-1</span><span class=\"selector-class\">.8</span><span class=\"selector-class\">.1</span><span class=\"selector-class\">.tar</span><span class=\"selector-class\">.gz</span></div></pre></td></tr></table></figure>\n<h2 id=\"三、进入目录\"><a href=\"#三、进入目录\" class=\"headerlink\" title=\"三、进入目录\"></a>三、进入目录</h2><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">cd</span> <span class=\"selector-tag\">nginx-1</span><span class=\"selector-class\">.8</span><span class=\"selector-class\">.1</span></div></pre></td></tr></table></figure>\n<h2 id=\"四、配置\"><a href=\"#四、配置\" class=\"headerlink\" title=\"四、配置\"></a>四、配置</h2><figure class=\"highlight haml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div></pre></td><td class=\"code\"><pre><div class=\"line\">~]# ./configure \\</div><div class=\"line\">-<span class=\"ruby\">-prefix=<span class=\"regexp\">/usr/local</span></span></div><div class=\"line\">-<span class=\"ruby\">-sbin-path=<span class=\"regexp\">/usr/sbin</span><span class=\"regexp\">/nginx</span></span></div><div class=\"line\">-<span class=\"ruby\"><span class=\"regexp\">-conf-path=/etc</span><span class=\"regexp\">/nginx/nginx</span>.conf</span></div><div class=\"line\">-<span class=\"ruby\">-error-log-path=<span class=\"regexp\">/var/log</span><span class=\"regexp\">/nginx/error</span>.log</span></div><div class=\"line\">-<span class=\"ruby\">-http-log-path=<span class=\"regexp\">/var/log</span><span class=\"regexp\">/nginx/access</span>.log</span></div><div class=\"line\">-<span class=\"ruby\">-pid-path=<span class=\"regexp\">/var/run</span><span class=\"regexp\">/nginx.pid</span></span></div><div class=\"line\">-<span class=\"ruby\"><span class=\"regexp\">-lock-path=/var</span><span class=\"regexp\">/run/nginx</span>.lock</span></div><div class=\"line\">-<span class=\"ruby\">-http-client-body-temp-path=<span class=\"regexp\">/var/cache</span><span class=\"regexp\">/nginx/client</span>_temp</span></div><div class=\"line\">-<span class=\"ruby\">-http-proxy-temp-path=<span class=\"regexp\">/var/cache</span><span class=\"regexp\">/nginx/proxy</span>_temp</span></div><div class=\"line\">-<span class=\"ruby\">-http-fastcgi-temp-path=<span class=\"regexp\">/var/cache</span><span class=\"regexp\">/nginx/fastcgi</span>_temp</span></div><div class=\"line\">-<span class=\"ruby\">-http-uwsgi-temp-path=<span class=\"regexp\">/var/cache</span><span class=\"regexp\">/nginx/uwsgi</span>_temp</span></div><div class=\"line\">-<span class=\"ruby\">-http-scgi-temp-path=<span class=\"regexp\">/var/cache</span><span class=\"regexp\">/nginx/scgi</span>_temp</span></div><div class=\"line\">-<span class=\"ruby\">-user=nginx</span></div><div class=\"line\">-<span class=\"ruby\">-group=nginx</span></div><div class=\"line\">-<span class=\"ruby\">-with-http_ssl_module</span></div><div class=\"line\">-<span class=\"ruby\">-with-http_realip_module</span></div><div class=\"line\">-<span class=\"ruby\">-with-http_addition_module</span></div><div class=\"line\">-<span class=\"ruby\">-with-http_sub_module</span></div><div class=\"line\">-<span class=\"ruby\">-with-http_dav_module</span></div><div class=\"line\">-<span class=\"ruby\">-with-http_flv_module</span></div><div class=\"line\">-<span class=\"ruby\">-with-http_mp4_module</span></div><div class=\"line\">-<span class=\"ruby\">-with-http_gunzip_module</span></div><div class=\"line\">-<span class=\"ruby\">-with-http_gzip_static_module</span></div><div class=\"line\">-<span class=\"ruby\">-with-http_random_index_module</span></div><div class=\"line\">-<span class=\"ruby\">-with-http_secure_link_module</span></div><div class=\"line\">-<span class=\"ruby\">-with-http_stub_status_module</span></div><div class=\"line\">-<span class=\"ruby\">-with-http_auth_request_module</span></div><div class=\"line\">-<span class=\"ruby\">-with-threads</span></div><div class=\"line\">-<span class=\"ruby\">-with-stream</span></div><div class=\"line\">-<span class=\"ruby\">-with-stream_ssl_module</span></div><div class=\"line\">-<span class=\"ruby\">-with-http_slice_module</span></div><div class=\"line\">-<span class=\"ruby\">-with-file-aio</span></div><div class=\"line\">-<span class=\"ruby\">-with-http_v2_module</span></div></pre></td></tr></table></figure>\n<h2 id=\"五、编译-amp-amp-安装\"><a href=\"#五、编译-amp-amp-安装\" class=\"headerlink\" title=\"五、编译&amp;&amp;安装\"></a>五、编译&amp;&amp;安装</h2><figure class=\"highlight gauss\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">make</span> &amp;&amp; <span class=\"built_in\">make</span> install</div></pre></td></tr></table></figure>\n<h2 id=\"六、配置反向代理-proxy-pass模块\"><a href=\"#六、配置反向代理-proxy-pass模块\" class=\"headerlink\" title=\"六、配置反向代理(proxy_pass模块)\"></a>六、配置反向代理(proxy_pass模块)</h2><blockquote>\n<p>apache服务器：172.18.1.49<br>nginx服务器：172.18.1.180</p>\n</blockquote>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attribute\">vim</span> /etc/nginx/nginx.conf</div><div class=\"line\"><span class=\"comment\">#添加此location</span></div><div class=\"line\">location / &#123;</div><div class=\"line\">            <span class=\"attribute\">proxy_pass</span>  http://172.18.1.49;</div><div class=\"line\">\t\t\t<span class=\"attribute\">proxy_set_header</span>  X-Real-IP  <span class=\"variable\">$remote_addr</span>; <span class=\"comment\">#显示客户机真实IP</span></div><div class=\"line\">        &#125;</div></pre></td></tr></table></figure>\n<p>注，大家可以看到日志记录的还是代理的IP，没有显示真实客户端的IP，需要修改一下httpd的配置文件。</p>\n<h2 id=\"查看并修改httpd配置文件\"><a href=\"#查看并修改httpd配置文件\" class=\"headerlink\" title=\"查看并修改httpd配置文件\"></a>查看并修改httpd配置文件</h2><p>[root@web1 ~]# vim /etc/httpd/conf/httpd.conf<br><figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#注，大家可以这里记录日志的参数还是%h，下面我们修改一下参数。</span></div><div class=\"line\">LogFormat <span class=\"string\">\"%h %l %u %t \\\"%r\\\" %&gt;s %b \\\"%&#123;Referer&#125;i\\\" \\\"%&#123;User-Agent&#125;i\\\"\"</span> combined</div><div class=\"line\">LogFormat <span class=\"string\">\"%h %l %u %t \\\"%r\\\" %&gt;s %b\"</span> common</div><div class=\"line\">LogFormat <span class=\"string\">\"%&#123;Referer&#125;i -&gt; %U\"</span> referer</div><div class=\"line\">LogFormat <span class=\"string\">\"%&#123;User-agent&#125;i\"</span> agent</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#修改为：</span></div><div class=\"line\">LogFormat <span class=\"string\">\"%&#123;X-Real-IP&#125;i %l %u %t \\\"%r\\\" %&gt;s %b \\\"%&#123;Referer&#125;i\\\" \\\"%&#123;User-Agent&#125;i\\\"\"</span> combined</div><div class=\"line\">LogFormat <span class=\"string\">\"%h %l %u %t \\\"%r\\\" %&gt;s %b\"</span> common</div><div class=\"line\">LogFormat <span class=\"string\">\"%&#123;Referer&#125;i -&gt; %U\"</span> referer</div><div class=\"line\">LogFormat <span class=\"string\">\"%&#123;User-agent&#125;i\"</span> agent</div></pre></td></tr></table></figure></p>\n<p>注，这是修改后的参数，将h%修改为%{X-Real-IP}i，好的下面我们再来测试一下。</p>\n<h2 id=\"七、添加upstream实现负载均衡\"><a href=\"#七、添加upstream实现负载均衡\" class=\"headerlink\" title=\"七、添加upstream实现负载均衡\"></a>七、添加upstream实现负载均衡</h2><blockquote>\n<p>upstream支持的负载均衡算法：</p>\n<ul>\n<li>轮询(默认):可指定weight权重</li>\n<li>ip_hash:来自同一个IP的发往固定的后端主机</li>\n<li>fair:根据后端服务器的响应时间分配请求</li>\n<li>url_hash:使url定向到同一个后端服务器</li>\n</ul>\n</blockquote>\n<h3 id=\"配置nginx负载均衡\"><a href=\"#配置nginx负载均衡\" class=\"headerlink\" title=\"配置nginx负载均衡\"></a>配置nginx负载均衡</h3><figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#vim /etc/nginx/nginx.conf</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"attribute\">upstream</span> webservers &#123;</div><div class=\"line\">      <span class=\"attribute\">server</span> <span class=\"number\">192.168.18.201</span> weight=<span class=\"number\">1</span>;</div><div class=\"line\">      <span class=\"attribute\">server</span> <span class=\"number\">192.168.18.202</span> weight=<span class=\"number\">1</span>;</div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"section\">server</span> &#123;</div><div class=\"line\">      <span class=\"attribute\">listen</span>       <span class=\"number\">80</span>;</div><div class=\"line\">      <span class=\"attribute\">server_name</span>  localhost;</div><div class=\"line\">      <span class=\"attribute\">location</span> / &#123;</div><div class=\"line\">              <span class=\"attribute\">proxy_pass</span>      http://webservers;</div><div class=\"line\">              <span class=\"attribute\">proxy_set_header</span>  X-Real-IP  <span class=\"variable\">$remote_addr</span>;</div><div class=\"line\">      &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<blockquote>\n<p>注，upstream是定义在server{ }之外的，不能定义在server{ }内部。定义好upstream之后，用proxy_pass引用一下即可。</p>\n</blockquote>\n<h2 id=\"八、配置nginx对健康状态进行检查\"><a href=\"#八、配置nginx对健康状态进行检查\" class=\"headerlink\" title=\"八、配置nginx对健康状态进行检查\"></a>八、配置nginx对健康状态进行检查</h2><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@nginx ~]# vim /etc/nginx/nginx.conf</div><div class=\"line\">upstream webservers &#123;</div><div class=\"line\">       <span class=\"built_in\"> server </span>192.168.18.201 <span class=\"attribute\">weight</span>=1 <span class=\"attribute\">max_fails</span>=2 <span class=\"attribute\">fail_timeout</span>=2;</div><div class=\"line\">       <span class=\"built_in\"> server </span>192.168.18.202 <span class=\"attribute\">weight</span>=1 <span class=\"attribute\">max_fails</span>=2 <span class=\"attribute\">fail_timeout</span>=2;</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure>\n<p>重载配置<br><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@nginx ~]#<span class=\"built_in\"> service </span>nginx reload</div><div class=\"line\">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</div><div class=\"line\">nginx: configuration file /etc/nginx/nginx.conf test is successful</div><div class=\"line\">重新载入 nginx：</div></pre></td></tr></table></figure></p>\n<h2 id=\"九、配置sorrysever\"><a href=\"#九、配置sorrysever\" class=\"headerlink\" title=\"九、配置sorrysever\"></a>九、配置sorrysever</h2><blockquote>\n<p>如果不幸的是后端所有服务器都不能提供服务了怎么办，用户打开页面就会出现出错页面，那么会带来用户体验的降低，所以我们能不能像配置LVS是配置sorry_server呢，答案是可以的，但这里不是配置sorry_server而是配置backup。</p>\n</blockquote>\n<figure class=\"highlight axapta\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">root@nginx ~]<span class=\"meta\"># vim /etc/nginx/nginx.conf</span></div><div class=\"line\"><span class=\"keyword\">server</span> &#123;</div><div class=\"line\">                listen <span class=\"number\">8080</span>;</div><div class=\"line\">                server_name localhost;</div><div class=\"line\">                root /data/www/errorpage;</div><div class=\"line\">                <span class=\"keyword\">index</span> <span class=\"keyword\">index</span>.html;</div><div class=\"line\">        &#125;</div><div class=\"line\">upstream webservers &#123;</div><div class=\"line\">        <span class=\"keyword\">server</span> <span class=\"number\">192.168</span><span class=\"number\">.18</span><span class=\"number\">.201</span> weight=<span class=\"number\">1</span> max_fails=<span class=\"number\">2</span> fail_timeout=<span class=\"number\">2</span>;</div><div class=\"line\">        <span class=\"keyword\">server</span> <span class=\"number\">192.168</span><span class=\"number\">.18</span><span class=\"number\">.202</span> weight=<span class=\"number\">1</span> max_fails=<span class=\"number\">2</span> fail_timeout=<span class=\"number\">2</span>;</div><div class=\"line\">        <span class=\"keyword\">server</span> <span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">8080</span> backup;</div><div class=\"line\">    &#125;</div><div class=\"line\">[root@nginx ~]<span class=\"meta\"># mkdir -pv /data/www/errorpage</span></div><div class=\"line\">[root@nginx errorpage]<span class=\"meta\"># cat index.html</span></div><div class=\"line\">&lt;h1&gt;Sorry......&lt;/h1&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"十、Nginx之页面缓存\"><a href=\"#十、Nginx之页面缓存\" class=\"headerlink\" title=\"十、Nginx之页面缓存\"></a>十、Nginx之页面缓存</h2><h3 id=\"1-指令说明\"><a href=\"#1-指令说明\" class=\"headerlink\" title=\"1.指令说明\"></a>1.指令说明</h3><blockquote>\n<p>proxy_cache_path</p>\n</blockquote>\n<p>语法：proxy_cache_path path [levels=number] keys_zone=zone_name:zone_size [inactive=time] [max_size=size];<br>默认值：None<br>使用字段：http  </p>\n<p>指令指定缓存的路径和一些其他参数，缓存的数据存储在文件中，并且使用代理url的哈希值作为关键字与文件名。levels参数指定缓存的子目录数，例如：</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">proxy_cache_path  /data/nginx/cache  <span class=\"attribute\">levels</span>=1:2   <span class=\"attribute\">keys_zone</span>=one:10m;</div></pre></td></tr></table></figure>\n<p>文件名类似于：</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"regexp\">/data/</span>nginx<span class=\"regexp\">/cache/</span>c<span class=\"regexp\">/29/</span>b7f54b2df7773722d382f4809d65029c</div></pre></td></tr></table></figure>\n<blockquote>\n<p>levels指定目录结构，可以使用任意的1位或2位数字作为目录结构，如 X, X:X,或X:X:X 例如: “2”, “2:2”, “1:1:2“，但是最多只能是三级目录。<br>所有活动的key和元数据存储在共享的内存池中，这个区域用keys_zone参数指定。one指的是共享池的名称，10m指的是共享池的大小。  </p>\n</blockquote>\n<p>注意每一个定义的内存池必须是不重复的路径，例如：</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">proxy_cache_path  /data/nginx/cache/one    <span class=\"attribute\">levels</span>=1      <span class=\"attribute\">keys_zone</span>=one:10m;</div><div class=\"line\">proxy_cache_path  /data/nginx/cache/two    <span class=\"attribute\">levels</span>=2:2    <span class=\"attribute\">keys_zone</span>=two:100m;</div><div class=\"line\">proxy_cache_path  /data/nginx/cache/three  <span class=\"attribute\">levels</span>=1:1:2  <span class=\"attribute\">keys_zone</span>=three:1000m;</div></pre></td></tr></table></figure>\n<p>如果在inactive参数指定的时间内缓存的数据没有被请求则被删除，默认inactive为10分钟。一个名为cache manager的进程控制磁盘的缓存大小，它被用来删除不活动的缓存和控制缓存大小，这些都在max_size参数中定义，当目前缓存的值超出max_size指定的值之后，超过其大小后最少使用数据（LRU替换算法）将被删除。内存池的大小按照缓存页面数的比例进行设置，一个页面（文件）的元数据大小按照操作系统来定，如FreeBSD/i386下为64字节，FreeBSD/amd64下为128字节。</p>\n<h3 id=\"proxy-cache\"><a href=\"#proxy-cache\" class=\"headerlink\" title=\"proxy_cache\"></a>proxy_cache</h3><h3 id=\"语法：proxy-cache-zone-name\"><a href=\"#语法：proxy-cache-zone-name\" class=\"headerlink\" title=\"语法：proxy_cache zone_name;\"></a>语法：proxy_cache zone_name;</h3><h3 id=\"默认值：None\"><a href=\"#默认值：None\" class=\"headerlink\" title=\"默认值：None\"></a>默认值：None</h3><h3 id=\"使用字段：http-server-location\"><a href=\"#使用字段：http-server-location\" class=\"headerlink\" title=\"使用字段：http, server, location\"></a>使用字段：http, server, location</h3><blockquote>\n<p>设置一个缓存区域的名称，一个相同的区域可以在不同的地方使用。<br>在0.7.48后，缓存遵循后端的”Expires”, “Cache-Control: no-cache”, “Cache-Control: max-age=XXX”头部字段，0.7.66版本以后，”Cache-Control:“private”和”no-store”头同样被遵循。nginx在缓存过程中不会处理”Vary”头，为了确保一些私有数据不被所有的用户看到，后端必须设置 “no-cache”或者”max-age=0”头，或者proxy_cache_key包含用户指定的数据如$cookie_xxx，使用cookie的值作为proxy_cache_key的一部分可以防止缓存私有数据，所以可以在不同的location中分别指定proxy_cache_key的值以便分开私有数据和公有数据。<br>缓存指令依赖代理缓冲区(buffers)，如果proxy_buffers设置为off，缓存不会生效。</p>\n</blockquote>\n<h3 id=\"proxy-cache-valid\"><a href=\"#proxy-cache-valid\" class=\"headerlink\" title=\"proxy_cache_valid\"></a>proxy_cache_valid</h3><blockquote>\n<p>语法：proxy_cache_valid reply_code [reply_code …] time;<br>默认值：None<br>使用字段：http, server, location<br>为不同的应答设置不同的缓存时间，例如：</p>\n</blockquote>\n<figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">proxy_cache_valid  <span class=\"number\">200</span> <span class=\"number\">302</span>  <span class=\"number\">10</span>m;</div><div class=\"line\">proxy_cache_valid  <span class=\"number\">404</span>      <span class=\"number\">1</span>m;</div></pre></td></tr></table></figure>\n<p>为应答代码为200和302的设置缓存时间为10分钟，404代码缓存1分钟。<br>如果只定义时间：</p>\n<figure class=\"highlight abnf\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">proxy_cache_valid <span class=\"number\">5</span>m<span class=\"comment\">;</span></div></pre></td></tr></table></figure>\n<p>那么只对代码为200, 301和302的应答进行缓存。<br>同样可以使用any参数任何应答。</p>\n<figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">proxy_cache_valid  <span class=\"number\">200</span> <span class=\"number\">302</span> <span class=\"number\">10</span>m;</div><div class=\"line\">proxy_cache_valid  <span class=\"number\">301</span> <span class=\"number\">1</span>h;</div><div class=\"line\">proxy_cache_valid  any <span class=\"number\">1</span>m;</div></pre></td></tr></table></figure>\n<h3 id=\"定义一个简单nginx缓存服务器\"><a href=\"#定义一个简单nginx缓存服务器\" class=\"headerlink\" title=\"定义一个简单nginx缓存服务器\"></a>定义一个简单nginx缓存服务器</h3><figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@nginx ~]<span class=\"meta\"># vim /etc/nginx/nginx.conf</span></div><div class=\"line\">proxy_cache_path <span class=\"meta-keyword\">/data/</span>nginx<span class=\"meta-keyword\">/cache/</span>webserver levels=<span class=\"number\">1</span>:<span class=\"number\">2</span> keys_zone=webserver:<span class=\"number\">20</span>m max_size=<span class=\"number\">1</span>g;</div><div class=\"line\">   <span class=\"class\">server </span>&#123;</div><div class=\"line\">       listen       <span class=\"number\">80</span>;</div><div class=\"line\">       server_name  localhost;</div><div class=\"line\">       <span class=\"meta\">#charset koi8-r;</span></div><div class=\"line\">       <span class=\"meta\">#access_log  logs/host.access.log  main;</span></div><div class=\"line\">       location <span class=\"class\">/ &#123;</span></div><div class=\"line\">               proxy_pass      http:<span class=\"comment\">//webservers;</span></div><div class=\"line\">               proxy_set_header  X-Real-IP  $remote_addr;</div><div class=\"line\">               proxy_cache webserver;</div><div class=\"line\">               proxy_cache_valid <span class=\"number\">200</span> <span class=\"number\">10</span>m;</div><div class=\"line\">       &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"新建缓存目录\"><a href=\"#新建缓存目录\" class=\"headerlink\" title=\"新建缓存目录\"></a>新建缓存目录</h3><figure class=\"highlight autoit\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root<span class=\"symbol\">@nginx</span> ~]<span class=\"meta\"># mkdir -pv /data/nginx/cache/webserver</span></div></pre></td></tr></table></figure>\n<h3 id=\"重新加载一下配置文件\"><a href=\"#重新加载一下配置文件\" class=\"headerlink\" title=\"重新加载一下配置文件\"></a>重新加载一下配置文件</h3><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@nginx webserver]#<span class=\"built_in\"> service </span>nginx reload</div><div class=\"line\">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</div><div class=\"line\">nginx: configuration file /etc/nginx/nginx.conf test is successful</div><div class=\"line\">重新载入 nginx：                                           [确定]</div></pre></td></tr></table></figure>\n<h3 id=\"缓存变量说明\"><a href=\"#缓存变量说明\" class=\"headerlink\" title=\"缓存变量说明\"></a>缓存变量说明</h3><h4 id=\"server-addr\"><a href=\"#server-addr\" class=\"headerlink\" title=\"$server_addr\"></a>$server_addr</h4><blockquote>\n<p>服务器地址，在完成一次系统调用后可以确定这个值，如果要绕开系统调用，则必须在listen中指定地址并且使用bind参数。</p>\n</blockquote>\n<h4 id=\"upstream-cache-status\"><a href=\"#upstream-cache-status\" class=\"headerlink\" title=\"$upstream_cache_status\"></a>$upstream_cache_status</h4><blockquote>\n<p>0.8.3版本中其值可能为：</p>\n<ul>\n<li>MISS 未命中</li>\n<li>EXPIRED expired。请求被传送到后端。</li>\n<li>UPDATING expired。由于proxy/fastcgi_cache_use_stale正在更新，将使用旧的应答。</li>\n<li>STALE expired。由于proxy/fastcgi_cache_use_stale，后端将得到过期的应答。</li>\n<li>HIT 命中</li>\n</ul>\n</blockquote>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@nginx ~]<span class=\"comment\"># vim /etc/nginx/nginx.conf</span></div><div class=\"line\">proxy_cache_path /data/nginx/cache/webserver levels=<span class=\"number\">1</span>:<span class=\"number\">2</span> keys_zone=webserver:<span class=\"number\">20</span><span class=\"keyword\">m</span> max_size=<span class=\"number\">1</span>g;</div><div class=\"line\">    server &#123;</div><div class=\"line\">        <span class=\"keyword\">listen</span>       <span class=\"number\">80</span>;</div><div class=\"line\">        server_name  localhost;</div><div class=\"line\">        <span class=\"comment\">#charset koi8-r;</span></div><div class=\"line\">        <span class=\"comment\">#access_log  logs/host.access.log  main;</span></div><div class=\"line\">       <span class=\"comment\">#增加两头部</span></div><div class=\"line\">        add_header X-Via $server_addr;</div><div class=\"line\">        add_header X-Cache $upstream_cache_status;</div><div class=\"line\">        location / &#123;</div><div class=\"line\">                proxy_pass      http:<span class=\"regexp\">//webservers</span>;</div><div class=\"line\">                proxy_set_header  X-Real-IP  $remote_addr;</div><div class=\"line\">                proxy_cache webserver;</div><div class=\"line\">                proxy_cache_valid <span class=\"number\">200</span> <span class=\"number\">10</span><span class=\"keyword\">m</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"重新加载一下配置文件-1\"><a href=\"#重新加载一下配置文件-1\" class=\"headerlink\" title=\"重新加载一下配置文件\"></a>重新加载一下配置文件</h3><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@nginx ~]#<span class=\"built_in\"> service </span>nginx reload</div><div class=\"line\">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</div><div class=\"line\">nginx: configuration file /etc/nginx/nginx.conf test is successful</div><div class=\"line\">重新载入 nginx：                                           [确定]</div></pre></td></tr></table></figure>\n<blockquote>\n<p>浏览器开调试模式，选择Network选项，我们可以看到，Response Headers，在这里我们可以看到，我们请求的是否是缓存</p>\n</blockquote>\n<h2 id=\"Nginx之URL重写\"><a href=\"#Nginx之URL重写\" class=\"headerlink\" title=\"Nginx之URL重写\"></a>Nginx之URL重写</h2><h3 id=\"1-URL重写模块（Rewrite）\"><a href=\"#1-URL重写模块（Rewrite）\" class=\"headerlink\" title=\"1.URL重写模块（Rewrite）\"></a>1.URL重写模块（Rewrite）</h3><blockquote>\n<p>摘要<br>这个模块允许使用正则表达式重写URI（需PCRE库），并且可以根据相关变量重定向和选择不同的配置。如果这个指令在server字段中指定，那么将在被请求的location确定之前执行，如果在指令执行后所选择的location中有其他的重写规则，那么它们也被执行。如果在location中执行这个指令产生了新的URI，那么location又一次确定了新的URI。这样的循环可以最多执行10次，超过以后nginx将返回500错误。</p>\n</blockquote>\n<h3 id=\"指令\"><a href=\"#指令\" class=\"headerlink\" title=\"指令\"></a>指令</h3><h4 id=\"break\"><a href=\"#break\" class=\"headerlink\" title=\"break\"></a>break</h4><ul>\n<li>语法：break  </li>\n<li>默认值：none  </li>\n<li>使用字段：server, location, if  </li>\n<li>完成当前设置的规则，停止执行其他的重写指令。<br>示例：</li>\n</ul>\n<figure class=\"highlight autoit\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">if</span> ($slow) &#123;</div><div class=\"line\">  limit_rate  <span class=\"number\">10</span>k<span class=\"comment\">;</span></div><div class=\"line\">  <span class=\"built_in\">break</span><span class=\"comment\">;</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"if\"><a href=\"#if\" class=\"headerlink\" title=\"if\"></a>if</h4><ul>\n<li>语法：if (condition) { … }  </li>\n<li>默认值：none  </li>\n<li>使用字段：server, location  <blockquote>\n<p>注意：在使用if指令之前请查看if is evil page并且尽量考虑用try_files代替。<br>判断一个条件，如果条件成立，则后面的大括号内的语句将执行，相关配置从上级继承。<br>可以在判断语句中指定下列值：</p>\n</blockquote>\n</li>\n<li>一个变量的名称；不成立的值为：空字符传”“或者一些用“0”开始的字符串。</li>\n<li>一个使用=或者!=运算符的比较语句。</li>\n<li>使用符号~*和~模式匹配的正则表达式：</li>\n<li>~为区分大小写的匹配。</li>\n<li>~*不区分大小写的匹配（firefox匹配FireFox）。</li>\n<li>!~和!~*意为“不匹配的”。</li>\n<li>使用-f和!-f检查一个文件是否存在。</li>\n<li>使用-d和!-d检查一个目录是否存在。</li>\n<li>使用-e和!-e检查一个文件，目录或者软链接是否存在。</li>\n<li>使用-x和!-x检查一个文件是否为可执行文件。</li>\n<li>正则表达式的一部分可以用圆括号，方便之后按照顺序用$1-$9来引用。  </li>\n</ul>\n<p>示例配置：<br><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">if</span> (<span class=\"variable\">$http_user_agent</span> ~ MSIE) &#123;</div><div class=\"line\">  rewrite  ^(.*)$  /msie/<span class=\"variable\">$1</span>  <span class=\"keyword\">break</span>;</div><div class=\"line\">&#125;</div><div class=\"line\">                                                                                                                                                        </div><div class=\"line\"><span class=\"keyword\">if</span> (<span class=\"variable\">$http_cookie</span> ~* <span class=\"string\">\"id=([^;] +)(?:;|$)\"</span> ) &#123;</div><div class=\"line\">  <span class=\"keyword\">set</span>  <span class=\"variable\">$id</span>  <span class=\"variable\">$1</span>;</div><div class=\"line\">&#125;</div><div class=\"line\">                                                                                                                                                        </div><div class=\"line\"><span class=\"keyword\">if</span> (<span class=\"variable\">$request_method</span> = <span class=\"keyword\">POST</span> ) &#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> 405;</div><div class=\"line\">&#125;</div><div class=\"line\">                                                                                                                                                        </div><div class=\"line\"><span class=\"keyword\">if</span> (!-f <span class=\"variable\">$request_filename</span>) &#123;</div><div class=\"line\">  <span class=\"keyword\">break</span>;</div><div class=\"line\">  proxy_pass  http:<span class=\"comment\">//127.0.0.1;</span></div><div class=\"line\">&#125;</div><div class=\"line\">                                                                                                                                                        </div><div class=\"line\"><span class=\"keyword\">if</span> (<span class=\"variable\">$slow</span>) &#123;</div><div class=\"line\">  limit_rate  10k;</div><div class=\"line\">&#125;</div><div class=\"line\">                                                                                                                                                        </div><div class=\"line\"><span class=\"keyword\">if</span> (<span class=\"variable\">$invalid_referer</span>) &#123;</div><div class=\"line\">  <span class=\"keyword\">return</span>   403;</div><div class=\"line\">&#125;</div><div class=\"line\">                                                                                                                                                        </div><div class=\"line\"><span class=\"keyword\">if</span> (<span class=\"variable\">$args</span> ~ <span class=\"keyword\">post</span>=140)&#123;</div><div class=\"line\">  rewrite ^ http:<span class=\"comment\">//example.com/ permanent;</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<blockquote>\n<p>内置变量$invalid_referer用指令valid_referers指定。</p>\n</blockquote>\n<h3 id=\"return\"><a href=\"#return\" class=\"headerlink\" title=\"return\"></a>return</h3><ul>\n<li>语法：return code  </li>\n<li>默认值：none  </li>\n<li>使用字段：server, location, if  </li>\n</ul>\n<blockquote>\n<p>这个指令结束执行配置语句并为客户端返回状态代码，可以使用下列的值：204，400，402-406，408，410, 411, 413, 416与500-504。此外，非标准代码444将关闭连接并且不发送任何的头部。</p>\n</blockquote>\n<h3 id=\"rewrite\"><a href=\"#rewrite\" class=\"headerlink\" title=\"rewrite\"></a>rewrite</h3><ul>\n<li>语法：rewrite regex replacement flag  </li>\n<li>默认值：none  </li>\n<li>使用字段：server, location, if  </li>\n</ul>\n<blockquote>\n<p>按照相关的正则表达式与字符串修改URI，指令按照在配置文件中出现的顺序执行。<br>可以在重写指令后面添加标记。<br>如果替换的字符串以<a href=\"http://开头，请求将被重定向，并且不再执行多余的rewrite指令。\" target=\"_blank\" rel=\"external\">http://开头，请求将被重定向，并且不再执行多余的rewrite指令。</a> </p>\n</blockquote>\n<p>尾部的标记(flag)可以是以下的值：</p>\n<ul>\n<li>last 完成重写指令，之后搜索相应的URI或location。</li>\n<li>break 完成重写指令。</li>\n<li>redirect 返回302临时重定向，如果替换字段用<a href=\"http://开头则被使用。\" target=\"_blank\" rel=\"external\">http://开头则被使用。</a></li>\n<li>permanent 返回301永久重定向。</li>\n</ul>\n<blockquote>\n<p>注意如果一个重定向是相对的（没有主机名部分），nginx将在重定向的过程中使用匹配server_name指令的“Host”头或者server_name指令指定的第一个名称，如果头不匹配或不存在，如果没有设置server_name，将使用本地主机名，如果你总是想让nginx使用“Host”头，可以在server_name使用“*”通配符（查看http核心模块中的server_name）。例如：</p>\n</blockquote>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attribute\">rewrite</span> <span class=\"regexp\"> ^(/download/.*)/media/(.*)\\..*$</span>  <span class=\"variable\">$1</span>/mp3/<span class=\"variable\">$2</span>.mp3  <span class=\"literal\">last</span>;</div><div class=\"line\"><span class=\"attribute\">rewrite</span> <span class=\"regexp\"> ^(/download/.*)/audio/(.*)\\..*$</span>  <span class=\"variable\">$1</span>/mp3/<span class=\"variable\">$2</span>.ra   <span class=\"literal\">last</span>;</div><div class=\"line\"><span class=\"attribute\">return</span>   <span class=\"number\">403</span>;</div></pre></td></tr></table></figure>\n<p>但是如果我们将其放入一个名为/download/的location中，则需要将last标记改为break，否则nginx将执行10次循环并返回500错误。</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">location <span class=\"regexp\">/download/</span> &#123;</div><div class=\"line\">  rewrite  ^(<span class=\"regexp\">/download/</span>.*)<span class=\"regexp\">/media/</span>(.*)\\..*$  <span class=\"variable\">$1</span><span class=\"regexp\">/mp3/</span><span class=\"variable\">$2</span>.mp3  <span class=\"keyword\">break</span>;</div><div class=\"line\">  rewrite  ^(<span class=\"regexp\">/download/</span>.*)<span class=\"regexp\">/audio/</span>(.*)\\..*$  <span class=\"variable\">$1</span><span class=\"regexp\">/mp3/</span><span class=\"variable\">$2</span>.ra   <span class=\"keyword\">break</span>;</div><div class=\"line\">  return   <span class=\"number\">403</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>如果替换字段中包含参数，那么其余的请求参数将附加到后面，为了防止附加，可以在最后一个字符后面跟一个问号：<br><figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attribute\">rewrite</span> <span class=\"regexp\"> ^/users/(.*)$</span>  /show?user=<span class=\"variable\">$1</span>?  <span class=\"literal\">last</span>;</div></pre></td></tr></table></figure></p>\n<p>注意：大括号（{和}），可以同时用在正则表达式和配置块中，为了防止冲突，正则表达式使用大括号需要用双引号（或者单引号）。例如要重写以下的URL：<br><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"regexp\">/photos/</span><span class=\"number\">123456</span></div></pre></td></tr></table></figure></p>\n<p>为:<br><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"regexp\">/path/</span>to<span class=\"regexp\">/photos/</span><span class=\"number\">12</span><span class=\"regexp\">/1234/</span><span class=\"number\">123456</span>.png</div></pre></td></tr></table></figure></p>\n<p>则使用以下正则表达式（注意引号）：<br><figure class=\"highlight autoit\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">rewrite  <span class=\"string\">\"/photos/([0-9] &#123;2&#125;)([0-9] &#123;2&#125;)([0-9] &#123;2&#125;)\"</span> /path/<span class=\"keyword\">to</span>/photos/$1/$1$2/$1$2$3.png<span class=\"comment\">;</span></div></pre></td></tr></table></figure></p>\n<blockquote>\n<p>如果指定一个“？”在重写的结尾，Nginx将丢弃请求中的参数，即变量$args，当使用$request_uri或$uri&amp;$args时可以在rewrite结尾使用“？”以避免nginx处理两次参数串。<br>在rewrite中使用$request_uri将www.example.com重写到example.com：</p>\n</blockquote>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"section\">server</span> &#123;</div><div class=\"line\">   <span class=\"attribute\">server_name</span> www.example.com;</div><div class=\"line\">   <span class=\"attribute\">rewrite</span><span class=\"regexp\"> ^</span> http://example.com<span class=\"variable\">$request_uri</span>? <span class=\"literal\">permanent</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<blockquote>\n<p>同样，重写只对路径进行操作，而不是参数，如果要重写一个带参数的URL，可以使用以下代替：</p>\n</blockquote>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attribute\">if</span> (<span class=\"variable\">$args</span><span class=\"regexp\"> ^~</span> post=<span class=\"number\">100</span>)&#123;</div><div class=\"line\">  <span class=\"attribute\">rewrite</span><span class=\"regexp\"> ^</span> http://example.com/new-address.html? <span class=\"literal\">permanent</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<blockquote>\n<p>注意$args变量不会被编译，与location过程中的URI不同（参考http核心模块中的location）。</p>\n</blockquote>\n<h3 id=\"rewrite-log\"><a href=\"#rewrite-log\" class=\"headerlink\" title=\"rewrite_log\"></a>rewrite_log</h3><ul>\n<li>语法：rewrite_log on | off  </li>\n<li>默认值：rewrite_log off  </li>\n<li>使用字段：server, location, if  </li>\n<li>变量：无  </li>\n<li>启用时将在error log中记录notice 标记的重写日志。<h3 id=\"set\"><a href=\"#set\" class=\"headerlink\" title=\"set\"></a>set</h3></li>\n<li>语法：set variable value  </li>\n<li>默认值：none  </li>\n<li>使用字段：server, location, if  </li>\n</ul>\n<blockquote>\n<p>指令设置一个变量并为其赋值，其值可以是文本，变量和它们的组合。<br>可以使用set定义一个新的变量，但是不能使用set设置$http_xxx头部变量的值。</p>\n</blockquote>\n<h3 id=\"uninitialized-variable-warn\"><a href=\"#uninitialized-variable-warn\" class=\"headerlink\" title=\"uninitialized_variable_warn\"></a>uninitialized_variable_warn</h3><ul>\n<li>语法：uninitialized_variable_warn on|off  </li>\n<li>默认值：uninitialized_variable_warn on  </li>\n<li>使用字段：http, server, location, if  </li>\n<li>开启或关闭在未初始化变量中记录警告日志。  </li>\n</ul>\n<blockquote>\n<p>事实上，rewrite指令在配置文件加载时已经编译到内部代码中，在解释器产生请求时使用。  </p>\n</blockquote>\n<p>这个解释器是一个简单的堆栈虚拟机，如下列指令：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attribute\">location</span> /download/ &#123;</div><div class=\"line\">  <span class=\"attribute\">if</span> (<span class=\"variable\">$forbidden</span>) &#123;</div><div class=\"line\">    <span class=\"attribute\">return</span>   <span class=\"number\">403</span>;</div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"attribute\">if</span> (<span class=\"variable\">$slow</span>) &#123;</div><div class=\"line\">    <span class=\"attribute\">limit_rate</span>  <span class=\"number\">10k</span>;</div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"attribute\">rewrite</span> <span class=\"regexp\"> ^/(download/.*)/media/(.*)\\..*$</span>  /<span class=\"variable\">$1</span>/mp3/<span class=\"variable\">$2</span>.mp3  <span class=\"literal\">break</span>;</div></pre></td></tr></table></figure>\n<p>将被编译成以下顺序：</p>\n<figure class=\"highlight gams\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">variable</span> $forbidden</div><div class=\"line\">checking <span class=\"comment\">to zero</span></div><div class=\"line\">recovery <span class=\"comment\">403</span></div><div class=\"line\">completion <span class=\"comment\">of entire code</span></div><div class=\"line\"><span class=\"keyword\">variable</span> <span class=\"comment\">$slow</span></div><div class=\"line\">checking <span class=\"comment\">to zero</span></div><div class=\"line\">checkings <span class=\"comment\">of regular excodession</span></div><div class=\"line\">copying <span class=\"comment\">\"/\"</span></div><div class=\"line\">copying <span class=\"comment\">$1</span></div><div class=\"line\">copying <span class=\"comment\">\"/mp3/\"</span></div><div class=\"line\">copying <span class=\"comment\">$2</span></div><div class=\"line\">copying <span class=\"comment\">\".mp3\"</span></div><div class=\"line\">completion <span class=\"comment\">of regular excodession</span></div><div class=\"line\">completion <span class=\"comment\">of entire sequence</span></div></pre></td></tr></table></figure>\n<blockquote>\n<p>注意并没有关于limit_rate的代码，因为它没有提及ngx_http_rewrite_module模块，“if”块可以类似”location”指令在配置文件的相同部分同时存在。<br>如果$slow为真，对应的if块将生效，在这个配置中limit_rate的值为10k。  </p>\n</blockquote>\n<p>指令：<br><figure class=\"highlight elixir\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">rewrite  ^<span class=\"regexp\">/(download/</span>.*)/media/(.*)\\..*<span class=\"variable\">$ </span> /<span class=\"variable\">$1</span>/mp3/<span class=\"variable\">$2</span>.mp3  <span class=\"keyword\">break</span>;</div></pre></td></tr></table></figure></p>\n<p>如果我们将第一个斜杠括入圆括号，则可以减少执行顺序：<br><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">rewrite  ^(<span class=\"regexp\">/download/</span>.*)<span class=\"regexp\">/media/</span>(.*)\\..*$  <span class=\"variable\">$1</span><span class=\"regexp\">/mp3/</span><span class=\"variable\">$2</span>.mp3  <span class=\"keyword\">break</span>;</div></pre></td></tr></table></figure></p>\n<p>之后的顺序类似如下：<br><figure class=\"highlight xquery\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">checking regular excodession</div><div class=\"line\">copying $1</div><div class=\"line\">copying <span class=\"string\">\"/mp3/\"</span></div><div class=\"line\">copying $2</div><div class=\"line\">copying <span class=\"string\">\".mp3\"</span></div><div class=\"line\">completion <span class=\"keyword\">of</span> regular excodession</div><div class=\"line\">completion <span class=\"keyword\">of</span> entire code</div></pre></td></tr></table></figure></p>\n<h2 id=\"2-简单案例\"><a href=\"#2-简单案例\" class=\"headerlink\" title=\"2.简单案例\"></a>2.简单案例</h2><blockquote>\n<p>注，由于配置文件内容较多，为了让大家看着方便，我们备份一下配置文件，打开一个新的配置文件。</p>\n</blockquote>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@nginx ~]<span class=\"comment\"># cd /etc/nginx/</span></div><div class=\"line\">[root@nginx nginx]<span class=\"comment\"># mv nginx.conf nginx.conf.proxy</span></div><div class=\"line\">[root@nginx nginx]<span class=\"comment\"># cp nginx.conf.bak nginx.conf</span></div><div class=\"line\">[root@nginx nginx]<span class=\"comment\"># vim /etc/nginx/nginx.conf</span></div><div class=\"line\">server &#123;</div><div class=\"line\">      <span class=\"keyword\">listen</span>       <span class=\"number\">80</span>;</div><div class=\"line\">      server_name  localhost;</div><div class=\"line\">      <span class=\"comment\">#charset koi8-r;</span></div><div class=\"line\">      <span class=\"comment\">#access_log  logs/host.access.log  main;</span></div><div class=\"line\">      location / &#123;</div><div class=\"line\">          root   html;</div><div class=\"line\">          <span class=\"keyword\">index</span>  index.html index.htm;</div><div class=\"line\">          rewrite ^<span class=\"regexp\">/bbs/</span>(.*)$ http:<span class=\"regexp\">//</span><span class=\"number\">192.168</span>.<span class=\"number\">18.201</span>/forum/$1;</div><div class=\"line\">      &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>准备forum目录与测试文件</p>\n<figure class=\"highlight gherkin\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root<span class=\"meta\">@web1</span> ~]<span class=\"comment\"># cd /var/www/html/</span></div><div class=\"line\">[root<span class=\"meta\">@web1</span> html]<span class=\"comment\"># ls</span></div><div class=\"line\">index.html</div><div class=\"line\">[root<span class=\"meta\">@web1</span> html]<span class=\"comment\"># mkdir forum</span></div><div class=\"line\">[root<span class=\"meta\">@web1</span> html]<span class=\"comment\"># cd forum/</span></div><div class=\"line\">[root<span class=\"meta\">@web1</span> forum]<span class=\"comment\"># vim index.html</span></div><div class=\"line\"><span class=\"variable\">&lt;h1&gt;</span>forum page!<span class=\"variable\">&lt;/h1&gt;</span></div></pre></td></tr></table></figure>\n<p>测试一下<br><img src=\"http://img1.51cto.com/attachment/201309/4/2033581_1378277139Z0NA.png\" alt=\"\"></p>\n<p>下面我们来测试一下rewrite重写。</p>\n<h3 id=\"3-重新加载一下配置文件\"><a href=\"#3-重新加载一下配置文件\" class=\"headerlink\" title=\"3.重新加载一下配置文件\"></a>3.重新加载一下配置文件</h3><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@nginx 63]#<span class=\"built_in\"> service </span>nginx reload</div><div class=\"line\">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</div><div class=\"line\">nginx: configuration file /etc/nginx/nginx.conf test is successful</div><div class=\"line\">重新载入 nginx：                                           [确定]</div></pre></td></tr></table></figure>\n<h3 id=\"4-测试一下\"><a href=\"#4-测试一下\" class=\"headerlink\" title=\"4.测试一下\"></a>4.测试一下</h3><p><img src=\"http://img1.51cto.com/attachment/201309/4/2033581_1378277140aPFs.png\" alt=\"\"></p>\n<blockquote>\n<p>注，大家可以从图中看出，status code 302指的是临时重定向，那就说明我们rewrite重写配置成功。大家知道302是临时重定向而301是永久重定向，那么怎么实现永久重定向呢。一般服务器与服务器之间是临时重定向，服务器内部是永久重定向。下面我们来演示一下永久重定向</p>\n</blockquote>\n<h3 id=\"5-配置永久重定向\"><a href=\"#5-配置永久重定向\" class=\"headerlink\" title=\"5.配置永久重定向\"></a>5.配置永久重定向</h3><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@nginx nginx]# vim /etc/nginx/nginx.conf<span class=\"built_in\"></span></div><div class=\"line\">server &#123;</div><div class=\"line\">        listen       80;</div><div class=\"line\">        server_name  localhost;</div><div class=\"line\">        #charset koi8-r;</div><div class=\"line\">        #access_log  logs/host.access.log  main;</div><div class=\"line\">        location / &#123;</div><div class=\"line\">            root   html;</div><div class=\"line\">            index  index.html index.htm;</div><div class=\"line\">            rewrite ^/bbs/(.*)$ /forum/<span class=\"variable\">$1</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>准备forum目录与测试文件</p>\n<figure class=\"highlight gherkin\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root<span class=\"meta\">@nginx</span> ~]<span class=\"comment\"># cd /usr/html/</span></div><div class=\"line\">[root<span class=\"meta\">@nginx</span> html]<span class=\"comment\"># ls</span></div><div class=\"line\">50x.html  index.html</div><div class=\"line\">[root<span class=\"meta\">@nginx</span> html]<span class=\"comment\"># mkdir forum</span></div><div class=\"line\">[root<span class=\"meta\">@nginx</span> html]<span class=\"comment\"># cd forum/</span></div><div class=\"line\">[root<span class=\"meta\">@nginx</span> forum]<span class=\"comment\"># vim index.html</span></div><div class=\"line\"><span class=\"variable\">&lt;h1&gt;</span>192.168.18.208 forum page<span class=\"variable\">&lt;/h1&gt;</span></div></pre></td></tr></table></figure>\n<p>6.重新加载一下配置文件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@nginx ~]# service nginx reload</div><div class=\"line\">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</div><div class=\"line\">nginx: configuration file /etc/nginx/nginx.conf test is successful</div><div class=\"line\">重新载入 nginx：                                           [确定]</div><div class=\"line\"></div><div class=\"line\">```        </div><div class=\"line\"></div><div class=\"line\">7.测试一下</div><div class=\"line\">![](http://img1.51cto.com/attachment/201309/4/2033581_1378277141NTPi.png)</div><div class=\"line\"><span class=\"meta\"></span></div><div class=\"line\"></div><div class=\"line\">&gt;<span class=\"bash\"> 注，大家从图中可以看到，我们访问bbs/是直接帮我们跳转到forum/下，这种本机的跳转就是永久重定向也叫隐式重定向。好了，rewrite重定向我们就说到这里了，想要查询更多关于重定向的指令请参考官方文档。最后，我们来说一下读写分离。</span></div><div class=\"line\"><span class=\"meta\"></span></div><div class=\"line\"></div><div class=\"line\">#<span class=\"bash\"><span class=\"comment\"># 十二、Nginx读写分离</span></span></div><div class=\"line\"><span class=\"meta\"></span></div><div class=\"line\">#<span class=\"bash\"><span class=\"comment\">## 1.实验拓扑</span></span></div><div class=\"line\">![](http://img1.51cto.com/attachment/201309/4/2033581_1378277142c7NS.png)</div><div class=\"line\"><span class=\"meta\"></span></div><div class=\"line\">&gt;<span class=\"bash\"> 需求分析，前端一台nginx做负载均衡反向代理，后面两台httpd服务器。整个架构是提供BBS(论坛)服务，有一需求得实现读写分离，就是上传附件的功能，我们上传的附件只能上传到Web1，然后在Web1上利用rsync+inotify实现附件同步，大家都知道rsync+inotify只能是主向从同步，不能双向同步。所以Web1可进行写操作，而Web2只能进行读操作，这就带来读写分离的需求，下面我们就来说一下，读写分离怎么实现。</span></div><div class=\"line\"><span class=\"meta\"></span></div><div class=\"line\"></div><div class=\"line\">#<span class=\"bash\"><span class=\"comment\">## 2.WebDAV功能说明</span></span></div><div class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\"> WebDAV （Web-based Distributed Authoring and Versioning） 一种基于 HTTP 1.1协议的通信协议。它扩展了HTTP 1.1，在GET、POST、HEAD等几个HTTP标准方法以外添加了一些新的方法，使应用程序可直接对Web Server直接读写，并支持写文件锁定(Locking)及解锁(Unlock)，还可以支持文件的版本控制。这样我们就能配置读写分离功能了，下面我们来具体配置一下。</span></div><div class=\"line\"><span class=\"meta\"></span></div><div class=\"line\"></div><div class=\"line\">#<span class=\"bash\"><span class=\"comment\">## 3.修改配置文件</span></span></div></pre></td></tr></table></figure>\n<p>[root@nginx nginx]# vim /etc/nginx/nginx.conf<br>server {<br>        listen       80;<br>        server_name  localhost;</p>\n<pre><code>#charset koi8-r;\n#access_log  logs/host.access.log  main;\nlocation / {\n        proxy_pass http://192.168.18.202;\n        if ($request_method = &quot;PUT&quot;){\n                proxy_pass http://192.168.18.201;\n        }\n}\n</code></pre><p>}<br><figure class=\"highlight clean\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">### <span class=\"number\">4.</span>重新加载一下配置文件</div></pre></td></tr></table></figure></p>\n<p>[root@nginx ~]# service nginx reload<br>nginx: the configuration file /etc/nginx/nginx.conf syntax is ok<br>nginx: configuration file /etc/nginx/nginx.conf test is successful<br>重新载入 nginx：                                           [确定]<br><figure class=\"highlight clean\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">### <span class=\"number\">5.</span>配置httpd的WebDAV功能</div></pre></td></tr></table></figure></p>\n<p>[root@web1 ~]# vim /etc/httpd/conf/httpd.conf<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">![](http://img1.51cto.com/attachment/201309/4/2033581_1378277143SBSg.png)</div><div class=\"line\"><span class=\"meta\"></span></div><div class=\"line\">&gt;<span class=\"bash\"> 注，在&lt;Directory <span class=\"string\">\"/var/www/html\"</span>&gt;下启用就行。</span></div><div class=\"line\"><span class=\"meta\"></span></div><div class=\"line\"></div><div class=\"line\">#<span class=\"bash\"><span class=\"comment\">## 6.重新启动一下httpd</span></span></div></pre></td></tr></table></figure></p>\n<p>[root@web1 ~]# service httpd restart<br>停止 httpd：                                               [确定]<br>正在启动 httpd：                                           [确定]<br><figure class=\"highlight clean\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">### <span class=\"number\">7.</span>测试一下</div></pre></td></tr></table></figure></p>\n<p>[root@nginx ~]# curl <a href=\"http://192.168.18.201\" target=\"_blank\" rel=\"external\">http://192.168.18.201</a></p>\n<p></p><h1>web1.test.com</h1><br>[root@nginx ~]# curl <a href=\"http://192.168.18.202\" target=\"_blank\" rel=\"external\">http://192.168.18.202</a><p></p>\n<p></p><h1>web2.test.com</h1><br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\"></span></div><div class=\"line\">&gt;<span class=\"bash\"> 注，web1与web2访问都没问题。</span></div></pre></td></tr></table></figure><p></p>\n<p>[root@nginx ~]# curl -T /etc/issue  <a href=\"http://192.168.18.202\" target=\"_blank\" rel=\"external\">http://192.168.18.202</a><br>&lt;!DOCTYPE HTML PUBLIC “-//IETF//DTD HTML 2.0//EN”&gt;</p>\n<p><html><head></head></html></p>\n<p><title>405 Method Not Allowed</title><br><body></body></p>\n<p></p><h1>Method Not Allowed</h1><br>The requested method PUT is not allowed for the URL /issue.<p></p>\n<p><hr></p>\n<p><address>Apache/2.2.15 (CentOS) Server at 192.168.18.202 Port 80</address><br><br><figure class=\"highlight oxygene\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">&gt; 注，我们上传文件到，web2上时，因为web2只人读功能，所以没有开户WebDAV功能，所以显示是<span class=\"number\">405</span> <span class=\"function\"><span class=\"keyword\">Method</span> <span class=\"title\">Not</span> <span class=\"title\">Allowed</span>。</span></div></pre></td></tr></table></figure></p>\n<p>[root@nginx ~]# curl -T /etc/issue  <a href=\"http://192.168.18.201\" target=\"_blank\" rel=\"external\">http://192.168.18.201</a><br>&lt;!DOCTYPE HTML PUBLIC “-//IETF//DTD HTML 2.0//EN”&gt;</p>\n<p><html><head></head></html></p>\n<p><title>403 Forbidden</title><br><body></body></p>\n<p></p><h1>Forbidden</h1><br>You don’t have permission to access /issue<br>on this server.<p></p>\n<p><hr></p>\n<p><address>Apache/2.2.15 (CentOS) Server at 192.168.18.201 Port 80</address><br><br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\"></span></div><div class=\"line\">&gt;<span class=\"bash\"> 注，我们在Web1开启了WebDAV功能，但我们目录是root目录是不允许apache用户上传的，所以显示的是403 Forbidden。下面我们给apache授权，允许上传。</span></div></pre></td></tr></table></figure></p>\n<p>[root@web1 ~]# setfacl -m u:apache:rwx /var/www/html/<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">下面我们再来测试一下，</div></pre></td></tr></table></figure></p>\n<p>[root@nginx ~]# curl -T /etc/issue  <a href=\"http://192.168.18.201\" target=\"_blank\" rel=\"external\">http://192.168.18.201</a><br>&lt;!DOCTYPE HTML PUBLIC “-//IETF//DTD HTML 2.0//EN”&gt;</p>\n<p><html><head></head></html></p>\n<p><title>201 Created</title><br><body></body></p>\n<p></p><h1>Created</h1><br>Resource /issue has been created.<p></p>\n<p><hr></p>\n<p><address>Apache/2.2.15 (CentOS) Server at 192.168.18.201 Port 80</address><br><br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\"></span></div><div class=\"line\">&gt;<span class=\"bash\"> 注，大家可以看到我们成功的上传了文件，说明nginx读写分离功能配置完成。最后，我们来查看一下上传的文件。</span></div></pre></td></tr></table></figure></p>\n<p>[root@web1 ~]# cd /var/www/html/<br>[root@web1 html]# ll<br>总用量 12<br>drwxr-xr-x 2 root   root   4096 9月   4 13:16 forum<br>-rw-r–r– 1 root   root     23 9月   3 23:37 index.html<br>-rw-r–r– 1 apache apache   47 9月   4 14:06 issue<br>```</p>\n<p>好了，到这里nginx的反向代理、负载均衡、页面缓存、URL重写及读写分离就全部讲解完成。希望大家有所收获</p>\n","site":{"data":{}},"excerpt":"<h2 id=\"官网下载：\"><a href=\"#官网下载：\" class=\"headerlink\" title=\"官网下载：\"></a>官网下载：</h2><blockquote>\n<p><a href=\"http://nginx.org/download/nginx-1.8.1.tar.gz\" target=\"_blank\" rel=\"external\">http://nginx.org/download/nginx-1.8.1.tar.gz</a></p>\n</blockquote>\n<h2 id=\"一、安装nginx时必须先安装相应的编译工具\"><a href=\"#一、安装nginx时必须先安装相应的编译工具\" class=\"headerlink\" title=\"一、安装nginx时必须先安装相应的编译工具\"></a>一、安装nginx时必须先安装相应的编译工具</h2><figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">~]<span class=\"comment\"># yum -y install pcre-devel openssl-devel zlib-devel</span></div></pre></td></tr></table></figure>","more":"<h3 id=\"建立nginx-组\"><a href=\"#建立nginx-组\" class=\"headerlink\" title=\"建立nginx 组\"></a>建立nginx 组</h3><figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">~]<span class=\"comment\"># groupadd -r nginx</span></div><div class=\"line\">~]<span class=\"comment\"># useradd -s /sbin/nologin -g nginx -r nginx</span></div><div class=\"line\">~]<span class=\"comment\"># id nginx</span></div></pre></td></tr></table></figure>\n<ul>\n<li>zlib:nginx提供gzip模块，需要zlib库支持</li>\n<li>openssl:nginx提供ssl功能</li>\n<li>pcre:支持地址重写rewrite功能</li>\n</ul>\n<h2 id=\"二、解压\"><a href=\"#二、解压\" class=\"headerlink\" title=\"二、解压\"></a>二、解压</h2><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">tar</span> <span class=\"selector-tag\">-zxvf</span> <span class=\"selector-tag\">nginx-1</span><span class=\"selector-class\">.8</span><span class=\"selector-class\">.1</span><span class=\"selector-class\">.tar</span><span class=\"selector-class\">.gz</span></div></pre></td></tr></table></figure>\n<h2 id=\"三、进入目录\"><a href=\"#三、进入目录\" class=\"headerlink\" title=\"三、进入目录\"></a>三、进入目录</h2><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">cd</span> <span class=\"selector-tag\">nginx-1</span><span class=\"selector-class\">.8</span><span class=\"selector-class\">.1</span></div></pre></td></tr></table></figure>\n<h2 id=\"四、配置\"><a href=\"#四、配置\" class=\"headerlink\" title=\"四、配置\"></a>四、配置</h2><figure class=\"highlight haml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div></pre></td><td class=\"code\"><pre><div class=\"line\">~]# ./configure \\</div><div class=\"line\">-<span class=\"ruby\">-prefix=<span class=\"regexp\">/usr/local</span></span></div><div class=\"line\">-<span class=\"ruby\">-sbin-path=<span class=\"regexp\">/usr/sbin</span><span class=\"regexp\">/nginx</span></span></div><div class=\"line\">-<span class=\"ruby\"><span class=\"regexp\">-conf-path=/etc</span><span class=\"regexp\">/nginx/nginx</span>.conf</span></div><div class=\"line\">-<span class=\"ruby\">-error-log-path=<span class=\"regexp\">/var/log</span><span class=\"regexp\">/nginx/error</span>.log</span></div><div class=\"line\">-<span class=\"ruby\">-http-log-path=<span class=\"regexp\">/var/log</span><span class=\"regexp\">/nginx/access</span>.log</span></div><div class=\"line\">-<span class=\"ruby\">-pid-path=<span class=\"regexp\">/var/run</span><span class=\"regexp\">/nginx.pid</span></span></div><div class=\"line\">-<span class=\"ruby\"><span class=\"regexp\">-lock-path=/var</span><span class=\"regexp\">/run/nginx</span>.lock</span></div><div class=\"line\">-<span class=\"ruby\">-http-client-body-temp-path=<span class=\"regexp\">/var/cache</span><span class=\"regexp\">/nginx/client</span>_temp</span></div><div class=\"line\">-<span class=\"ruby\">-http-proxy-temp-path=<span class=\"regexp\">/var/cache</span><span class=\"regexp\">/nginx/proxy</span>_temp</span></div><div class=\"line\">-<span class=\"ruby\">-http-fastcgi-temp-path=<span class=\"regexp\">/var/cache</span><span class=\"regexp\">/nginx/fastcgi</span>_temp</span></div><div class=\"line\">-<span class=\"ruby\">-http-uwsgi-temp-path=<span class=\"regexp\">/var/cache</span><span class=\"regexp\">/nginx/uwsgi</span>_temp</span></div><div class=\"line\">-<span class=\"ruby\">-http-scgi-temp-path=<span class=\"regexp\">/var/cache</span><span class=\"regexp\">/nginx/scgi</span>_temp</span></div><div class=\"line\">-<span class=\"ruby\">-user=nginx</span></div><div class=\"line\">-<span class=\"ruby\">-group=nginx</span></div><div class=\"line\">-<span class=\"ruby\">-with-http_ssl_module</span></div><div class=\"line\">-<span class=\"ruby\">-with-http_realip_module</span></div><div class=\"line\">-<span class=\"ruby\">-with-http_addition_module</span></div><div class=\"line\">-<span class=\"ruby\">-with-http_sub_module</span></div><div class=\"line\">-<span class=\"ruby\">-with-http_dav_module</span></div><div class=\"line\">-<span class=\"ruby\">-with-http_flv_module</span></div><div class=\"line\">-<span class=\"ruby\">-with-http_mp4_module</span></div><div class=\"line\">-<span class=\"ruby\">-with-http_gunzip_module</span></div><div class=\"line\">-<span class=\"ruby\">-with-http_gzip_static_module</span></div><div class=\"line\">-<span class=\"ruby\">-with-http_random_index_module</span></div><div class=\"line\">-<span class=\"ruby\">-with-http_secure_link_module</span></div><div class=\"line\">-<span class=\"ruby\">-with-http_stub_status_module</span></div><div class=\"line\">-<span class=\"ruby\">-with-http_auth_request_module</span></div><div class=\"line\">-<span class=\"ruby\">-with-threads</span></div><div class=\"line\">-<span class=\"ruby\">-with-stream</span></div><div class=\"line\">-<span class=\"ruby\">-with-stream_ssl_module</span></div><div class=\"line\">-<span class=\"ruby\">-with-http_slice_module</span></div><div class=\"line\">-<span class=\"ruby\">-with-file-aio</span></div><div class=\"line\">-<span class=\"ruby\">-with-http_v2_module</span></div></pre></td></tr></table></figure>\n<h2 id=\"五、编译-amp-amp-安装\"><a href=\"#五、编译-amp-amp-安装\" class=\"headerlink\" title=\"五、编译&amp;&amp;安装\"></a>五、编译&amp;&amp;安装</h2><figure class=\"highlight gauss\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">make</span> &amp;&amp; <span class=\"built_in\">make</span> install</div></pre></td></tr></table></figure>\n<h2 id=\"六、配置反向代理-proxy-pass模块\"><a href=\"#六、配置反向代理-proxy-pass模块\" class=\"headerlink\" title=\"六、配置反向代理(proxy_pass模块)\"></a>六、配置反向代理(proxy_pass模块)</h2><blockquote>\n<p>apache服务器：172.18.1.49<br>nginx服务器：172.18.1.180</p>\n</blockquote>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attribute\">vim</span> /etc/nginx/nginx.conf</div><div class=\"line\"><span class=\"comment\">#添加此location</span></div><div class=\"line\">location / &#123;</div><div class=\"line\">            <span class=\"attribute\">proxy_pass</span>  http://172.18.1.49;</div><div class=\"line\">\t\t\t<span class=\"attribute\">proxy_set_header</span>  X-Real-IP  <span class=\"variable\">$remote_addr</span>; <span class=\"comment\">#显示客户机真实IP</span></div><div class=\"line\">        &#125;</div></pre></td></tr></table></figure>\n<p>注，大家可以看到日志记录的还是代理的IP，没有显示真实客户端的IP，需要修改一下httpd的配置文件。</p>\n<h2 id=\"查看并修改httpd配置文件\"><a href=\"#查看并修改httpd配置文件\" class=\"headerlink\" title=\"查看并修改httpd配置文件\"></a>查看并修改httpd配置文件</h2><p>[root@web1 ~]# vim /etc/httpd/conf/httpd.conf<br><figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#注，大家可以这里记录日志的参数还是%h，下面我们修改一下参数。</span></div><div class=\"line\">LogFormat <span class=\"string\">\"%h %l %u %t \\\"%r\\\" %&gt;s %b \\\"%&#123;Referer&#125;i\\\" \\\"%&#123;User-Agent&#125;i\\\"\"</span> combined</div><div class=\"line\">LogFormat <span class=\"string\">\"%h %l %u %t \\\"%r\\\" %&gt;s %b\"</span> common</div><div class=\"line\">LogFormat <span class=\"string\">\"%&#123;Referer&#125;i -&gt; %U\"</span> referer</div><div class=\"line\">LogFormat <span class=\"string\">\"%&#123;User-agent&#125;i\"</span> agent</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#修改为：</span></div><div class=\"line\">LogFormat <span class=\"string\">\"%&#123;X-Real-IP&#125;i %l %u %t \\\"%r\\\" %&gt;s %b \\\"%&#123;Referer&#125;i\\\" \\\"%&#123;User-Agent&#125;i\\\"\"</span> combined</div><div class=\"line\">LogFormat <span class=\"string\">\"%h %l %u %t \\\"%r\\\" %&gt;s %b\"</span> common</div><div class=\"line\">LogFormat <span class=\"string\">\"%&#123;Referer&#125;i -&gt; %U\"</span> referer</div><div class=\"line\">LogFormat <span class=\"string\">\"%&#123;User-agent&#125;i\"</span> agent</div></pre></td></tr></table></figure></p>\n<p>注，这是修改后的参数，将h%修改为%{X-Real-IP}i，好的下面我们再来测试一下。</p>\n<h2 id=\"七、添加upstream实现负载均衡\"><a href=\"#七、添加upstream实现负载均衡\" class=\"headerlink\" title=\"七、添加upstream实现负载均衡\"></a>七、添加upstream实现负载均衡</h2><blockquote>\n<p>upstream支持的负载均衡算法：</p>\n<ul>\n<li>轮询(默认):可指定weight权重</li>\n<li>ip_hash:来自同一个IP的发往固定的后端主机</li>\n<li>fair:根据后端服务器的响应时间分配请求</li>\n<li>url_hash:使url定向到同一个后端服务器</li>\n</ul>\n</blockquote>\n<h3 id=\"配置nginx负载均衡\"><a href=\"#配置nginx负载均衡\" class=\"headerlink\" title=\"配置nginx负载均衡\"></a>配置nginx负载均衡</h3><figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#vim /etc/nginx/nginx.conf</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"attribute\">upstream</span> webservers &#123;</div><div class=\"line\">      <span class=\"attribute\">server</span> <span class=\"number\">192.168.18.201</span> weight=<span class=\"number\">1</span>;</div><div class=\"line\">      <span class=\"attribute\">server</span> <span class=\"number\">192.168.18.202</span> weight=<span class=\"number\">1</span>;</div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"section\">server</span> &#123;</div><div class=\"line\">      <span class=\"attribute\">listen</span>       <span class=\"number\">80</span>;</div><div class=\"line\">      <span class=\"attribute\">server_name</span>  localhost;</div><div class=\"line\">      <span class=\"attribute\">location</span> / &#123;</div><div class=\"line\">              <span class=\"attribute\">proxy_pass</span>      http://webservers;</div><div class=\"line\">              <span class=\"attribute\">proxy_set_header</span>  X-Real-IP  <span class=\"variable\">$remote_addr</span>;</div><div class=\"line\">      &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<blockquote>\n<p>注，upstream是定义在server{ }之外的，不能定义在server{ }内部。定义好upstream之后，用proxy_pass引用一下即可。</p>\n</blockquote>\n<h2 id=\"八、配置nginx对健康状态进行检查\"><a href=\"#八、配置nginx对健康状态进行检查\" class=\"headerlink\" title=\"八、配置nginx对健康状态进行检查\"></a>八、配置nginx对健康状态进行检查</h2><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@nginx ~]# vim /etc/nginx/nginx.conf</div><div class=\"line\">upstream webservers &#123;</div><div class=\"line\">       <span class=\"built_in\"> server </span>192.168.18.201 <span class=\"attribute\">weight</span>=1 <span class=\"attribute\">max_fails</span>=2 <span class=\"attribute\">fail_timeout</span>=2;</div><div class=\"line\">       <span class=\"built_in\"> server </span>192.168.18.202 <span class=\"attribute\">weight</span>=1 <span class=\"attribute\">max_fails</span>=2 <span class=\"attribute\">fail_timeout</span>=2;</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure>\n<p>重载配置<br><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@nginx ~]#<span class=\"built_in\"> service </span>nginx reload</div><div class=\"line\">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</div><div class=\"line\">nginx: configuration file /etc/nginx/nginx.conf test is successful</div><div class=\"line\">重新载入 nginx：</div></pre></td></tr></table></figure></p>\n<h2 id=\"九、配置sorrysever\"><a href=\"#九、配置sorrysever\" class=\"headerlink\" title=\"九、配置sorrysever\"></a>九、配置sorrysever</h2><blockquote>\n<p>如果不幸的是后端所有服务器都不能提供服务了怎么办，用户打开页面就会出现出错页面，那么会带来用户体验的降低，所以我们能不能像配置LVS是配置sorry_server呢，答案是可以的，但这里不是配置sorry_server而是配置backup。</p>\n</blockquote>\n<figure class=\"highlight axapta\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">root@nginx ~]<span class=\"meta\"># vim /etc/nginx/nginx.conf</span></div><div class=\"line\"><span class=\"keyword\">server</span> &#123;</div><div class=\"line\">                listen <span class=\"number\">8080</span>;</div><div class=\"line\">                server_name localhost;</div><div class=\"line\">                root /data/www/errorpage;</div><div class=\"line\">                <span class=\"keyword\">index</span> <span class=\"keyword\">index</span>.html;</div><div class=\"line\">        &#125;</div><div class=\"line\">upstream webservers &#123;</div><div class=\"line\">        <span class=\"keyword\">server</span> <span class=\"number\">192.168</span><span class=\"number\">.18</span><span class=\"number\">.201</span> weight=<span class=\"number\">1</span> max_fails=<span class=\"number\">2</span> fail_timeout=<span class=\"number\">2</span>;</div><div class=\"line\">        <span class=\"keyword\">server</span> <span class=\"number\">192.168</span><span class=\"number\">.18</span><span class=\"number\">.202</span> weight=<span class=\"number\">1</span> max_fails=<span class=\"number\">2</span> fail_timeout=<span class=\"number\">2</span>;</div><div class=\"line\">        <span class=\"keyword\">server</span> <span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">8080</span> backup;</div><div class=\"line\">    &#125;</div><div class=\"line\">[root@nginx ~]<span class=\"meta\"># mkdir -pv /data/www/errorpage</span></div><div class=\"line\">[root@nginx errorpage]<span class=\"meta\"># cat index.html</span></div><div class=\"line\">&lt;h1&gt;Sorry......&lt;/h1&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"十、Nginx之页面缓存\"><a href=\"#十、Nginx之页面缓存\" class=\"headerlink\" title=\"十、Nginx之页面缓存\"></a>十、Nginx之页面缓存</h2><h3 id=\"1-指令说明\"><a href=\"#1-指令说明\" class=\"headerlink\" title=\"1.指令说明\"></a>1.指令说明</h3><blockquote>\n<p>proxy_cache_path</p>\n</blockquote>\n<p>语法：proxy_cache_path path [levels=number] keys_zone=zone_name:zone_size [inactive=time] [max_size=size];<br>默认值：None<br>使用字段：http  </p>\n<p>指令指定缓存的路径和一些其他参数，缓存的数据存储在文件中，并且使用代理url的哈希值作为关键字与文件名。levels参数指定缓存的子目录数，例如：</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">proxy_cache_path  /data/nginx/cache  <span class=\"attribute\">levels</span>=1:2   <span class=\"attribute\">keys_zone</span>=one:10m;</div></pre></td></tr></table></figure>\n<p>文件名类似于：</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"regexp\">/data/</span>nginx<span class=\"regexp\">/cache/</span>c<span class=\"regexp\">/29/</span>b7f54b2df7773722d382f4809d65029c</div></pre></td></tr></table></figure>\n<blockquote>\n<p>levels指定目录结构，可以使用任意的1位或2位数字作为目录结构，如 X, X:X,或X:X:X 例如: “2”, “2:2”, “1:1:2“，但是最多只能是三级目录。<br>所有活动的key和元数据存储在共享的内存池中，这个区域用keys_zone参数指定。one指的是共享池的名称，10m指的是共享池的大小。  </p>\n</blockquote>\n<p>注意每一个定义的内存池必须是不重复的路径，例如：</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">proxy_cache_path  /data/nginx/cache/one    <span class=\"attribute\">levels</span>=1      <span class=\"attribute\">keys_zone</span>=one:10m;</div><div class=\"line\">proxy_cache_path  /data/nginx/cache/two    <span class=\"attribute\">levels</span>=2:2    <span class=\"attribute\">keys_zone</span>=two:100m;</div><div class=\"line\">proxy_cache_path  /data/nginx/cache/three  <span class=\"attribute\">levels</span>=1:1:2  <span class=\"attribute\">keys_zone</span>=three:1000m;</div></pre></td></tr></table></figure>\n<p>如果在inactive参数指定的时间内缓存的数据没有被请求则被删除，默认inactive为10分钟。一个名为cache manager的进程控制磁盘的缓存大小，它被用来删除不活动的缓存和控制缓存大小，这些都在max_size参数中定义，当目前缓存的值超出max_size指定的值之后，超过其大小后最少使用数据（LRU替换算法）将被删除。内存池的大小按照缓存页面数的比例进行设置，一个页面（文件）的元数据大小按照操作系统来定，如FreeBSD/i386下为64字节，FreeBSD/amd64下为128字节。</p>\n<h3 id=\"proxy-cache\"><a href=\"#proxy-cache\" class=\"headerlink\" title=\"proxy_cache\"></a>proxy_cache</h3><h3 id=\"语法：proxy-cache-zone-name\"><a href=\"#语法：proxy-cache-zone-name\" class=\"headerlink\" title=\"语法：proxy_cache zone_name;\"></a>语法：proxy_cache zone_name;</h3><h3 id=\"默认值：None\"><a href=\"#默认值：None\" class=\"headerlink\" title=\"默认值：None\"></a>默认值：None</h3><h3 id=\"使用字段：http-server-location\"><a href=\"#使用字段：http-server-location\" class=\"headerlink\" title=\"使用字段：http, server, location\"></a>使用字段：http, server, location</h3><blockquote>\n<p>设置一个缓存区域的名称，一个相同的区域可以在不同的地方使用。<br>在0.7.48后，缓存遵循后端的”Expires”, “Cache-Control: no-cache”, “Cache-Control: max-age=XXX”头部字段，0.7.66版本以后，”Cache-Control:“private”和”no-store”头同样被遵循。nginx在缓存过程中不会处理”Vary”头，为了确保一些私有数据不被所有的用户看到，后端必须设置 “no-cache”或者”max-age=0”头，或者proxy_cache_key包含用户指定的数据如$cookie_xxx，使用cookie的值作为proxy_cache_key的一部分可以防止缓存私有数据，所以可以在不同的location中分别指定proxy_cache_key的值以便分开私有数据和公有数据。<br>缓存指令依赖代理缓冲区(buffers)，如果proxy_buffers设置为off，缓存不会生效。</p>\n</blockquote>\n<h3 id=\"proxy-cache-valid\"><a href=\"#proxy-cache-valid\" class=\"headerlink\" title=\"proxy_cache_valid\"></a>proxy_cache_valid</h3><blockquote>\n<p>语法：proxy_cache_valid reply_code [reply_code …] time;<br>默认值：None<br>使用字段：http, server, location<br>为不同的应答设置不同的缓存时间，例如：</p>\n</blockquote>\n<figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">proxy_cache_valid  <span class=\"number\">200</span> <span class=\"number\">302</span>  <span class=\"number\">10</span>m;</div><div class=\"line\">proxy_cache_valid  <span class=\"number\">404</span>      <span class=\"number\">1</span>m;</div></pre></td></tr></table></figure>\n<p>为应答代码为200和302的设置缓存时间为10分钟，404代码缓存1分钟。<br>如果只定义时间：</p>\n<figure class=\"highlight abnf\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">proxy_cache_valid <span class=\"number\">5</span>m<span class=\"comment\">;</span></div></pre></td></tr></table></figure>\n<p>那么只对代码为200, 301和302的应答进行缓存。<br>同样可以使用any参数任何应答。</p>\n<figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">proxy_cache_valid  <span class=\"number\">200</span> <span class=\"number\">302</span> <span class=\"number\">10</span>m;</div><div class=\"line\">proxy_cache_valid  <span class=\"number\">301</span> <span class=\"number\">1</span>h;</div><div class=\"line\">proxy_cache_valid  any <span class=\"number\">1</span>m;</div></pre></td></tr></table></figure>\n<h3 id=\"定义一个简单nginx缓存服务器\"><a href=\"#定义一个简单nginx缓存服务器\" class=\"headerlink\" title=\"定义一个简单nginx缓存服务器\"></a>定义一个简单nginx缓存服务器</h3><figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@nginx ~]<span class=\"meta\"># vim /etc/nginx/nginx.conf</span></div><div class=\"line\">proxy_cache_path <span class=\"meta-keyword\">/data/</span>nginx<span class=\"meta-keyword\">/cache/</span>webserver levels=<span class=\"number\">1</span>:<span class=\"number\">2</span> keys_zone=webserver:<span class=\"number\">20</span>m max_size=<span class=\"number\">1</span>g;</div><div class=\"line\">   <span class=\"class\">server </span>&#123;</div><div class=\"line\">       listen       <span class=\"number\">80</span>;</div><div class=\"line\">       server_name  localhost;</div><div class=\"line\">       <span class=\"meta\">#charset koi8-r;</span></div><div class=\"line\">       <span class=\"meta\">#access_log  logs/host.access.log  main;</span></div><div class=\"line\">       location <span class=\"class\">/ &#123;</span></div><div class=\"line\">               proxy_pass      http:<span class=\"comment\">//webservers;</span></div><div class=\"line\">               proxy_set_header  X-Real-IP  $remote_addr;</div><div class=\"line\">               proxy_cache webserver;</div><div class=\"line\">               proxy_cache_valid <span class=\"number\">200</span> <span class=\"number\">10</span>m;</div><div class=\"line\">       &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"新建缓存目录\"><a href=\"#新建缓存目录\" class=\"headerlink\" title=\"新建缓存目录\"></a>新建缓存目录</h3><figure class=\"highlight autoit\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root<span class=\"symbol\">@nginx</span> ~]<span class=\"meta\"># mkdir -pv /data/nginx/cache/webserver</span></div></pre></td></tr></table></figure>\n<h3 id=\"重新加载一下配置文件\"><a href=\"#重新加载一下配置文件\" class=\"headerlink\" title=\"重新加载一下配置文件\"></a>重新加载一下配置文件</h3><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@nginx webserver]#<span class=\"built_in\"> service </span>nginx reload</div><div class=\"line\">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</div><div class=\"line\">nginx: configuration file /etc/nginx/nginx.conf test is successful</div><div class=\"line\">重新载入 nginx：                                           [确定]</div></pre></td></tr></table></figure>\n<h3 id=\"缓存变量说明\"><a href=\"#缓存变量说明\" class=\"headerlink\" title=\"缓存变量说明\"></a>缓存变量说明</h3><h4 id=\"server-addr\"><a href=\"#server-addr\" class=\"headerlink\" title=\"$server_addr\"></a>$server_addr</h4><blockquote>\n<p>服务器地址，在完成一次系统调用后可以确定这个值，如果要绕开系统调用，则必须在listen中指定地址并且使用bind参数。</p>\n</blockquote>\n<h4 id=\"upstream-cache-status\"><a href=\"#upstream-cache-status\" class=\"headerlink\" title=\"$upstream_cache_status\"></a>$upstream_cache_status</h4><blockquote>\n<p>0.8.3版本中其值可能为：</p>\n<ul>\n<li>MISS 未命中</li>\n<li>EXPIRED expired。请求被传送到后端。</li>\n<li>UPDATING expired。由于proxy/fastcgi_cache_use_stale正在更新，将使用旧的应答。</li>\n<li>STALE expired。由于proxy/fastcgi_cache_use_stale，后端将得到过期的应答。</li>\n<li>HIT 命中</li>\n</ul>\n</blockquote>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@nginx ~]<span class=\"comment\"># vim /etc/nginx/nginx.conf</span></div><div class=\"line\">proxy_cache_path /data/nginx/cache/webserver levels=<span class=\"number\">1</span>:<span class=\"number\">2</span> keys_zone=webserver:<span class=\"number\">20</span><span class=\"keyword\">m</span> max_size=<span class=\"number\">1</span>g;</div><div class=\"line\">    server &#123;</div><div class=\"line\">        <span class=\"keyword\">listen</span>       <span class=\"number\">80</span>;</div><div class=\"line\">        server_name  localhost;</div><div class=\"line\">        <span class=\"comment\">#charset koi8-r;</span></div><div class=\"line\">        <span class=\"comment\">#access_log  logs/host.access.log  main;</span></div><div class=\"line\">       <span class=\"comment\">#增加两头部</span></div><div class=\"line\">        add_header X-Via $server_addr;</div><div class=\"line\">        add_header X-Cache $upstream_cache_status;</div><div class=\"line\">        location / &#123;</div><div class=\"line\">                proxy_pass      http:<span class=\"regexp\">//webservers</span>;</div><div class=\"line\">                proxy_set_header  X-Real-IP  $remote_addr;</div><div class=\"line\">                proxy_cache webserver;</div><div class=\"line\">                proxy_cache_valid <span class=\"number\">200</span> <span class=\"number\">10</span><span class=\"keyword\">m</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"重新加载一下配置文件-1\"><a href=\"#重新加载一下配置文件-1\" class=\"headerlink\" title=\"重新加载一下配置文件\"></a>重新加载一下配置文件</h3><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@nginx ~]#<span class=\"built_in\"> service </span>nginx reload</div><div class=\"line\">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</div><div class=\"line\">nginx: configuration file /etc/nginx/nginx.conf test is successful</div><div class=\"line\">重新载入 nginx：                                           [确定]</div></pre></td></tr></table></figure>\n<blockquote>\n<p>浏览器开调试模式，选择Network选项，我们可以看到，Response Headers，在这里我们可以看到，我们请求的是否是缓存</p>\n</blockquote>\n<h2 id=\"Nginx之URL重写\"><a href=\"#Nginx之URL重写\" class=\"headerlink\" title=\"Nginx之URL重写\"></a>Nginx之URL重写</h2><h3 id=\"1-URL重写模块（Rewrite）\"><a href=\"#1-URL重写模块（Rewrite）\" class=\"headerlink\" title=\"1.URL重写模块（Rewrite）\"></a>1.URL重写模块（Rewrite）</h3><blockquote>\n<p>摘要<br>这个模块允许使用正则表达式重写URI（需PCRE库），并且可以根据相关变量重定向和选择不同的配置。如果这个指令在server字段中指定，那么将在被请求的location确定之前执行，如果在指令执行后所选择的location中有其他的重写规则，那么它们也被执行。如果在location中执行这个指令产生了新的URI，那么location又一次确定了新的URI。这样的循环可以最多执行10次，超过以后nginx将返回500错误。</p>\n</blockquote>\n<h3 id=\"指令\"><a href=\"#指令\" class=\"headerlink\" title=\"指令\"></a>指令</h3><h4 id=\"break\"><a href=\"#break\" class=\"headerlink\" title=\"break\"></a>break</h4><ul>\n<li>语法：break  </li>\n<li>默认值：none  </li>\n<li>使用字段：server, location, if  </li>\n<li>完成当前设置的规则，停止执行其他的重写指令。<br>示例：</li>\n</ul>\n<figure class=\"highlight autoit\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">if</span> ($slow) &#123;</div><div class=\"line\">  limit_rate  <span class=\"number\">10</span>k<span class=\"comment\">;</span></div><div class=\"line\">  <span class=\"built_in\">break</span><span class=\"comment\">;</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"if\"><a href=\"#if\" class=\"headerlink\" title=\"if\"></a>if</h4><ul>\n<li>语法：if (condition) { … }  </li>\n<li>默认值：none  </li>\n<li>使用字段：server, location  <blockquote>\n<p>注意：在使用if指令之前请查看if is evil page并且尽量考虑用try_files代替。<br>判断一个条件，如果条件成立，则后面的大括号内的语句将执行，相关配置从上级继承。<br>可以在判断语句中指定下列值：</p>\n</blockquote>\n</li>\n<li>一个变量的名称；不成立的值为：空字符传”“或者一些用“0”开始的字符串。</li>\n<li>一个使用=或者!=运算符的比较语句。</li>\n<li>使用符号~*和~模式匹配的正则表达式：</li>\n<li>~为区分大小写的匹配。</li>\n<li>~*不区分大小写的匹配（firefox匹配FireFox）。</li>\n<li>!~和!~*意为“不匹配的”。</li>\n<li>使用-f和!-f检查一个文件是否存在。</li>\n<li>使用-d和!-d检查一个目录是否存在。</li>\n<li>使用-e和!-e检查一个文件，目录或者软链接是否存在。</li>\n<li>使用-x和!-x检查一个文件是否为可执行文件。</li>\n<li>正则表达式的一部分可以用圆括号，方便之后按照顺序用$1-$9来引用。  </li>\n</ul>\n<p>示例配置：<br><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">if</span> (<span class=\"variable\">$http_user_agent</span> ~ MSIE) &#123;</div><div class=\"line\">  rewrite  ^(.*)$  /msie/<span class=\"variable\">$1</span>  <span class=\"keyword\">break</span>;</div><div class=\"line\">&#125;</div><div class=\"line\">                                                                                                                                                        </div><div class=\"line\"><span class=\"keyword\">if</span> (<span class=\"variable\">$http_cookie</span> ~* <span class=\"string\">\"id=([^;] +)(?:;|$)\"</span> ) &#123;</div><div class=\"line\">  <span class=\"keyword\">set</span>  <span class=\"variable\">$id</span>  <span class=\"variable\">$1</span>;</div><div class=\"line\">&#125;</div><div class=\"line\">                                                                                                                                                        </div><div class=\"line\"><span class=\"keyword\">if</span> (<span class=\"variable\">$request_method</span> = <span class=\"keyword\">POST</span> ) &#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> 405;</div><div class=\"line\">&#125;</div><div class=\"line\">                                                                                                                                                        </div><div class=\"line\"><span class=\"keyword\">if</span> (!-f <span class=\"variable\">$request_filename</span>) &#123;</div><div class=\"line\">  <span class=\"keyword\">break</span>;</div><div class=\"line\">  proxy_pass  http:<span class=\"comment\">//127.0.0.1;</span></div><div class=\"line\">&#125;</div><div class=\"line\">                                                                                                                                                        </div><div class=\"line\"><span class=\"keyword\">if</span> (<span class=\"variable\">$slow</span>) &#123;</div><div class=\"line\">  limit_rate  10k;</div><div class=\"line\">&#125;</div><div class=\"line\">                                                                                                                                                        </div><div class=\"line\"><span class=\"keyword\">if</span> (<span class=\"variable\">$invalid_referer</span>) &#123;</div><div class=\"line\">  <span class=\"keyword\">return</span>   403;</div><div class=\"line\">&#125;</div><div class=\"line\">                                                                                                                                                        </div><div class=\"line\"><span class=\"keyword\">if</span> (<span class=\"variable\">$args</span> ~ <span class=\"keyword\">post</span>=140)&#123;</div><div class=\"line\">  rewrite ^ http:<span class=\"comment\">//example.com/ permanent;</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<blockquote>\n<p>内置变量$invalid_referer用指令valid_referers指定。</p>\n</blockquote>\n<h3 id=\"return\"><a href=\"#return\" class=\"headerlink\" title=\"return\"></a>return</h3><ul>\n<li>语法：return code  </li>\n<li>默认值：none  </li>\n<li>使用字段：server, location, if  </li>\n</ul>\n<blockquote>\n<p>这个指令结束执行配置语句并为客户端返回状态代码，可以使用下列的值：204，400，402-406，408，410, 411, 413, 416与500-504。此外，非标准代码444将关闭连接并且不发送任何的头部。</p>\n</blockquote>\n<h3 id=\"rewrite\"><a href=\"#rewrite\" class=\"headerlink\" title=\"rewrite\"></a>rewrite</h3><ul>\n<li>语法：rewrite regex replacement flag  </li>\n<li>默认值：none  </li>\n<li>使用字段：server, location, if  </li>\n</ul>\n<blockquote>\n<p>按照相关的正则表达式与字符串修改URI，指令按照在配置文件中出现的顺序执行。<br>可以在重写指令后面添加标记。<br>如果替换的字符串以<a href=\"http://开头，请求将被重定向，并且不再执行多余的rewrite指令。\" target=\"_blank\" rel=\"external\">http://开头，请求将被重定向，并且不再执行多余的rewrite指令。</a> </p>\n</blockquote>\n<p>尾部的标记(flag)可以是以下的值：</p>\n<ul>\n<li>last 完成重写指令，之后搜索相应的URI或location。</li>\n<li>break 完成重写指令。</li>\n<li>redirect 返回302临时重定向，如果替换字段用<a href=\"http://开头则被使用。\" target=\"_blank\" rel=\"external\">http://开头则被使用。</a></li>\n<li>permanent 返回301永久重定向。</li>\n</ul>\n<blockquote>\n<p>注意如果一个重定向是相对的（没有主机名部分），nginx将在重定向的过程中使用匹配server_name指令的“Host”头或者server_name指令指定的第一个名称，如果头不匹配或不存在，如果没有设置server_name，将使用本地主机名，如果你总是想让nginx使用“Host”头，可以在server_name使用“*”通配符（查看http核心模块中的server_name）。例如：</p>\n</blockquote>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attribute\">rewrite</span> <span class=\"regexp\"> ^(/download/.*)/media/(.*)\\..*$</span>  <span class=\"variable\">$1</span>/mp3/<span class=\"variable\">$2</span>.mp3  <span class=\"literal\">last</span>;</div><div class=\"line\"><span class=\"attribute\">rewrite</span> <span class=\"regexp\"> ^(/download/.*)/audio/(.*)\\..*$</span>  <span class=\"variable\">$1</span>/mp3/<span class=\"variable\">$2</span>.ra   <span class=\"literal\">last</span>;</div><div class=\"line\"><span class=\"attribute\">return</span>   <span class=\"number\">403</span>;</div></pre></td></tr></table></figure>\n<p>但是如果我们将其放入一个名为/download/的location中，则需要将last标记改为break，否则nginx将执行10次循环并返回500错误。</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">location <span class=\"regexp\">/download/</span> &#123;</div><div class=\"line\">  rewrite  ^(<span class=\"regexp\">/download/</span>.*)<span class=\"regexp\">/media/</span>(.*)\\..*$  <span class=\"variable\">$1</span><span class=\"regexp\">/mp3/</span><span class=\"variable\">$2</span>.mp3  <span class=\"keyword\">break</span>;</div><div class=\"line\">  rewrite  ^(<span class=\"regexp\">/download/</span>.*)<span class=\"regexp\">/audio/</span>(.*)\\..*$  <span class=\"variable\">$1</span><span class=\"regexp\">/mp3/</span><span class=\"variable\">$2</span>.ra   <span class=\"keyword\">break</span>;</div><div class=\"line\">  return   <span class=\"number\">403</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>如果替换字段中包含参数，那么其余的请求参数将附加到后面，为了防止附加，可以在最后一个字符后面跟一个问号：<br><figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attribute\">rewrite</span> <span class=\"regexp\"> ^/users/(.*)$</span>  /show?user=<span class=\"variable\">$1</span>?  <span class=\"literal\">last</span>;</div></pre></td></tr></table></figure></p>\n<p>注意：大括号（{和}），可以同时用在正则表达式和配置块中，为了防止冲突，正则表达式使用大括号需要用双引号（或者单引号）。例如要重写以下的URL：<br><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"regexp\">/photos/</span><span class=\"number\">123456</span></div></pre></td></tr></table></figure></p>\n<p>为:<br><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"regexp\">/path/</span>to<span class=\"regexp\">/photos/</span><span class=\"number\">12</span><span class=\"regexp\">/1234/</span><span class=\"number\">123456</span>.png</div></pre></td></tr></table></figure></p>\n<p>则使用以下正则表达式（注意引号）：<br><figure class=\"highlight autoit\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">rewrite  <span class=\"string\">\"/photos/([0-9] &#123;2&#125;)([0-9] &#123;2&#125;)([0-9] &#123;2&#125;)\"</span> /path/<span class=\"keyword\">to</span>/photos/$1/$1$2/$1$2$3.png<span class=\"comment\">;</span></div></pre></td></tr></table></figure></p>\n<blockquote>\n<p>如果指定一个“？”在重写的结尾，Nginx将丢弃请求中的参数，即变量$args，当使用$request_uri或$uri&amp;$args时可以在rewrite结尾使用“？”以避免nginx处理两次参数串。<br>在rewrite中使用$request_uri将www.example.com重写到example.com：</p>\n</blockquote>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"section\">server</span> &#123;</div><div class=\"line\">   <span class=\"attribute\">server_name</span> www.example.com;</div><div class=\"line\">   <span class=\"attribute\">rewrite</span><span class=\"regexp\"> ^</span> http://example.com<span class=\"variable\">$request_uri</span>? <span class=\"literal\">permanent</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<blockquote>\n<p>同样，重写只对路径进行操作，而不是参数，如果要重写一个带参数的URL，可以使用以下代替：</p>\n</blockquote>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attribute\">if</span> (<span class=\"variable\">$args</span><span class=\"regexp\"> ^~</span> post=<span class=\"number\">100</span>)&#123;</div><div class=\"line\">  <span class=\"attribute\">rewrite</span><span class=\"regexp\"> ^</span> http://example.com/new-address.html? <span class=\"literal\">permanent</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<blockquote>\n<p>注意$args变量不会被编译，与location过程中的URI不同（参考http核心模块中的location）。</p>\n</blockquote>\n<h3 id=\"rewrite-log\"><a href=\"#rewrite-log\" class=\"headerlink\" title=\"rewrite_log\"></a>rewrite_log</h3><ul>\n<li>语法：rewrite_log on | off  </li>\n<li>默认值：rewrite_log off  </li>\n<li>使用字段：server, location, if  </li>\n<li>变量：无  </li>\n<li>启用时将在error log中记录notice 标记的重写日志。<h3 id=\"set\"><a href=\"#set\" class=\"headerlink\" title=\"set\"></a>set</h3></li>\n<li>语法：set variable value  </li>\n<li>默认值：none  </li>\n<li>使用字段：server, location, if  </li>\n</ul>\n<blockquote>\n<p>指令设置一个变量并为其赋值，其值可以是文本，变量和它们的组合。<br>可以使用set定义一个新的变量，但是不能使用set设置$http_xxx头部变量的值。</p>\n</blockquote>\n<h3 id=\"uninitialized-variable-warn\"><a href=\"#uninitialized-variable-warn\" class=\"headerlink\" title=\"uninitialized_variable_warn\"></a>uninitialized_variable_warn</h3><ul>\n<li>语法：uninitialized_variable_warn on|off  </li>\n<li>默认值：uninitialized_variable_warn on  </li>\n<li>使用字段：http, server, location, if  </li>\n<li>开启或关闭在未初始化变量中记录警告日志。  </li>\n</ul>\n<blockquote>\n<p>事实上，rewrite指令在配置文件加载时已经编译到内部代码中，在解释器产生请求时使用。  </p>\n</blockquote>\n<p>这个解释器是一个简单的堆栈虚拟机，如下列指令：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attribute\">location</span> /download/ &#123;</div><div class=\"line\">  <span class=\"attribute\">if</span> (<span class=\"variable\">$forbidden</span>) &#123;</div><div class=\"line\">    <span class=\"attribute\">return</span>   <span class=\"number\">403</span>;</div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"attribute\">if</span> (<span class=\"variable\">$slow</span>) &#123;</div><div class=\"line\">    <span class=\"attribute\">limit_rate</span>  <span class=\"number\">10k</span>;</div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"attribute\">rewrite</span> <span class=\"regexp\"> ^/(download/.*)/media/(.*)\\..*$</span>  /<span class=\"variable\">$1</span>/mp3/<span class=\"variable\">$2</span>.mp3  <span class=\"literal\">break</span>;</div></pre></td></tr></table></figure>\n<p>将被编译成以下顺序：</p>\n<figure class=\"highlight gams\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">variable</span> $forbidden</div><div class=\"line\">checking <span class=\"comment\">to zero</span></div><div class=\"line\">recovery <span class=\"comment\">403</span></div><div class=\"line\">completion <span class=\"comment\">of entire code</span></div><div class=\"line\"><span class=\"keyword\">variable</span> <span class=\"comment\">$slow</span></div><div class=\"line\">checking <span class=\"comment\">to zero</span></div><div class=\"line\">checkings <span class=\"comment\">of regular excodession</span></div><div class=\"line\">copying <span class=\"comment\">\"/\"</span></div><div class=\"line\">copying <span class=\"comment\">$1</span></div><div class=\"line\">copying <span class=\"comment\">\"/mp3/\"</span></div><div class=\"line\">copying <span class=\"comment\">$2</span></div><div class=\"line\">copying <span class=\"comment\">\".mp3\"</span></div><div class=\"line\">completion <span class=\"comment\">of regular excodession</span></div><div class=\"line\">completion <span class=\"comment\">of entire sequence</span></div></pre></td></tr></table></figure>\n<blockquote>\n<p>注意并没有关于limit_rate的代码，因为它没有提及ngx_http_rewrite_module模块，“if”块可以类似”location”指令在配置文件的相同部分同时存在。<br>如果$slow为真，对应的if块将生效，在这个配置中limit_rate的值为10k。  </p>\n</blockquote>\n<p>指令：<br><figure class=\"highlight elixir\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">rewrite  ^<span class=\"regexp\">/(download/</span>.*)/media/(.*)\\..*<span class=\"variable\">$ </span> /<span class=\"variable\">$1</span>/mp3/<span class=\"variable\">$2</span>.mp3  <span class=\"keyword\">break</span>;</div></pre></td></tr></table></figure></p>\n<p>如果我们将第一个斜杠括入圆括号，则可以减少执行顺序：<br><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">rewrite  ^(<span class=\"regexp\">/download/</span>.*)<span class=\"regexp\">/media/</span>(.*)\\..*$  <span class=\"variable\">$1</span><span class=\"regexp\">/mp3/</span><span class=\"variable\">$2</span>.mp3  <span class=\"keyword\">break</span>;</div></pre></td></tr></table></figure></p>\n<p>之后的顺序类似如下：<br><figure class=\"highlight xquery\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">checking regular excodession</div><div class=\"line\">copying $1</div><div class=\"line\">copying <span class=\"string\">\"/mp3/\"</span></div><div class=\"line\">copying $2</div><div class=\"line\">copying <span class=\"string\">\".mp3\"</span></div><div class=\"line\">completion <span class=\"keyword\">of</span> regular excodession</div><div class=\"line\">completion <span class=\"keyword\">of</span> entire code</div></pre></td></tr></table></figure></p>\n<h2 id=\"2-简单案例\"><a href=\"#2-简单案例\" class=\"headerlink\" title=\"2.简单案例\"></a>2.简单案例</h2><blockquote>\n<p>注，由于配置文件内容较多，为了让大家看着方便，我们备份一下配置文件，打开一个新的配置文件。</p>\n</blockquote>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@nginx ~]<span class=\"comment\"># cd /etc/nginx/</span></div><div class=\"line\">[root@nginx nginx]<span class=\"comment\"># mv nginx.conf nginx.conf.proxy</span></div><div class=\"line\">[root@nginx nginx]<span class=\"comment\"># cp nginx.conf.bak nginx.conf</span></div><div class=\"line\">[root@nginx nginx]<span class=\"comment\"># vim /etc/nginx/nginx.conf</span></div><div class=\"line\">server &#123;</div><div class=\"line\">      <span class=\"keyword\">listen</span>       <span class=\"number\">80</span>;</div><div class=\"line\">      server_name  localhost;</div><div class=\"line\">      <span class=\"comment\">#charset koi8-r;</span></div><div class=\"line\">      <span class=\"comment\">#access_log  logs/host.access.log  main;</span></div><div class=\"line\">      location / &#123;</div><div class=\"line\">          root   html;</div><div class=\"line\">          <span class=\"keyword\">index</span>  index.html index.htm;</div><div class=\"line\">          rewrite ^<span class=\"regexp\">/bbs/</span>(.*)$ http:<span class=\"regexp\">//</span><span class=\"number\">192.168</span>.<span class=\"number\">18.201</span>/forum/$1;</div><div class=\"line\">      &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>准备forum目录与测试文件</p>\n<figure class=\"highlight gherkin\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root<span class=\"meta\">@web1</span> ~]<span class=\"comment\"># cd /var/www/html/</span></div><div class=\"line\">[root<span class=\"meta\">@web1</span> html]<span class=\"comment\"># ls</span></div><div class=\"line\">index.html</div><div class=\"line\">[root<span class=\"meta\">@web1</span> html]<span class=\"comment\"># mkdir forum</span></div><div class=\"line\">[root<span class=\"meta\">@web1</span> html]<span class=\"comment\"># cd forum/</span></div><div class=\"line\">[root<span class=\"meta\">@web1</span> forum]<span class=\"comment\"># vim index.html</span></div><div class=\"line\"><span class=\"variable\">&lt;h1&gt;</span>forum page!<span class=\"variable\">&lt;/h1&gt;</span></div></pre></td></tr></table></figure>\n<p>测试一下<br><img src=\"http://img1.51cto.com/attachment/201309/4/2033581_1378277139Z0NA.png\" alt=\"\"></p>\n<p>下面我们来测试一下rewrite重写。</p>\n<h3 id=\"3-重新加载一下配置文件\"><a href=\"#3-重新加载一下配置文件\" class=\"headerlink\" title=\"3.重新加载一下配置文件\"></a>3.重新加载一下配置文件</h3><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@nginx 63]#<span class=\"built_in\"> service </span>nginx reload</div><div class=\"line\">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</div><div class=\"line\">nginx: configuration file /etc/nginx/nginx.conf test is successful</div><div class=\"line\">重新载入 nginx：                                           [确定]</div></pre></td></tr></table></figure>\n<h3 id=\"4-测试一下\"><a href=\"#4-测试一下\" class=\"headerlink\" title=\"4.测试一下\"></a>4.测试一下</h3><p><img src=\"http://img1.51cto.com/attachment/201309/4/2033581_1378277140aPFs.png\" alt=\"\"></p>\n<blockquote>\n<p>注，大家可以从图中看出，status code 302指的是临时重定向，那就说明我们rewrite重写配置成功。大家知道302是临时重定向而301是永久重定向，那么怎么实现永久重定向呢。一般服务器与服务器之间是临时重定向，服务器内部是永久重定向。下面我们来演示一下永久重定向</p>\n</blockquote>\n<h3 id=\"5-配置永久重定向\"><a href=\"#5-配置永久重定向\" class=\"headerlink\" title=\"5.配置永久重定向\"></a>5.配置永久重定向</h3><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@nginx nginx]# vim /etc/nginx/nginx.conf<span class=\"built_in\"></span></div><div class=\"line\">server &#123;</div><div class=\"line\">        listen       80;</div><div class=\"line\">        server_name  localhost;</div><div class=\"line\">        #charset koi8-r;</div><div class=\"line\">        #access_log  logs/host.access.log  main;</div><div class=\"line\">        location / &#123;</div><div class=\"line\">            root   html;</div><div class=\"line\">            index  index.html index.htm;</div><div class=\"line\">            rewrite ^/bbs/(.*)$ /forum/<span class=\"variable\">$1</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>准备forum目录与测试文件</p>\n<figure class=\"highlight gherkin\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root<span class=\"meta\">@nginx</span> ~]<span class=\"comment\"># cd /usr/html/</span></div><div class=\"line\">[root<span class=\"meta\">@nginx</span> html]<span class=\"comment\"># ls</span></div><div class=\"line\">50x.html  index.html</div><div class=\"line\">[root<span class=\"meta\">@nginx</span> html]<span class=\"comment\"># mkdir forum</span></div><div class=\"line\">[root<span class=\"meta\">@nginx</span> html]<span class=\"comment\"># cd forum/</span></div><div class=\"line\">[root<span class=\"meta\">@nginx</span> forum]<span class=\"comment\"># vim index.html</span></div><div class=\"line\"><span class=\"variable\">&lt;h1&gt;</span>192.168.18.208 forum page<span class=\"variable\">&lt;/h1&gt;</span></div></pre></td></tr></table></figure>\n<p>6.重新加载一下配置文件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@nginx ~]# service nginx reload</div><div class=\"line\">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</div><div class=\"line\">nginx: configuration file /etc/nginx/nginx.conf test is successful</div><div class=\"line\">重新载入 nginx：                                           [确定]</div><div class=\"line\"></div><div class=\"line\">```        </div><div class=\"line\"></div><div class=\"line\">7.测试一下</div><div class=\"line\">![](http://img1.51cto.com/attachment/201309/4/2033581_1378277141NTPi.png)</div><div class=\"line\"><span class=\"meta\"></span></div><div class=\"line\"></div><div class=\"line\">&gt;<span class=\"bash\"> 注，大家从图中可以看到，我们访问bbs/是直接帮我们跳转到forum/下，这种本机的跳转就是永久重定向也叫隐式重定向。好了，rewrite重定向我们就说到这里了，想要查询更多关于重定向的指令请参考官方文档。最后，我们来说一下读写分离。</span></div><div class=\"line\"><span class=\"meta\"></span></div><div class=\"line\"></div><div class=\"line\">#<span class=\"bash\"><span class=\"comment\"># 十二、Nginx读写分离</span></span></div><div class=\"line\"><span class=\"meta\"></span></div><div class=\"line\">#<span class=\"bash\"><span class=\"comment\">## 1.实验拓扑</span></span></div><div class=\"line\">![](http://img1.51cto.com/attachment/201309/4/2033581_1378277142c7NS.png)</div><div class=\"line\"><span class=\"meta\"></span></div><div class=\"line\">&gt;<span class=\"bash\"> 需求分析，前端一台nginx做负载均衡反向代理，后面两台httpd服务器。整个架构是提供BBS(论坛)服务，有一需求得实现读写分离，就是上传附件的功能，我们上传的附件只能上传到Web1，然后在Web1上利用rsync+inotify实现附件同步，大家都知道rsync+inotify只能是主向从同步，不能双向同步。所以Web1可进行写操作，而Web2只能进行读操作，这就带来读写分离的需求，下面我们就来说一下，读写分离怎么实现。</span></div><div class=\"line\"><span class=\"meta\"></span></div><div class=\"line\"></div><div class=\"line\">#<span class=\"bash\"><span class=\"comment\">## 2.WebDAV功能说明</span></span></div><div class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\"> WebDAV （Web-based Distributed Authoring and Versioning） 一种基于 HTTP 1.1协议的通信协议。它扩展了HTTP 1.1，在GET、POST、HEAD等几个HTTP标准方法以外添加了一些新的方法，使应用程序可直接对Web Server直接读写，并支持写文件锁定(Locking)及解锁(Unlock)，还可以支持文件的版本控制。这样我们就能配置读写分离功能了，下面我们来具体配置一下。</span></div><div class=\"line\"><span class=\"meta\"></span></div><div class=\"line\"></div><div class=\"line\">#<span class=\"bash\"><span class=\"comment\">## 3.修改配置文件</span></span></div></pre></td></tr></table></figure>\n<p>[root@nginx nginx]# vim /etc/nginx/nginx.conf<br>server {<br>        listen       80;<br>        server_name  localhost;</p>\n<pre><code>#charset koi8-r;\n#access_log  logs/host.access.log  main;\nlocation / {\n        proxy_pass http://192.168.18.202;\n        if ($request_method = &quot;PUT&quot;){\n                proxy_pass http://192.168.18.201;\n        }\n}\n</code></pre><p>}<br><figure class=\"highlight clean\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">### <span class=\"number\">4.</span>重新加载一下配置文件</div></pre></td></tr></table></figure></p>\n<p>[root@nginx ~]# service nginx reload<br>nginx: the configuration file /etc/nginx/nginx.conf syntax is ok<br>nginx: configuration file /etc/nginx/nginx.conf test is successful<br>重新载入 nginx：                                           [确定]<br><figure class=\"highlight clean\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">### <span class=\"number\">5.</span>配置httpd的WebDAV功能</div></pre></td></tr></table></figure></p>\n<p>[root@web1 ~]# vim /etc/httpd/conf/httpd.conf<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">![](http://img1.51cto.com/attachment/201309/4/2033581_1378277143SBSg.png)</div><div class=\"line\"><span class=\"meta\"></span></div><div class=\"line\">&gt;<span class=\"bash\"> 注，在&lt;Directory <span class=\"string\">\"/var/www/html\"</span>&gt;下启用就行。</span></div><div class=\"line\"><span class=\"meta\"></span></div><div class=\"line\"></div><div class=\"line\">#<span class=\"bash\"><span class=\"comment\">## 6.重新启动一下httpd</span></span></div></pre></td></tr></table></figure></p>\n<p>[root@web1 ~]# service httpd restart<br>停止 httpd：                                               [确定]<br>正在启动 httpd：                                           [确定]<br><figure class=\"highlight clean\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">### <span class=\"number\">7.</span>测试一下</div></pre></td></tr></table></figure></p>\n<p>[root@nginx ~]# curl <a href=\"http://192.168.18.201\" target=\"_blank\" rel=\"external\">http://192.168.18.201</a></p>\n<p></p><h1>web1.test.com</h1><br>[root@nginx ~]# curl <a href=\"http://192.168.18.202\" target=\"_blank\" rel=\"external\">http://192.168.18.202</a><p></p>\n<p></p><h1>web2.test.com</h1><br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\"></span></div><div class=\"line\">&gt;<span class=\"bash\"> 注，web1与web2访问都没问题。</span></div></pre></td></tr></table></figure><p></p>\n<p>[root@nginx ~]# curl -T /etc/issue  <a href=\"http://192.168.18.202\" target=\"_blank\" rel=\"external\">http://192.168.18.202</a><br>&lt;!DOCTYPE HTML PUBLIC “-//IETF//DTD HTML 2.0//EN”&gt;</p>\n<p><html><head></head></html></p>\n<p><title>405 Method Not Allowed</title><br><body></body></p>\n<p></p><h1>Method Not Allowed</h1><br>The requested method PUT is not allowed for the URL /issue.<p></p>\n<p><hr></p>\n<p><address>Apache/2.2.15 (CentOS) Server at 192.168.18.202 Port 80</address><br><br><figure class=\"highlight oxygene\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">&gt; 注，我们上传文件到，web2上时，因为web2只人读功能，所以没有开户WebDAV功能，所以显示是<span class=\"number\">405</span> <span class=\"function\"><span class=\"keyword\">Method</span> <span class=\"title\">Not</span> <span class=\"title\">Allowed</span>。</span></div></pre></td></tr></table></figure></p>\n<p>[root@nginx ~]# curl -T /etc/issue  <a href=\"http://192.168.18.201\" target=\"_blank\" rel=\"external\">http://192.168.18.201</a><br>&lt;!DOCTYPE HTML PUBLIC “-//IETF//DTD HTML 2.0//EN”&gt;</p>\n<p><html><head></head></html></p>\n<p><title>403 Forbidden</title><br><body></body></p>\n<p></p><h1>Forbidden</h1><br>You don’t have permission to access /issue<br>on this server.<p></p>\n<p><hr></p>\n<p><address>Apache/2.2.15 (CentOS) Server at 192.168.18.201 Port 80</address><br><br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\"></span></div><div class=\"line\">&gt;<span class=\"bash\"> 注，我们在Web1开启了WebDAV功能，但我们目录是root目录是不允许apache用户上传的，所以显示的是403 Forbidden。下面我们给apache授权，允许上传。</span></div></pre></td></tr></table></figure></p>\n<p>[root@web1 ~]# setfacl -m u:apache:rwx /var/www/html/<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">下面我们再来测试一下，</div></pre></td></tr></table></figure></p>\n<p>[root@nginx ~]# curl -T /etc/issue  <a href=\"http://192.168.18.201\" target=\"_blank\" rel=\"external\">http://192.168.18.201</a><br>&lt;!DOCTYPE HTML PUBLIC “-//IETF//DTD HTML 2.0//EN”&gt;</p>\n<p><html><head></head></html></p>\n<p><title>201 Created</title><br><body></body></p>\n<p></p><h1>Created</h1><br>Resource /issue has been created.<p></p>\n<p><hr></p>\n<p><address>Apache/2.2.15 (CentOS) Server at 192.168.18.201 Port 80</address><br><br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\"></span></div><div class=\"line\">&gt;<span class=\"bash\"> 注，大家可以看到我们成功的上传了文件，说明nginx读写分离功能配置完成。最后，我们来查看一下上传的文件。</span></div></pre></td></tr></table></figure></p>\n<p>[root@web1 ~]# cd /var/www/html/<br>[root@web1 html]# ll<br>总用量 12<br>drwxr-xr-x 2 root   root   4096 9月   4 13:16 forum<br>-rw-r–r– 1 root   root     23 9月   3 23:37 index.html<br>-rw-r–r– 1 apache apache   47 9月   4 14:06 issue<br>```</p>\n<p>好了，到这里nginx的反向代理、负载均衡、页面缓存、URL重写及读写分离就全部讲解完成。希望大家有所收获</p>"},{"title":"LAMP--CentOS-7平台三机FastCGI模型","abbrlink":"c3277995","date":"2016-06-23T05:27:02.000Z","_content":"\n# 需求 #\n```\nCentOS-7平台上搭建LAMP，其中php作为独立的服务工作；\n(1) 三者分离于三台主机；\n(2) 一个虚拟主机用于提供phpMyAdmin；另一个虚拟主机用于提供wordpress；\n(3) 安装xcache，为php提供加速；\n```\n<!-- more -->\n# 解析 #\n+ 由于`CentOS-7`平台提供了以上各应用的`rpm`安装包，且均包含了各应用的新特性，所以各应用程序可以直接使用`yum`源安装，而无需通过编译源码来安装。\n+ `xcache`为`EPEL`源中提供的应用程序，因此需要配置启用`EPEL`源。\n+ 因为`php`要作为独立的服务单独运行于一台服务器上，因此不在是安装`php`，而是要安装`php-fpm`了。\n+ `httpd`与`php`之间需要通过`FastCGI`协议来连接，`httpd`其实是作为作为反向代理来工作的，`httpd`中就需要加载`mod_proxy`和`mod_proxy_fcgi`模块了。\n\n# 规划准备 #\n+ 准备两台`CentOS-7`主机，均为最小化安装。为避免安全设置影响实验结果，将`iptables`和`SELinux`均设置为关闭状态。\n+ `HostA`作为前端`Web`服务器，`IP`地址为: `172.18.71.201`。\n+ `HostB`作为中间`App`服务器，`IP`地址为: `172.18.71.202`。\n+ `HostC`作为后端`DB`服务器，`IP`地址为: `172.18.71.203`。\n+ 需要配置`DNS`服务，或者修改主机`hosts`文件来实现名称解析。\n+ 两台主机均需要配置好`yum`源，除发行版`base`源外还需要`EPEL`源。\n* 配置名称解析和`yum`源不在本文介绍范围内，请参考其他资料。各程序安装包不提供，请自行下载。*\n\n如图所示：\n![CentOS-7-fastcgi](http://7xltax.com1.z0.glb.clouddn.com/538b2805-1156-4c78-8efa-ec3405ade4b7.png)\n\n# 配置 #\n配置时一般习惯按照从后端到前端的顺序来进行，便于测试验证前一步配置，思路上也比较清晰，容易梳理。所以首先配置后端`DB`服务器`HostC`，然后配置中间`App`服务器`HostB`，最后配置后端`Web`服务器`HostA`。\n\n## HostC ##\n安装`mariadb`\n```\n[root@localhost ~]# yum instal -y mariadb-server\n```\n\n在默认配置基础上增加一些配置，包括设置默认字符集、默认字符排序、默认存储引擎、独立表空间、不做域名反解。\n```\n[root@localhost ~]# vim /etc/my.cnf.d/client.cnf\n[client]\ndefault-character-set=utf8\n[root@localhost ~]# vim /etc/my.cnf.d/mysql-clients.cnf\n[mysql]\ndefault-character-set=utf8\n[root@localhost ~]# vim /etc/my.cnf.d/server.cnf\n[mysqld]\ncharacter-set-server=utf8\ncollation-server=utf8_general_ci\ndefault-storage-engine=InnoDB\ninnodb-file-per-table=TRUE\nskip-name-resolve=TRUE\n```\n\n启动`mariadb`\n```\n[root@localhost ~]# systemctl start mariadb\n```\n\n初始化安全设置，主要这是设置`root`用户口令，删除匿名用户，不允许`root`远程登录，删除`test`数据库和访问`test`数据库的相关权限设置，重载权限表。\n** 注：这里如果设置允许`root`远程登录，后面也还是要再次显式授权才可以。**\n```\n[root@localhost ~]# mysql_secure_installation\nSet root password? [Y/n] y\nNew password:\nRe-enter new password:\nRemove anonymous users? [Y/n] y\n ... Success!\n Disallow root login remotely? [Y/n] y\n  ... skipping.\n  Remove test database and access to it? [Y/n] y\n - Dropping test database...\n ... Success!\n - Removing privileges on test database...\n ... Success!\n Reload privilege tables now? [Y/n] y\n ... Success!\n```\n\n登录`mariadb`，做以下设置。\n```\n[root@localhost ~]# mysql -u root -p\n# 授权root可从172.18.71.0/24网段内的主机登录操作所有数据库。\nMariaDB [(none)]> grant all privileges on *.* to 'root'@'172.18.71.%' identified by 'magedu';\n# 给wordpress创建数据wpdb。\nMariaDB [(none)]> create database wpdb;\n# 给wordpress创建用户wp。\nMariaDB [(none)]> create user 'wp'@'172.18.71.%' identified by 'magedu';\n# 授权wp可从172.18.71.0/24网段内的主机登录操作wpdb数据库。\nMariaDB [(none)]> grant all privileges on wpdb.* to 'wp'@'172.18.71.%' identified by 'magedu';\n# 重载权限表\nMariaDB [(none)]> flush privileges;\n# 退出\nMariaDB [(none)]> \\q\n```\n\n这样`HostC`就配置完成了，再来配置`HostB`。\n\n## HostB ##\n正式配置`HostB`之前，应首先验证以下`HostC`的配置，即测试一下能否从`HostB`上连接`HostC`的数据库。\n```\n# 安装mariadb的客户端\n[root@localhost ~]# yum install -y mariadb\n# 测试连接HostB数据库\n[root@localhost ~]# mysql -u root -h 172.18.71.203 -p\n```\n\n安装`php-fpm`应用\n```\n[root@localhost ~]# yum install -y php-fpm php-mysql php-mbstring\n```\n\n修改`php-fpm`的连接池配置文件\n```\n[root@localhost ~]# vim /etc/php-fpm.d/www.conf\n# 监听在本机的外部可访问地址上\nlisten = 172.18.71.202:9000\n# 仅允许前端Web服务器连接\nlisten.allowed_clients = 172.18.71.201\n```\n\n创建`session`存放目录，并修改其权限。\n```\n[root@localhost ~]# mkdir /var/lib/php/session\n[root@localhost ~]# chown -R apache:apache /var/lib/php/session\n```\n\n部署`php`程序代码`phpMyAdmin`和`wordpress`。\n**  注：由于`php-fpm`是独立工作的服务，对于访问`php`页面的请求，前端的`httpd`仅作为反向代理将请求转发至`php-fpm`服务器上，由`php-fpm`找到对应的`php`程序代码文件进行解释执行，然后将结果返回给前端。所以需要将`php`程序代码放在`php-fpm`服务器上。**\n\n建立`php`程序相应的存放目录。\n```\n[root@localhost ~]# mkdir -pv /htdocs/www.twoyang.{com,net}\nmkdir: created directory ‘/htdocs’\nmkdir: created directory ‘/htdocs/www.twoyang.com’\nmkdir: created directory ‘/htdocs/www.twoyang.net’\n```\n\n将`phpMyAdmin`安装包放置在`/htdocs/www.twoyang.com`的目录下，并修改配置文件。\n```bash\n[root@localhost ~]# cd /htdocs/www.twoyang.com\n[root@localhost www.twoyang.com]# unzip phpMyAdmin-4.4.14.1-all-languages.zip\n[root@localhost www.twoyang.com]# ln -sv phpMyAdmin-4.4.14.1-all-languages pma\n‘pma’ -> ‘phpMyAdmin-4.4.14.1-all-languages’\n[root@localhost www.twoyang.com]# cd pma\n[root@localhost pma]# cp config.sample.inc.php config.inc.php\n[root@localhost pma]# openssl rand -base64 20\n0fkgcykLDfyRgG71FOjE9W6LKa8=\n[root@localhost pma]# vim config.inc.php\n$cfg['blowfish_secret'] = '0fkgcykLDfyRgG71FOjE9W6LKa8'; /* YOU MUST FILL IN THIS FOR COOKIE AUTH! */\n$cfg['Servers'][$i]['host'] = '172.18.71.203';\n```\n\n将`wordpress`安装包放置在`/htdocs/www.twoyang.com`的目录下，并修改配置文件。\n```\n[root@localhost ~]# cd /htdocs/www.twoyang.net\n[root@localhost www.twoyang.net]# unzip wordpress-4.3.1-zh_CN.zip\n[root@localhost www.twoyang.net]# ln -sv wordpress wp\n‘wp’ -> ‘wordpress’\n[root@localhost www.twoyang.net]# cd wp\n[root@localhost wp]# cp wp-config-sample.php wp-config.php\n[root@localhost wp]# vim wp-config.php\n\n/** WordPress数据库的名称 */\ndefine('DB_NAME', 'wpdb');\n\n/** MySQL数据库用户名 */\ndefine('DB_USER', 'wp');\n\n/** MySQL数据库密码 */\ndefine('DB_PASSWORD', 'magedu');\n\n/** MySQL主机 */\ndefine('DB_HOST', '172.18.71.203');\n```\n\n启动`php-fpm`服务\n```\n[root@localhost ~]# systemctl start php-fpm\n```\n\n查看`php-fpm`服务是否监听在指定套接字上\n```\n[root@localhost ~]# ss -tnl | grep 9000\nLISTEN     0      128    172.18.71.202:9000                     *:*\n```\n\n## HostA ##\n安装`httpd`\n```\n[root@localhost ~]# yum install -y httpd\n```\n\n修改主配置文件\n```\n[root@localhost ~]# vim /etc/httpd/conf/httpd.conf\n# 设置服务器名，其实这项不设置也可以，但是启动服务时会有警告。\nServerName www.twoyang.net\n# 由于准备使用虚拟主机，需要把MainServer的DocumentRoot关掉。\n#DocumentRoot \"/var/www/html\"\n# 另外需要增加php类型的主页和MIME\n<IfModule dir_module>\n    DirectoryIndex index.php index.html\n</IfModule>\n<IfModule mime_module>\n    AddType application/x-httpd-php .php\n</IfModule>\n```\n\n移除欢迎页面配置文件\n```\n[root@localhost ~]# mv /etc/httpd/conf.d/welcome.conf{,.bak}\n```\n\n新建虚拟主机配置文件`/etc/httpd/conf.d/vhosts.conf`\n```\n[root@localhost ~]# vim /etc/httpd/conf.d/vhosts.conf\n<VirtualHost 172.18.71.201:80>\n    ServerName www.twoyang.com\n    DocumentRoot \"/htdocs/www.twoyang.com/pma\"\n    <Directory \"/htdocs/www.twoyang.com/pma\">\n        OPTIONS FollowSymLinks\n        AllowOverride None\n        Require all granted\n    </Directory>\n    # 由于正向代理和反向代理不能同时存在，这里关闭正向代理。\n    ProxyRequests Off\n    # 将直接访问/的url请求，通过fcgi协议指向后端php-fpm服务器对应目录的index.php。\n    ProxyPassMatch ^/$ fcgi://172.18.71.202:9000/htdocs/www.twoyang.com/pma/index.php\n    # 将访问以.php结尾的url请求，通过fcgi协议指向后端php-fpm服务器对应目录的对应文件。\n    ProxyPassMatch ^/(.*\\.php)$ fcgi://172.18.71.202:9000/htdocs/www.twoyang.com/pma/$1\n</VirtualHost>\n\n<VirtualHost 172.18.71.201:80>\n    ServerName www.twoyang.net\n    DocumentRoot \"/htdocs/www.twoyang.net/wp\"\n    <Directory \"/htdocs/www.twoyang.net/wp\">\n        OPTIONS FollowSymLinks\n        AllowOverride None\n        Require all granted\n    </Directory>\n    ProxyRequests Off\n    ProxyPassMatch ^/$ fcgi://172.18.71.202:9000/htdocs/www.twoyang.net/wp/index.php\n    ProxyPassMatch ^/(.*\\.php)$ fcgi://172.18.71.202:9000/htdocs/www.twoyang.net/wp/$1\n</VirtualHost>\n```\n\n建立虚拟主机`DocumentRoot`对应的目录。\n```\n[root@localhost ~]# mkdir -pv /htdocs/www.twoyang.{com,net}\nmkdir: created directory ‘/htdocs’\nmkdir: created directory ‘/htdocs/www.twoyang.com/’\nmkdir: created directory ‘/htdocs/www.twoyang.net/’\n```\n\n将`phpMyAdmin`安装包放置在虚拟主机`www.twoyang.com`的`DocumentRoot`目录下。\n```\n[root@localhost ~]# cd /htdocs/www.twoyang.com\n[root@localhost www.twoyang.com]# unzip phpMyAdmin-4.4.14.1-all-languages.zip\n[root@localhost www.twoyang.com]# ln -sv phpMyAdmin-4.4.14.1-all-languages pma\n‘pma’ -> ‘phpMyAdmin-4.4.14.1-all-languages’\n```\n\n将`wordpress`安装包放置在虚拟主机`www.twoyang.net`的`DocumentRoot`目录下。\n```\n[root@localhost ~]# cd /htdocs/www.twoyang.net\n[root@localhost www.twoyang.net]# unzip wordpress-4.3.1-zh_CN.zip\n[root@localhost www.twoyang.net]# ln -sv wordpress wp\n‘wp’ -> ‘wordpress’\n```\n\n** 注: 这里将`phpMyAdmin`和`wordpress`安装包在`HostA`上重新部署一次，是因为`httpd`仅将有关`php`的请求转发至`php-fpm`服务器去处理。而事实上一个完整页面当中还存在图片等静态内容，这些内容是不会转发的，还是要在本地的`DocumentRoot`目录中去找。**\n\n这么做以后，在`HostA`上的虚拟机`DocumentRoot`目录就会存在无用的`php`程序代码文件占用磁盘，可以将其删除。\n```\n[root@localhost ~]# cd /htdocs/www.twoyang.com/pma\n[root@localhost pma]# find . -name \"*.php\" | xargs rm -rf\n[root@localhost ~]# cd /htdocs/www.twoyang.com/wp\n[root@localhost wp]# find . -name \"*.php\" | xargs rm -rf\n```\n\n你可以跳过在`HostA`上部署`phpMyAdmin`和`wordpress`安装包的步骤来验证以上结论，可预期的结果是一些页面当中的图片链接无法显示。\n\n启动`httpd`服务，修改一下`/htdocs`目录的属主和属组，以免出现权限问题。\n```\n[root@localhost ~]# chown -R apache:apache /htdocs\n```\n\n这时便可以启动`httpd`服务，测试访问`phpMyAdmin`和`wordpress`了。\n```\n[root@localhost ~]# systemctl start httpd\n```\n\n## xcache ##\n但是这个时候还是没有安装`xcache`的，可以用`ab`测试一下并发访问时服务器响应情况。\n```\n[root@localhost ~]# ab -n 1000 -c 100 http://www.twoyang.com/\n```\n\n这时在`HostB`上安装`xcache`和`php-cli`（后者提供`php`命令行工具，可查看当前加载的`php`模块有哪些）。\n```\n[root@localhost ~]# yum install -y php-xcache php-cli\n```\n\n修改`xcache`配置文件，打开`xcache.cacher`开关。\n```\n[root@localhost ~]# vim /etc/php.d/xcache.ini\nxcache.cacher = On\n```\n\n重启服务\n**注意因为此时`php`是作为独立服务来工作的，因此需要重启`HostB`上的`php-fpm`服务。**\n```\n[root@localhost ~]# systemctl restart php-fpm\n[root@localhost ~]# php -m | grep XCache\nXCache\nXCache Cacher\nXCache Coverager\nXCache Optimizer\nXCache\nXCache Cacher\nXCache Coverager\nXCache Optimizer\n```\n\n再次使用`ab`测试\n```\n[root@localhost ~]# ab -n 1000 -c 100 http://www.twoyang.com/\n```\n\n> 注：本文转载自:[twoyang.net](twoyang.net)\n","source":"_posts/2016-06-23-LAMP-CentOS-7平台三机FastCGI模型.md","raw":"---\ntitle: LAMP--CentOS-7平台三机FastCGI模型\ncategories: 实践与总结\ntag: web\nabbrlink: c3277995\ndate: 2016-06-23 13:27:02\n---\n\n# 需求 #\n```\nCentOS-7平台上搭建LAMP，其中php作为独立的服务工作；\n(1) 三者分离于三台主机；\n(2) 一个虚拟主机用于提供phpMyAdmin；另一个虚拟主机用于提供wordpress；\n(3) 安装xcache，为php提供加速；\n```\n<!-- more -->\n# 解析 #\n+ 由于`CentOS-7`平台提供了以上各应用的`rpm`安装包，且均包含了各应用的新特性，所以各应用程序可以直接使用`yum`源安装，而无需通过编译源码来安装。\n+ `xcache`为`EPEL`源中提供的应用程序，因此需要配置启用`EPEL`源。\n+ 因为`php`要作为独立的服务单独运行于一台服务器上，因此不在是安装`php`，而是要安装`php-fpm`了。\n+ `httpd`与`php`之间需要通过`FastCGI`协议来连接，`httpd`其实是作为作为反向代理来工作的，`httpd`中就需要加载`mod_proxy`和`mod_proxy_fcgi`模块了。\n\n# 规划准备 #\n+ 准备两台`CentOS-7`主机，均为最小化安装。为避免安全设置影响实验结果，将`iptables`和`SELinux`均设置为关闭状态。\n+ `HostA`作为前端`Web`服务器，`IP`地址为: `172.18.71.201`。\n+ `HostB`作为中间`App`服务器，`IP`地址为: `172.18.71.202`。\n+ `HostC`作为后端`DB`服务器，`IP`地址为: `172.18.71.203`。\n+ 需要配置`DNS`服务，或者修改主机`hosts`文件来实现名称解析。\n+ 两台主机均需要配置好`yum`源，除发行版`base`源外还需要`EPEL`源。\n* 配置名称解析和`yum`源不在本文介绍范围内，请参考其他资料。各程序安装包不提供，请自行下载。*\n\n如图所示：\n![CentOS-7-fastcgi](http://7xltax.com1.z0.glb.clouddn.com/538b2805-1156-4c78-8efa-ec3405ade4b7.png)\n\n# 配置 #\n配置时一般习惯按照从后端到前端的顺序来进行，便于测试验证前一步配置，思路上也比较清晰，容易梳理。所以首先配置后端`DB`服务器`HostC`，然后配置中间`App`服务器`HostB`，最后配置后端`Web`服务器`HostA`。\n\n## HostC ##\n安装`mariadb`\n```\n[root@localhost ~]# yum instal -y mariadb-server\n```\n\n在默认配置基础上增加一些配置，包括设置默认字符集、默认字符排序、默认存储引擎、独立表空间、不做域名反解。\n```\n[root@localhost ~]# vim /etc/my.cnf.d/client.cnf\n[client]\ndefault-character-set=utf8\n[root@localhost ~]# vim /etc/my.cnf.d/mysql-clients.cnf\n[mysql]\ndefault-character-set=utf8\n[root@localhost ~]# vim /etc/my.cnf.d/server.cnf\n[mysqld]\ncharacter-set-server=utf8\ncollation-server=utf8_general_ci\ndefault-storage-engine=InnoDB\ninnodb-file-per-table=TRUE\nskip-name-resolve=TRUE\n```\n\n启动`mariadb`\n```\n[root@localhost ~]# systemctl start mariadb\n```\n\n初始化安全设置，主要这是设置`root`用户口令，删除匿名用户，不允许`root`远程登录，删除`test`数据库和访问`test`数据库的相关权限设置，重载权限表。\n** 注：这里如果设置允许`root`远程登录，后面也还是要再次显式授权才可以。**\n```\n[root@localhost ~]# mysql_secure_installation\nSet root password? [Y/n] y\nNew password:\nRe-enter new password:\nRemove anonymous users? [Y/n] y\n ... Success!\n Disallow root login remotely? [Y/n] y\n  ... skipping.\n  Remove test database and access to it? [Y/n] y\n - Dropping test database...\n ... Success!\n - Removing privileges on test database...\n ... Success!\n Reload privilege tables now? [Y/n] y\n ... Success!\n```\n\n登录`mariadb`，做以下设置。\n```\n[root@localhost ~]# mysql -u root -p\n# 授权root可从172.18.71.0/24网段内的主机登录操作所有数据库。\nMariaDB [(none)]> grant all privileges on *.* to 'root'@'172.18.71.%' identified by 'magedu';\n# 给wordpress创建数据wpdb。\nMariaDB [(none)]> create database wpdb;\n# 给wordpress创建用户wp。\nMariaDB [(none)]> create user 'wp'@'172.18.71.%' identified by 'magedu';\n# 授权wp可从172.18.71.0/24网段内的主机登录操作wpdb数据库。\nMariaDB [(none)]> grant all privileges on wpdb.* to 'wp'@'172.18.71.%' identified by 'magedu';\n# 重载权限表\nMariaDB [(none)]> flush privileges;\n# 退出\nMariaDB [(none)]> \\q\n```\n\n这样`HostC`就配置完成了，再来配置`HostB`。\n\n## HostB ##\n正式配置`HostB`之前，应首先验证以下`HostC`的配置，即测试一下能否从`HostB`上连接`HostC`的数据库。\n```\n# 安装mariadb的客户端\n[root@localhost ~]# yum install -y mariadb\n# 测试连接HostB数据库\n[root@localhost ~]# mysql -u root -h 172.18.71.203 -p\n```\n\n安装`php-fpm`应用\n```\n[root@localhost ~]# yum install -y php-fpm php-mysql php-mbstring\n```\n\n修改`php-fpm`的连接池配置文件\n```\n[root@localhost ~]# vim /etc/php-fpm.d/www.conf\n# 监听在本机的外部可访问地址上\nlisten = 172.18.71.202:9000\n# 仅允许前端Web服务器连接\nlisten.allowed_clients = 172.18.71.201\n```\n\n创建`session`存放目录，并修改其权限。\n```\n[root@localhost ~]# mkdir /var/lib/php/session\n[root@localhost ~]# chown -R apache:apache /var/lib/php/session\n```\n\n部署`php`程序代码`phpMyAdmin`和`wordpress`。\n**  注：由于`php-fpm`是独立工作的服务，对于访问`php`页面的请求，前端的`httpd`仅作为反向代理将请求转发至`php-fpm`服务器上，由`php-fpm`找到对应的`php`程序代码文件进行解释执行，然后将结果返回给前端。所以需要将`php`程序代码放在`php-fpm`服务器上。**\n\n建立`php`程序相应的存放目录。\n```\n[root@localhost ~]# mkdir -pv /htdocs/www.twoyang.{com,net}\nmkdir: created directory ‘/htdocs’\nmkdir: created directory ‘/htdocs/www.twoyang.com’\nmkdir: created directory ‘/htdocs/www.twoyang.net’\n```\n\n将`phpMyAdmin`安装包放置在`/htdocs/www.twoyang.com`的目录下，并修改配置文件。\n```bash\n[root@localhost ~]# cd /htdocs/www.twoyang.com\n[root@localhost www.twoyang.com]# unzip phpMyAdmin-4.4.14.1-all-languages.zip\n[root@localhost www.twoyang.com]# ln -sv phpMyAdmin-4.4.14.1-all-languages pma\n‘pma’ -> ‘phpMyAdmin-4.4.14.1-all-languages’\n[root@localhost www.twoyang.com]# cd pma\n[root@localhost pma]# cp config.sample.inc.php config.inc.php\n[root@localhost pma]# openssl rand -base64 20\n0fkgcykLDfyRgG71FOjE9W6LKa8=\n[root@localhost pma]# vim config.inc.php\n$cfg['blowfish_secret'] = '0fkgcykLDfyRgG71FOjE9W6LKa8'; /* YOU MUST FILL IN THIS FOR COOKIE AUTH! */\n$cfg['Servers'][$i]['host'] = '172.18.71.203';\n```\n\n将`wordpress`安装包放置在`/htdocs/www.twoyang.com`的目录下，并修改配置文件。\n```\n[root@localhost ~]# cd /htdocs/www.twoyang.net\n[root@localhost www.twoyang.net]# unzip wordpress-4.3.1-zh_CN.zip\n[root@localhost www.twoyang.net]# ln -sv wordpress wp\n‘wp’ -> ‘wordpress’\n[root@localhost www.twoyang.net]# cd wp\n[root@localhost wp]# cp wp-config-sample.php wp-config.php\n[root@localhost wp]# vim wp-config.php\n\n/** WordPress数据库的名称 */\ndefine('DB_NAME', 'wpdb');\n\n/** MySQL数据库用户名 */\ndefine('DB_USER', 'wp');\n\n/** MySQL数据库密码 */\ndefine('DB_PASSWORD', 'magedu');\n\n/** MySQL主机 */\ndefine('DB_HOST', '172.18.71.203');\n```\n\n启动`php-fpm`服务\n```\n[root@localhost ~]# systemctl start php-fpm\n```\n\n查看`php-fpm`服务是否监听在指定套接字上\n```\n[root@localhost ~]# ss -tnl | grep 9000\nLISTEN     0      128    172.18.71.202:9000                     *:*\n```\n\n## HostA ##\n安装`httpd`\n```\n[root@localhost ~]# yum install -y httpd\n```\n\n修改主配置文件\n```\n[root@localhost ~]# vim /etc/httpd/conf/httpd.conf\n# 设置服务器名，其实这项不设置也可以，但是启动服务时会有警告。\nServerName www.twoyang.net\n# 由于准备使用虚拟主机，需要把MainServer的DocumentRoot关掉。\n#DocumentRoot \"/var/www/html\"\n# 另外需要增加php类型的主页和MIME\n<IfModule dir_module>\n    DirectoryIndex index.php index.html\n</IfModule>\n<IfModule mime_module>\n    AddType application/x-httpd-php .php\n</IfModule>\n```\n\n移除欢迎页面配置文件\n```\n[root@localhost ~]# mv /etc/httpd/conf.d/welcome.conf{,.bak}\n```\n\n新建虚拟主机配置文件`/etc/httpd/conf.d/vhosts.conf`\n```\n[root@localhost ~]# vim /etc/httpd/conf.d/vhosts.conf\n<VirtualHost 172.18.71.201:80>\n    ServerName www.twoyang.com\n    DocumentRoot \"/htdocs/www.twoyang.com/pma\"\n    <Directory \"/htdocs/www.twoyang.com/pma\">\n        OPTIONS FollowSymLinks\n        AllowOverride None\n        Require all granted\n    </Directory>\n    # 由于正向代理和反向代理不能同时存在，这里关闭正向代理。\n    ProxyRequests Off\n    # 将直接访问/的url请求，通过fcgi协议指向后端php-fpm服务器对应目录的index.php。\n    ProxyPassMatch ^/$ fcgi://172.18.71.202:9000/htdocs/www.twoyang.com/pma/index.php\n    # 将访问以.php结尾的url请求，通过fcgi协议指向后端php-fpm服务器对应目录的对应文件。\n    ProxyPassMatch ^/(.*\\.php)$ fcgi://172.18.71.202:9000/htdocs/www.twoyang.com/pma/$1\n</VirtualHost>\n\n<VirtualHost 172.18.71.201:80>\n    ServerName www.twoyang.net\n    DocumentRoot \"/htdocs/www.twoyang.net/wp\"\n    <Directory \"/htdocs/www.twoyang.net/wp\">\n        OPTIONS FollowSymLinks\n        AllowOverride None\n        Require all granted\n    </Directory>\n    ProxyRequests Off\n    ProxyPassMatch ^/$ fcgi://172.18.71.202:9000/htdocs/www.twoyang.net/wp/index.php\n    ProxyPassMatch ^/(.*\\.php)$ fcgi://172.18.71.202:9000/htdocs/www.twoyang.net/wp/$1\n</VirtualHost>\n```\n\n建立虚拟主机`DocumentRoot`对应的目录。\n```\n[root@localhost ~]# mkdir -pv /htdocs/www.twoyang.{com,net}\nmkdir: created directory ‘/htdocs’\nmkdir: created directory ‘/htdocs/www.twoyang.com/’\nmkdir: created directory ‘/htdocs/www.twoyang.net/’\n```\n\n将`phpMyAdmin`安装包放置在虚拟主机`www.twoyang.com`的`DocumentRoot`目录下。\n```\n[root@localhost ~]# cd /htdocs/www.twoyang.com\n[root@localhost www.twoyang.com]# unzip phpMyAdmin-4.4.14.1-all-languages.zip\n[root@localhost www.twoyang.com]# ln -sv phpMyAdmin-4.4.14.1-all-languages pma\n‘pma’ -> ‘phpMyAdmin-4.4.14.1-all-languages’\n```\n\n将`wordpress`安装包放置在虚拟主机`www.twoyang.net`的`DocumentRoot`目录下。\n```\n[root@localhost ~]# cd /htdocs/www.twoyang.net\n[root@localhost www.twoyang.net]# unzip wordpress-4.3.1-zh_CN.zip\n[root@localhost www.twoyang.net]# ln -sv wordpress wp\n‘wp’ -> ‘wordpress’\n```\n\n** 注: 这里将`phpMyAdmin`和`wordpress`安装包在`HostA`上重新部署一次，是因为`httpd`仅将有关`php`的请求转发至`php-fpm`服务器去处理。而事实上一个完整页面当中还存在图片等静态内容，这些内容是不会转发的，还是要在本地的`DocumentRoot`目录中去找。**\n\n这么做以后，在`HostA`上的虚拟机`DocumentRoot`目录就会存在无用的`php`程序代码文件占用磁盘，可以将其删除。\n```\n[root@localhost ~]# cd /htdocs/www.twoyang.com/pma\n[root@localhost pma]# find . -name \"*.php\" | xargs rm -rf\n[root@localhost ~]# cd /htdocs/www.twoyang.com/wp\n[root@localhost wp]# find . -name \"*.php\" | xargs rm -rf\n```\n\n你可以跳过在`HostA`上部署`phpMyAdmin`和`wordpress`安装包的步骤来验证以上结论，可预期的结果是一些页面当中的图片链接无法显示。\n\n启动`httpd`服务，修改一下`/htdocs`目录的属主和属组，以免出现权限问题。\n```\n[root@localhost ~]# chown -R apache:apache /htdocs\n```\n\n这时便可以启动`httpd`服务，测试访问`phpMyAdmin`和`wordpress`了。\n```\n[root@localhost ~]# systemctl start httpd\n```\n\n## xcache ##\n但是这个时候还是没有安装`xcache`的，可以用`ab`测试一下并发访问时服务器响应情况。\n```\n[root@localhost ~]# ab -n 1000 -c 100 http://www.twoyang.com/\n```\n\n这时在`HostB`上安装`xcache`和`php-cli`（后者提供`php`命令行工具，可查看当前加载的`php`模块有哪些）。\n```\n[root@localhost ~]# yum install -y php-xcache php-cli\n```\n\n修改`xcache`配置文件，打开`xcache.cacher`开关。\n```\n[root@localhost ~]# vim /etc/php.d/xcache.ini\nxcache.cacher = On\n```\n\n重启服务\n**注意因为此时`php`是作为独立服务来工作的，因此需要重启`HostB`上的`php-fpm`服务。**\n```\n[root@localhost ~]# systemctl restart php-fpm\n[root@localhost ~]# php -m | grep XCache\nXCache\nXCache Cacher\nXCache Coverager\nXCache Optimizer\nXCache\nXCache Cacher\nXCache Coverager\nXCache Optimizer\n```\n\n再次使用`ab`测试\n```\n[root@localhost ~]# ab -n 1000 -c 100 http://www.twoyang.com/\n```\n\n> 注：本文转载自:[twoyang.net](twoyang.net)\n","slug":"2016-06-23-LAMP-CentOS-7平台三机FastCGI模型","published":1,"updated":"2017-02-14T13:42:45.396Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5mkehqf000bao94oyoxy9fc","content":"<h1 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h1><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">CentOS<span class=\"number\">-7</span>平台上搭建LAMP，其中php作为独立的服务工作；</div><div class=\"line\">(<span class=\"number\">1</span>) 三者分离于三台主机；</div><div class=\"line\">(<span class=\"number\">2</span>) 一个虚拟主机用于提供phpMyAdmin；另一个虚拟主机用于提供wordpress；</div><div class=\"line\">(<span class=\"number\">3</span>) 安装xcache，为php提供加速；</div></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h1 id=\"解析\"><a href=\"#解析\" class=\"headerlink\" title=\"解析\"></a>解析</h1><ul>\n<li>由于<code>CentOS-7</code>平台提供了以上各应用的<code>rpm</code>安装包，且均包含了各应用的新特性，所以各应用程序可以直接使用<code>yum</code>源安装，而无需通过编译源码来安装。</li>\n<li><code>xcache</code>为<code>EPEL</code>源中提供的应用程序，因此需要配置启用<code>EPEL</code>源。</li>\n<li>因为<code>php</code>要作为独立的服务单独运行于一台服务器上，因此不在是安装<code>php</code>，而是要安装<code>php-fpm</code>了。</li>\n<li><code>httpd</code>与<code>php</code>之间需要通过<code>FastCGI</code>协议来连接，<code>httpd</code>其实是作为作为反向代理来工作的，<code>httpd</code>中就需要加载<code>mod_proxy</code>和<code>mod_proxy_fcgi</code>模块了。</li>\n</ul>\n<h1 id=\"规划准备\"><a href=\"#规划准备\" class=\"headerlink\" title=\"规划准备\"></a>规划准备</h1><ul>\n<li>准备两台<code>CentOS-7</code>主机，均为最小化安装。为避免安全设置影响实验结果，将<code>iptables</code>和<code>SELinux</code>均设置为关闭状态。</li>\n<li><code>HostA</code>作为前端<code>Web</code>服务器，<code>IP</code>地址为: <code>172.18.71.201</code>。</li>\n<li><code>HostB</code>作为中间<code>App</code>服务器，<code>IP</code>地址为: <code>172.18.71.202</code>。</li>\n<li><code>HostC</code>作为后端<code>DB</code>服务器，<code>IP</code>地址为: <code>172.18.71.203</code>。</li>\n<li>需要配置<code>DNS</code>服务，或者修改主机<code>hosts</code>文件来实现名称解析。</li>\n<li>两台主机均需要配置好<code>yum</code>源，除发行版<code>base</code>源外还需要<code>EPEL</code>源。</li>\n</ul>\n<ul>\n<li>配置名称解析和<code>yum</code>源不在本文介绍范围内，请参考其他资料。各程序安装包不提供，请自行下载。*</li>\n</ul>\n<p>如图所示：<br><img src=\"http://7xltax.com1.z0.glb.clouddn.com/538b2805-1156-4c78-8efa-ec3405ade4b7.png\" alt=\"CentOS-7-fastcgi\"></p>\n<h1 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h1><p>配置时一般习惯按照从后端到前端的顺序来进行，便于测试验证前一步配置，思路上也比较清晰，容易梳理。所以首先配置后端<code>DB</code>服务器<code>HostC</code>，然后配置中间<code>App</code>服务器<code>HostB</code>，最后配置后端<code>Web</code>服务器<code>HostA</code>。</p>\n<h2 id=\"HostC\"><a href=\"#HostC\" class=\"headerlink\" title=\"HostC\"></a>HostC</h2><p>安装<code>mariadb</code><br><figure class=\"highlight autoit\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root<span class=\"symbol\">@localhost</span> ~]<span class=\"meta\"># yum instal -y mariadb-server</span></div></pre></td></tr></table></figure></p>\n<p>在默认配置基础上增加一些配置，包括设置默认字符集、默认字符排序、默认存储引擎、独立表空间、不做域名反解。<br><figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"section\">[root@localhost ~]</span><span class=\"comment\"># vim /etc/my.cnf.d/client.cnf</span></div><div class=\"line\"><span class=\"section\">[client]</span></div><div class=\"line\"><span class=\"attr\">default-character-set</span>=utf8</div><div class=\"line\"><span class=\"section\">[root@localhost ~]</span><span class=\"comment\"># vim /etc/my.cnf.d/mysql-clients.cnf</span></div><div class=\"line\"><span class=\"section\">[mysql]</span></div><div class=\"line\"><span class=\"attr\">default-character-set</span>=utf8</div><div class=\"line\"><span class=\"section\">[root@localhost ~]</span><span class=\"comment\"># vim /etc/my.cnf.d/server.cnf</span></div><div class=\"line\"><span class=\"section\">[mysqld]</span></div><div class=\"line\"><span class=\"attr\">character-set-server</span>=utf8</div><div class=\"line\"><span class=\"attr\">collation-server</span>=utf8_general_ci</div><div class=\"line\"><span class=\"attr\">default-storage-engine</span>=InnoDB</div><div class=\"line\"><span class=\"attr\">innodb-file-per-table</span>=<span class=\"literal\">TRUE</span></div><div class=\"line\"><span class=\"attr\">skip-name-resolve</span>=<span class=\"literal\">TRUE</span></div></pre></td></tr></table></figure></p>\n<p>启动<code>mariadb</code><br><figure class=\"highlight autoit\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root<span class=\"symbol\">@localhost</span> ~]<span class=\"meta\"># systemctl start mariadb</span></div></pre></td></tr></table></figure></p>\n<p>初始化安全设置，主要这是设置<code>root</code>用户口令，删除匿名用户，不允许<code>root</code>远程登录，删除<code>test</code>数据库和访问<code>test</code>数据库的相关权限设置，重载权限表。<br><strong> 注：这里如果设置允许<code>root</code>远程登录，后面也还是要再次显式授权才可以。</strong><br><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@localhost ~]# mysql_secure_installation</div><div class=\"line\"><span class=\"builtin-name\">Set</span> root password? [Y/n] y</div><div class=\"line\">New password:</div><div class=\"line\">Re-enter new password:</div><div class=\"line\"><span class=\"builtin-name\">Remove</span> anonymous users? [Y/n] y</div><div class=\"line\"> <span class=\"built_in\">..</span>. Success!</div><div class=\"line\"> Disallow root login remotely? [Y/n] y</div><div class=\"line\">  <span class=\"built_in\">..</span>. skipping.</div><div class=\"line\">  <span class=\"builtin-name\">Remove</span> test database <span class=\"keyword\">and</span> access <span class=\"keyword\">to</span> it? [Y/n] y</div><div class=\"line\"> - Dropping test database<span class=\"built_in\">..</span>.</div><div class=\"line\"> <span class=\"built_in\">..</span>. Success!</div><div class=\"line\"> - Removing privileges on test database<span class=\"built_in\">..</span>.</div><div class=\"line\"> <span class=\"built_in\">..</span>. Success!</div><div class=\"line\"> Reload privilege tables now? [Y/n] y</div><div class=\"line\"> <span class=\"built_in\">..</span>. Success!</div></pre></td></tr></table></figure></p>\n<p>登录<code>mariadb</code>，做以下设置。<br><figure class=\"highlight nsis\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@localhost ~]<span class=\"comment\"># mysql -u root -p</span></div><div class=\"line\"><span class=\"comment\"># 授权root可从172.18.71.0/24网段内的主机登录操作所有数据库。</span></div><div class=\"line\">MariaDB [(<span class=\"literal\">none</span>)]&gt; grant <span class=\"literal\">all</span> privileges <span class=\"literal\">on</span> *.* to <span class=\"string\">'root'</span>@<span class=\"string\">'172.18.71.%'</span> identified by <span class=\"string\">'magedu'</span><span class=\"comment\">;</span></div><div class=\"line\"><span class=\"comment\"># 给wordpress创建数据wpdb。</span></div><div class=\"line\">MariaDB [(<span class=\"literal\">none</span>)]&gt; create database wpdb<span class=\"comment\">;</span></div><div class=\"line\"><span class=\"comment\"># 给wordpress创建用户wp。</span></div><div class=\"line\">MariaDB [(<span class=\"literal\">none</span>)]&gt; create <span class=\"literal\">user</span> <span class=\"string\">'wp'</span>@<span class=\"string\">'172.18.71.%'</span> identified by <span class=\"string\">'magedu'</span><span class=\"comment\">;</span></div><div class=\"line\"><span class=\"comment\"># 授权wp可从172.18.71.0/24网段内的主机登录操作wpdb数据库。</span></div><div class=\"line\">MariaDB [(<span class=\"literal\">none</span>)]&gt; grant <span class=\"literal\">all</span> privileges <span class=\"literal\">on</span> wpdb.* to <span class=\"string\">'wp'</span>@<span class=\"string\">'172.18.71.%'</span> identified by <span class=\"string\">'magedu'</span><span class=\"comment\">;</span></div><div class=\"line\"><span class=\"comment\"># 重载权限表</span></div><div class=\"line\">MariaDB [(<span class=\"literal\">none</span>)]&gt; flush privileges<span class=\"comment\">;</span></div><div class=\"line\"><span class=\"comment\"># 退出</span></div><div class=\"line\">MariaDB [(<span class=\"literal\">none</span>)]&gt; \\q</div></pre></td></tr></table></figure></p>\n<p>这样<code>HostC</code>就配置完成了，再来配置<code>HostB</code>。</p>\n<h2 id=\"HostB\"><a href=\"#HostB\" class=\"headerlink\" title=\"HostB\"></a>HostB</h2><p>正式配置<code>HostB</code>之前，应首先验证以下<code>HostC</code>的配置，即测试一下能否从<code>HostB</code>上连接<code>HostC</code>的数据库。<br><figure class=\"highlight autoit\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\"># 安装mariadb的客户端</span></div><div class=\"line\">[root<span class=\"symbol\">@localhost</span> ~]<span class=\"meta\"># yum install -y mariadb</span></div><div class=\"line\"><span class=\"meta\"># 测试连接HostB数据库</span></div><div class=\"line\">[root<span class=\"symbol\">@localhost</span> ~]<span class=\"meta\"># mysql -u root -h 172.18.71.203 -p</span></div></pre></td></tr></table></figure></p>\n<p>安装<code>php-fpm</code>应用<br><figure class=\"highlight autoit\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root<span class=\"symbol\">@localhost</span> ~]<span class=\"meta\"># yum install -y php-fpm php-mysql php-mbstring</span></div></pre></td></tr></table></figure></p>\n<p>修改<code>php-fpm</code>的连接池配置文件<br><figure class=\"highlight makefile\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@localhost ~]<span class=\"comment\"># vim /etc/php-fpm.d/www.conf</span></div><div class=\"line\"><span class=\"comment\"># 监听在本机的外部可访问地址上</span></div><div class=\"line\">listen = 172.18.71.202:9000</div><div class=\"line\"><span class=\"comment\"># 仅允许前端Web服务器连接</span></div><div class=\"line\">listen.allowed_clients = 172.18.71.201</div></pre></td></tr></table></figure></p>\n<p>创建<code>session</code>存放目录，并修改其权限。<br><figure class=\"highlight autoit\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root<span class=\"symbol\">@localhost</span> ~]<span class=\"meta\"># mkdir /var/lib/php/session</span></div><div class=\"line\">[root<span class=\"symbol\">@localhost</span> ~]<span class=\"meta\"># chown -R apache:apache /var/lib/php/session</span></div></pre></td></tr></table></figure></p>\n<p>部署<code>php</code>程序代码<code>phpMyAdmin</code>和<code>wordpress</code>。<br><strong>  注：由于<code>php-fpm</code>是独立工作的服务，对于访问<code>php</code>页面的请求，前端的<code>httpd</code>仅作为反向代理将请求转发至<code>php-fpm</code>服务器上，由<code>php-fpm</code>找到对应的<code>php</code>程序代码文件进行解释执行，然后将结果返回给前端。所以需要将<code>php</code>程序代码放在<code>php-fpm</code>服务器上。</strong></p>\n<p>建立<code>php</code>程序相应的存放目录。<br><figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@localhost ~]<span class=\"meta\"># mkdir -pv /htdocs/www.twoyang.&#123;com,net&#125;</span></div><div class=\"line\"><span class=\"symbol\">mkdir:</span> created directory ‘/htdocs’</div><div class=\"line\"><span class=\"symbol\">mkdir:</span> created directory ‘<span class=\"meta-keyword\">/htdocs/</span>www.twoyang.com’</div><div class=\"line\"><span class=\"symbol\">mkdir:</span> created directory ‘<span class=\"meta-keyword\">/htdocs/</span>www.twoyang.net’</div></pre></td></tr></table></figure></p>\n<p>将<code>phpMyAdmin</code>安装包放置在<code>/htdocs/www.twoyang.com</code>的目录下，并修改配置文件。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@localhost ~]<span class=\"comment\"># cd /htdocs/www.twoyang.com</span></div><div class=\"line\">[root@localhost www.twoyang.com]<span class=\"comment\"># unzip phpMyAdmin-4.4.14.1-all-languages.zip</span></div><div class=\"line\">[root@localhost www.twoyang.com]<span class=\"comment\"># ln -sv phpMyAdmin-4.4.14.1-all-languages pma</span></div><div class=\"line\">‘pma’ -&gt; ‘phpMyAdmin-4.4.14.1-all-languages’</div><div class=\"line\">[root@localhost www.twoyang.com]<span class=\"comment\"># cd pma</span></div><div class=\"line\">[root@localhost pma]<span class=\"comment\"># cp config.sample.inc.php config.inc.php</span></div><div class=\"line\">[root@localhost pma]<span class=\"comment\"># openssl rand -base64 20</span></div><div class=\"line\">0fkgcykLDfyRgG71FOjE9W6LKa8=</div><div class=\"line\">[root@localhost pma]<span class=\"comment\"># vim config.inc.php</span></div><div class=\"line\"><span class=\"variable\">$cfg</span>[<span class=\"string\">'blowfish_secret'</span>] = <span class=\"string\">'0fkgcykLDfyRgG71FOjE9W6LKa8'</span>; /* YOU MUST FILL IN THIS FOR COOKIE AUTH! */</div><div class=\"line\"><span class=\"variable\">$cfg</span>[<span class=\"string\">'Servers'</span>][<span class=\"variable\">$i</span>][<span class=\"string\">'host'</span>] = <span class=\"string\">'172.18.71.203'</span>;</div></pre></td></tr></table></figure></p>\n<p>将<code>wordpress</code>安装包放置在<code>/htdocs/www.twoyang.com</code>的目录下，并修改配置文件。<br><figure class=\"highlight livescript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@localhost ~]<span class=\"comment\"># cd /htdocs/www.twoyang.net</span></div><div class=\"line\">[root@localhost www.twoyang.net]<span class=\"comment\"># unzip wordpress-4.3.1-zh_CN.zip</span></div><div class=\"line\">[root@localhost www.twoyang.net]<span class=\"comment\"># ln -sv wordpress wp</span></div><div class=\"line\">‘wp’<span class=\"function\"> -&gt;</span> ‘wordpress’</div><div class=\"line\">[root@localhost www.twoyang.net]<span class=\"comment\"># cd wp</span></div><div class=\"line\">[root@localhost wp]<span class=\"comment\"># cp wp-config-sample.php wp-config.php</span></div><div class=\"line\">[root@localhost wp]<span class=\"comment\"># vim wp-config.php</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/** WordPress数据库的名称 */</span></div><div class=\"line\">define(<span class=\"string\">'DB_NAME'</span>, <span class=\"string\">'wpdb'</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/** MySQL数据库用户名 */</span></div><div class=\"line\">define(<span class=\"string\">'DB_USER'</span>, <span class=\"string\">'wp'</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/** MySQL数据库密码 */</span></div><div class=\"line\">define(<span class=\"string\">'DB_PASSWORD'</span>, <span class=\"string\">'magedu'</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/** MySQL主机 */</span></div><div class=\"line\">define(<span class=\"string\">'DB_HOST'</span>, <span class=\"string\">'172.18.71.203'</span>);</div></pre></td></tr></table></figure></p>\n<p>启动<code>php-fpm</code>服务<br><figure class=\"highlight autoit\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root<span class=\"symbol\">@localhost</span> ~]<span class=\"meta\"># systemctl start php-fpm</span></div></pre></td></tr></table></figure></p>\n<p>查看<code>php-fpm</code>服务是否监听在指定套接字上<br><figure class=\"highlight elixir\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root<span class=\"variable\">@localhost</span> ~]<span class=\"comment\"># ss -tnl | grep 9000</span></div><div class=\"line\">LISTEN     <span class=\"number\">0</span>      <span class=\"number\">128</span>    <span class=\"number\">172.18</span>.<span class=\"number\">71.202</span><span class=\"symbol\">:</span><span class=\"number\">9000</span>                     *<span class=\"symbol\">:*</span></div></pre></td></tr></table></figure></p>\n<h2 id=\"HostA\"><a href=\"#HostA\" class=\"headerlink\" title=\"HostA\"></a>HostA</h2><p>安装<code>httpd</code><br><figure class=\"highlight autoit\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root<span class=\"symbol\">@localhost</span> ~]<span class=\"meta\"># yum install -y httpd</span></div></pre></td></tr></table></figure></p>\n<p>修改主配置文件<br><figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@localhost ~]<span class=\"meta\"># vim /etc/httpd/conf/httpd.conf</span></div><div class=\"line\"><span class=\"meta\"># 设置服务器名，其实这项不设置也可以，但是启动服务时会有警告。</span></div><div class=\"line\">ServerName www.twoyang.net</div><div class=\"line\"><span class=\"meta\"># 由于准备使用虚拟主机，需要把MainServer的DocumentRoot关掉。</span></div><div class=\"line\"><span class=\"meta\">#DocumentRoot <span class=\"string\">\"/var/www/html\"</span></span></div><div class=\"line\"><span class=\"meta\"># 另外需要增加php类型的主页和MIME</span></div><div class=\"line\"><span class=\"params\">&lt;IfModule dir_module&gt;</span></div><div class=\"line\">    DirectoryIndex index.php index.html</div><div class=\"line\"><span class=\"params\">&lt;/IfModule&gt;</span></div><div class=\"line\"><span class=\"params\">&lt;IfModule mime_module&gt;</span></div><div class=\"line\">    AddType application/x-httpd-php .php</div><div class=\"line\"><span class=\"params\">&lt;/IfModule&gt;</span></div></pre></td></tr></table></figure></p>\n<p>移除欢迎页面配置文件<br><figure class=\"highlight autoit\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root<span class=\"symbol\">@localhost</span> ~]<span class=\"meta\"># mv /etc/httpd/conf.d/welcome.conf&#123;,.bak&#125;</span></div></pre></td></tr></table></figure></p>\n<p>新建虚拟主机配置文件<code>/etc/httpd/conf.d/vhosts.conf</code><br><figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@localhost ~]<span class=\"meta\"># vim /etc/httpd/conf.d/vhosts.conf</span></div><div class=\"line\"><span class=\"params\">&lt;VirtualHost <span class=\"number\">172.18</span><span class=\"number\">.71</span><span class=\"number\">.201</span>:<span class=\"number\">80</span>&gt;</span></div><div class=\"line\">    ServerName www.twoyang.com</div><div class=\"line\">    DocumentRoot <span class=\"string\">\"/htdocs/www.twoyang.com/pma\"</span></div><div class=\"line\">    <span class=\"params\">&lt;Directory \"/htdocs/www.twoyang.com/pma\"&gt;</span></div><div class=\"line\">        OPTIONS FollowSymLinks</div><div class=\"line\">        AllowOverride None</div><div class=\"line\">        Require all granted</div><div class=\"line\">    <span class=\"params\">&lt;/Directory&gt;</span></div><div class=\"line\">    <span class=\"meta\"># 由于正向代理和反向代理不能同时存在，这里关闭正向代理。</span></div><div class=\"line\">    ProxyRequests Off</div><div class=\"line\">    <span class=\"meta\"># 将直接访问/的url请求，通过fcgi协议指向后端php-fpm服务器对应目录的index.php。</span></div><div class=\"line\">    ProxyPassMatch ^/$ fcgi:<span class=\"comment\">//172.18.71.202:9000/htdocs/www.twoyang.com/pma/index.php</span></div><div class=\"line\">    <span class=\"meta\"># 将访问以.php结尾的url请求，通过fcgi协议指向后端php-fpm服务器对应目录的对应文件。</span></div><div class=\"line\">    ProxyPassMatch ^/(.*\\.php)$ fcgi:<span class=\"comment\">//172.18.71.202:9000/htdocs/www.twoyang.com/pma/$1</span></div><div class=\"line\"><span class=\"params\">&lt;/VirtualHost&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"params\">&lt;VirtualHost <span class=\"number\">172.18</span><span class=\"number\">.71</span><span class=\"number\">.201</span>:<span class=\"number\">80</span>&gt;</span></div><div class=\"line\">    ServerName www.twoyang.net</div><div class=\"line\">    DocumentRoot <span class=\"string\">\"/htdocs/www.twoyang.net/wp\"</span></div><div class=\"line\">    <span class=\"params\">&lt;Directory \"/htdocs/www.twoyang.net/wp\"&gt;</span></div><div class=\"line\">        OPTIONS FollowSymLinks</div><div class=\"line\">        AllowOverride None</div><div class=\"line\">        Require all granted</div><div class=\"line\">    <span class=\"params\">&lt;/Directory&gt;</span></div><div class=\"line\">    ProxyRequests Off</div><div class=\"line\">    ProxyPassMatch ^/$ fcgi:<span class=\"comment\">//172.18.71.202:9000/htdocs/www.twoyang.net/wp/index.php</span></div><div class=\"line\">    ProxyPassMatch ^/(.*\\.php)$ fcgi:<span class=\"comment\">//172.18.71.202:9000/htdocs/www.twoyang.net/wp/$1</span></div><div class=\"line\"><span class=\"params\">&lt;/VirtualHost&gt;</span></div></pre></td></tr></table></figure></p>\n<p>建立虚拟主机<code>DocumentRoot</code>对应的目录。<br><figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@localhost ~]<span class=\"meta\"># mkdir -pv /htdocs/www.twoyang.&#123;com,net&#125;</span></div><div class=\"line\"><span class=\"symbol\">mkdir:</span> created directory ‘/htdocs’</div><div class=\"line\"><span class=\"symbol\">mkdir:</span> created directory ‘<span class=\"meta-keyword\">/htdocs/</span>www.twoyang.com/’</div><div class=\"line\"><span class=\"symbol\">mkdir:</span> created directory ‘<span class=\"meta-keyword\">/htdocs/</span>www.twoyang.net/’</div></pre></td></tr></table></figure></p>\n<p>将<code>phpMyAdmin</code>安装包放置在虚拟主机<code>www.twoyang.com</code>的<code>DocumentRoot</code>目录下。<br><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@localhost ~]# cd /htdocs/www.twoyang.com</div><div class=\"line\">[root@localhost www.twoyang.com]# unzip phpMyAdmin<span class=\"number\">-4.4</span><span class=\"number\">.14</span><span class=\"number\">.1</span>-all-languages.zip</div><div class=\"line\">[root@localhost www.twoyang.com]# ln -sv phpMyAdmin<span class=\"number\">-4.4</span><span class=\"number\">.14</span><span class=\"number\">.1</span>-all-languages pma</div><div class=\"line\">‘pma’ -&gt; ‘phpMyAdmin<span class=\"number\">-4.4</span><span class=\"number\">.14</span><span class=\"number\">.1</span>-all-languages’</div></pre></td></tr></table></figure></p>\n<p>将<code>wordpress</code>安装包放置在虚拟主机<code>www.twoyang.net</code>的<code>DocumentRoot</code>目录下。<br><figure class=\"highlight elixir\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root<span class=\"variable\">@localhost</span> ~]<span class=\"comment\"># cd /htdocs/www.twoyang.net</span></div><div class=\"line\">[root<span class=\"variable\">@localhost</span> www.twoyang.net]<span class=\"comment\"># unzip wordpress-4.3.1-zh_CN.zip</span></div><div class=\"line\">[root<span class=\"variable\">@localhost</span> www.twoyang.net]<span class=\"comment\"># ln -sv wordpress wp</span></div><div class=\"line\">‘wp’ -&gt; ‘wordpress’</div></pre></td></tr></table></figure></p>\n<p><strong> 注: 这里将<code>phpMyAdmin</code>和<code>wordpress</code>安装包在<code>HostA</code>上重新部署一次，是因为<code>httpd</code>仅将有关<code>php</code>的请求转发至<code>php-fpm</code>服务器去处理。而事实上一个完整页面当中还存在图片等静态内容，这些内容是不会转发的，还是要在本地的<code>DocumentRoot</code>目录中去找。</strong></p>\n<p>这么做以后，在<code>HostA</code>上的虚拟机<code>DocumentRoot</code>目录就会存在无用的<code>php</code>程序代码文件占用磁盘，可以将其删除。<br><figure class=\"highlight autoit\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root<span class=\"symbol\">@localhost</span> ~]<span class=\"meta\"># cd /htdocs/www.twoyang.com/pma</span></div><div class=\"line\">[root<span class=\"symbol\">@localhost</span> pma]<span class=\"meta\"># find . -name <span class=\"string\">\"*.php\"</span> | xargs rm -rf</span></div><div class=\"line\">[root<span class=\"symbol\">@localhost</span> ~]<span class=\"meta\"># cd /htdocs/www.twoyang.com/wp</span></div><div class=\"line\">[root<span class=\"symbol\">@localhost</span> wp]<span class=\"meta\"># find . -name <span class=\"string\">\"*.php\"</span> | xargs rm -rf</span></div></pre></td></tr></table></figure></p>\n<p>你可以跳过在<code>HostA</code>上部署<code>phpMyAdmin</code>和<code>wordpress</code>安装包的步骤来验证以上结论，可预期的结果是一些页面当中的图片链接无法显示。</p>\n<p>启动<code>httpd</code>服务，修改一下<code>/htdocs</code>目录的属主和属组，以免出现权限问题。<br><figure class=\"highlight autoit\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root<span class=\"symbol\">@localhost</span> ~]<span class=\"meta\"># chown -R apache:apache /htdocs</span></div></pre></td></tr></table></figure></p>\n<p>这时便可以启动<code>httpd</code>服务，测试访问<code>phpMyAdmin</code>和<code>wordpress</code>了。<br><figure class=\"highlight autoit\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root<span class=\"symbol\">@localhost</span> ~]<span class=\"meta\"># systemctl start httpd</span></div></pre></td></tr></table></figure></p>\n<h2 id=\"xcache\"><a href=\"#xcache\" class=\"headerlink\" title=\"xcache\"></a>xcache</h2><p>但是这个时候还是没有安装<code>xcache</code>的，可以用<code>ab</code>测试一下并发访问时服务器响应情况。<br><figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@localhost <span class=\"symbol\">~]# ab -n 1000 -c 100 http</span>:<span class=\"comment\">//www.twoyang.com/</span></div></pre></td></tr></table></figure></p>\n<p>这时在<code>HostB</code>上安装<code>xcache</code>和<code>php-cli</code>（后者提供<code>php</code>命令行工具，可查看当前加载的<code>php</code>模块有哪些）。<br><figure class=\"highlight autoit\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root<span class=\"symbol\">@localhost</span> ~]<span class=\"meta\"># yum install -y php-xcache php-cli</span></div></pre></td></tr></table></figure></p>\n<p>修改<code>xcache</code>配置文件，打开<code>xcache.cacher</code>开关。<br><figure class=\"highlight autoit\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root<span class=\"symbol\">@localhost</span> ~]<span class=\"meta\"># vim /etc/php.d/xcache.ini</span></div><div class=\"line\">xcache.cacher = On</div></pre></td></tr></table></figure></p>\n<p>重启服务<br><strong>注意因为此时<code>php</code>是作为独立服务来工作的，因此需要重启<code>HostB</code>上的<code>php-fpm</code>服务。</strong><br><figure class=\"highlight objectivec\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@localhost ~]<span class=\"meta\"># systemctl restart php-fpm</span></div><div class=\"line\">[root@localhost ~]<span class=\"meta\"># php -m | grep XCache</span></div><div class=\"line\"><span class=\"built_in\">XCache</span></div><div class=\"line\"><span class=\"built_in\">XCache</span> Cacher</div><div class=\"line\"><span class=\"built_in\">XCache</span> Coverager</div><div class=\"line\"><span class=\"built_in\">XCache</span> Optimizer</div><div class=\"line\"><span class=\"built_in\">XCache</span></div><div class=\"line\"><span class=\"built_in\">XCache</span> Cacher</div><div class=\"line\"><span class=\"built_in\">XCache</span> Coverager</div><div class=\"line\"><span class=\"built_in\">XCache</span> Optimizer</div></pre></td></tr></table></figure></p>\n<p>再次使用<code>ab</code>测试<br><figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@localhost <span class=\"symbol\">~]# ab -n 1000 -c 100 http</span>:<span class=\"comment\">//www.twoyang.com/</span></div></pre></td></tr></table></figure></p>\n<blockquote>\n<p>注：本文转载自:<a href=\"twoyang.net\">twoyang.net</a></p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<h1 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h1><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">CentOS<span class=\"number\">-7</span>平台上搭建LAMP，其中php作为独立的服务工作；</div><div class=\"line\">(<span class=\"number\">1</span>) 三者分离于三台主机；</div><div class=\"line\">(<span class=\"number\">2</span>) 一个虚拟主机用于提供phpMyAdmin；另一个虚拟主机用于提供wordpress；</div><div class=\"line\">(<span class=\"number\">3</span>) 安装xcache，为php提供加速；</div></pre></td></tr></table></figure>","more":"<h1 id=\"解析\"><a href=\"#解析\" class=\"headerlink\" title=\"解析\"></a>解析</h1><ul>\n<li>由于<code>CentOS-7</code>平台提供了以上各应用的<code>rpm</code>安装包，且均包含了各应用的新特性，所以各应用程序可以直接使用<code>yum</code>源安装，而无需通过编译源码来安装。</li>\n<li><code>xcache</code>为<code>EPEL</code>源中提供的应用程序，因此需要配置启用<code>EPEL</code>源。</li>\n<li>因为<code>php</code>要作为独立的服务单独运行于一台服务器上，因此不在是安装<code>php</code>，而是要安装<code>php-fpm</code>了。</li>\n<li><code>httpd</code>与<code>php</code>之间需要通过<code>FastCGI</code>协议来连接，<code>httpd</code>其实是作为作为反向代理来工作的，<code>httpd</code>中就需要加载<code>mod_proxy</code>和<code>mod_proxy_fcgi</code>模块了。</li>\n</ul>\n<h1 id=\"规划准备\"><a href=\"#规划准备\" class=\"headerlink\" title=\"规划准备\"></a>规划准备</h1><ul>\n<li>准备两台<code>CentOS-7</code>主机，均为最小化安装。为避免安全设置影响实验结果，将<code>iptables</code>和<code>SELinux</code>均设置为关闭状态。</li>\n<li><code>HostA</code>作为前端<code>Web</code>服务器，<code>IP</code>地址为: <code>172.18.71.201</code>。</li>\n<li><code>HostB</code>作为中间<code>App</code>服务器，<code>IP</code>地址为: <code>172.18.71.202</code>。</li>\n<li><code>HostC</code>作为后端<code>DB</code>服务器，<code>IP</code>地址为: <code>172.18.71.203</code>。</li>\n<li>需要配置<code>DNS</code>服务，或者修改主机<code>hosts</code>文件来实现名称解析。</li>\n<li>两台主机均需要配置好<code>yum</code>源，除发行版<code>base</code>源外还需要<code>EPEL</code>源。</li>\n</ul>\n<ul>\n<li>配置名称解析和<code>yum</code>源不在本文介绍范围内，请参考其他资料。各程序安装包不提供，请自行下载。*</li>\n</ul>\n<p>如图所示：<br><img src=\"http://7xltax.com1.z0.glb.clouddn.com/538b2805-1156-4c78-8efa-ec3405ade4b7.png\" alt=\"CentOS-7-fastcgi\"></p>\n<h1 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h1><p>配置时一般习惯按照从后端到前端的顺序来进行，便于测试验证前一步配置，思路上也比较清晰，容易梳理。所以首先配置后端<code>DB</code>服务器<code>HostC</code>，然后配置中间<code>App</code>服务器<code>HostB</code>，最后配置后端<code>Web</code>服务器<code>HostA</code>。</p>\n<h2 id=\"HostC\"><a href=\"#HostC\" class=\"headerlink\" title=\"HostC\"></a>HostC</h2><p>安装<code>mariadb</code><br><figure class=\"highlight autoit\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root<span class=\"symbol\">@localhost</span> ~]<span class=\"meta\"># yum instal -y mariadb-server</span></div></pre></td></tr></table></figure></p>\n<p>在默认配置基础上增加一些配置，包括设置默认字符集、默认字符排序、默认存储引擎、独立表空间、不做域名反解。<br><figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"section\">[root@localhost ~]</span><span class=\"comment\"># vim /etc/my.cnf.d/client.cnf</span></div><div class=\"line\"><span class=\"section\">[client]</span></div><div class=\"line\"><span class=\"attr\">default-character-set</span>=utf8</div><div class=\"line\"><span class=\"section\">[root@localhost ~]</span><span class=\"comment\"># vim /etc/my.cnf.d/mysql-clients.cnf</span></div><div class=\"line\"><span class=\"section\">[mysql]</span></div><div class=\"line\"><span class=\"attr\">default-character-set</span>=utf8</div><div class=\"line\"><span class=\"section\">[root@localhost ~]</span><span class=\"comment\"># vim /etc/my.cnf.d/server.cnf</span></div><div class=\"line\"><span class=\"section\">[mysqld]</span></div><div class=\"line\"><span class=\"attr\">character-set-server</span>=utf8</div><div class=\"line\"><span class=\"attr\">collation-server</span>=utf8_general_ci</div><div class=\"line\"><span class=\"attr\">default-storage-engine</span>=InnoDB</div><div class=\"line\"><span class=\"attr\">innodb-file-per-table</span>=<span class=\"literal\">TRUE</span></div><div class=\"line\"><span class=\"attr\">skip-name-resolve</span>=<span class=\"literal\">TRUE</span></div></pre></td></tr></table></figure></p>\n<p>启动<code>mariadb</code><br><figure class=\"highlight autoit\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root<span class=\"symbol\">@localhost</span> ~]<span class=\"meta\"># systemctl start mariadb</span></div></pre></td></tr></table></figure></p>\n<p>初始化安全设置，主要这是设置<code>root</code>用户口令，删除匿名用户，不允许<code>root</code>远程登录，删除<code>test</code>数据库和访问<code>test</code>数据库的相关权限设置，重载权限表。<br><strong> 注：这里如果设置允许<code>root</code>远程登录，后面也还是要再次显式授权才可以。</strong><br><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@localhost ~]# mysql_secure_installation</div><div class=\"line\"><span class=\"builtin-name\">Set</span> root password? [Y/n] y</div><div class=\"line\">New password:</div><div class=\"line\">Re-enter new password:</div><div class=\"line\"><span class=\"builtin-name\">Remove</span> anonymous users? [Y/n] y</div><div class=\"line\"> <span class=\"built_in\">..</span>. Success!</div><div class=\"line\"> Disallow root login remotely? [Y/n] y</div><div class=\"line\">  <span class=\"built_in\">..</span>. skipping.</div><div class=\"line\">  <span class=\"builtin-name\">Remove</span> test database <span class=\"keyword\">and</span> access <span class=\"keyword\">to</span> it? [Y/n] y</div><div class=\"line\"> - Dropping test database<span class=\"built_in\">..</span>.</div><div class=\"line\"> <span class=\"built_in\">..</span>. Success!</div><div class=\"line\"> - Removing privileges on test database<span class=\"built_in\">..</span>.</div><div class=\"line\"> <span class=\"built_in\">..</span>. Success!</div><div class=\"line\"> Reload privilege tables now? [Y/n] y</div><div class=\"line\"> <span class=\"built_in\">..</span>. Success!</div></pre></td></tr></table></figure></p>\n<p>登录<code>mariadb</code>，做以下设置。<br><figure class=\"highlight nsis\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@localhost ~]<span class=\"comment\"># mysql -u root -p</span></div><div class=\"line\"><span class=\"comment\"># 授权root可从172.18.71.0/24网段内的主机登录操作所有数据库。</span></div><div class=\"line\">MariaDB [(<span class=\"literal\">none</span>)]&gt; grant <span class=\"literal\">all</span> privileges <span class=\"literal\">on</span> *.* to <span class=\"string\">'root'</span>@<span class=\"string\">'172.18.71.%'</span> identified by <span class=\"string\">'magedu'</span><span class=\"comment\">;</span></div><div class=\"line\"><span class=\"comment\"># 给wordpress创建数据wpdb。</span></div><div class=\"line\">MariaDB [(<span class=\"literal\">none</span>)]&gt; create database wpdb<span class=\"comment\">;</span></div><div class=\"line\"><span class=\"comment\"># 给wordpress创建用户wp。</span></div><div class=\"line\">MariaDB [(<span class=\"literal\">none</span>)]&gt; create <span class=\"literal\">user</span> <span class=\"string\">'wp'</span>@<span class=\"string\">'172.18.71.%'</span> identified by <span class=\"string\">'magedu'</span><span class=\"comment\">;</span></div><div class=\"line\"><span class=\"comment\"># 授权wp可从172.18.71.0/24网段内的主机登录操作wpdb数据库。</span></div><div class=\"line\">MariaDB [(<span class=\"literal\">none</span>)]&gt; grant <span class=\"literal\">all</span> privileges <span class=\"literal\">on</span> wpdb.* to <span class=\"string\">'wp'</span>@<span class=\"string\">'172.18.71.%'</span> identified by <span class=\"string\">'magedu'</span><span class=\"comment\">;</span></div><div class=\"line\"><span class=\"comment\"># 重载权限表</span></div><div class=\"line\">MariaDB [(<span class=\"literal\">none</span>)]&gt; flush privileges<span class=\"comment\">;</span></div><div class=\"line\"><span class=\"comment\"># 退出</span></div><div class=\"line\">MariaDB [(<span class=\"literal\">none</span>)]&gt; \\q</div></pre></td></tr></table></figure></p>\n<p>这样<code>HostC</code>就配置完成了，再来配置<code>HostB</code>。</p>\n<h2 id=\"HostB\"><a href=\"#HostB\" class=\"headerlink\" title=\"HostB\"></a>HostB</h2><p>正式配置<code>HostB</code>之前，应首先验证以下<code>HostC</code>的配置，即测试一下能否从<code>HostB</code>上连接<code>HostC</code>的数据库。<br><figure class=\"highlight autoit\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\"># 安装mariadb的客户端</span></div><div class=\"line\">[root<span class=\"symbol\">@localhost</span> ~]<span class=\"meta\"># yum install -y mariadb</span></div><div class=\"line\"><span class=\"meta\"># 测试连接HostB数据库</span></div><div class=\"line\">[root<span class=\"symbol\">@localhost</span> ~]<span class=\"meta\"># mysql -u root -h 172.18.71.203 -p</span></div></pre></td></tr></table></figure></p>\n<p>安装<code>php-fpm</code>应用<br><figure class=\"highlight autoit\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root<span class=\"symbol\">@localhost</span> ~]<span class=\"meta\"># yum install -y php-fpm php-mysql php-mbstring</span></div></pre></td></tr></table></figure></p>\n<p>修改<code>php-fpm</code>的连接池配置文件<br><figure class=\"highlight makefile\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@localhost ~]<span class=\"comment\"># vim /etc/php-fpm.d/www.conf</span></div><div class=\"line\"><span class=\"comment\"># 监听在本机的外部可访问地址上</span></div><div class=\"line\">listen = 172.18.71.202:9000</div><div class=\"line\"><span class=\"comment\"># 仅允许前端Web服务器连接</span></div><div class=\"line\">listen.allowed_clients = 172.18.71.201</div></pre></td></tr></table></figure></p>\n<p>创建<code>session</code>存放目录，并修改其权限。<br><figure class=\"highlight autoit\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root<span class=\"symbol\">@localhost</span> ~]<span class=\"meta\"># mkdir /var/lib/php/session</span></div><div class=\"line\">[root<span class=\"symbol\">@localhost</span> ~]<span class=\"meta\"># chown -R apache:apache /var/lib/php/session</span></div></pre></td></tr></table></figure></p>\n<p>部署<code>php</code>程序代码<code>phpMyAdmin</code>和<code>wordpress</code>。<br><strong>  注：由于<code>php-fpm</code>是独立工作的服务，对于访问<code>php</code>页面的请求，前端的<code>httpd</code>仅作为反向代理将请求转发至<code>php-fpm</code>服务器上，由<code>php-fpm</code>找到对应的<code>php</code>程序代码文件进行解释执行，然后将结果返回给前端。所以需要将<code>php</code>程序代码放在<code>php-fpm</code>服务器上。</strong></p>\n<p>建立<code>php</code>程序相应的存放目录。<br><figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@localhost ~]<span class=\"meta\"># mkdir -pv /htdocs/www.twoyang.&#123;com,net&#125;</span></div><div class=\"line\"><span class=\"symbol\">mkdir:</span> created directory ‘/htdocs’</div><div class=\"line\"><span class=\"symbol\">mkdir:</span> created directory ‘<span class=\"meta-keyword\">/htdocs/</span>www.twoyang.com’</div><div class=\"line\"><span class=\"symbol\">mkdir:</span> created directory ‘<span class=\"meta-keyword\">/htdocs/</span>www.twoyang.net’</div></pre></td></tr></table></figure></p>\n<p>将<code>phpMyAdmin</code>安装包放置在<code>/htdocs/www.twoyang.com</code>的目录下，并修改配置文件。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@localhost ~]<span class=\"comment\"># cd /htdocs/www.twoyang.com</span></div><div class=\"line\">[root@localhost www.twoyang.com]<span class=\"comment\"># unzip phpMyAdmin-4.4.14.1-all-languages.zip</span></div><div class=\"line\">[root@localhost www.twoyang.com]<span class=\"comment\"># ln -sv phpMyAdmin-4.4.14.1-all-languages pma</span></div><div class=\"line\">‘pma’ -&gt; ‘phpMyAdmin-4.4.14.1-all-languages’</div><div class=\"line\">[root@localhost www.twoyang.com]<span class=\"comment\"># cd pma</span></div><div class=\"line\">[root@localhost pma]<span class=\"comment\"># cp config.sample.inc.php config.inc.php</span></div><div class=\"line\">[root@localhost pma]<span class=\"comment\"># openssl rand -base64 20</span></div><div class=\"line\">0fkgcykLDfyRgG71FOjE9W6LKa8=</div><div class=\"line\">[root@localhost pma]<span class=\"comment\"># vim config.inc.php</span></div><div class=\"line\"><span class=\"variable\">$cfg</span>[<span class=\"string\">'blowfish_secret'</span>] = <span class=\"string\">'0fkgcykLDfyRgG71FOjE9W6LKa8'</span>; /* YOU MUST FILL IN THIS FOR COOKIE AUTH! */</div><div class=\"line\"><span class=\"variable\">$cfg</span>[<span class=\"string\">'Servers'</span>][<span class=\"variable\">$i</span>][<span class=\"string\">'host'</span>] = <span class=\"string\">'172.18.71.203'</span>;</div></pre></td></tr></table></figure></p>\n<p>将<code>wordpress</code>安装包放置在<code>/htdocs/www.twoyang.com</code>的目录下，并修改配置文件。<br><figure class=\"highlight livescript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@localhost ~]<span class=\"comment\"># cd /htdocs/www.twoyang.net</span></div><div class=\"line\">[root@localhost www.twoyang.net]<span class=\"comment\"># unzip wordpress-4.3.1-zh_CN.zip</span></div><div class=\"line\">[root@localhost www.twoyang.net]<span class=\"comment\"># ln -sv wordpress wp</span></div><div class=\"line\">‘wp’<span class=\"function\"> -&gt;</span> ‘wordpress’</div><div class=\"line\">[root@localhost www.twoyang.net]<span class=\"comment\"># cd wp</span></div><div class=\"line\">[root@localhost wp]<span class=\"comment\"># cp wp-config-sample.php wp-config.php</span></div><div class=\"line\">[root@localhost wp]<span class=\"comment\"># vim wp-config.php</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/** WordPress数据库的名称 */</span></div><div class=\"line\">define(<span class=\"string\">'DB_NAME'</span>, <span class=\"string\">'wpdb'</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/** MySQL数据库用户名 */</span></div><div class=\"line\">define(<span class=\"string\">'DB_USER'</span>, <span class=\"string\">'wp'</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/** MySQL数据库密码 */</span></div><div class=\"line\">define(<span class=\"string\">'DB_PASSWORD'</span>, <span class=\"string\">'magedu'</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/** MySQL主机 */</span></div><div class=\"line\">define(<span class=\"string\">'DB_HOST'</span>, <span class=\"string\">'172.18.71.203'</span>);</div></pre></td></tr></table></figure></p>\n<p>启动<code>php-fpm</code>服务<br><figure class=\"highlight autoit\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root<span class=\"symbol\">@localhost</span> ~]<span class=\"meta\"># systemctl start php-fpm</span></div></pre></td></tr></table></figure></p>\n<p>查看<code>php-fpm</code>服务是否监听在指定套接字上<br><figure class=\"highlight elixir\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root<span class=\"variable\">@localhost</span> ~]<span class=\"comment\"># ss -tnl | grep 9000</span></div><div class=\"line\">LISTEN     <span class=\"number\">0</span>      <span class=\"number\">128</span>    <span class=\"number\">172.18</span>.<span class=\"number\">71.202</span><span class=\"symbol\">:</span><span class=\"number\">9000</span>                     *<span class=\"symbol\">:*</span></div></pre></td></tr></table></figure></p>\n<h2 id=\"HostA\"><a href=\"#HostA\" class=\"headerlink\" title=\"HostA\"></a>HostA</h2><p>安装<code>httpd</code><br><figure class=\"highlight autoit\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root<span class=\"symbol\">@localhost</span> ~]<span class=\"meta\"># yum install -y httpd</span></div></pre></td></tr></table></figure></p>\n<p>修改主配置文件<br><figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@localhost ~]<span class=\"meta\"># vim /etc/httpd/conf/httpd.conf</span></div><div class=\"line\"><span class=\"meta\"># 设置服务器名，其实这项不设置也可以，但是启动服务时会有警告。</span></div><div class=\"line\">ServerName www.twoyang.net</div><div class=\"line\"><span class=\"meta\"># 由于准备使用虚拟主机，需要把MainServer的DocumentRoot关掉。</span></div><div class=\"line\"><span class=\"meta\">#DocumentRoot <span class=\"string\">\"/var/www/html\"</span></span></div><div class=\"line\"><span class=\"meta\"># 另外需要增加php类型的主页和MIME</span></div><div class=\"line\"><span class=\"params\">&lt;IfModule dir_module&gt;</span></div><div class=\"line\">    DirectoryIndex index.php index.html</div><div class=\"line\"><span class=\"params\">&lt;/IfModule&gt;</span></div><div class=\"line\"><span class=\"params\">&lt;IfModule mime_module&gt;</span></div><div class=\"line\">    AddType application/x-httpd-php .php</div><div class=\"line\"><span class=\"params\">&lt;/IfModule&gt;</span></div></pre></td></tr></table></figure></p>\n<p>移除欢迎页面配置文件<br><figure class=\"highlight autoit\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root<span class=\"symbol\">@localhost</span> ~]<span class=\"meta\"># mv /etc/httpd/conf.d/welcome.conf&#123;,.bak&#125;</span></div></pre></td></tr></table></figure></p>\n<p>新建虚拟主机配置文件<code>/etc/httpd/conf.d/vhosts.conf</code><br><figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@localhost ~]<span class=\"meta\"># vim /etc/httpd/conf.d/vhosts.conf</span></div><div class=\"line\"><span class=\"params\">&lt;VirtualHost <span class=\"number\">172.18</span><span class=\"number\">.71</span><span class=\"number\">.201</span>:<span class=\"number\">80</span>&gt;</span></div><div class=\"line\">    ServerName www.twoyang.com</div><div class=\"line\">    DocumentRoot <span class=\"string\">\"/htdocs/www.twoyang.com/pma\"</span></div><div class=\"line\">    <span class=\"params\">&lt;Directory \"/htdocs/www.twoyang.com/pma\"&gt;</span></div><div class=\"line\">        OPTIONS FollowSymLinks</div><div class=\"line\">        AllowOverride None</div><div class=\"line\">        Require all granted</div><div class=\"line\">    <span class=\"params\">&lt;/Directory&gt;</span></div><div class=\"line\">    <span class=\"meta\"># 由于正向代理和反向代理不能同时存在，这里关闭正向代理。</span></div><div class=\"line\">    ProxyRequests Off</div><div class=\"line\">    <span class=\"meta\"># 将直接访问/的url请求，通过fcgi协议指向后端php-fpm服务器对应目录的index.php。</span></div><div class=\"line\">    ProxyPassMatch ^/$ fcgi:<span class=\"comment\">//172.18.71.202:9000/htdocs/www.twoyang.com/pma/index.php</span></div><div class=\"line\">    <span class=\"meta\"># 将访问以.php结尾的url请求，通过fcgi协议指向后端php-fpm服务器对应目录的对应文件。</span></div><div class=\"line\">    ProxyPassMatch ^/(.*\\.php)$ fcgi:<span class=\"comment\">//172.18.71.202:9000/htdocs/www.twoyang.com/pma/$1</span></div><div class=\"line\"><span class=\"params\">&lt;/VirtualHost&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"params\">&lt;VirtualHost <span class=\"number\">172.18</span><span class=\"number\">.71</span><span class=\"number\">.201</span>:<span class=\"number\">80</span>&gt;</span></div><div class=\"line\">    ServerName www.twoyang.net</div><div class=\"line\">    DocumentRoot <span class=\"string\">\"/htdocs/www.twoyang.net/wp\"</span></div><div class=\"line\">    <span class=\"params\">&lt;Directory \"/htdocs/www.twoyang.net/wp\"&gt;</span></div><div class=\"line\">        OPTIONS FollowSymLinks</div><div class=\"line\">        AllowOverride None</div><div class=\"line\">        Require all granted</div><div class=\"line\">    <span class=\"params\">&lt;/Directory&gt;</span></div><div class=\"line\">    ProxyRequests Off</div><div class=\"line\">    ProxyPassMatch ^/$ fcgi:<span class=\"comment\">//172.18.71.202:9000/htdocs/www.twoyang.net/wp/index.php</span></div><div class=\"line\">    ProxyPassMatch ^/(.*\\.php)$ fcgi:<span class=\"comment\">//172.18.71.202:9000/htdocs/www.twoyang.net/wp/$1</span></div><div class=\"line\"><span class=\"params\">&lt;/VirtualHost&gt;</span></div></pre></td></tr></table></figure></p>\n<p>建立虚拟主机<code>DocumentRoot</code>对应的目录。<br><figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@localhost ~]<span class=\"meta\"># mkdir -pv /htdocs/www.twoyang.&#123;com,net&#125;</span></div><div class=\"line\"><span class=\"symbol\">mkdir:</span> created directory ‘/htdocs’</div><div class=\"line\"><span class=\"symbol\">mkdir:</span> created directory ‘<span class=\"meta-keyword\">/htdocs/</span>www.twoyang.com/’</div><div class=\"line\"><span class=\"symbol\">mkdir:</span> created directory ‘<span class=\"meta-keyword\">/htdocs/</span>www.twoyang.net/’</div></pre></td></tr></table></figure></p>\n<p>将<code>phpMyAdmin</code>安装包放置在虚拟主机<code>www.twoyang.com</code>的<code>DocumentRoot</code>目录下。<br><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@localhost ~]# cd /htdocs/www.twoyang.com</div><div class=\"line\">[root@localhost www.twoyang.com]# unzip phpMyAdmin<span class=\"number\">-4.4</span><span class=\"number\">.14</span><span class=\"number\">.1</span>-all-languages.zip</div><div class=\"line\">[root@localhost www.twoyang.com]# ln -sv phpMyAdmin<span class=\"number\">-4.4</span><span class=\"number\">.14</span><span class=\"number\">.1</span>-all-languages pma</div><div class=\"line\">‘pma’ -&gt; ‘phpMyAdmin<span class=\"number\">-4.4</span><span class=\"number\">.14</span><span class=\"number\">.1</span>-all-languages’</div></pre></td></tr></table></figure></p>\n<p>将<code>wordpress</code>安装包放置在虚拟主机<code>www.twoyang.net</code>的<code>DocumentRoot</code>目录下。<br><figure class=\"highlight elixir\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root<span class=\"variable\">@localhost</span> ~]<span class=\"comment\"># cd /htdocs/www.twoyang.net</span></div><div class=\"line\">[root<span class=\"variable\">@localhost</span> www.twoyang.net]<span class=\"comment\"># unzip wordpress-4.3.1-zh_CN.zip</span></div><div class=\"line\">[root<span class=\"variable\">@localhost</span> www.twoyang.net]<span class=\"comment\"># ln -sv wordpress wp</span></div><div class=\"line\">‘wp’ -&gt; ‘wordpress’</div></pre></td></tr></table></figure></p>\n<p><strong> 注: 这里将<code>phpMyAdmin</code>和<code>wordpress</code>安装包在<code>HostA</code>上重新部署一次，是因为<code>httpd</code>仅将有关<code>php</code>的请求转发至<code>php-fpm</code>服务器去处理。而事实上一个完整页面当中还存在图片等静态内容，这些内容是不会转发的，还是要在本地的<code>DocumentRoot</code>目录中去找。</strong></p>\n<p>这么做以后，在<code>HostA</code>上的虚拟机<code>DocumentRoot</code>目录就会存在无用的<code>php</code>程序代码文件占用磁盘，可以将其删除。<br><figure class=\"highlight autoit\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root<span class=\"symbol\">@localhost</span> ~]<span class=\"meta\"># cd /htdocs/www.twoyang.com/pma</span></div><div class=\"line\">[root<span class=\"symbol\">@localhost</span> pma]<span class=\"meta\"># find . -name <span class=\"string\">\"*.php\"</span> | xargs rm -rf</span></div><div class=\"line\">[root<span class=\"symbol\">@localhost</span> ~]<span class=\"meta\"># cd /htdocs/www.twoyang.com/wp</span></div><div class=\"line\">[root<span class=\"symbol\">@localhost</span> wp]<span class=\"meta\"># find . -name <span class=\"string\">\"*.php\"</span> | xargs rm -rf</span></div></pre></td></tr></table></figure></p>\n<p>你可以跳过在<code>HostA</code>上部署<code>phpMyAdmin</code>和<code>wordpress</code>安装包的步骤来验证以上结论，可预期的结果是一些页面当中的图片链接无法显示。</p>\n<p>启动<code>httpd</code>服务，修改一下<code>/htdocs</code>目录的属主和属组，以免出现权限问题。<br><figure class=\"highlight autoit\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root<span class=\"symbol\">@localhost</span> ~]<span class=\"meta\"># chown -R apache:apache /htdocs</span></div></pre></td></tr></table></figure></p>\n<p>这时便可以启动<code>httpd</code>服务，测试访问<code>phpMyAdmin</code>和<code>wordpress</code>了。<br><figure class=\"highlight autoit\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root<span class=\"symbol\">@localhost</span> ~]<span class=\"meta\"># systemctl start httpd</span></div></pre></td></tr></table></figure></p>\n<h2 id=\"xcache\"><a href=\"#xcache\" class=\"headerlink\" title=\"xcache\"></a>xcache</h2><p>但是这个时候还是没有安装<code>xcache</code>的，可以用<code>ab</code>测试一下并发访问时服务器响应情况。<br><figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@localhost <span class=\"symbol\">~]# ab -n 1000 -c 100 http</span>:<span class=\"comment\">//www.twoyang.com/</span></div></pre></td></tr></table></figure></p>\n<p>这时在<code>HostB</code>上安装<code>xcache</code>和<code>php-cli</code>（后者提供<code>php</code>命令行工具，可查看当前加载的<code>php</code>模块有哪些）。<br><figure class=\"highlight autoit\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root<span class=\"symbol\">@localhost</span> ~]<span class=\"meta\"># yum install -y php-xcache php-cli</span></div></pre></td></tr></table></figure></p>\n<p>修改<code>xcache</code>配置文件，打开<code>xcache.cacher</code>开关。<br><figure class=\"highlight autoit\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root<span class=\"symbol\">@localhost</span> ~]<span class=\"meta\"># vim /etc/php.d/xcache.ini</span></div><div class=\"line\">xcache.cacher = On</div></pre></td></tr></table></figure></p>\n<p>重启服务<br><strong>注意因为此时<code>php</code>是作为独立服务来工作的，因此需要重启<code>HostB</code>上的<code>php-fpm</code>服务。</strong><br><figure class=\"highlight objectivec\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@localhost ~]<span class=\"meta\"># systemctl restart php-fpm</span></div><div class=\"line\">[root@localhost ~]<span class=\"meta\"># php -m | grep XCache</span></div><div class=\"line\"><span class=\"built_in\">XCache</span></div><div class=\"line\"><span class=\"built_in\">XCache</span> Cacher</div><div class=\"line\"><span class=\"built_in\">XCache</span> Coverager</div><div class=\"line\"><span class=\"built_in\">XCache</span> Optimizer</div><div class=\"line\"><span class=\"built_in\">XCache</span></div><div class=\"line\"><span class=\"built_in\">XCache</span> Cacher</div><div class=\"line\"><span class=\"built_in\">XCache</span> Coverager</div><div class=\"line\"><span class=\"built_in\">XCache</span> Optimizer</div></pre></td></tr></table></figure></p>\n<p>再次使用<code>ab</code>测试<br><figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@localhost <span class=\"symbol\">~]# ab -n 1000 -c 100 http</span>:<span class=\"comment\">//www.twoyang.com/</span></div></pre></td></tr></table></figure></p>\n<blockquote>\n<p>注：本文转载自:<a href=\"twoyang.net\">twoyang.net</a></p>\n</blockquote>"},{"title":"HAProxy实现动静分离和负载均衡","abbrlink":"62f0f54b","date":"2016-06-25T08:02:32.000Z","_content":"# 实验环境\n> 由于电脑配置渣，带不动多台虚拟机，所以采用httpd虚拟主机的方式来实现\n\n\n```\nCentOS 6.7\nhttpd: 2.2.15\nHAProxy: 1.5.4\n```\n# 主机规划\n```\n- 172.18.1.49:8080 -->web server1\n- 172.18.1.49:8081 -->web server2\n- 172.18.1.49:8088 -->app server1\n- 172.18.1.49:8089 -->app server2\n- ```\n<!-- more -->\n-  网站资源根目录定义在/data/下\n\n# 配置虚拟主机\n## 安装httpd及PHP\n```bash\nyum install httpd php -y #步骤省略\nyum install haproxy -y\n```\n## 修改httpd主机监听的端口\n```\n# 注释掉80\nListen 8080\nListen 8081\nListen 8088\nListen 8089\n\n#DocumentRoot \"/var/www/html\" # 注释掉此行\n```\n\n## 配置虚拟主机websrv1\n**注意：CentOS7默认安装的是Httpd2.4+,所以，在配置虚拟主机时，allow from all要改为Require all granted\n**\n\n```\nvim /etc/httpd/conf.d/websrv1.conf\n\nDirectoryIndex index.html\n<virtualhost 172.18.1.49:8080>\n    DocumentRoot /data/webdoc1/\n    <directory \"/data/webdoc1\">\n        allow from all # apache2.4版本要改为Require all granted，下同！\n    </directory>\n</virtualhost>\n```\n\n## 配置虚拟主机websrv2\n```\nvim /etc/httpd/conf.d/websrv2.conf\n\nDirectoryIndex index.html\n<virtualhost 172.18.1.49:8081>\n    DocumentRoot /data/webdoc2/\n    <directory \"/data/webdoc2\">\n        allow from all\n    </directory>\n</virtualhost>\n```\n## 配置虚拟主机appsrv1\n```\nvim /etc/httpd/conf.d/app1.conf\n\nDirectoryIndex index.php\n<virtualhost 172.18.1.49:8088>\n    DocumentRoot /data/appdoc1/\n    <directory \"/data/appdoc1\">\n        allow from all\n    </directory>\n</virtualhost>\n```\n\n## 配置虚拟主机appsrv2\n```\nvim /etc/httpd/conf.d/app2.conf\n\nDirectoryIndex index.php\n<virtualhost 172.18.1.49:8089>\n    DocumentRoot /data/appdoc2/\n    <directory \"/data/appdoc2\">\n        allow from all\n    </directory>\n</virtualhost>\n```\n\n## 为各主机提供测试页\n\n```\n#websrv1\nvim /data/webdoc1/index.html\n<h1>web-server1</h1>\n\n#websrv2\nvim /data/webdoc2/index.html\n<h1>web-server2</h1>\n\n#appsrv1\nvim /data/appdoc1/index.php\n<h1>app-server1</h1>\n<?php\n\tphpinfo();\n?>\n\n#appsrv2\nvim /data/appdoc2/index.php\n<h1>app-server2</h1>\n<?php\n\tphpinfo();\n?>\n```\n\n## 修改HAProxy配置\n```\nfrontend http-in\n    bind 172.18.1.49:80 #监听的端口\n    acl url_static path_end -i .jpg .png .html .css .jsp #acl规则分离静态资源\n    use_backend websrv if url_static\n    default_backend appsrv #默认使用动态后端主机\n\nbackend websrv #后端静态主机组\n    balance roundrobin\n    server srv1 172.18.1.49:8080 check\n    server srv2 172.18.1.49:8081 check\n\nbackend appsrv #后端动态主机组\n    balance roundrobin\n    server app1 172.18.1.49:8088 check\n    server app2 172.18.1.49:8089 check\n\nlisten stats 172.18.1.49:9001 #提供一个管理页面\n    stats enable\n    stats uri /admin?stats\n    stats hide-version\n    stats auth admin:admin\n#保存退出\n\nservice httpd start\n\nservice haproxy start\n```\n\n![测试页面1](http://o9c1bfnxp.bkt.clouddn.com/2016-06-26-HAProxy-01.jpg)\n\n![测试页面2](http://o9c1bfnxp.bkt.clouddn.com/2016-06-26-HAProxy-02.jpg)\n\n![测试页面3](http://o9c1bfnxp.bkt.clouddn.com/2016-06-26-HAProxy-03.jpg)\n\n![测试页面4](http://o9c1bfnxp.bkt.clouddn.com/2016-06-26-HAProxy-04.jpg)\n","source":"_posts/2016-06-25-HAProxy动静分离和负载均衡.md","raw":"---\ntitle: HAProxy实现动静分离和负载均衡\ncategories: 实践与总结\ntag: HAProxy\nabbrlink: 62f0f54b\ndate: 2016-06-25 16:02:32\n---\n# 实验环境\n> 由于电脑配置渣，带不动多台虚拟机，所以采用httpd虚拟主机的方式来实现\n\n\n```\nCentOS 6.7\nhttpd: 2.2.15\nHAProxy: 1.5.4\n```\n# 主机规划\n```\n- 172.18.1.49:8080 -->web server1\n- 172.18.1.49:8081 -->web server2\n- 172.18.1.49:8088 -->app server1\n- 172.18.1.49:8089 -->app server2\n- ```\n<!-- more -->\n-  网站资源根目录定义在/data/下\n\n# 配置虚拟主机\n## 安装httpd及PHP\n```bash\nyum install httpd php -y #步骤省略\nyum install haproxy -y\n```\n## 修改httpd主机监听的端口\n```\n# 注释掉80\nListen 8080\nListen 8081\nListen 8088\nListen 8089\n\n#DocumentRoot \"/var/www/html\" # 注释掉此行\n```\n\n## 配置虚拟主机websrv1\n**注意：CentOS7默认安装的是Httpd2.4+,所以，在配置虚拟主机时，allow from all要改为Require all granted\n**\n\n```\nvim /etc/httpd/conf.d/websrv1.conf\n\nDirectoryIndex index.html\n<virtualhost 172.18.1.49:8080>\n    DocumentRoot /data/webdoc1/\n    <directory \"/data/webdoc1\">\n        allow from all # apache2.4版本要改为Require all granted，下同！\n    </directory>\n</virtualhost>\n```\n\n## 配置虚拟主机websrv2\n```\nvim /etc/httpd/conf.d/websrv2.conf\n\nDirectoryIndex index.html\n<virtualhost 172.18.1.49:8081>\n    DocumentRoot /data/webdoc2/\n    <directory \"/data/webdoc2\">\n        allow from all\n    </directory>\n</virtualhost>\n```\n## 配置虚拟主机appsrv1\n```\nvim /etc/httpd/conf.d/app1.conf\n\nDirectoryIndex index.php\n<virtualhost 172.18.1.49:8088>\n    DocumentRoot /data/appdoc1/\n    <directory \"/data/appdoc1\">\n        allow from all\n    </directory>\n</virtualhost>\n```\n\n## 配置虚拟主机appsrv2\n```\nvim /etc/httpd/conf.d/app2.conf\n\nDirectoryIndex index.php\n<virtualhost 172.18.1.49:8089>\n    DocumentRoot /data/appdoc2/\n    <directory \"/data/appdoc2\">\n        allow from all\n    </directory>\n</virtualhost>\n```\n\n## 为各主机提供测试页\n\n```\n#websrv1\nvim /data/webdoc1/index.html\n<h1>web-server1</h1>\n\n#websrv2\nvim /data/webdoc2/index.html\n<h1>web-server2</h1>\n\n#appsrv1\nvim /data/appdoc1/index.php\n<h1>app-server1</h1>\n<?php\n\tphpinfo();\n?>\n\n#appsrv2\nvim /data/appdoc2/index.php\n<h1>app-server2</h1>\n<?php\n\tphpinfo();\n?>\n```\n\n## 修改HAProxy配置\n```\nfrontend http-in\n    bind 172.18.1.49:80 #监听的端口\n    acl url_static path_end -i .jpg .png .html .css .jsp #acl规则分离静态资源\n    use_backend websrv if url_static\n    default_backend appsrv #默认使用动态后端主机\n\nbackend websrv #后端静态主机组\n    balance roundrobin\n    server srv1 172.18.1.49:8080 check\n    server srv2 172.18.1.49:8081 check\n\nbackend appsrv #后端动态主机组\n    balance roundrobin\n    server app1 172.18.1.49:8088 check\n    server app2 172.18.1.49:8089 check\n\nlisten stats 172.18.1.49:9001 #提供一个管理页面\n    stats enable\n    stats uri /admin?stats\n    stats hide-version\n    stats auth admin:admin\n#保存退出\n\nservice httpd start\n\nservice haproxy start\n```\n\n![测试页面1](http://o9c1bfnxp.bkt.clouddn.com/2016-06-26-HAProxy-01.jpg)\n\n![测试页面2](http://o9c1bfnxp.bkt.clouddn.com/2016-06-26-HAProxy-02.jpg)\n\n![测试页面3](http://o9c1bfnxp.bkt.clouddn.com/2016-06-26-HAProxy-03.jpg)\n\n![测试页面4](http://o9c1bfnxp.bkt.clouddn.com/2016-06-26-HAProxy-04.jpg)\n","slug":"2016-06-25-HAProxy动静分离和负载均衡","published":1,"updated":"2017-02-14T13:42:45.397Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5mkehql000gao94lwtgkac9","content":"<h1 id=\"实验环境\"><a href=\"#实验环境\" class=\"headerlink\" title=\"实验环境\"></a>实验环境</h1><blockquote>\n<p>由于电脑配置渣，带不动多台虚拟机，所以采用httpd虚拟主机的方式来实现</p>\n</blockquote>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">CentOS</span> 6<span class=\"selector-class\">.7</span></div><div class=\"line\"><span class=\"selector-tag\">httpd</span>: 2<span class=\"selector-class\">.2</span><span class=\"selector-class\">.15</span></div><div class=\"line\"><span class=\"selector-tag\">HAProxy</span>: 1<span class=\"selector-class\">.5</span><span class=\"selector-class\">.4</span></div></pre></td></tr></table></figure>\n<h1 id=\"主机规划\"><a href=\"#主机规划\" class=\"headerlink\" title=\"主机规划\"></a>主机规划</h1><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">-</span> 172<span class=\"selector-class\">.18</span><span class=\"selector-class\">.1</span><span class=\"selector-class\">.49</span><span class=\"selector-pseudo\">:8080</span> <span class=\"selector-tag\">--</span>&gt;<span class=\"selector-tag\">web</span> <span class=\"selector-tag\">server1</span></div><div class=\"line\"><span class=\"selector-tag\">-</span> 172<span class=\"selector-class\">.18</span><span class=\"selector-class\">.1</span><span class=\"selector-class\">.49</span><span class=\"selector-pseudo\">:8081</span> <span class=\"selector-tag\">--</span>&gt;<span class=\"selector-tag\">web</span> <span class=\"selector-tag\">server2</span></div><div class=\"line\"><span class=\"selector-tag\">-</span> 172<span class=\"selector-class\">.18</span><span class=\"selector-class\">.1</span><span class=\"selector-class\">.49</span><span class=\"selector-pseudo\">:8088</span> <span class=\"selector-tag\">--</span>&gt;<span class=\"selector-tag\">app</span> <span class=\"selector-tag\">server1</span></div><div class=\"line\"><span class=\"selector-tag\">-</span> 172<span class=\"selector-class\">.18</span><span class=\"selector-class\">.1</span><span class=\"selector-class\">.49</span><span class=\"selector-pseudo\">:8089</span> <span class=\"selector-tag\">--</span>&gt;<span class=\"selector-tag\">app</span> <span class=\"selector-tag\">server2</span></div><div class=\"line\"><span class=\"selector-tag\">-</span></div></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<ul>\n<li>网站资源根目录定义在/data/下</li>\n</ul>\n<h1 id=\"配置虚拟主机\"><a href=\"#配置虚拟主机\" class=\"headerlink\" title=\"配置虚拟主机\"></a>配置虚拟主机</h1><h2 id=\"安装httpd及PHP\"><a href=\"#安装httpd及PHP\" class=\"headerlink\" title=\"安装httpd及PHP\"></a>安装httpd及PHP</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">yum install httpd php -y <span class=\"comment\">#步骤省略</span></div><div class=\"line\">yum install haproxy -y</div></pre></td></tr></table></figure>\n<h2 id=\"修改httpd主机监听的端口\"><a href=\"#修改httpd主机监听的端口\" class=\"headerlink\" title=\"修改httpd主机监听的端口\"></a>修改httpd主机监听的端口</h2><figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># 注释掉80</span></div><div class=\"line\"><span class=\"attribute\"><span class=\"nomarkup\">Listen</span></span> 8080</div><div class=\"line\"><span class=\"attribute\"><span class=\"nomarkup\">Listen</span></span> 8081</div><div class=\"line\"><span class=\"attribute\"><span class=\"nomarkup\">Listen</span></span> 8088</div><div class=\"line\"><span class=\"attribute\"><span class=\"nomarkup\">Listen</span></span> 8089</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#DocumentRoot \"/var/www/html\" # 注释掉此行</span></div></pre></td></tr></table></figure>\n<h2 id=\"配置虚拟主机websrv1\"><a href=\"#配置虚拟主机websrv1\" class=\"headerlink\" title=\"配置虚拟主机websrv1\"></a>配置虚拟主机websrv1</h2><p><strong>注意：CentOS7默认安装的是Httpd2.4+,所以，在配置虚拟主机时，allow from all要改为Require all granted\n</strong></p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attribute\">vim</span> /etc/httpd/conf.d/websrv1.conf</div><div class=\"line\"></div><div class=\"line\"><span class=\"attribute\">DirectoryIndex</span> index.html</div><div class=\"line\"><span class=\"section\">&lt;virtualhost 172.18.1.49:8080&gt;</span></div><div class=\"line\">    <span class=\"attribute\"><span class=\"nomarkup\">DocumentRoot</span></span> /data/webdoc1/</div><div class=\"line\">    <span class=\"section\">&lt;directory \"/data/webdoc1\"&gt;</span></div><div class=\"line\">        <span class=\"attribute\"><span class=\"nomarkup\">allow</span></span> from <span class=\"literal\">all</span> # apache2.4版本要改为Require <span class=\"literal\">all</span> granted，下同！</div><div class=\"line\">    <span class=\"section\">&lt;/directory&gt;</span></div><div class=\"line\"><span class=\"section\">&lt;/virtualhost&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"配置虚拟主机websrv2\"><a href=\"#配置虚拟主机websrv2\" class=\"headerlink\" title=\"配置虚拟主机websrv2\"></a>配置虚拟主机websrv2</h2><figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attribute\">vim</span> /etc/httpd/conf.d/websrv2.conf</div><div class=\"line\"></div><div class=\"line\"><span class=\"attribute\">DirectoryIndex</span> index.html</div><div class=\"line\"><span class=\"section\">&lt;virtualhost 172.18.1.49:8081&gt;</span></div><div class=\"line\">    <span class=\"attribute\"><span class=\"nomarkup\">DocumentRoot</span></span> /data/webdoc2/</div><div class=\"line\">    <span class=\"section\">&lt;directory \"/data/webdoc2\"&gt;</span></div><div class=\"line\">        <span class=\"attribute\"><span class=\"nomarkup\">allow</span></span> from <span class=\"literal\">all</span></div><div class=\"line\">    <span class=\"section\">&lt;/directory&gt;</span></div><div class=\"line\"><span class=\"section\">&lt;/virtualhost&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"配置虚拟主机appsrv1\"><a href=\"#配置虚拟主机appsrv1\" class=\"headerlink\" title=\"配置虚拟主机appsrv1\"></a>配置虚拟主机appsrv1</h2><figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attribute\">vim</span> /etc/httpd/conf.d/app1.conf</div><div class=\"line\"></div><div class=\"line\"><span class=\"attribute\">DirectoryIndex</span> index.php</div><div class=\"line\"><span class=\"section\">&lt;virtualhost 172.18.1.49:8088&gt;</span></div><div class=\"line\">    <span class=\"attribute\"><span class=\"nomarkup\">DocumentRoot</span></span> /data/appdoc1/</div><div class=\"line\">    <span class=\"section\">&lt;directory \"/data/appdoc1\"&gt;</span></div><div class=\"line\">        <span class=\"attribute\"><span class=\"nomarkup\">allow</span></span> from <span class=\"literal\">all</span></div><div class=\"line\">    <span class=\"section\">&lt;/directory&gt;</span></div><div class=\"line\"><span class=\"section\">&lt;/virtualhost&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"配置虚拟主机appsrv2\"><a href=\"#配置虚拟主机appsrv2\" class=\"headerlink\" title=\"配置虚拟主机appsrv2\"></a>配置虚拟主机appsrv2</h2><figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attribute\">vim</span> /etc/httpd/conf.d/app2.conf</div><div class=\"line\"></div><div class=\"line\"><span class=\"attribute\">DirectoryIndex</span> index.php</div><div class=\"line\"><span class=\"section\">&lt;virtualhost 172.18.1.49:8089&gt;</span></div><div class=\"line\">    <span class=\"attribute\"><span class=\"nomarkup\">DocumentRoot</span></span> /data/appdoc2/</div><div class=\"line\">    <span class=\"section\">&lt;directory \"/data/appdoc2\"&gt;</span></div><div class=\"line\">        <span class=\"attribute\"><span class=\"nomarkup\">allow</span></span> from <span class=\"literal\">all</span></div><div class=\"line\">    <span class=\"section\">&lt;/directory&gt;</span></div><div class=\"line\"><span class=\"section\">&lt;/virtualhost&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"为各主机提供测试页\"><a href=\"#为各主机提供测试页\" class=\"headerlink\" title=\"为各主机提供测试页\"></a>为各主机提供测试页</h2><figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#websrv1</span></div><div class=\"line\">vim <span class=\"meta-keyword\">/data/</span>webdoc1/index.html</div><div class=\"line\"><span class=\"params\">&lt;h1&gt;</span>web-server1<span class=\"params\">&lt;/h1&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">#websrv2</span></div><div class=\"line\">vim <span class=\"meta-keyword\">/data/</span>webdoc2/index.html</div><div class=\"line\"><span class=\"params\">&lt;h1&gt;</span>web-server2<span class=\"params\">&lt;/h1&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">#appsrv1</span></div><div class=\"line\">vim <span class=\"meta-keyword\">/data/</span>appdoc1/index.php</div><div class=\"line\"><span class=\"params\">&lt;h1&gt;</span>app-server1<span class=\"params\">&lt;/h1&gt;</span></div><div class=\"line\"><span class=\"params\">&lt;?php</span></div><div class=\"line\">\tphpinfo();</div><div class=\"line\">?&gt;</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">#appsrv2</span></div><div class=\"line\">vim <span class=\"meta-keyword\">/data/</span>appdoc2/index.php</div><div class=\"line\"><span class=\"params\">&lt;h1&gt;</span>app-server2<span class=\"params\">&lt;/h1&gt;</span></div><div class=\"line\"><span class=\"params\">&lt;?php</span></div><div class=\"line\">\tphpinfo();</div><div class=\"line\">?&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"修改HAProxy配置\"><a href=\"#修改HAProxy配置\" class=\"headerlink\" title=\"修改HAProxy配置\"></a>修改HAProxy配置</h2><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\">frontend http-in</div><div class=\"line\">    bind 172.18.1.49:80 #监听的端口</div><div class=\"line\">    acl url_static path_end -i .jpg .png .html .css .jsp #acl规则分离静态资源</div><div class=\"line\">    use_backend websrv <span class=\"keyword\">if</span> url_static</div><div class=\"line\">    default_backend appsrv #默认使用动态后端主机</div><div class=\"line\"></div><div class=\"line\">backend websrv #后端静态主机组</div><div class=\"line\">    balance roundrobin</div><div class=\"line\">   <span class=\"built_in\"> server </span>srv1 172.18.1.49:8080 check</div><div class=\"line\">   <span class=\"built_in\"> server </span>srv2 172.18.1.49:8081 check</div><div class=\"line\"></div><div class=\"line\">backend appsrv #后端动态主机组</div><div class=\"line\">    balance roundrobin</div><div class=\"line\">   <span class=\"built_in\"> server </span>app1 172.18.1.49:8088 check</div><div class=\"line\">   <span class=\"built_in\"> server </span>app2 172.18.1.49:8089 check</div><div class=\"line\"></div><div class=\"line\">listen stats 172.18.1.49:9001 #提供一个管理页面</div><div class=\"line\">    stats <span class=\"builtin-name\">enable</span></div><div class=\"line\">    stats uri /admin?stats</div><div class=\"line\">    stats hide-version</div><div class=\"line\">    stats auth admin:admin</div><div class=\"line\"><span class=\"comment\">#保存退出</span></div><div class=\"line\"><span class=\"built_in\"></span></div><div class=\"line\">service httpd start</div><div class=\"line\"><span class=\"built_in\"></span></div><div class=\"line\">service haproxy start</div></pre></td></tr></table></figure>\n<p><img src=\"http://o9c1bfnxp.bkt.clouddn.com/2016-06-26-HAProxy-01.jpg\" alt=\"测试页面1\"></p>\n<p><img src=\"http://o9c1bfnxp.bkt.clouddn.com/2016-06-26-HAProxy-02.jpg\" alt=\"测试页面2\"></p>\n<p><img src=\"http://o9c1bfnxp.bkt.clouddn.com/2016-06-26-HAProxy-03.jpg\" alt=\"测试页面3\"></p>\n<p><img src=\"http://o9c1bfnxp.bkt.clouddn.com/2016-06-26-HAProxy-04.jpg\" alt=\"测试页面4\"></p>\n","site":{"data":{}},"excerpt":"<h1 id=\"实验环境\"><a href=\"#实验环境\" class=\"headerlink\" title=\"实验环境\"></a>实验环境</h1><blockquote>\n<p>由于电脑配置渣，带不动多台虚拟机，所以采用httpd虚拟主机的方式来实现</p>\n</blockquote>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">CentOS</span> 6<span class=\"selector-class\">.7</span></div><div class=\"line\"><span class=\"selector-tag\">httpd</span>: 2<span class=\"selector-class\">.2</span><span class=\"selector-class\">.15</span></div><div class=\"line\"><span class=\"selector-tag\">HAProxy</span>: 1<span class=\"selector-class\">.5</span><span class=\"selector-class\">.4</span></div></pre></td></tr></table></figure>\n<h1 id=\"主机规划\"><a href=\"#主机规划\" class=\"headerlink\" title=\"主机规划\"></a>主机规划</h1><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">-</span> 172<span class=\"selector-class\">.18</span><span class=\"selector-class\">.1</span><span class=\"selector-class\">.49</span><span class=\"selector-pseudo\">:8080</span> <span class=\"selector-tag\">--</span>&gt;<span class=\"selector-tag\">web</span> <span class=\"selector-tag\">server1</span></div><div class=\"line\"><span class=\"selector-tag\">-</span> 172<span class=\"selector-class\">.18</span><span class=\"selector-class\">.1</span><span class=\"selector-class\">.49</span><span class=\"selector-pseudo\">:8081</span> <span class=\"selector-tag\">--</span>&gt;<span class=\"selector-tag\">web</span> <span class=\"selector-tag\">server2</span></div><div class=\"line\"><span class=\"selector-tag\">-</span> 172<span class=\"selector-class\">.18</span><span class=\"selector-class\">.1</span><span class=\"selector-class\">.49</span><span class=\"selector-pseudo\">:8088</span> <span class=\"selector-tag\">--</span>&gt;<span class=\"selector-tag\">app</span> <span class=\"selector-tag\">server1</span></div><div class=\"line\"><span class=\"selector-tag\">-</span> 172<span class=\"selector-class\">.18</span><span class=\"selector-class\">.1</span><span class=\"selector-class\">.49</span><span class=\"selector-pseudo\">:8089</span> <span class=\"selector-tag\">--</span>&gt;<span class=\"selector-tag\">app</span> <span class=\"selector-tag\">server2</span></div><div class=\"line\"><span class=\"selector-tag\">-</span></div></pre></td></tr></table></figure>","more":"<ul>\n<li>网站资源根目录定义在/data/下</li>\n</ul>\n<h1 id=\"配置虚拟主机\"><a href=\"#配置虚拟主机\" class=\"headerlink\" title=\"配置虚拟主机\"></a>配置虚拟主机</h1><h2 id=\"安装httpd及PHP\"><a href=\"#安装httpd及PHP\" class=\"headerlink\" title=\"安装httpd及PHP\"></a>安装httpd及PHP</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">yum install httpd php -y <span class=\"comment\">#步骤省略</span></div><div class=\"line\">yum install haproxy -y</div></pre></td></tr></table></figure>\n<h2 id=\"修改httpd主机监听的端口\"><a href=\"#修改httpd主机监听的端口\" class=\"headerlink\" title=\"修改httpd主机监听的端口\"></a>修改httpd主机监听的端口</h2><figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># 注释掉80</span></div><div class=\"line\"><span class=\"attribute\"><span class=\"nomarkup\">Listen</span></span> 8080</div><div class=\"line\"><span class=\"attribute\"><span class=\"nomarkup\">Listen</span></span> 8081</div><div class=\"line\"><span class=\"attribute\"><span class=\"nomarkup\">Listen</span></span> 8088</div><div class=\"line\"><span class=\"attribute\"><span class=\"nomarkup\">Listen</span></span> 8089</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#DocumentRoot \"/var/www/html\" # 注释掉此行</span></div></pre></td></tr></table></figure>\n<h2 id=\"配置虚拟主机websrv1\"><a href=\"#配置虚拟主机websrv1\" class=\"headerlink\" title=\"配置虚拟主机websrv1\"></a>配置虚拟主机websrv1</h2><p><strong>注意：CentOS7默认安装的是Httpd2.4+,所以，在配置虚拟主机时，allow from all要改为Require all granted\n</strong></p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attribute\">vim</span> /etc/httpd/conf.d/websrv1.conf</div><div class=\"line\"></div><div class=\"line\"><span class=\"attribute\">DirectoryIndex</span> index.html</div><div class=\"line\"><span class=\"section\">&lt;virtualhost 172.18.1.49:8080&gt;</span></div><div class=\"line\">    <span class=\"attribute\"><span class=\"nomarkup\">DocumentRoot</span></span> /data/webdoc1/</div><div class=\"line\">    <span class=\"section\">&lt;directory \"/data/webdoc1\"&gt;</span></div><div class=\"line\">        <span class=\"attribute\"><span class=\"nomarkup\">allow</span></span> from <span class=\"literal\">all</span> # apache2.4版本要改为Require <span class=\"literal\">all</span> granted，下同！</div><div class=\"line\">    <span class=\"section\">&lt;/directory&gt;</span></div><div class=\"line\"><span class=\"section\">&lt;/virtualhost&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"配置虚拟主机websrv2\"><a href=\"#配置虚拟主机websrv2\" class=\"headerlink\" title=\"配置虚拟主机websrv2\"></a>配置虚拟主机websrv2</h2><figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attribute\">vim</span> /etc/httpd/conf.d/websrv2.conf</div><div class=\"line\"></div><div class=\"line\"><span class=\"attribute\">DirectoryIndex</span> index.html</div><div class=\"line\"><span class=\"section\">&lt;virtualhost 172.18.1.49:8081&gt;</span></div><div class=\"line\">    <span class=\"attribute\"><span class=\"nomarkup\">DocumentRoot</span></span> /data/webdoc2/</div><div class=\"line\">    <span class=\"section\">&lt;directory \"/data/webdoc2\"&gt;</span></div><div class=\"line\">        <span class=\"attribute\"><span class=\"nomarkup\">allow</span></span> from <span class=\"literal\">all</span></div><div class=\"line\">    <span class=\"section\">&lt;/directory&gt;</span></div><div class=\"line\"><span class=\"section\">&lt;/virtualhost&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"配置虚拟主机appsrv1\"><a href=\"#配置虚拟主机appsrv1\" class=\"headerlink\" title=\"配置虚拟主机appsrv1\"></a>配置虚拟主机appsrv1</h2><figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attribute\">vim</span> /etc/httpd/conf.d/app1.conf</div><div class=\"line\"></div><div class=\"line\"><span class=\"attribute\">DirectoryIndex</span> index.php</div><div class=\"line\"><span class=\"section\">&lt;virtualhost 172.18.1.49:8088&gt;</span></div><div class=\"line\">    <span class=\"attribute\"><span class=\"nomarkup\">DocumentRoot</span></span> /data/appdoc1/</div><div class=\"line\">    <span class=\"section\">&lt;directory \"/data/appdoc1\"&gt;</span></div><div class=\"line\">        <span class=\"attribute\"><span class=\"nomarkup\">allow</span></span> from <span class=\"literal\">all</span></div><div class=\"line\">    <span class=\"section\">&lt;/directory&gt;</span></div><div class=\"line\"><span class=\"section\">&lt;/virtualhost&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"配置虚拟主机appsrv2\"><a href=\"#配置虚拟主机appsrv2\" class=\"headerlink\" title=\"配置虚拟主机appsrv2\"></a>配置虚拟主机appsrv2</h2><figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attribute\">vim</span> /etc/httpd/conf.d/app2.conf</div><div class=\"line\"></div><div class=\"line\"><span class=\"attribute\">DirectoryIndex</span> index.php</div><div class=\"line\"><span class=\"section\">&lt;virtualhost 172.18.1.49:8089&gt;</span></div><div class=\"line\">    <span class=\"attribute\"><span class=\"nomarkup\">DocumentRoot</span></span> /data/appdoc2/</div><div class=\"line\">    <span class=\"section\">&lt;directory \"/data/appdoc2\"&gt;</span></div><div class=\"line\">        <span class=\"attribute\"><span class=\"nomarkup\">allow</span></span> from <span class=\"literal\">all</span></div><div class=\"line\">    <span class=\"section\">&lt;/directory&gt;</span></div><div class=\"line\"><span class=\"section\">&lt;/virtualhost&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"为各主机提供测试页\"><a href=\"#为各主机提供测试页\" class=\"headerlink\" title=\"为各主机提供测试页\"></a>为各主机提供测试页</h2><figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#websrv1</span></div><div class=\"line\">vim <span class=\"meta-keyword\">/data/</span>webdoc1/index.html</div><div class=\"line\"><span class=\"params\">&lt;h1&gt;</span>web-server1<span class=\"params\">&lt;/h1&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">#websrv2</span></div><div class=\"line\">vim <span class=\"meta-keyword\">/data/</span>webdoc2/index.html</div><div class=\"line\"><span class=\"params\">&lt;h1&gt;</span>web-server2<span class=\"params\">&lt;/h1&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">#appsrv1</span></div><div class=\"line\">vim <span class=\"meta-keyword\">/data/</span>appdoc1/index.php</div><div class=\"line\"><span class=\"params\">&lt;h1&gt;</span>app-server1<span class=\"params\">&lt;/h1&gt;</span></div><div class=\"line\"><span class=\"params\">&lt;?php</span></div><div class=\"line\">\tphpinfo();</div><div class=\"line\">?&gt;</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">#appsrv2</span></div><div class=\"line\">vim <span class=\"meta-keyword\">/data/</span>appdoc2/index.php</div><div class=\"line\"><span class=\"params\">&lt;h1&gt;</span>app-server2<span class=\"params\">&lt;/h1&gt;</span></div><div class=\"line\"><span class=\"params\">&lt;?php</span></div><div class=\"line\">\tphpinfo();</div><div class=\"line\">?&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"修改HAProxy配置\"><a href=\"#修改HAProxy配置\" class=\"headerlink\" title=\"修改HAProxy配置\"></a>修改HAProxy配置</h2><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\">frontend http-in</div><div class=\"line\">    bind 172.18.1.49:80 #监听的端口</div><div class=\"line\">    acl url_static path_end -i .jpg .png .html .css .jsp #acl规则分离静态资源</div><div class=\"line\">    use_backend websrv <span class=\"keyword\">if</span> url_static</div><div class=\"line\">    default_backend appsrv #默认使用动态后端主机</div><div class=\"line\"></div><div class=\"line\">backend websrv #后端静态主机组</div><div class=\"line\">    balance roundrobin</div><div class=\"line\">   <span class=\"built_in\"> server </span>srv1 172.18.1.49:8080 check</div><div class=\"line\">   <span class=\"built_in\"> server </span>srv2 172.18.1.49:8081 check</div><div class=\"line\"></div><div class=\"line\">backend appsrv #后端动态主机组</div><div class=\"line\">    balance roundrobin</div><div class=\"line\">   <span class=\"built_in\"> server </span>app1 172.18.1.49:8088 check</div><div class=\"line\">   <span class=\"built_in\"> server </span>app2 172.18.1.49:8089 check</div><div class=\"line\"></div><div class=\"line\">listen stats 172.18.1.49:9001 #提供一个管理页面</div><div class=\"line\">    stats <span class=\"builtin-name\">enable</span></div><div class=\"line\">    stats uri /admin?stats</div><div class=\"line\">    stats hide-version</div><div class=\"line\">    stats auth admin:admin</div><div class=\"line\"><span class=\"comment\">#保存退出</span></div><div class=\"line\"><span class=\"built_in\"></span></div><div class=\"line\">service httpd start</div><div class=\"line\"><span class=\"built_in\"></span></div><div class=\"line\">service haproxy start</div></pre></td></tr></table></figure>\n<p><img src=\"http://o9c1bfnxp.bkt.clouddn.com/2016-06-26-HAProxy-01.jpg\" alt=\"测试页面1\"></p>\n<p><img src=\"http://o9c1bfnxp.bkt.clouddn.com/2016-06-26-HAProxy-02.jpg\" alt=\"测试页面2\"></p>\n<p><img src=\"http://o9c1bfnxp.bkt.clouddn.com/2016-06-26-HAProxy-03.jpg\" alt=\"测试页面3\"></p>\n<p><img src=\"http://o9c1bfnxp.bkt.clouddn.com/2016-06-26-HAProxy-04.jpg\" alt=\"测试页面4\"></p>"},{"title":"初探KVM虚拟化","abbrlink":"b2f2c31e","date":"2016-07-02T08:02:32.000Z","_content":"\n# 准备工作\n- CentOS 7安装图形化桌面\n- 关闭iptables与selinux\n- 配置好IP地址和主机名\n- 配置好yum源\n- 开启虚拟机的虚拟化技术\n<!-- more -->\n![开启虚拟机虚拟化](http://o9c1bfnxp.bkt.clouddn.com/2016-07-02-kvm01.png)\n\n## 查看硬件是否支持虚拟化技术\n> vmx对应Intel VT-x, svm对应AMD-V.\n有内容输出, 说明CPU支持虚拟化技术.\n\n```\n[root@node1 ~]# egrep --color '(vmx|svm)' /proc/cpuinfo\n```\n\n## 检查内核模块\n```\n[root@node1 ~]# lsmod | grep kvm\nkvm_intel             162153  0 \nkvm                   525259  1 kvm_intel\n```\n## 如果没有, 需要手动装载.\n```\n[root@node1 ~]# modprobe kvm\n[root@node1 ~]# modprobe kvm_intel\n```\n\n# 实验步骤\n\n## 安装需要的包组\n```\n[root@node1 ~]# yum  groupinstall -y \"Virtualization\" \"Virtualization Platform\" \"Virtualization Client\" \"Virtualization Tools\" \"GNOME 桌面\"\n步骤略\n```\n## 安装kvm相关的包\n```\n[root@node1 ~]# yum install -y qemu-kvm libvirt virt-manager\n```\n![kvm逻辑图](http://o9c1bfnxp.bkt.clouddn.com/2016-07-02-kvm02.png)\n\n## 配置运行的网络环境\n```\ncp /etc/sysconfig/network-script/ifcfg-eno16777736{,.bak}\n\ncp /etc/sysconfig/network-script/ifcfg-eno16777736 /etc/sysconfig/network-script/br0\n\nVim /etc/sysconfig/network-script/ifcfg-br0\nTYPE=Bridge\nBOOTPROTO=none\nDEFROUTE=\"yes\"\nIPV4_FAILURE_FATAL=\"no\"\nNAME=\"eno16777736\"\nUUID=\"134a2cd7-c7fb-4493-b23b-3973eac55167\"\nDEVICE=br0\nONBOOT=\"yes\"\nIPADDR=172.18.1.120\nPREFIX=16\nGATEWAY=172.18.1.1\nDNS1=172.18.1.1\nIPV6_PEERDNS=yes\nIPV6_PEERROUTES=yes\n\nVim /etc/sysconfig/network-script/ifcfg-eno16777736\nDEVICE=eno16777736\nBRIDGE=br0\nONBOOT=yes\nBOOTPROTO=none\n```\n## 重启网络服务\n```\n[root@node1 network-scripts]# systemctl restart network.service\n[root@node1 network-scripts]# ifconfig \nbr0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500\n        inet 172.18.1.120  netmask 255.255.0.0  broadcast 172.18.255.255\n        inet6 fe80::20c:29ff:fe57:f99c  prefixlen 64  scopeid 0x20<link>\n        ether 00:0c:29:57:f9:9c  txqueuelen 0  (Ethernet)\n        RX packets 629  bytes 32255 (31.4 KiB)\n        RX errors 0  dropped 0  overruns 0  frame 0\n        TX packets 872  bytes 206884 (202.0 KiB)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n\neno16777736: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500\n        inet6 fe80::20c:29ff:fe57:f99c  prefixlen 64  scopeid 0x20<link>\n        ether 00:0c:29:57:f9:9c  txqueuelen 1000  (Ethernet)\n        RX packets 17228  bytes 19524395 (18.6 MiB)\n        RX errors 0  dropped 0  overruns 0  frame 0\n        TX packets 10573  bytes 1265787 (1.2 MiB)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n\nlo: flags=73<UP,LOOPBACK,RUNNING>  mtu 65536\n        inet 127.0.0.1  netmask 255.0.0.0\n        inet6 ::1  prefixlen 128  scopeid 0x10<host>\n        loop  txqueuelen 0  (Local Loopback)\n        RX packets 0  bytes 0 (0.0 B)\n        RX errors 0  dropped 0  overruns 0  frame 0\n        TX packets 0  bytes 0 (0.0 B)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n```\n## 启动virt-manager\n```\n#在图形化界面下\n[root@node1 network-scripts]# virt-manager\n```\n","source":"_posts/2016-07-02-KVM总结.md","raw":"---\ntitle: 初探KVM虚拟化\ncategories: 技术与干货\ntag: kvm\nabbrlink: b2f2c31e\ndate: 2016-07-02 16:02:32\n---\n\n# 准备工作\n- CentOS 7安装图形化桌面\n- 关闭iptables与selinux\n- 配置好IP地址和主机名\n- 配置好yum源\n- 开启虚拟机的虚拟化技术\n<!-- more -->\n![开启虚拟机虚拟化](http://o9c1bfnxp.bkt.clouddn.com/2016-07-02-kvm01.png)\n\n## 查看硬件是否支持虚拟化技术\n> vmx对应Intel VT-x, svm对应AMD-V.\n有内容输出, 说明CPU支持虚拟化技术.\n\n```\n[root@node1 ~]# egrep --color '(vmx|svm)' /proc/cpuinfo\n```\n\n## 检查内核模块\n```\n[root@node1 ~]# lsmod | grep kvm\nkvm_intel             162153  0 \nkvm                   525259  1 kvm_intel\n```\n## 如果没有, 需要手动装载.\n```\n[root@node1 ~]# modprobe kvm\n[root@node1 ~]# modprobe kvm_intel\n```\n\n# 实验步骤\n\n## 安装需要的包组\n```\n[root@node1 ~]# yum  groupinstall -y \"Virtualization\" \"Virtualization Platform\" \"Virtualization Client\" \"Virtualization Tools\" \"GNOME 桌面\"\n步骤略\n```\n## 安装kvm相关的包\n```\n[root@node1 ~]# yum install -y qemu-kvm libvirt virt-manager\n```\n![kvm逻辑图](http://o9c1bfnxp.bkt.clouddn.com/2016-07-02-kvm02.png)\n\n## 配置运行的网络环境\n```\ncp /etc/sysconfig/network-script/ifcfg-eno16777736{,.bak}\n\ncp /etc/sysconfig/network-script/ifcfg-eno16777736 /etc/sysconfig/network-script/br0\n\nVim /etc/sysconfig/network-script/ifcfg-br0\nTYPE=Bridge\nBOOTPROTO=none\nDEFROUTE=\"yes\"\nIPV4_FAILURE_FATAL=\"no\"\nNAME=\"eno16777736\"\nUUID=\"134a2cd7-c7fb-4493-b23b-3973eac55167\"\nDEVICE=br0\nONBOOT=\"yes\"\nIPADDR=172.18.1.120\nPREFIX=16\nGATEWAY=172.18.1.1\nDNS1=172.18.1.1\nIPV6_PEERDNS=yes\nIPV6_PEERROUTES=yes\n\nVim /etc/sysconfig/network-script/ifcfg-eno16777736\nDEVICE=eno16777736\nBRIDGE=br0\nONBOOT=yes\nBOOTPROTO=none\n```\n## 重启网络服务\n```\n[root@node1 network-scripts]# systemctl restart network.service\n[root@node1 network-scripts]# ifconfig \nbr0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500\n        inet 172.18.1.120  netmask 255.255.0.0  broadcast 172.18.255.255\n        inet6 fe80::20c:29ff:fe57:f99c  prefixlen 64  scopeid 0x20<link>\n        ether 00:0c:29:57:f9:9c  txqueuelen 0  (Ethernet)\n        RX packets 629  bytes 32255 (31.4 KiB)\n        RX errors 0  dropped 0  overruns 0  frame 0\n        TX packets 872  bytes 206884 (202.0 KiB)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n\neno16777736: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500\n        inet6 fe80::20c:29ff:fe57:f99c  prefixlen 64  scopeid 0x20<link>\n        ether 00:0c:29:57:f9:9c  txqueuelen 1000  (Ethernet)\n        RX packets 17228  bytes 19524395 (18.6 MiB)\n        RX errors 0  dropped 0  overruns 0  frame 0\n        TX packets 10573  bytes 1265787 (1.2 MiB)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n\nlo: flags=73<UP,LOOPBACK,RUNNING>  mtu 65536\n        inet 127.0.0.1  netmask 255.0.0.0\n        inet6 ::1  prefixlen 128  scopeid 0x10<host>\n        loop  txqueuelen 0  (Local Loopback)\n        RX packets 0  bytes 0 (0.0 B)\n        RX errors 0  dropped 0  overruns 0  frame 0\n        TX packets 0  bytes 0 (0.0 B)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n```\n## 启动virt-manager\n```\n#在图形化界面下\n[root@node1 network-scripts]# virt-manager\n```\n","slug":"2016-07-02-KVM总结","published":1,"updated":"2017-02-14T13:42:45.399Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5mkehqq000kao94be0bgja9","content":"<h1 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h1><ul>\n<li>CentOS 7安装图形化桌面</li>\n<li>关闭iptables与selinux</li>\n<li>配置好IP地址和主机名</li>\n<li>配置好yum源</li>\n<li>开启虚拟机的虚拟化技术<a id=\"more\"></a>\n<img src=\"http://o9c1bfnxp.bkt.clouddn.com/2016-07-02-kvm01.png\" alt=\"开启虚拟机虚拟化\"></li>\n</ul>\n<h2 id=\"查看硬件是否支持虚拟化技术\"><a href=\"#查看硬件是否支持虚拟化技术\" class=\"headerlink\" title=\"查看硬件是否支持虚拟化技术\"></a>查看硬件是否支持虚拟化技术</h2><blockquote>\n<p>vmx对应Intel VT-x, svm对应AMD-V.<br>有内容输出, 说明CPU支持虚拟化技术.</p>\n</blockquote>\n<figure class=\"highlight mel\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@node1 ~]# egrep --<span class=\"keyword\">color</span> <span class=\"string\">'(vmx|svm)'</span> /<span class=\"keyword\">proc</span>/cpuinfo</div></pre></td></tr></table></figure>\n<h2 id=\"检查内核模块\"><a href=\"#检查内核模块\" class=\"headerlink\" title=\"检查内核模块\"></a>检查内核模块</h2><figure class=\"highlight tap\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@node1 ~]<span class=\"comment\"># lsmod | grep kvm</span></div><div class=\"line\">kvm_intel            <span class=\"number\"> 162153 </span><span class=\"number\"> 0 </span></div><div class=\"line\">kvm                  <span class=\"number\"> 525259 </span><span class=\"number\"> 1 </span>kvm_intel</div></pre></td></tr></table></figure>\n<h2 id=\"如果没有-需要手动装载\"><a href=\"#如果没有-需要手动装载\" class=\"headerlink\" title=\"如果没有, 需要手动装载.\"></a>如果没有, 需要手动装载.</h2><figure class=\"highlight autoit\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root<span class=\"symbol\">@node1</span> ~]<span class=\"meta\"># modprobe kvm</span></div><div class=\"line\">[root<span class=\"symbol\">@node1</span> ~]<span class=\"meta\"># modprobe kvm_intel</span></div></pre></td></tr></table></figure>\n<h1 id=\"实验步骤\"><a href=\"#实验步骤\" class=\"headerlink\" title=\"实验步骤\"></a>实验步骤</h1><h2 id=\"安装需要的包组\"><a href=\"#安装需要的包组\" class=\"headerlink\" title=\"安装需要的包组\"></a>安装需要的包组</h2><figure class=\"highlight autoit\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root<span class=\"symbol\">@node1</span> ~]<span class=\"meta\"># yum  groupinstall -y <span class=\"string\">\"Virtualization\"</span> <span class=\"string\">\"Virtualization Platform\"</span> <span class=\"string\">\"Virtualization Client\"</span> <span class=\"string\">\"Virtualization Tools\"</span> <span class=\"string\">\"GNOME 桌面\"</span></span></div><div class=\"line\">步骤略</div></pre></td></tr></table></figure>\n<h2 id=\"安装kvm相关的包\"><a href=\"#安装kvm相关的包\" class=\"headerlink\" title=\"安装kvm相关的包\"></a>安装kvm相关的包</h2><figure class=\"highlight autoit\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root<span class=\"symbol\">@node1</span> ~]<span class=\"meta\"># yum install -y qemu-kvm libvirt virt-manager</span></div></pre></td></tr></table></figure>\n<p><img src=\"http://o9c1bfnxp.bkt.clouddn.com/2016-07-02-kvm02.png\" alt=\"kvm逻辑图\"></p>\n<h2 id=\"配置运行的网络环境\"><a href=\"#配置运行的网络环境\" class=\"headerlink\" title=\"配置运行的网络环境\"></a>配置运行的网络环境</h2><figure class=\"highlight makefile\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\">cp /etc/sysconfig/network-script/ifcfg-eno16777736&#123;,.bak&#125;</div><div class=\"line\"></div><div class=\"line\">cp /etc/sysconfig/network-script/ifcfg-eno16777736 /etc/sysconfig/network-script/br0</div><div class=\"line\"></div><div class=\"line\">Vim /etc/sysconfig/network-script/ifcfg-br0</div><div class=\"line\">TYPE=Bridge</div><div class=\"line\">BOOTPROTO=none</div><div class=\"line\">DEFROUTE=<span class=\"string\">\"yes\"</span></div><div class=\"line\">IPV4_FAILURE_FATAL=<span class=\"string\">\"no\"</span></div><div class=\"line\">NAME=<span class=\"string\">\"eno16777736\"</span></div><div class=\"line\">UUID=<span class=\"string\">\"134a2cd7-c7fb-4493-b23b-3973eac55167\"</span></div><div class=\"line\">DEVICE=br0</div><div class=\"line\">ONBOOT=<span class=\"string\">\"yes\"</span></div><div class=\"line\">IPADDR=172.18.1.120</div><div class=\"line\">PREFIX=16</div><div class=\"line\">GATEWAY=172.18.1.1</div><div class=\"line\">DNS1=172.18.1.1</div><div class=\"line\">IPV6_PEERDNS=yes</div><div class=\"line\">IPV6_PEERROUTES=yes</div><div class=\"line\"></div><div class=\"line\">Vim /etc/sysconfig/network-script/ifcfg-eno16777736</div><div class=\"line\">DEVICE=eno16777736</div><div class=\"line\">BRIDGE=br0</div><div class=\"line\">ONBOOT=yes</div><div class=\"line\">BOOTPROTO=none</div></pre></td></tr></table></figure>\n<h2 id=\"重启网络服务\"><a href=\"#重启网络服务\" class=\"headerlink\" title=\"重启网络服务\"></a>重启网络服务</h2><figure class=\"highlight tap\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@node1 network-scripts]<span class=\"comment\"># systemctl restart network.service</span></div><div class=\"line\">[root@node1 network-scripts]<span class=\"comment\"># ifconfig </span></div><div class=\"line\">br0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</div><div class=\"line\">        inet 172.18.1.120  netmask 255.255.0.0  broadcast 172.18.255.255</div><div class=\"line\">        inet6 fe80::20c:29ff:fe57:f99c  prefixlen<span class=\"number\"> 64 </span> scopeid 0x20&lt;link&gt;</div><div class=\"line\">        ether 00:0c:29:57:f9:9c  txqueuelen<span class=\"number\"> 0 </span> (Ethernet)</div><div class=\"line\">        RX packets<span class=\"number\"> 629 </span> bytes<span class=\"number\"> 32255 </span>(31.4 KiB)</div><div class=\"line\">        RX errors<span class=\"number\"> 0 </span> dropped<span class=\"number\"> 0 </span> overruns<span class=\"number\"> 0 </span> frame 0</div><div class=\"line\">        TX packets<span class=\"number\"> 872 </span> bytes<span class=\"number\"> 206884 </span>(202.0 KiB)</div><div class=\"line\">        TX errors<span class=\"number\"> 0 </span> dropped<span class=\"number\"> 0 </span>overruns<span class=\"number\"> 0 </span> carrier<span class=\"number\"> 0 </span> collisions 0</div><div class=\"line\"></div><div class=\"line\">eno16777736: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</div><div class=\"line\">        inet6 fe80::20c:29ff:fe57:f99c  prefixlen<span class=\"number\"> 64 </span> scopeid 0x20&lt;link&gt;</div><div class=\"line\">        ether 00:0c:29:57:f9:9c  txqueuelen<span class=\"number\"> 1000 </span> (Ethernet)</div><div class=\"line\">        RX packets<span class=\"number\"> 17228 </span> bytes<span class=\"number\"> 19524395 </span>(18.6 MiB)</div><div class=\"line\">        RX errors<span class=\"number\"> 0 </span> dropped<span class=\"number\"> 0 </span> overruns<span class=\"number\"> 0 </span> frame 0</div><div class=\"line\">        TX packets<span class=\"number\"> 10573 </span> bytes<span class=\"number\"> 1265787 </span>(1.2 MiB)</div><div class=\"line\">        TX errors<span class=\"number\"> 0 </span> dropped<span class=\"number\"> 0 </span>overruns<span class=\"number\"> 0 </span> carrier<span class=\"number\"> 0 </span> collisions 0</div><div class=\"line\"></div><div class=\"line\">lo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536</div><div class=\"line\">        inet 127.0.0.1  netmask 255.0.0.0</div><div class=\"line\">        inet6 ::1  prefixlen<span class=\"number\"> 128 </span> scopeid 0x10&lt;host&gt;</div><div class=\"line\">        loop  txqueuelen<span class=\"number\"> 0 </span> (Local Loopback)</div><div class=\"line\">        RX packets<span class=\"number\"> 0 </span> bytes<span class=\"number\"> 0 </span>(0.0 B)</div><div class=\"line\">        RX errors<span class=\"number\"> 0 </span> dropped<span class=\"number\"> 0 </span> overruns<span class=\"number\"> 0 </span> frame 0</div><div class=\"line\">        TX packets<span class=\"number\"> 0 </span> bytes<span class=\"number\"> 0 </span>(0.0 B)</div><div class=\"line\">        TX errors<span class=\"number\"> 0 </span> dropped<span class=\"number\"> 0 </span>overruns<span class=\"number\"> 0 </span> carrier<span class=\"number\"> 0 </span> collisions 0</div></pre></td></tr></table></figure>\n<h2 id=\"启动virt-manager\"><a href=\"#启动virt-manager\" class=\"headerlink\" title=\"启动virt-manager\"></a>启动virt-manager</h2><figure class=\"highlight autoit\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#在图形化界面下</span></div><div class=\"line\">[root<span class=\"symbol\">@node1</span> network-scripts]<span class=\"meta\"># virt-manager</span></div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<h1 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h1><ul>\n<li>CentOS 7安装图形化桌面</li>\n<li>关闭iptables与selinux</li>\n<li>配置好IP地址和主机名</li>\n<li>配置好yum源</li>\n<li>开启虚拟机的虚拟化技术","more":"<img src=\"http://o9c1bfnxp.bkt.clouddn.com/2016-07-02-kvm01.png\" alt=\"开启虚拟机虚拟化\"></li>\n</ul>\n<h2 id=\"查看硬件是否支持虚拟化技术\"><a href=\"#查看硬件是否支持虚拟化技术\" class=\"headerlink\" title=\"查看硬件是否支持虚拟化技术\"></a>查看硬件是否支持虚拟化技术</h2><blockquote>\n<p>vmx对应Intel VT-x, svm对应AMD-V.<br>有内容输出, 说明CPU支持虚拟化技术.</p>\n</blockquote>\n<figure class=\"highlight mel\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@node1 ~]# egrep --<span class=\"keyword\">color</span> <span class=\"string\">'(vmx|svm)'</span> /<span class=\"keyword\">proc</span>/cpuinfo</div></pre></td></tr></table></figure>\n<h2 id=\"检查内核模块\"><a href=\"#检查内核模块\" class=\"headerlink\" title=\"检查内核模块\"></a>检查内核模块</h2><figure class=\"highlight tap\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@node1 ~]<span class=\"comment\"># lsmod | grep kvm</span></div><div class=\"line\">kvm_intel            <span class=\"number\"> 162153 </span><span class=\"number\"> 0 </span></div><div class=\"line\">kvm                  <span class=\"number\"> 525259 </span><span class=\"number\"> 1 </span>kvm_intel</div></pre></td></tr></table></figure>\n<h2 id=\"如果没有-需要手动装载\"><a href=\"#如果没有-需要手动装载\" class=\"headerlink\" title=\"如果没有, 需要手动装载.\"></a>如果没有, 需要手动装载.</h2><figure class=\"highlight autoit\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root<span class=\"symbol\">@node1</span> ~]<span class=\"meta\"># modprobe kvm</span></div><div class=\"line\">[root<span class=\"symbol\">@node1</span> ~]<span class=\"meta\"># modprobe kvm_intel</span></div></pre></td></tr></table></figure>\n<h1 id=\"实验步骤\"><a href=\"#实验步骤\" class=\"headerlink\" title=\"实验步骤\"></a>实验步骤</h1><h2 id=\"安装需要的包组\"><a href=\"#安装需要的包组\" class=\"headerlink\" title=\"安装需要的包组\"></a>安装需要的包组</h2><figure class=\"highlight autoit\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root<span class=\"symbol\">@node1</span> ~]<span class=\"meta\"># yum  groupinstall -y <span class=\"string\">\"Virtualization\"</span> <span class=\"string\">\"Virtualization Platform\"</span> <span class=\"string\">\"Virtualization Client\"</span> <span class=\"string\">\"Virtualization Tools\"</span> <span class=\"string\">\"GNOME 桌面\"</span></span></div><div class=\"line\">步骤略</div></pre></td></tr></table></figure>\n<h2 id=\"安装kvm相关的包\"><a href=\"#安装kvm相关的包\" class=\"headerlink\" title=\"安装kvm相关的包\"></a>安装kvm相关的包</h2><figure class=\"highlight autoit\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root<span class=\"symbol\">@node1</span> ~]<span class=\"meta\"># yum install -y qemu-kvm libvirt virt-manager</span></div></pre></td></tr></table></figure>\n<p><img src=\"http://o9c1bfnxp.bkt.clouddn.com/2016-07-02-kvm02.png\" alt=\"kvm逻辑图\"></p>\n<h2 id=\"配置运行的网络环境\"><a href=\"#配置运行的网络环境\" class=\"headerlink\" title=\"配置运行的网络环境\"></a>配置运行的网络环境</h2><figure class=\"highlight makefile\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\">cp /etc/sysconfig/network-script/ifcfg-eno16777736&#123;,.bak&#125;</div><div class=\"line\"></div><div class=\"line\">cp /etc/sysconfig/network-script/ifcfg-eno16777736 /etc/sysconfig/network-script/br0</div><div class=\"line\"></div><div class=\"line\">Vim /etc/sysconfig/network-script/ifcfg-br0</div><div class=\"line\">TYPE=Bridge</div><div class=\"line\">BOOTPROTO=none</div><div class=\"line\">DEFROUTE=<span class=\"string\">\"yes\"</span></div><div class=\"line\">IPV4_FAILURE_FATAL=<span class=\"string\">\"no\"</span></div><div class=\"line\">NAME=<span class=\"string\">\"eno16777736\"</span></div><div class=\"line\">UUID=<span class=\"string\">\"134a2cd7-c7fb-4493-b23b-3973eac55167\"</span></div><div class=\"line\">DEVICE=br0</div><div class=\"line\">ONBOOT=<span class=\"string\">\"yes\"</span></div><div class=\"line\">IPADDR=172.18.1.120</div><div class=\"line\">PREFIX=16</div><div class=\"line\">GATEWAY=172.18.1.1</div><div class=\"line\">DNS1=172.18.1.1</div><div class=\"line\">IPV6_PEERDNS=yes</div><div class=\"line\">IPV6_PEERROUTES=yes</div><div class=\"line\"></div><div class=\"line\">Vim /etc/sysconfig/network-script/ifcfg-eno16777736</div><div class=\"line\">DEVICE=eno16777736</div><div class=\"line\">BRIDGE=br0</div><div class=\"line\">ONBOOT=yes</div><div class=\"line\">BOOTPROTO=none</div></pre></td></tr></table></figure>\n<h2 id=\"重启网络服务\"><a href=\"#重启网络服务\" class=\"headerlink\" title=\"重启网络服务\"></a>重启网络服务</h2><figure class=\"highlight tap\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@node1 network-scripts]<span class=\"comment\"># systemctl restart network.service</span></div><div class=\"line\">[root@node1 network-scripts]<span class=\"comment\"># ifconfig </span></div><div class=\"line\">br0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</div><div class=\"line\">        inet 172.18.1.120  netmask 255.255.0.0  broadcast 172.18.255.255</div><div class=\"line\">        inet6 fe80::20c:29ff:fe57:f99c  prefixlen<span class=\"number\"> 64 </span> scopeid 0x20&lt;link&gt;</div><div class=\"line\">        ether 00:0c:29:57:f9:9c  txqueuelen<span class=\"number\"> 0 </span> (Ethernet)</div><div class=\"line\">        RX packets<span class=\"number\"> 629 </span> bytes<span class=\"number\"> 32255 </span>(31.4 KiB)</div><div class=\"line\">        RX errors<span class=\"number\"> 0 </span> dropped<span class=\"number\"> 0 </span> overruns<span class=\"number\"> 0 </span> frame 0</div><div class=\"line\">        TX packets<span class=\"number\"> 872 </span> bytes<span class=\"number\"> 206884 </span>(202.0 KiB)</div><div class=\"line\">        TX errors<span class=\"number\"> 0 </span> dropped<span class=\"number\"> 0 </span>overruns<span class=\"number\"> 0 </span> carrier<span class=\"number\"> 0 </span> collisions 0</div><div class=\"line\"></div><div class=\"line\">eno16777736: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</div><div class=\"line\">        inet6 fe80::20c:29ff:fe57:f99c  prefixlen<span class=\"number\"> 64 </span> scopeid 0x20&lt;link&gt;</div><div class=\"line\">        ether 00:0c:29:57:f9:9c  txqueuelen<span class=\"number\"> 1000 </span> (Ethernet)</div><div class=\"line\">        RX packets<span class=\"number\"> 17228 </span> bytes<span class=\"number\"> 19524395 </span>(18.6 MiB)</div><div class=\"line\">        RX errors<span class=\"number\"> 0 </span> dropped<span class=\"number\"> 0 </span> overruns<span class=\"number\"> 0 </span> frame 0</div><div class=\"line\">        TX packets<span class=\"number\"> 10573 </span> bytes<span class=\"number\"> 1265787 </span>(1.2 MiB)</div><div class=\"line\">        TX errors<span class=\"number\"> 0 </span> dropped<span class=\"number\"> 0 </span>overruns<span class=\"number\"> 0 </span> carrier<span class=\"number\"> 0 </span> collisions 0</div><div class=\"line\"></div><div class=\"line\">lo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536</div><div class=\"line\">        inet 127.0.0.1  netmask 255.0.0.0</div><div class=\"line\">        inet6 ::1  prefixlen<span class=\"number\"> 128 </span> scopeid 0x10&lt;host&gt;</div><div class=\"line\">        loop  txqueuelen<span class=\"number\"> 0 </span> (Local Loopback)</div><div class=\"line\">        RX packets<span class=\"number\"> 0 </span> bytes<span class=\"number\"> 0 </span>(0.0 B)</div><div class=\"line\">        RX errors<span class=\"number\"> 0 </span> dropped<span class=\"number\"> 0 </span> overruns<span class=\"number\"> 0 </span> frame 0</div><div class=\"line\">        TX packets<span class=\"number\"> 0 </span> bytes<span class=\"number\"> 0 </span>(0.0 B)</div><div class=\"line\">        TX errors<span class=\"number\"> 0 </span> dropped<span class=\"number\"> 0 </span>overruns<span class=\"number\"> 0 </span> carrier<span class=\"number\"> 0 </span> collisions 0</div></pre></td></tr></table></figure>\n<h2 id=\"启动virt-manager\"><a href=\"#启动virt-manager\" class=\"headerlink\" title=\"启动virt-manager\"></a>启动virt-manager</h2><figure class=\"highlight autoit\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#在图形化界面下</span></div><div class=\"line\">[root<span class=\"symbol\">@node1</span> network-scripts]<span class=\"meta\"># virt-manager</span></div></pre></td></tr></table></figure>"},{"title":"PHP的三种工作方式","abbrlink":"7997f177","date":"2016-06-22T16:00:00.000Z","_content":"\n# 1.CGI（Common Gateway Interface）\n\n> CGI即通用网关接口(Common Gateway Interface)，它是一段程序, 通俗的讲CGI就象是一座桥，把网页和WEB服务器中的执行程序连接起来，它把HTML接收的指令传递给服务器的执行程序，再把服务器执行程序的结果返还给HTML页。\n \n<!-- more -->\n\n> CGI 的跨平台性能极佳，几乎可以在任何操作系统上实现。CGI已经是比较老的模式了，这几年都很少用了。\n每有一个用户请求，都会先要创建cgi的子进程，然后处理请求，处理完后结束这个子进程，这就是fork-and-execute模式。 当用户请求数量非常多时，会大量挤占系统的资源如内存，CPU时间等，造成效能低下。所以用cgi方式的服务器有多少连接请求就会有多少cgi子进程，子进程反复加载是cgi性能低下的主要原因。\n如果不想把 PHP 嵌入到服务器端软件（如 Apache）作为一个模块安装的话，可以选择以 CGI 的模式安装。或者把 PHP 用于不同的 CGI 封装以便为代码创建安全的 chroot 和 setuid 环境。这样每个客户机请求一个php文件，Web服务器就调用php.exe（win下是php.exe,linux是php）去解释这个文件，然后再把解释的结果以网页的形式返回给客户机。 这种安装方式通常会把 PHP 的可执行文件安装到 web 服务器的 cgi-bin 目录。CERT 建议书 CA-96.11 建议不要把任何的解释器放到 cgi-bin 目录。\n> CGI已经是比较老的模式了，这几年都很少用了\n\n# php运行原理\n![php运行原理](http://o9c1bfnxp.bkt.clouddn.com/2016-07-PHP1.jpg)\n\n# 2.Fastcgi模式\n## fastcgi工作方式\n![fastcgi工作方式](http://o9c1bfnxp.bkt.clouddn.com/2016-07-PHP3.jpg)\n\n> ast-cgi 是cgi的升级版本，FastCGI 像是一个常驻 (long-live) 型的 CGI，它可以一直执行着，只要激活后，不会每次都要花费时间去 fork 一次 (这是 CGI 最为人诟病的 fork-and-execute 模式)。 \n\n## FastCGI的工作原理是：\n> - Web Server启动时载入FastCGI进程管理器【PHP的FastCGI进程管理器是PHP-FPM(php-FastCGI Process Manager)】（IIS ISAPI或Apache Module);\n- FastCGI进程管理器自身初始化，启动多个CGI解释器进程 (在任务管理器中可见多个php-cgi.exe)并等待来自Web Server的连接。\n- 当客户端请求到达Web Server时，FastCGI进程管理器选择并连接到一个CGI解释器。Web server将CGI环境变量和标准输入发送到FastCGI子进程php-cgi。\n- FastCGI子进程完成处理后将标准输出和错误信息从同一连接返回Web Server。当FastCGI子进程关闭连接时，请求便告处理完成。FastCGI子进程接着等待并处理来自FastCGI进程管理器（运行在 WebServer中）的下一个连接。在正常的CGI模式中，php-cgi.exe在此便退出了。\n- 在CGI模式中，你可以想象 CGI通常有多慢。每一个Web请求PHP都必须重新解析php.ini、重新载入全部dll扩展并重初始化全部数据结构。使用FastCGI，所有这些都只在进程启动时发生一次。一个额外的好处是，持续数据库连接(Persistent database connection)可以工作。\n\n\n## Fastcgi的优点：\n\n> 1）从稳定性上看, fastcgi是以独立的进程池运行来cgi,单独一个进程死掉,系统可以很轻易的丢弃,然后重新分 配新的进程来运行逻辑.\n2）从安全性上看,Fastcgi支持分布式运算. fastcgi和宿主的server完全独立, fastcgi怎么down也不会把server搞垮.\n3）从性能上看, fastcgi把动态逻辑的处理从server中分离出来, 大负荷的IO处理还是留给宿主server, 这样宿主server可以一心一意作IO,对于一个普通的动态网页来说, 逻辑处理可能只有一小部分, 大量的图片等静态 \n\n## FastCGI缺点：\n\n> 说完了好处，也来说说缺点。从我的实际使用来看，用FastCGI模式更适合生产环境的服务器。但对于开发用机器来说就不太合适。因为当使用 Zend Studio调试程序时，由于 FastCGI会认为PHP进程超时，从而在页面返回 500错误。这一点让人非常恼火\n\n\n# 模块模式\n![lamp工作方式](http://o9c1bfnxp.bkt.clouddn.com/2016-07-PHP2.jpg)  \n\n> 模块模式是以mod_php5模块的形式集成，此时mod_php5模块的作用是接收Apache传递过来的PHP文件请求，并处理这些请求，然后将处理后的结果返回给Apache。如果我们在Apache启动前在其配置文件中配置好了PHP模块（mod_php5）， PHP模块通过注册apache2的ap_hook_post_config挂钩，在Apache启动的时候启动此模块以接受PHP文件的请求。\n除了这种启动时的加载方式，Apache的模块可以在运行的时候动态装载，这意味着对服务器可以进行功能扩展而不需要重新对源代码进行编译，甚至根本不需要停止服务器。我们所需要做的仅仅是给服务器发送信号HUP或者AP_SIG_GRACEFUL通知服务器重新载入模块。但是在动态加载之前，我们需要将模块编译成为动态链接库。此时的动态加载就是加载动态链接库。 Apache中对动态链接库的处理是通过模块mod_so来完成的，因此mod_so模块不能被动态加载，它只能被静态编译进Apache的核心。这意味着它是随着Apache一起启动的。\n\n> Apache是如何加载模块的呢？我们以前面提到的mod_php5模块为例。首先我们需要在Apache的配置文件httpd.conf中添加一行：\n\n> 该运行模式是我们以前在windows环境下使用apache服务器经常使用的，而在模块化(DLL)中，PHP是与Web服务器一起启动并运行的。（是apache在CGI的基础上进行的一种扩展，加快PHP的运行效率）LoadModule php5_module modules/mod_php5.so 这里我们使用了LoadModule命令，该命令的第一个参数是模块的名称，名称可以在模块实现的源码中找到。第二个选项是该模块所处的路径。如果需要在服务器运行时加载模块，可以通过发送信号HUP或者AP_SIG_GRACEFUL给服务器，一旦接受到该信号，Apache将重新装载模块，而不需要重新启动服务器。\n\n\n","source":"_posts/2016-07-02-PHP工作的三种模式.md","raw":"---\ntitle: PHP的三种工作方式\ncategories: 实践与总结\ntag: web\nabbrlink: 7997f177\ndate: 2016-06-23 00:00:00\n---\n\n# 1.CGI（Common Gateway Interface）\n\n> CGI即通用网关接口(Common Gateway Interface)，它是一段程序, 通俗的讲CGI就象是一座桥，把网页和WEB服务器中的执行程序连接起来，它把HTML接收的指令传递给服务器的执行程序，再把服务器执行程序的结果返还给HTML页。\n \n<!-- more -->\n\n> CGI 的跨平台性能极佳，几乎可以在任何操作系统上实现。CGI已经是比较老的模式了，这几年都很少用了。\n每有一个用户请求，都会先要创建cgi的子进程，然后处理请求，处理完后结束这个子进程，这就是fork-and-execute模式。 当用户请求数量非常多时，会大量挤占系统的资源如内存，CPU时间等，造成效能低下。所以用cgi方式的服务器有多少连接请求就会有多少cgi子进程，子进程反复加载是cgi性能低下的主要原因。\n如果不想把 PHP 嵌入到服务器端软件（如 Apache）作为一个模块安装的话，可以选择以 CGI 的模式安装。或者把 PHP 用于不同的 CGI 封装以便为代码创建安全的 chroot 和 setuid 环境。这样每个客户机请求一个php文件，Web服务器就调用php.exe（win下是php.exe,linux是php）去解释这个文件，然后再把解释的结果以网页的形式返回给客户机。 这种安装方式通常会把 PHP 的可执行文件安装到 web 服务器的 cgi-bin 目录。CERT 建议书 CA-96.11 建议不要把任何的解释器放到 cgi-bin 目录。\n> CGI已经是比较老的模式了，这几年都很少用了\n\n# php运行原理\n![php运行原理](http://o9c1bfnxp.bkt.clouddn.com/2016-07-PHP1.jpg)\n\n# 2.Fastcgi模式\n## fastcgi工作方式\n![fastcgi工作方式](http://o9c1bfnxp.bkt.clouddn.com/2016-07-PHP3.jpg)\n\n> ast-cgi 是cgi的升级版本，FastCGI 像是一个常驻 (long-live) 型的 CGI，它可以一直执行着，只要激活后，不会每次都要花费时间去 fork 一次 (这是 CGI 最为人诟病的 fork-and-execute 模式)。 \n\n## FastCGI的工作原理是：\n> - Web Server启动时载入FastCGI进程管理器【PHP的FastCGI进程管理器是PHP-FPM(php-FastCGI Process Manager)】（IIS ISAPI或Apache Module);\n- FastCGI进程管理器自身初始化，启动多个CGI解释器进程 (在任务管理器中可见多个php-cgi.exe)并等待来自Web Server的连接。\n- 当客户端请求到达Web Server时，FastCGI进程管理器选择并连接到一个CGI解释器。Web server将CGI环境变量和标准输入发送到FastCGI子进程php-cgi。\n- FastCGI子进程完成处理后将标准输出和错误信息从同一连接返回Web Server。当FastCGI子进程关闭连接时，请求便告处理完成。FastCGI子进程接着等待并处理来自FastCGI进程管理器（运行在 WebServer中）的下一个连接。在正常的CGI模式中，php-cgi.exe在此便退出了。\n- 在CGI模式中，你可以想象 CGI通常有多慢。每一个Web请求PHP都必须重新解析php.ini、重新载入全部dll扩展并重初始化全部数据结构。使用FastCGI，所有这些都只在进程启动时发生一次。一个额外的好处是，持续数据库连接(Persistent database connection)可以工作。\n\n\n## Fastcgi的优点：\n\n> 1）从稳定性上看, fastcgi是以独立的进程池运行来cgi,单独一个进程死掉,系统可以很轻易的丢弃,然后重新分 配新的进程来运行逻辑.\n2）从安全性上看,Fastcgi支持分布式运算. fastcgi和宿主的server完全独立, fastcgi怎么down也不会把server搞垮.\n3）从性能上看, fastcgi把动态逻辑的处理从server中分离出来, 大负荷的IO处理还是留给宿主server, 这样宿主server可以一心一意作IO,对于一个普通的动态网页来说, 逻辑处理可能只有一小部分, 大量的图片等静态 \n\n## FastCGI缺点：\n\n> 说完了好处，也来说说缺点。从我的实际使用来看，用FastCGI模式更适合生产环境的服务器。但对于开发用机器来说就不太合适。因为当使用 Zend Studio调试程序时，由于 FastCGI会认为PHP进程超时，从而在页面返回 500错误。这一点让人非常恼火\n\n\n# 模块模式\n![lamp工作方式](http://o9c1bfnxp.bkt.clouddn.com/2016-07-PHP2.jpg)  \n\n> 模块模式是以mod_php5模块的形式集成，此时mod_php5模块的作用是接收Apache传递过来的PHP文件请求，并处理这些请求，然后将处理后的结果返回给Apache。如果我们在Apache启动前在其配置文件中配置好了PHP模块（mod_php5）， PHP模块通过注册apache2的ap_hook_post_config挂钩，在Apache启动的时候启动此模块以接受PHP文件的请求。\n除了这种启动时的加载方式，Apache的模块可以在运行的时候动态装载，这意味着对服务器可以进行功能扩展而不需要重新对源代码进行编译，甚至根本不需要停止服务器。我们所需要做的仅仅是给服务器发送信号HUP或者AP_SIG_GRACEFUL通知服务器重新载入模块。但是在动态加载之前，我们需要将模块编译成为动态链接库。此时的动态加载就是加载动态链接库。 Apache中对动态链接库的处理是通过模块mod_so来完成的，因此mod_so模块不能被动态加载，它只能被静态编译进Apache的核心。这意味着它是随着Apache一起启动的。\n\n> Apache是如何加载模块的呢？我们以前面提到的mod_php5模块为例。首先我们需要在Apache的配置文件httpd.conf中添加一行：\n\n> 该运行模式是我们以前在windows环境下使用apache服务器经常使用的，而在模块化(DLL)中，PHP是与Web服务器一起启动并运行的。（是apache在CGI的基础上进行的一种扩展，加快PHP的运行效率）LoadModule php5_module modules/mod_php5.so 这里我们使用了LoadModule命令，该命令的第一个参数是模块的名称，名称可以在模块实现的源码中找到。第二个选项是该模块所处的路径。如果需要在服务器运行时加载模块，可以通过发送信号HUP或者AP_SIG_GRACEFUL给服务器，一旦接受到该信号，Apache将重新装载模块，而不需要重新启动服务器。\n\n\n","slug":"2016-07-02-PHP工作的三种模式","published":1,"updated":"2017-02-14T13:42:45.400Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5mkehqu000qao948kik73ed","content":"<h1 id=\"1-CGI（Common-Gateway-Interface）\"><a href=\"#1-CGI（Common-Gateway-Interface）\" class=\"headerlink\" title=\"1.CGI（Common Gateway Interface）\"></a>1.CGI（Common Gateway Interface）</h1><blockquote>\n<p>CGI即通用网关接口(Common Gateway Interface)，它是一段程序, 通俗的讲CGI就象是一座桥，把网页和WEB服务器中的执行程序连接起来，它把HTML接收的指令传递给服务器的执行程序，再把服务器执行程序的结果返还给HTML页。</p>\n</blockquote>\n<a id=\"more\"></a>\n<blockquote>\n<p>CGI 的跨平台性能极佳，几乎可以在任何操作系统上实现。CGI已经是比较老的模式了，这几年都很少用了。<br>每有一个用户请求，都会先要创建cgi的子进程，然后处理请求，处理完后结束这个子进程，这就是fork-and-execute模式。 当用户请求数量非常多时，会大量挤占系统的资源如内存，CPU时间等，造成效能低下。所以用cgi方式的服务器有多少连接请求就会有多少cgi子进程，子进程反复加载是cgi性能低下的主要原因。<br>如果不想把 PHP 嵌入到服务器端软件（如 Apache）作为一个模块安装的话，可以选择以 CGI 的模式安装。或者把 PHP 用于不同的 CGI 封装以便为代码创建安全的 chroot 和 setuid 环境。这样每个客户机请求一个php文件，Web服务器就调用php.exe（win下是php.exe,linux是php）去解释这个文件，然后再把解释的结果以网页的形式返回给客户机。 这种安装方式通常会把 PHP 的可执行文件安装到 web 服务器的 cgi-bin 目录。CERT 建议书 CA-96.11 建议不要把任何的解释器放到 cgi-bin 目录。<br>CGI已经是比较老的模式了，这几年都很少用了</p>\n</blockquote>\n<h1 id=\"php运行原理\"><a href=\"#php运行原理\" class=\"headerlink\" title=\"php运行原理\"></a>php运行原理</h1><p><img src=\"http://o9c1bfnxp.bkt.clouddn.com/2016-07-PHP1.jpg\" alt=\"php运行原理\"></p>\n<h1 id=\"2-Fastcgi模式\"><a href=\"#2-Fastcgi模式\" class=\"headerlink\" title=\"2.Fastcgi模式\"></a>2.Fastcgi模式</h1><h2 id=\"fastcgi工作方式\"><a href=\"#fastcgi工作方式\" class=\"headerlink\" title=\"fastcgi工作方式\"></a>fastcgi工作方式</h2><p><img src=\"http://o9c1bfnxp.bkt.clouddn.com/2016-07-PHP3.jpg\" alt=\"fastcgi工作方式\"></p>\n<blockquote>\n<p>ast-cgi 是cgi的升级版本，FastCGI 像是一个常驻 (long-live) 型的 CGI，它可以一直执行着，只要激活后，不会每次都要花费时间去 fork 一次 (这是 CGI 最为人诟病的 fork-and-execute 模式)。 </p>\n</blockquote>\n<h2 id=\"FastCGI的工作原理是：\"><a href=\"#FastCGI的工作原理是：\" class=\"headerlink\" title=\"FastCGI的工作原理是：\"></a>FastCGI的工作原理是：</h2><blockquote>\n<ul>\n<li>Web Server启动时载入FastCGI进程管理器【PHP的FastCGI进程管理器是PHP-FPM(php-FastCGI Process Manager)】（IIS ISAPI或Apache Module);</li>\n<li>FastCGI进程管理器自身初始化，启动多个CGI解释器进程 (在任务管理器中可见多个php-cgi.exe)并等待来自Web Server的连接。</li>\n<li>当客户端请求到达Web Server时，FastCGI进程管理器选择并连接到一个CGI解释器。Web server将CGI环境变量和标准输入发送到FastCGI子进程php-cgi。</li>\n<li>FastCGI子进程完成处理后将标准输出和错误信息从同一连接返回Web Server。当FastCGI子进程关闭连接时，请求便告处理完成。FastCGI子进程接着等待并处理来自FastCGI进程管理器（运行在 WebServer中）的下一个连接。在正常的CGI模式中，php-cgi.exe在此便退出了。</li>\n<li>在CGI模式中，你可以想象 CGI通常有多慢。每一个Web请求PHP都必须重新解析php.ini、重新载入全部dll扩展并重初始化全部数据结构。使用FastCGI，所有这些都只在进程启动时发生一次。一个额外的好处是，持续数据库连接(Persistent database connection)可以工作。</li>\n</ul>\n</blockquote>\n<h2 id=\"Fastcgi的优点：\"><a href=\"#Fastcgi的优点：\" class=\"headerlink\" title=\"Fastcgi的优点：\"></a>Fastcgi的优点：</h2><blockquote>\n<p>1）从稳定性上看, fastcgi是以独立的进程池运行来cgi,单独一个进程死掉,系统可以很轻易的丢弃,然后重新分 配新的进程来运行逻辑.<br>2）从安全性上看,Fastcgi支持分布式运算. fastcgi和宿主的server完全独立, fastcgi怎么down也不会把server搞垮.<br>3）从性能上看, fastcgi把动态逻辑的处理从server中分离出来, 大负荷的IO处理还是留给宿主server, 这样宿主server可以一心一意作IO,对于一个普通的动态网页来说, 逻辑处理可能只有一小部分, 大量的图片等静态 </p>\n</blockquote>\n<h2 id=\"FastCGI缺点：\"><a href=\"#FastCGI缺点：\" class=\"headerlink\" title=\"FastCGI缺点：\"></a>FastCGI缺点：</h2><blockquote>\n<p>说完了好处，也来说说缺点。从我的实际使用来看，用FastCGI模式更适合生产环境的服务器。但对于开发用机器来说就不太合适。因为当使用 Zend Studio调试程序时，由于 FastCGI会认为PHP进程超时，从而在页面返回 500错误。这一点让人非常恼火</p>\n</blockquote>\n<h1 id=\"模块模式\"><a href=\"#模块模式\" class=\"headerlink\" title=\"模块模式\"></a>模块模式</h1><p><img src=\"http://o9c1bfnxp.bkt.clouddn.com/2016-07-PHP2.jpg\" alt=\"lamp工作方式\">  </p>\n<blockquote>\n<p>模块模式是以mod_php5模块的形式集成，此时mod_php5模块的作用是接收Apache传递过来的PHP文件请求，并处理这些请求，然后将处理后的结果返回给Apache。如果我们在Apache启动前在其配置文件中配置好了PHP模块（mod_php5）， PHP模块通过注册apache2的ap_hook_post_config挂钩，在Apache启动的时候启动此模块以接受PHP文件的请求。<br>除了这种启动时的加载方式，Apache的模块可以在运行的时候动态装载，这意味着对服务器可以进行功能扩展而不需要重新对源代码进行编译，甚至根本不需要停止服务器。我们所需要做的仅仅是给服务器发送信号HUP或者AP_SIG_GRACEFUL通知服务器重新载入模块。但是在动态加载之前，我们需要将模块编译成为动态链接库。此时的动态加载就是加载动态链接库。 Apache中对动态链接库的处理是通过模块mod_so来完成的，因此mod_so模块不能被动态加载，它只能被静态编译进Apache的核心。这意味着它是随着Apache一起启动的。</p>\n<p>Apache是如何加载模块的呢？我们以前面提到的mod_php5模块为例。首先我们需要在Apache的配置文件httpd.conf中添加一行：</p>\n<p>该运行模式是我们以前在windows环境下使用apache服务器经常使用的，而在模块化(DLL)中，PHP是与Web服务器一起启动并运行的。（是apache在CGI的基础上进行的一种扩展，加快PHP的运行效率）LoadModule php5_module modules/mod_php5.so 这里我们使用了LoadModule命令，该命令的第一个参数是模块的名称，名称可以在模块实现的源码中找到。第二个选项是该模块所处的路径。如果需要在服务器运行时加载模块，可以通过发送信号HUP或者AP_SIG_GRACEFUL给服务器，一旦接受到该信号，Apache将重新装载模块，而不需要重新启动服务器。</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<h1 id=\"1-CGI（Common-Gateway-Interface）\"><a href=\"#1-CGI（Common-Gateway-Interface）\" class=\"headerlink\" title=\"1.CGI（Common Gateway Interface）\"></a>1.CGI（Common Gateway Interface）</h1><blockquote>\n<p>CGI即通用网关接口(Common Gateway Interface)，它是一段程序, 通俗的讲CGI就象是一座桥，把网页和WEB服务器中的执行程序连接起来，它把HTML接收的指令传递给服务器的执行程序，再把服务器执行程序的结果返还给HTML页。</p>\n</blockquote>","more":"<blockquote>\n<p>CGI 的跨平台性能极佳，几乎可以在任何操作系统上实现。CGI已经是比较老的模式了，这几年都很少用了。<br>每有一个用户请求，都会先要创建cgi的子进程，然后处理请求，处理完后结束这个子进程，这就是fork-and-execute模式。 当用户请求数量非常多时，会大量挤占系统的资源如内存，CPU时间等，造成效能低下。所以用cgi方式的服务器有多少连接请求就会有多少cgi子进程，子进程反复加载是cgi性能低下的主要原因。<br>如果不想把 PHP 嵌入到服务器端软件（如 Apache）作为一个模块安装的话，可以选择以 CGI 的模式安装。或者把 PHP 用于不同的 CGI 封装以便为代码创建安全的 chroot 和 setuid 环境。这样每个客户机请求一个php文件，Web服务器就调用php.exe（win下是php.exe,linux是php）去解释这个文件，然后再把解释的结果以网页的形式返回给客户机。 这种安装方式通常会把 PHP 的可执行文件安装到 web 服务器的 cgi-bin 目录。CERT 建议书 CA-96.11 建议不要把任何的解释器放到 cgi-bin 目录。<br>CGI已经是比较老的模式了，这几年都很少用了</p>\n</blockquote>\n<h1 id=\"php运行原理\"><a href=\"#php运行原理\" class=\"headerlink\" title=\"php运行原理\"></a>php运行原理</h1><p><img src=\"http://o9c1bfnxp.bkt.clouddn.com/2016-07-PHP1.jpg\" alt=\"php运行原理\"></p>\n<h1 id=\"2-Fastcgi模式\"><a href=\"#2-Fastcgi模式\" class=\"headerlink\" title=\"2.Fastcgi模式\"></a>2.Fastcgi模式</h1><h2 id=\"fastcgi工作方式\"><a href=\"#fastcgi工作方式\" class=\"headerlink\" title=\"fastcgi工作方式\"></a>fastcgi工作方式</h2><p><img src=\"http://o9c1bfnxp.bkt.clouddn.com/2016-07-PHP3.jpg\" alt=\"fastcgi工作方式\"></p>\n<blockquote>\n<p>ast-cgi 是cgi的升级版本，FastCGI 像是一个常驻 (long-live) 型的 CGI，它可以一直执行着，只要激活后，不会每次都要花费时间去 fork 一次 (这是 CGI 最为人诟病的 fork-and-execute 模式)。 </p>\n</blockquote>\n<h2 id=\"FastCGI的工作原理是：\"><a href=\"#FastCGI的工作原理是：\" class=\"headerlink\" title=\"FastCGI的工作原理是：\"></a>FastCGI的工作原理是：</h2><blockquote>\n<ul>\n<li>Web Server启动时载入FastCGI进程管理器【PHP的FastCGI进程管理器是PHP-FPM(php-FastCGI Process Manager)】（IIS ISAPI或Apache Module);</li>\n<li>FastCGI进程管理器自身初始化，启动多个CGI解释器进程 (在任务管理器中可见多个php-cgi.exe)并等待来自Web Server的连接。</li>\n<li>当客户端请求到达Web Server时，FastCGI进程管理器选择并连接到一个CGI解释器。Web server将CGI环境变量和标准输入发送到FastCGI子进程php-cgi。</li>\n<li>FastCGI子进程完成处理后将标准输出和错误信息从同一连接返回Web Server。当FastCGI子进程关闭连接时，请求便告处理完成。FastCGI子进程接着等待并处理来自FastCGI进程管理器（运行在 WebServer中）的下一个连接。在正常的CGI模式中，php-cgi.exe在此便退出了。</li>\n<li>在CGI模式中，你可以想象 CGI通常有多慢。每一个Web请求PHP都必须重新解析php.ini、重新载入全部dll扩展并重初始化全部数据结构。使用FastCGI，所有这些都只在进程启动时发生一次。一个额外的好处是，持续数据库连接(Persistent database connection)可以工作。</li>\n</ul>\n</blockquote>\n<h2 id=\"Fastcgi的优点：\"><a href=\"#Fastcgi的优点：\" class=\"headerlink\" title=\"Fastcgi的优点：\"></a>Fastcgi的优点：</h2><blockquote>\n<p>1）从稳定性上看, fastcgi是以独立的进程池运行来cgi,单独一个进程死掉,系统可以很轻易的丢弃,然后重新分 配新的进程来运行逻辑.<br>2）从安全性上看,Fastcgi支持分布式运算. fastcgi和宿主的server完全独立, fastcgi怎么down也不会把server搞垮.<br>3）从性能上看, fastcgi把动态逻辑的处理从server中分离出来, 大负荷的IO处理还是留给宿主server, 这样宿主server可以一心一意作IO,对于一个普通的动态网页来说, 逻辑处理可能只有一小部分, 大量的图片等静态 </p>\n</blockquote>\n<h2 id=\"FastCGI缺点：\"><a href=\"#FastCGI缺点：\" class=\"headerlink\" title=\"FastCGI缺点：\"></a>FastCGI缺点：</h2><blockquote>\n<p>说完了好处，也来说说缺点。从我的实际使用来看，用FastCGI模式更适合生产环境的服务器。但对于开发用机器来说就不太合适。因为当使用 Zend Studio调试程序时，由于 FastCGI会认为PHP进程超时，从而在页面返回 500错误。这一点让人非常恼火</p>\n</blockquote>\n<h1 id=\"模块模式\"><a href=\"#模块模式\" class=\"headerlink\" title=\"模块模式\"></a>模块模式</h1><p><img src=\"http://o9c1bfnxp.bkt.clouddn.com/2016-07-PHP2.jpg\" alt=\"lamp工作方式\">  </p>\n<blockquote>\n<p>模块模式是以mod_php5模块的形式集成，此时mod_php5模块的作用是接收Apache传递过来的PHP文件请求，并处理这些请求，然后将处理后的结果返回给Apache。如果我们在Apache启动前在其配置文件中配置好了PHP模块（mod_php5）， PHP模块通过注册apache2的ap_hook_post_config挂钩，在Apache启动的时候启动此模块以接受PHP文件的请求。<br>除了这种启动时的加载方式，Apache的模块可以在运行的时候动态装载，这意味着对服务器可以进行功能扩展而不需要重新对源代码进行编译，甚至根本不需要停止服务器。我们所需要做的仅仅是给服务器发送信号HUP或者AP_SIG_GRACEFUL通知服务器重新载入模块。但是在动态加载之前，我们需要将模块编译成为动态链接库。此时的动态加载就是加载动态链接库。 Apache中对动态链接库的处理是通过模块mod_so来完成的，因此mod_so模块不能被动态加载，它只能被静态编译进Apache的核心。这意味着它是随着Apache一起启动的。</p>\n<p>Apache是如何加载模块的呢？我们以前面提到的mod_php5模块为例。首先我们需要在Apache的配置文件httpd.conf中添加一行：</p>\n<p>该运行模式是我们以前在windows环境下使用apache服务器经常使用的，而在模块化(DLL)中，PHP是与Web服务器一起启动并运行的。（是apache在CGI的基础上进行的一种扩展，加快PHP的运行效率）LoadModule php5_module modules/mod_php5.so 这里我们使用了LoadModule命令，该命令的第一个参数是模块的名称，名称可以在模块实现的源码中找到。第二个选项是该模块所处的路径。如果需要在服务器运行时加载模块，可以通过发送信号HUP或者AP_SIG_GRACEFUL给服务器，一旦接受到该信号，Apache将重新装载模块，而不需要重新启动服务器。</p>\n</blockquote>"},{"title":"ansible教程","abbrlink":"d2b5ca2e","date":"2016-07-03T08:02:32.000Z","_content":"# ansible简介 #\nansible是新出现的 自动化 运维工具 ， 基于Python研发 。 糅合了众多老牌运维工具的优点实现了批量操作系统配置、批量程序的部署、批量运行命令等功能。 仅需在管理工作站上安装 ansible 程序配置被管控主机的 IP 信息，被管控的主机无客户端。 ansible 应用程序存在于 epel( 第三方社区 ) 源，依赖于很多 python 组件\n<!-- more -->\n# ansible 特性 #\n\n- 模块化 设计 ，调用特定的模块来完成特定任务 ，本身是核心组件，短小精悍 ；\n \n- 基于Python语言实现，由Paramiko (python 的一个可并发连接 ssh 主机功能库 ) , PyYAML和Jinja2 ( 模板化 ) 三个关键模块实现；\n \n- 部署简单，agentless 无客户端工具；\n \n- 主从模式 工作；\n \n- 支持自定义模块 功能；\n \n- 支持playbook 剧本，连续任务按先后设置顺序完成；\n \n- 期望每个命令具有 幂等性：\n\n# ansible 架构 #\n\n- ansible core ： ansible 自身核心模块\n \n- host inventory： 主机库，定义可管控的主机列表\n \n- connection plugins： 连接插件，一般默认基于 ssh 协议连接\n \n- modules：core modules ( 自带模块 ) 、 custom modules ( 自定义模块 )\n \n- playbooks ：剧本，按照所设定编排的顺序执行完成安排任务\n\n![ansible架构图](http://o9c1bfnxp.bkt.clouddn.com/2016-07-03-ansible-jiagou.png)\n\n# ansible的基本使用 #\n>安装软件yum install ansible -y # 对应的软件在 epel 仓库中也可自己手动编译  \n源码地址 https://pypi.python.org/packages/source/a/ansible/ansible-1.5.tar.gz \n\n\n\n\n![ansible的配置文件](http://o9c1bfnxp.bkt.clouddn.com/2016-07-03-ansible2.png)\n\n```bash\n定义Host Inventory  \n# vim /etc/ansible/hosts  \n[webhosts]  \n172.16.10.22 ansible_ssh_user=root ansible_ssh_pass=guoting \n172.16.10.33 ansible_ssh_user=root ansible_ssh_pass=guoting \n解释  \n#ansible_ssh_user=root 是ssh登陆用户  \n#ansible_ssh_pass=guoting 是ssh登陆密码3、测试各个模块  \n# 注意每个模块的用法可以使用 ansible-doc MOD 来查看例如ansible-doc copy  \n   \nansible命令最常用的用法  \nansible <Host-partten> -m MOE -a 'MOD_ARV'所支持的模块可以使用ansible-doc -l来查看 \n```\n\n## ansible示例 ##\n\n### 1、查看时间信息。command、shell模块 ##\n![演示1](http://o9c1bfnxp.bkt.clouddn.com/2016-07-03-ansible3.png)\n\n\n### 2、在控制端添加添加用户。user模块 ##\n\n![](http://o9c1bfnxp.bkt.clouddn.com/2016-07-03-ansible-useradd.png)\n\n### 3、实现ssh秘钥认证。shell、copy模块 ##\n\n![](http://o9c1bfnxp.bkt.clouddn.com/2016-07-03-ansible-ssh.png)\n\n此时就可以实现基于ssh秘钥通信了此时/etc/ansible/hosts可以修改如下\n\n```\n###### /etc/ansible/hosts  \n[webhosts]  \n172.16.10.22  \n172.16.10.33 \n```\n![](http://o9c1bfnxp.bkt.clouddn.com/2016-07-03-ansible-host.png)\n\n### 4、安装软件和启动服务。yum、service模块 ###\n\n![](http://o9c1bfnxp.bkt.clouddn.com/2016-07-03-ansible-yum.png)\n\n![](http://o9c1bfnxp.bkt.clouddn.com/2016-07-03-ansible-yum2.png)\n\n### 5、支持管道的命令。raw模块，类似于shell模块 ###\n![](http://o9c1bfnxp.bkt.clouddn.com/2016-07-03-ansible-raw.jpg)\n\n# YAML语言介绍 #\n## YAML简介 ##\n```\nYAML是一个可读性高的用来表达资料序列的格式。YAML参考了其他多种语言包括XML、C语言、Python、Perl以及电子邮件格式RFC2822等。Clark Evans在2001年在首次发表了这种语言另外Ingy dtNet与Oren Ben-Kiki也是这语言的共同设计者。  \nYAML Ain't Markup Language即YAML不是XML。不过在开发的这种语言时YAML的意思其实是\"Yet Another Markup Language\"仍是一种标记语言。\n其特性:  \n\tYAML的可读性好  \n\tYAML和脚本语言的交互性好  \n\tYAML使用实现语言的数据类型  \n\tYAML有一个一致的信息模型  \n\tYAML易于实现  \n\tYAML可以基于流来处理  \n\tYAML表达能力强扩展性好  \n   \n更多的内容及规范参见http://www.yaml.org。  \n   \n##########################YAML语法  \n   \nYAML的语法和其他高阶语言类似并且可以简单表达清单、散列表、标量等数据结构。其结构Structure通过空格来展示序列Sequence里的项用\"-\"来代表  \nMap里的键值对用\":\"分隔。YAML文件扩展名通常为.yaml或者.yml。下面是一个示例。  \n   \nname: John Smith  \nage: 41gender: Male  \nspouse:  \nname: Jane Smith  \nage: 37  \ngender: Female  \nchildren:  \n- name: Jimmy Smith  \nage: 17  \ngender: Male  \n- name: Jenny Smith  \nage 13  \ngender: Female  \n   \nYAML 2 个重要的结构组成部分list和directory  \n################################# list  \n   \n列表的所有元素均使用“-”打头例如  \n# A list of tasty fruits  \n- Apple  \n- Orange  \n- Strawberry  \n- Mango  \n   \n##############################dictionary  \n   \n字典通过key与valuef进行标识例如  \n---  \n# An employee record  \nname: Example Developer  \njob: Developer  \nskill: Elite  \n   \n也可以将key:value放置于{}中进行表示例如  \n---  \n# An employee record  \n{name: Example Developer, job: Developer, skill: Elite}  \n   \n多个映射关系组成一个字典一个列表可以包含多个字典。\n```\n\n### 2、ymal中的变量 ###\n```\n\n################################## 变量命名  \n变量名仅能由字母、数字和下划线组成且只能以字母开头。  \n   \n################################## facts  \nfacts是由正在通信的远程目标主机发回的信息这些信息被保存在ansible变量中。要获取指定的远程主机所支持的所有facts可使用如下命令进行  \n# ansible hostname -m setup 这个命令可以获得被监控端主机的各种信息将这些信息得到后保存到变量中。  \n   \n################################ 自定义变量  \n在 yaml 中可以使用vars关键字来定义变量  \nvars:  \nvar_name: value  \n   \n############################# 变量的引用  \n{{ var_name }}  \n   \n   \n########################### 特殊的变量迭代  \n当有需要重复性执行的任务时可以使用迭代机制。其使用格式为将需要迭代的内容定义为item变量引用并通过with_items语句来指明迭代的元素列表即可。  \n   \n#######################################示例  \n例如在被控端添加 2 个用户  \n   \n方式1一般做法  \n- name: add user testuser1  \nuser: name=testuser1 state=present groups=wheel \n- name: add user testuser2  \nuser: name=testuser2 state=present groups=wheel \n   \n方式2使用变量方式  \n- name: add several users  \nvars:  \nuser1: testuser1  \nuser2: testuser2  \nuser: name={{ user1 }} state=present groups=wheel \nuser: name={{ user2 }} state=present groups=wheel \n   \n方式3使用迭代方式  \n- name: add several users  \nuser: name={{ item }} state=present groups=wheel \nwith_items:   \n- testuser1   \n- testuser2  \n事实上with_items中可以使用元素还可为hashes例如  \n- name: add several users  \nuser: name={{ item.name }} state=present groups={{ item.groups }}  \nwith_items:  \n- { name: 'testuser1', groups: 'wheel' }  \n- { name: 'testuser2', groups: 'root' } \n```\n\n### 3、Inentory文件的格式 ###\n\n```\ninventory文件遵循INI文件风格中括号中的字符为组名。可以将同一个主机同时归并到多个不同的组中此外当如若目标主机使用了非默认的SSH端口还可以在主机名称之后使用冒号加端口号来标明。  \n   \n[webservers]  \nwww1.magedu.com:2222  \nwww2.magedu.com  \n[dbservers]  \ndb1.magedu.com  \ndb2.magedu.com  \ndb3.magedu.com  \n   \n如果主机名称遵循相似的命名模式还可以使用列表的方式标识各主机例如  \n[webservers]  \nwww[01:50].example.com  \n[databases]  \ndb-[a:f].example.com  \n   \n#################### 主机变量  \n可以在inventory中定义主机时为其添加主机变量以便于在playbook中使用。例如  \n[webservers]  \nwww1.magedu.com http_port=80 maxRequestsPerChild=808 \nwww2.magedu.com http_port=303 maxRequestsPerChild=909 \n   \n################### 组变量  \n组变量是指赋予给指定组内所有主机上的在playbook中可用的变量。例如  \n   \n[webservers]  \nwww1.magedu.com  \nwww2.magedu.com  \n   \n[webservers:vars]  \nntpntp_server=ntp.magedu.com  \nnfsnfs_server=nfs.magedu.com  \n   \n################## 组嵌套  \ninventory中组还可以包含其它的组并且也可以向组中的主机指定变量。不过这些变量只能在ansible-playbook中使用而ansible不支持。例如  \n   \n[apache]  \nhttpd1.magedu.com  \nhttpd2.magedu.com  \n   \n[nginx]  \nngx1.magedu.com  \nngx2.magedu.com  \n   \n[webservers:children]  \napache  \nnginx  \n   \n[webservers:vars]  \nntpntp_server=ntp.magedu.com  \n   \n######################### inventory参数  \n   \nansible基于ssh连接inventory中指定的远程主机时还可以通过参数指定其交互方式常用的参数如下所示  \nansible_ssh_host # 要连接的主机名  \nansible_ssh_port # 端口号默认是22  \nansible_ssh_user # ssh连接时默认使用的用户名  \nansible_ssh_pass # ssh连接时的密码  \nansible_sudo_pass # 使用sudo连接用户是的密码  \nansible_ssh_private_key_file # 秘钥文件如果不想使用ssh-agent管理时可以使用此选项  \nansible_shell_type # shell的类型默认sh  \n#########################################################################################  \nansible的循环机制还有更多的高级功能具体请参见官方文档http://docs.ansible.com/playbooks_loops.html。\n\n```\n\n### 4、playbooks\n\n```\nplaybook是由一个或多个“play”组成的列表。play的主要功能在于将事先归并为一组的主机装扮成事先通过ansible中的task定义好的角色。  \n从根本上来讲所谓task无非是调用ansible的一个module。将多个play组织在一个playbook中即可以让它们联同起来按事先编排的机制同唱一台大戏。  \n   \n###########################playbook基础组件  \n1、Hosts和Users  \n   \nplaybook中的每一个play的目的都是为了让某个或某些主机以某个指定的用户身份执行任务。  \nhosts用于指定要执行指定任务的主机其可以是一个或多个由冒号分隔主机组。  \nremote_user则用于指定远程主机上的执行任务的用户。  \n   \n不过remote_user也可用于各task中。也可以通过指定其通过sudo的方式在远程主机上执行任务其可用于play全局或某任务。  \n此外甚至可以在sudo时使用sudo_user指定sudo时切换的用户。  \n   \n- hosts: webnodes  \nremote_user: mageedu  \ntasks:  \n- name: test connection ping:  \nremote_user: mageedu sudo: yes  \n   \n2、任务列表和action  \nplay的主体部分是task list。task list中的各任务按次序逐个在hosts中指定的所有主机上执行即在所有主机上完成第一个任务后再开始第二个。  \n在运行自下而下某playbook时如果中途发生错误所有已执行任务都将回滚因此在更正playbook后重新执行一次即可。  \ntask的目的是使用指定的参数执行模块而在模块参数中可以使用变量。模块执行是幂等的这意味着多次执行是安全的因为其结果均一致。  \n每个task都应该有其name用于playbook的执行结果输出建议其内容尽可能清晰地描述任务执行步骤。如果未提供name则action的结果将用于输出。  \n   \n定义task的可以使用“action: module options”或“module: options”的格式推荐使用后者以实现向后兼容。  \n如果action一行的内容过多也中使用在行首使用几个空白字符进行换行。  \n   \ntasks:  \n- name: make sure apache is running  \nservice: name=httpd state=running \n   \n在众多模块中只有command和shell模块仅需要给定一个列表而无需使用“key=value”格式例如  \ntasks:  \n- name: disable selinux  \ncommand: /sbin/setenforce 0如果命令或脚本的退出码不为零可以使用如下方式替代  \ntasks:  \n- name: run this command and ignore the result  \nshell: /usr/bin/somecommand || /bin/true  \n或者使用ignore_errors来忽略错误信息  \ntasks:  \n- name: run this command and ignore the result  \nshell: /usr/bin/somecommand  \nignore_errors: True   \n   \n3、handlers  \n   \n用于当关注的资源发生变化时采取一定的操作。  \n   \n“notify”这个action可用于在每个play的最后被触发这样可以避免多次有改变发生时每次都执行指定的操作取而代之仅在所有的变化发生完成后一次性地执行指定操作。在notify中列出的操作称为handler也即notify中调用handler中定义的操作。  \n   \n- name: template configuration file  \ntemplate: src=template.j2 dest=/etc/foo.conf  \nnotify:  \n- restart memcached  \n- restart apache   \n   \nhandler是task列表这些task与前述的task并没有本质上的不同。  \n   \nhandlers:  \n- name: restart memcached  \nservice: name=memcached state=restarted \n- name: restart apache  \nservice: name=apache state=restarted \n```\n\n\n\n### 5、tags\n\n\n```\ntags用于让用户选择运行或路过playbook中的部分代码。ansible具有幂等性因此会自动跳过没有变化的部分即便如此有些代码为测试其确实没有发生变化的时间依然会非常地长。此时如果确信其没有变化就可以通过tags跳过此些代码片断。  \n   \n示例基于playbooks实现web服务的部署  \n1、提供好Inventory文件  \n# /etc/ansible/hosts基于秘钥认证  \n[webhosts]  \n172.16.10.22  \n172.16.10.33  \n   \n2、编辑 palybooks 剧本  \n# vim /root/web.yaml  \n- name: web service  \nremote_user: root  \nhosts: webhosts  \nvars:  \npackages: httpd  \ntasks:  \n- name: install httpd yum: name={{ packages }} state=present \ntags: install  \n- name: configuration httpd  \ncopy: src=/root/httpd.conf dest=/etc/httpd/conf/httpd.conf  \ntags: conf  \nnotify:  \n- restart httpd  \n- name: service httpd start  \nservice: name=httpd enabled=no state=started \ntags: start  \n- name: add centos and hadoop user  \nuser: name={{ item }} state=absent \ntags: adduser  \nwith_items:  \n- centos  \n- hadoop  \nhandlers:  \n- name: restart httpd  \nservice: name=httpd state=restarted \n   \n3、准备好配置文件  \n将web的配置放到指定目录 src=/root/httpd.conf  \n   \n4、开始部署  \nansible-playbooks /root/web.yml \n\n```\n\n### 结果示例 ###\n![结果](http://o9c1bfnxp.bkt.clouddn.com/2016-07-03-ansible-yaml1.png)\n\n### 查看端口 ###\n![端口](http://o9c1bfnxp.bkt.clouddn.com/2016-07-03-ansible-yaml1.png)\n\n### 此时如果配置文件发生变化 ###\n![](http://o9c1bfnxp.bkt.clouddn.com/2016-07-03-ansible-yaml2.png)\n\n### 至此基本使用配置完成 ###\n","source":"_posts/2016-07-03-ansible.md","raw":"---\ntitle: ansible教程\ncategories: 技术与干货\ntag: 技术与干货\nabbrlink: d2b5ca2e\ndate: 2016-07-03 16:02:32\n---\n# ansible简介 #\nansible是新出现的 自动化 运维工具 ， 基于Python研发 。 糅合了众多老牌运维工具的优点实现了批量操作系统配置、批量程序的部署、批量运行命令等功能。 仅需在管理工作站上安装 ansible 程序配置被管控主机的 IP 信息，被管控的主机无客户端。 ansible 应用程序存在于 epel( 第三方社区 ) 源，依赖于很多 python 组件\n<!-- more -->\n# ansible 特性 #\n\n- 模块化 设计 ，调用特定的模块来完成特定任务 ，本身是核心组件，短小精悍 ；\n \n- 基于Python语言实现，由Paramiko (python 的一个可并发连接 ssh 主机功能库 ) , PyYAML和Jinja2 ( 模板化 ) 三个关键模块实现；\n \n- 部署简单，agentless 无客户端工具；\n \n- 主从模式 工作；\n \n- 支持自定义模块 功能；\n \n- 支持playbook 剧本，连续任务按先后设置顺序完成；\n \n- 期望每个命令具有 幂等性：\n\n# ansible 架构 #\n\n- ansible core ： ansible 自身核心模块\n \n- host inventory： 主机库，定义可管控的主机列表\n \n- connection plugins： 连接插件，一般默认基于 ssh 协议连接\n \n- modules：core modules ( 自带模块 ) 、 custom modules ( 自定义模块 )\n \n- playbooks ：剧本，按照所设定编排的顺序执行完成安排任务\n\n![ansible架构图](http://o9c1bfnxp.bkt.clouddn.com/2016-07-03-ansible-jiagou.png)\n\n# ansible的基本使用 #\n>安装软件yum install ansible -y # 对应的软件在 epel 仓库中也可自己手动编译  \n源码地址 https://pypi.python.org/packages/source/a/ansible/ansible-1.5.tar.gz \n\n\n\n\n![ansible的配置文件](http://o9c1bfnxp.bkt.clouddn.com/2016-07-03-ansible2.png)\n\n```bash\n定义Host Inventory  \n# vim /etc/ansible/hosts  \n[webhosts]  \n172.16.10.22 ansible_ssh_user=root ansible_ssh_pass=guoting \n172.16.10.33 ansible_ssh_user=root ansible_ssh_pass=guoting \n解释  \n#ansible_ssh_user=root 是ssh登陆用户  \n#ansible_ssh_pass=guoting 是ssh登陆密码3、测试各个模块  \n# 注意每个模块的用法可以使用 ansible-doc MOD 来查看例如ansible-doc copy  \n   \nansible命令最常用的用法  \nansible <Host-partten> -m MOE -a 'MOD_ARV'所支持的模块可以使用ansible-doc -l来查看 \n```\n\n## ansible示例 ##\n\n### 1、查看时间信息。command、shell模块 ##\n![演示1](http://o9c1bfnxp.bkt.clouddn.com/2016-07-03-ansible3.png)\n\n\n### 2、在控制端添加添加用户。user模块 ##\n\n![](http://o9c1bfnxp.bkt.clouddn.com/2016-07-03-ansible-useradd.png)\n\n### 3、实现ssh秘钥认证。shell、copy模块 ##\n\n![](http://o9c1bfnxp.bkt.clouddn.com/2016-07-03-ansible-ssh.png)\n\n此时就可以实现基于ssh秘钥通信了此时/etc/ansible/hosts可以修改如下\n\n```\n###### /etc/ansible/hosts  \n[webhosts]  \n172.16.10.22  \n172.16.10.33 \n```\n![](http://o9c1bfnxp.bkt.clouddn.com/2016-07-03-ansible-host.png)\n\n### 4、安装软件和启动服务。yum、service模块 ###\n\n![](http://o9c1bfnxp.bkt.clouddn.com/2016-07-03-ansible-yum.png)\n\n![](http://o9c1bfnxp.bkt.clouddn.com/2016-07-03-ansible-yum2.png)\n\n### 5、支持管道的命令。raw模块，类似于shell模块 ###\n![](http://o9c1bfnxp.bkt.clouddn.com/2016-07-03-ansible-raw.jpg)\n\n# YAML语言介绍 #\n## YAML简介 ##\n```\nYAML是一个可读性高的用来表达资料序列的格式。YAML参考了其他多种语言包括XML、C语言、Python、Perl以及电子邮件格式RFC2822等。Clark Evans在2001年在首次发表了这种语言另外Ingy dtNet与Oren Ben-Kiki也是这语言的共同设计者。  \nYAML Ain't Markup Language即YAML不是XML。不过在开发的这种语言时YAML的意思其实是\"Yet Another Markup Language\"仍是一种标记语言。\n其特性:  \n\tYAML的可读性好  \n\tYAML和脚本语言的交互性好  \n\tYAML使用实现语言的数据类型  \n\tYAML有一个一致的信息模型  \n\tYAML易于实现  \n\tYAML可以基于流来处理  \n\tYAML表达能力强扩展性好  \n   \n更多的内容及规范参见http://www.yaml.org。  \n   \n##########################YAML语法  \n   \nYAML的语法和其他高阶语言类似并且可以简单表达清单、散列表、标量等数据结构。其结构Structure通过空格来展示序列Sequence里的项用\"-\"来代表  \nMap里的键值对用\":\"分隔。YAML文件扩展名通常为.yaml或者.yml。下面是一个示例。  \n   \nname: John Smith  \nage: 41gender: Male  \nspouse:  \nname: Jane Smith  \nage: 37  \ngender: Female  \nchildren:  \n- name: Jimmy Smith  \nage: 17  \ngender: Male  \n- name: Jenny Smith  \nage 13  \ngender: Female  \n   \nYAML 2 个重要的结构组成部分list和directory  \n################################# list  \n   \n列表的所有元素均使用“-”打头例如  \n# A list of tasty fruits  \n- Apple  \n- Orange  \n- Strawberry  \n- Mango  \n   \n##############################dictionary  \n   \n字典通过key与valuef进行标识例如  \n---  \n# An employee record  \nname: Example Developer  \njob: Developer  \nskill: Elite  \n   \n也可以将key:value放置于{}中进行表示例如  \n---  \n# An employee record  \n{name: Example Developer, job: Developer, skill: Elite}  \n   \n多个映射关系组成一个字典一个列表可以包含多个字典。\n```\n\n### 2、ymal中的变量 ###\n```\n\n################################## 变量命名  \n变量名仅能由字母、数字和下划线组成且只能以字母开头。  \n   \n################################## facts  \nfacts是由正在通信的远程目标主机发回的信息这些信息被保存在ansible变量中。要获取指定的远程主机所支持的所有facts可使用如下命令进行  \n# ansible hostname -m setup 这个命令可以获得被监控端主机的各种信息将这些信息得到后保存到变量中。  \n   \n################################ 自定义变量  \n在 yaml 中可以使用vars关键字来定义变量  \nvars:  \nvar_name: value  \n   \n############################# 变量的引用  \n{{ var_name }}  \n   \n   \n########################### 特殊的变量迭代  \n当有需要重复性执行的任务时可以使用迭代机制。其使用格式为将需要迭代的内容定义为item变量引用并通过with_items语句来指明迭代的元素列表即可。  \n   \n#######################################示例  \n例如在被控端添加 2 个用户  \n   \n方式1一般做法  \n- name: add user testuser1  \nuser: name=testuser1 state=present groups=wheel \n- name: add user testuser2  \nuser: name=testuser2 state=present groups=wheel \n   \n方式2使用变量方式  \n- name: add several users  \nvars:  \nuser1: testuser1  \nuser2: testuser2  \nuser: name={{ user1 }} state=present groups=wheel \nuser: name={{ user2 }} state=present groups=wheel \n   \n方式3使用迭代方式  \n- name: add several users  \nuser: name={{ item }} state=present groups=wheel \nwith_items:   \n- testuser1   \n- testuser2  \n事实上with_items中可以使用元素还可为hashes例如  \n- name: add several users  \nuser: name={{ item.name }} state=present groups={{ item.groups }}  \nwith_items:  \n- { name: 'testuser1', groups: 'wheel' }  \n- { name: 'testuser2', groups: 'root' } \n```\n\n### 3、Inentory文件的格式 ###\n\n```\ninventory文件遵循INI文件风格中括号中的字符为组名。可以将同一个主机同时归并到多个不同的组中此外当如若目标主机使用了非默认的SSH端口还可以在主机名称之后使用冒号加端口号来标明。  \n   \n[webservers]  \nwww1.magedu.com:2222  \nwww2.magedu.com  \n[dbservers]  \ndb1.magedu.com  \ndb2.magedu.com  \ndb3.magedu.com  \n   \n如果主机名称遵循相似的命名模式还可以使用列表的方式标识各主机例如  \n[webservers]  \nwww[01:50].example.com  \n[databases]  \ndb-[a:f].example.com  \n   \n#################### 主机变量  \n可以在inventory中定义主机时为其添加主机变量以便于在playbook中使用。例如  \n[webservers]  \nwww1.magedu.com http_port=80 maxRequestsPerChild=808 \nwww2.magedu.com http_port=303 maxRequestsPerChild=909 \n   \n################### 组变量  \n组变量是指赋予给指定组内所有主机上的在playbook中可用的变量。例如  \n   \n[webservers]  \nwww1.magedu.com  \nwww2.magedu.com  \n   \n[webservers:vars]  \nntpntp_server=ntp.magedu.com  \nnfsnfs_server=nfs.magedu.com  \n   \n################## 组嵌套  \ninventory中组还可以包含其它的组并且也可以向组中的主机指定变量。不过这些变量只能在ansible-playbook中使用而ansible不支持。例如  \n   \n[apache]  \nhttpd1.magedu.com  \nhttpd2.magedu.com  \n   \n[nginx]  \nngx1.magedu.com  \nngx2.magedu.com  \n   \n[webservers:children]  \napache  \nnginx  \n   \n[webservers:vars]  \nntpntp_server=ntp.magedu.com  \n   \n######################### inventory参数  \n   \nansible基于ssh连接inventory中指定的远程主机时还可以通过参数指定其交互方式常用的参数如下所示  \nansible_ssh_host # 要连接的主机名  \nansible_ssh_port # 端口号默认是22  \nansible_ssh_user # ssh连接时默认使用的用户名  \nansible_ssh_pass # ssh连接时的密码  \nansible_sudo_pass # 使用sudo连接用户是的密码  \nansible_ssh_private_key_file # 秘钥文件如果不想使用ssh-agent管理时可以使用此选项  \nansible_shell_type # shell的类型默认sh  \n#########################################################################################  \nansible的循环机制还有更多的高级功能具体请参见官方文档http://docs.ansible.com/playbooks_loops.html。\n\n```\n\n### 4、playbooks\n\n```\nplaybook是由一个或多个“play”组成的列表。play的主要功能在于将事先归并为一组的主机装扮成事先通过ansible中的task定义好的角色。  \n从根本上来讲所谓task无非是调用ansible的一个module。将多个play组织在一个playbook中即可以让它们联同起来按事先编排的机制同唱一台大戏。  \n   \n###########################playbook基础组件  \n1、Hosts和Users  \n   \nplaybook中的每一个play的目的都是为了让某个或某些主机以某个指定的用户身份执行任务。  \nhosts用于指定要执行指定任务的主机其可以是一个或多个由冒号分隔主机组。  \nremote_user则用于指定远程主机上的执行任务的用户。  \n   \n不过remote_user也可用于各task中。也可以通过指定其通过sudo的方式在远程主机上执行任务其可用于play全局或某任务。  \n此外甚至可以在sudo时使用sudo_user指定sudo时切换的用户。  \n   \n- hosts: webnodes  \nremote_user: mageedu  \ntasks:  \n- name: test connection ping:  \nremote_user: mageedu sudo: yes  \n   \n2、任务列表和action  \nplay的主体部分是task list。task list中的各任务按次序逐个在hosts中指定的所有主机上执行即在所有主机上完成第一个任务后再开始第二个。  \n在运行自下而下某playbook时如果中途发生错误所有已执行任务都将回滚因此在更正playbook后重新执行一次即可。  \ntask的目的是使用指定的参数执行模块而在模块参数中可以使用变量。模块执行是幂等的这意味着多次执行是安全的因为其结果均一致。  \n每个task都应该有其name用于playbook的执行结果输出建议其内容尽可能清晰地描述任务执行步骤。如果未提供name则action的结果将用于输出。  \n   \n定义task的可以使用“action: module options”或“module: options”的格式推荐使用后者以实现向后兼容。  \n如果action一行的内容过多也中使用在行首使用几个空白字符进行换行。  \n   \ntasks:  \n- name: make sure apache is running  \nservice: name=httpd state=running \n   \n在众多模块中只有command和shell模块仅需要给定一个列表而无需使用“key=value”格式例如  \ntasks:  \n- name: disable selinux  \ncommand: /sbin/setenforce 0如果命令或脚本的退出码不为零可以使用如下方式替代  \ntasks:  \n- name: run this command and ignore the result  \nshell: /usr/bin/somecommand || /bin/true  \n或者使用ignore_errors来忽略错误信息  \ntasks:  \n- name: run this command and ignore the result  \nshell: /usr/bin/somecommand  \nignore_errors: True   \n   \n3、handlers  \n   \n用于当关注的资源发生变化时采取一定的操作。  \n   \n“notify”这个action可用于在每个play的最后被触发这样可以避免多次有改变发生时每次都执行指定的操作取而代之仅在所有的变化发生完成后一次性地执行指定操作。在notify中列出的操作称为handler也即notify中调用handler中定义的操作。  \n   \n- name: template configuration file  \ntemplate: src=template.j2 dest=/etc/foo.conf  \nnotify:  \n- restart memcached  \n- restart apache   \n   \nhandler是task列表这些task与前述的task并没有本质上的不同。  \n   \nhandlers:  \n- name: restart memcached  \nservice: name=memcached state=restarted \n- name: restart apache  \nservice: name=apache state=restarted \n```\n\n\n\n### 5、tags\n\n\n```\ntags用于让用户选择运行或路过playbook中的部分代码。ansible具有幂等性因此会自动跳过没有变化的部分即便如此有些代码为测试其确实没有发生变化的时间依然会非常地长。此时如果确信其没有变化就可以通过tags跳过此些代码片断。  \n   \n示例基于playbooks实现web服务的部署  \n1、提供好Inventory文件  \n# /etc/ansible/hosts基于秘钥认证  \n[webhosts]  \n172.16.10.22  \n172.16.10.33  \n   \n2、编辑 palybooks 剧本  \n# vim /root/web.yaml  \n- name: web service  \nremote_user: root  \nhosts: webhosts  \nvars:  \npackages: httpd  \ntasks:  \n- name: install httpd yum: name={{ packages }} state=present \ntags: install  \n- name: configuration httpd  \ncopy: src=/root/httpd.conf dest=/etc/httpd/conf/httpd.conf  \ntags: conf  \nnotify:  \n- restart httpd  \n- name: service httpd start  \nservice: name=httpd enabled=no state=started \ntags: start  \n- name: add centos and hadoop user  \nuser: name={{ item }} state=absent \ntags: adduser  \nwith_items:  \n- centos  \n- hadoop  \nhandlers:  \n- name: restart httpd  \nservice: name=httpd state=restarted \n   \n3、准备好配置文件  \n将web的配置放到指定目录 src=/root/httpd.conf  \n   \n4、开始部署  \nansible-playbooks /root/web.yml \n\n```\n\n### 结果示例 ###\n![结果](http://o9c1bfnxp.bkt.clouddn.com/2016-07-03-ansible-yaml1.png)\n\n### 查看端口 ###\n![端口](http://o9c1bfnxp.bkt.clouddn.com/2016-07-03-ansible-yaml1.png)\n\n### 此时如果配置文件发生变化 ###\n![](http://o9c1bfnxp.bkt.clouddn.com/2016-07-03-ansible-yaml2.png)\n\n### 至此基本使用配置完成 ###\n","slug":"2016-07-03-ansible","published":1,"updated":"2017-02-14T13:42:45.402Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5mkehqy000tao9464c0a4io","content":"<h1 id=\"ansible简介\"><a href=\"#ansible简介\" class=\"headerlink\" title=\"ansible简介\"></a>ansible简介</h1><p>ansible是新出现的 自动化 运维工具 ， 基于Python研发 。 糅合了众多老牌运维工具的优点实现了批量操作系统配置、批量程序的部署、批量运行命令等功能。 仅需在管理工作站上安装 ansible 程序配置被管控主机的 IP 信息，被管控的主机无客户端。 ansible 应用程序存在于 epel( 第三方社区 ) 源，依赖于很多 python 组件<br><a id=\"more\"></a></p>\n<h1 id=\"ansible-特性\"><a href=\"#ansible-特性\" class=\"headerlink\" title=\"ansible 特性\"></a>ansible 特性</h1><ul>\n<li><p>模块化 设计 ，调用特定的模块来完成特定任务 ，本身是核心组件，短小精悍 ；</p>\n</li>\n<li><p>基于Python语言实现，由Paramiko (python 的一个可并发连接 ssh 主机功能库 ) , PyYAML和Jinja2 ( 模板化 ) 三个关键模块实现；</p>\n</li>\n<li><p>部署简单，agentless 无客户端工具；</p>\n</li>\n<li><p>主从模式 工作；</p>\n</li>\n<li><p>支持自定义模块 功能；</p>\n</li>\n<li><p>支持playbook 剧本，连续任务按先后设置顺序完成；</p>\n</li>\n<li><p>期望每个命令具有 幂等性：</p>\n</li>\n</ul>\n<h1 id=\"ansible-架构\"><a href=\"#ansible-架构\" class=\"headerlink\" title=\"ansible 架构\"></a>ansible 架构</h1><ul>\n<li><p>ansible core ： ansible 自身核心模块</p>\n</li>\n<li><p>host inventory： 主机库，定义可管控的主机列表</p>\n</li>\n<li><p>connection plugins： 连接插件，一般默认基于 ssh 协议连接</p>\n</li>\n<li><p>modules：core modules ( 自带模块 ) 、 custom modules ( 自定义模块 )</p>\n</li>\n<li><p>playbooks ：剧本，按照所设定编排的顺序执行完成安排任务</p>\n</li>\n</ul>\n<p><img src=\"http://o9c1bfnxp.bkt.clouddn.com/2016-07-03-ansible-jiagou.png\" alt=\"ansible架构图\"></p>\n<h1 id=\"ansible的基本使用\"><a href=\"#ansible的基本使用\" class=\"headerlink\" title=\"ansible的基本使用\"></a>ansible的基本使用</h1><blockquote>\n<p>安装软件yum install ansible -y # 对应的软件在 epel 仓库中也可自己手动编译<br>源码地址 <a href=\"https://pypi.python.org/packages/source/a/ansible/ansible-1.5.tar.gz\" target=\"_blank\" rel=\"external\">https://pypi.python.org/packages/source/a/ansible/ansible-1.5.tar.gz</a> </p>\n</blockquote>\n<p><img src=\"http://o9c1bfnxp.bkt.clouddn.com/2016-07-03-ansible2.png\" alt=\"ansible的配置文件\"></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">定义Host Inventory  </div><div class=\"line\"><span class=\"comment\"># vim /etc/ansible/hosts  </span></div><div class=\"line\">[webhosts]  </div><div class=\"line\">172.16.10.22 ansible_ssh_user=root ansible_ssh_pass=guoting </div><div class=\"line\">172.16.10.33 ansible_ssh_user=root ansible_ssh_pass=guoting </div><div class=\"line\">解释  </div><div class=\"line\"><span class=\"comment\">#ansible_ssh_user=root 是ssh登陆用户  </span></div><div class=\"line\"><span class=\"comment\">#ansible_ssh_pass=guoting 是ssh登陆密码3、测试各个模块  </span></div><div class=\"line\"><span class=\"comment\"># 注意每个模块的用法可以使用 ansible-doc MOD 来查看例如ansible-doc copy  </span></div><div class=\"line\">   </div><div class=\"line\">ansible命令最常用的用法  </div><div class=\"line\">ansible &lt;Host-partten&gt; -m MOE -a <span class=\"string\">'MOD_ARV'</span>所支持的模块可以使用ansible-doc -l来查看</div></pre></td></tr></table></figure>\n<h2 id=\"ansible示例\"><a href=\"#ansible示例\" class=\"headerlink\" title=\"ansible示例\"></a>ansible示例</h2><h3 id=\"1、查看时间信息。command、shell模块\"><a href=\"#1、查看时间信息。command、shell模块\" class=\"headerlink\" title=\"1、查看时间信息。command、shell模块\"></a>1、查看时间信息。command、shell模块</h3><p><img src=\"http://o9c1bfnxp.bkt.clouddn.com/2016-07-03-ansible3.png\" alt=\"演示1\"></p>\n<h3 id=\"2、在控制端添加添加用户。user模块\"><a href=\"#2、在控制端添加添加用户。user模块\" class=\"headerlink\" title=\"2、在控制端添加添加用户。user模块\"></a>2、在控制端添加添加用户。user模块</h3><p><img src=\"http://o9c1bfnxp.bkt.clouddn.com/2016-07-03-ansible-useradd.png\" alt=\"\"></p>\n<h3 id=\"3、实现ssh秘钥认证。shell、copy模块\"><a href=\"#3、实现ssh秘钥认证。shell、copy模块\" class=\"headerlink\" title=\"3、实现ssh秘钥认证。shell、copy模块\"></a>3、实现ssh秘钥认证。shell、copy模块</h3><p><img src=\"http://o9c1bfnxp.bkt.clouddn.com/2016-07-03-ansible-ssh.png\" alt=\"\"></p>\n<p>此时就可以实现基于ssh秘钥通信了此时/etc/ansible/hosts可以修改如下</p>\n<figure class=\"highlight clean\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">###### /etc/ansible/hosts  </div><div class=\"line\">[webhosts]  </div><div class=\"line\"><span class=\"number\">172.16</span><span class=\"number\">.10</span><span class=\"number\">.22</span>  </div><div class=\"line\"><span class=\"number\">172.16</span><span class=\"number\">.10</span><span class=\"number\">.33</span></div></pre></td></tr></table></figure>\n<p><img src=\"http://o9c1bfnxp.bkt.clouddn.com/2016-07-03-ansible-host.png\" alt=\"\"></p>\n<h3 id=\"4、安装软件和启动服务。yum、service模块\"><a href=\"#4、安装软件和启动服务。yum、service模块\" class=\"headerlink\" title=\"4、安装软件和启动服务。yum、service模块\"></a>4、安装软件和启动服务。yum、service模块</h3><p><img src=\"http://o9c1bfnxp.bkt.clouddn.com/2016-07-03-ansible-yum.png\" alt=\"\"></p>\n<p><img src=\"http://o9c1bfnxp.bkt.clouddn.com/2016-07-03-ansible-yum2.png\" alt=\"\"></p>\n<h3 id=\"5、支持管道的命令。raw模块，类似于shell模块\"><a href=\"#5、支持管道的命令。raw模块，类似于shell模块\" class=\"headerlink\" title=\"5、支持管道的命令。raw模块，类似于shell模块\"></a>5、支持管道的命令。raw模块，类似于shell模块</h3><p><img src=\"http://o9c1bfnxp.bkt.clouddn.com/2016-07-03-ansible-raw.jpg\" alt=\"\"></p>\n<h1 id=\"YAML语言介绍\"><a href=\"#YAML语言介绍\" class=\"headerlink\" title=\"YAML语言介绍\"></a>YAML语言介绍</h1><h2 id=\"YAML简介\"><a href=\"#YAML简介\" class=\"headerlink\" title=\"YAML简介\"></a>YAML简介</h2><figure class=\"highlight makefile\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div></pre></td><td class=\"code\"><pre><div class=\"line\">YAML是一个可读性高的用来表达资料序列的格式。YAML参考了其他多种语言包括XML、C语言、Python、Perl以及电子邮件格式RFC2822等。Clark Evans在2001年在首次发表了这种语言另外Ingy dtNet与Oren Ben-Kiki也是这语言的共同设计者。  </div><div class=\"line\">YAML Ain't Markup Language即YAML不是XML。不过在开发的这种语言时YAML的意思其实是<span class=\"string\">\"Yet Another Markup Language\"</span>仍是一种标记语言。</div><div class=\"line\"><span class=\"section\">其特性:  </span></div><div class=\"line\">\tYAML的可读性好  </div><div class=\"line\">\tYAML和脚本语言的交互性好  </div><div class=\"line\">\tYAML使用实现语言的数据类型  </div><div class=\"line\">\tYAML有一个一致的信息模型  </div><div class=\"line\">\tYAML易于实现  </div><div class=\"line\">\tYAML可以基于流来处理  </div><div class=\"line\">\tYAML表达能力强扩展性好  </div><div class=\"line\">   </div><div class=\"line\"><span class=\"section\">更多的内容及规范参见http://www.yaml.org。  </span></div><div class=\"line\">   </div><div class=\"line\"><span class=\"comment\">##########################YAML语法  </span></div><div class=\"line\">   </div><div class=\"line\">YAML的语法和其他高阶语言类似并且可以简单表达清单、散列表、标量等数据结构。其结构Structure通过空格来展示序列Sequence里的项用<span class=\"string\">\"-\"</span>来代表  </div><div class=\"line\"><span class=\"section\">Map里的键值对用\":\"分隔。YAML文件扩展名通常为.yaml或者.yml。下面是一个示例。  </span></div><div class=\"line\">   </div><div class=\"line\"><span class=\"section\">name: John Smith  </span></div><div class=\"line\"><span class=\"section\">age: 41gender: Male  </span></div><div class=\"line\"><span class=\"section\">spouse:  </span></div><div class=\"line\"><span class=\"section\">name: Jane Smith  </span></div><div class=\"line\"><span class=\"section\">age: 37  </span></div><div class=\"line\"><span class=\"section\">gender: Female  </span></div><div class=\"line\"><span class=\"section\">children:  </span></div><div class=\"line\">- name: Jimmy Smith  </div><div class=\"line\"><span class=\"section\">age: 17  </span></div><div class=\"line\"><span class=\"section\">gender: Male  </span></div><div class=\"line\">- name: Jenny Smith  </div><div class=\"line\">age 13  </div><div class=\"line\"><span class=\"section\">gender: Female  </span></div><div class=\"line\">   </div><div class=\"line\">YAML 2 个重要的结构组成部分list和directory  </div><div class=\"line\"><span class=\"comment\">################################# list  </span></div><div class=\"line\">   </div><div class=\"line\">列表的所有元素均使用“-”打头例如  </div><div class=\"line\"><span class=\"comment\"># A list of tasty fruits  </span></div><div class=\"line\">- Apple  </div><div class=\"line\">- Orange  </div><div class=\"line\">- Strawberry  </div><div class=\"line\">- Mango  </div><div class=\"line\">   </div><div class=\"line\"><span class=\"comment\">##############################dictionary  </span></div><div class=\"line\">   </div><div class=\"line\">字典通过key与valuef进行标识例如  </div><div class=\"line\">---  </div><div class=\"line\"><span class=\"comment\"># An employee record  </span></div><div class=\"line\"><span class=\"section\">name: Example Developer  </span></div><div class=\"line\"><span class=\"section\">job: Developer  </span></div><div class=\"line\"><span class=\"section\">skill: Elite  </span></div><div class=\"line\">   </div><div class=\"line\"><span class=\"section\">也可以将key:value放置于&#123;&#125;中进行表示例如  </span></div><div class=\"line\">---  </div><div class=\"line\"><span class=\"comment\"># An employee record  </span></div><div class=\"line\"><span class=\"section\">&#123;name: Example Developer, job: Developer, skill: Elite&#125;  </span></div><div class=\"line\">   </div><div class=\"line\">多个映射关系组成一个字典一个列表可以包含多个字典。</div></pre></td></tr></table></figure>\n<h3 id=\"2、ymal中的变量\"><a href=\"#2、ymal中的变量\" class=\"headerlink\" title=\"2、ymal中的变量\"></a>2、ymal中的变量</h3><figure class=\"highlight clean\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">################################## 变量命名  </div><div class=\"line\">变量名仅能由字母、数字和下划线组成且只能以字母开头。  </div><div class=\"line\">   </div><div class=\"line\">################################## facts  </div><div class=\"line\">facts是由正在通信的远程目标主机发回的信息这些信息被保存在ansible变量中。要获取指定的远程主机所支持的所有facts可使用如下命令进行  </div><div class=\"line\"># ansible hostname -m setup 这个命令可以获得被监控端主机的各种信息将这些信息得到后保存到变量中。  </div><div class=\"line\">   </div><div class=\"line\">################################ 自定义变量  </div><div class=\"line\">在 yaml 中可以使用vars关键字来定义变量  </div><div class=\"line\">vars:  </div><div class=\"line\">var_name: value  </div><div class=\"line\">   </div><div class=\"line\">############################# 变量的引用  </div><div class=\"line\">&#123;&#123; var_name &#125;&#125;  </div><div class=\"line\">   </div><div class=\"line\">   </div><div class=\"line\">########################### 特殊的变量迭代  </div><div class=\"line\">当有需要重复性执行的任务时可以使用迭代机制。其使用格式为将需要迭代的内容定义为item变量引用并通过with_items语句来指明迭代的元素列表即可。  </div><div class=\"line\">   </div><div class=\"line\">#######################################示例  </div><div class=\"line\">例如在被控端添加 <span class=\"number\">2</span> 个用户  </div><div class=\"line\">   </div><div class=\"line\">方式<span class=\"number\">1</span>一般做法  </div><div class=\"line\">- name: add user testuser1  </div><div class=\"line\">user: name=testuser1 state=present groups=wheel </div><div class=\"line\">- name: add user testuser2  </div><div class=\"line\">user: name=testuser2 state=present groups=wheel </div><div class=\"line\">   </div><div class=\"line\">方式<span class=\"number\">2</span>使用变量方式  </div><div class=\"line\">- name: add several users  </div><div class=\"line\">vars:  </div><div class=\"line\">user1: testuser1  </div><div class=\"line\">user2: testuser2  </div><div class=\"line\">user: name=&#123;&#123; user1 &#125;&#125; state=present groups=wheel </div><div class=\"line\">user: name=&#123;&#123; user2 &#125;&#125; state=present groups=wheel </div><div class=\"line\">   </div><div class=\"line\">方式<span class=\"number\">3</span>使用迭代方式  </div><div class=\"line\">- name: add several users  </div><div class=\"line\">user: name=&#123;&#123; item &#125;&#125; state=present groups=wheel </div><div class=\"line\">with_items:   </div><div class=\"line\">- testuser1   </div><div class=\"line\">- testuser2  </div><div class=\"line\">事实上with_items中可以使用元素还可为hashes例如  </div><div class=\"line\">- name: add several users  </div><div class=\"line\">user: name=&#123;&#123; item.name &#125;&#125; state=present groups=&#123;&#123; item.groups &#125;&#125;  </div><div class=\"line\">with_items:  </div><div class=\"line\">- &#123; name: <span class=\"string\">'testuser1'</span>, groups: <span class=\"string\">'wheel'</span> &#125;  </div><div class=\"line\">- &#123; name: <span class=\"string\">'testuser2'</span>, groups: <span class=\"string\">'root'</span> &#125;</div></pre></td></tr></table></figure>\n<h3 id=\"3、Inentory文件的格式\"><a href=\"#3、Inentory文件的格式\" class=\"headerlink\" title=\"3、Inentory文件的格式\"></a>3、Inentory文件的格式</h3><figure class=\"highlight clean\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div></pre></td><td class=\"code\"><pre><div class=\"line\">inventory文件遵循INI文件风格中括号中的字符为组名。可以将同一个主机同时归并到多个不同的组中此外当如若目标主机使用了非默认的SSH端口还可以在主机名称之后使用冒号加端口号来标明。  </div><div class=\"line\">   </div><div class=\"line\">[webservers]  </div><div class=\"line\">www1.magedu.com:<span class=\"number\">2222</span>  </div><div class=\"line\">www2.magedu.com  </div><div class=\"line\">[dbservers]  </div><div class=\"line\">db1.magedu.com  </div><div class=\"line\">db2.magedu.com  </div><div class=\"line\">db3.magedu.com  </div><div class=\"line\">   </div><div class=\"line\">如果主机名称遵循相似的命名模式还可以使用列表的方式标识各主机例如  </div><div class=\"line\">[webservers]  </div><div class=\"line\">www[<span class=\"number\">01</span>:<span class=\"number\">50</span>].example.com  </div><div class=\"line\">[databases]  </div><div class=\"line\">db-[a:f].example.com  </div><div class=\"line\">   </div><div class=\"line\">#################### 主机变量  </div><div class=\"line\">可以在inventory中定义主机时为其添加主机变量以便于在playbook中使用。例如  </div><div class=\"line\">[webservers]  </div><div class=\"line\">www1.magedu.com http_port=<span class=\"number\">80</span> maxRequestsPerChild=<span class=\"number\">808</span> </div><div class=\"line\">www2.magedu.com http_port=<span class=\"number\">303</span> maxRequestsPerChild=<span class=\"number\">909</span> </div><div class=\"line\">   </div><div class=\"line\">################### 组变量  </div><div class=\"line\">组变量是指赋予给指定组内所有主机上的在playbook中可用的变量。例如  </div><div class=\"line\">   </div><div class=\"line\">[webservers]  </div><div class=\"line\">www1.magedu.com  </div><div class=\"line\">www2.magedu.com  </div><div class=\"line\">   </div><div class=\"line\">[webservers:vars]  </div><div class=\"line\">ntpntp_server=ntp.magedu.com  </div><div class=\"line\">nfsnfs_server=nfs.magedu.com  </div><div class=\"line\">   </div><div class=\"line\">################## 组嵌套  </div><div class=\"line\">inventory中组还可以包含其它的组并且也可以向组中的主机指定变量。不过这些变量只能在ansible-playbook中使用而ansible不支持。例如  </div><div class=\"line\">   </div><div class=\"line\">[apache]  </div><div class=\"line\">httpd1.magedu.com  </div><div class=\"line\">httpd2.magedu.com  </div><div class=\"line\">   </div><div class=\"line\">[nginx]  </div><div class=\"line\">ngx1.magedu.com  </div><div class=\"line\">ngx2.magedu.com  </div><div class=\"line\">   </div><div class=\"line\">[webservers:children]  </div><div class=\"line\">apache  </div><div class=\"line\">nginx  </div><div class=\"line\">   </div><div class=\"line\">[webservers:vars]  </div><div class=\"line\">ntpntp_server=ntp.magedu.com  </div><div class=\"line\">   </div><div class=\"line\">######################### inventory参数  </div><div class=\"line\">   </div><div class=\"line\">ansible基于ssh连接inventory中指定的远程主机时还可以通过参数指定其交互方式常用的参数如下所示  </div><div class=\"line\">ansible_ssh_host # 要连接的主机名  </div><div class=\"line\">ansible_ssh_port # 端口号默认是<span class=\"number\">22</span>  </div><div class=\"line\">ansible_ssh_user # ssh连接时默认使用的用户名  </div><div class=\"line\">ansible_ssh_pass # ssh连接时的密码  </div><div class=\"line\">ansible_sudo_pass # 使用sudo连接用户是的密码  </div><div class=\"line\">ansible_ssh_private_key_file # 秘钥文件如果不想使用ssh-agent管理时可以使用此选项  </div><div class=\"line\">ansible_shell_type # shell的类型默认sh  </div><div class=\"line\">#########################################################################################  </div><div class=\"line\">ansible的循环机制还有更多的高级功能具体请参见官方文档http:<span class=\"comment\">//docs.ansible.com/playbooks_loops.html。</span></div></pre></td></tr></table></figure>\n<h3 id=\"4、playbooks\"><a href=\"#4、playbooks\" class=\"headerlink\" title=\"4、playbooks\"></a>4、playbooks</h3><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div></pre></td><td class=\"code\"><pre><div class=\"line\">playbook是由一个或多个“play”组成的列表。play的主要功能在于将事先归并为一组的主机装扮成事先通过ansible中的task定义好的角色。  </div><div class=\"line\">从根本上来讲所谓task无非是调用ansible的一个module。将多个play组织在一个playbook中即可以让它们联同起来按事先编排的机制同唱一台大戏。  </div><div class=\"line\">   </div><div class=\"line\"><span class=\"comment\">###########################playbook基础组件  </span></div><div class=\"line\">1、Hosts和Users  </div><div class=\"line\">   </div><div class=\"line\">playbook中的每一个play的目的都是为了让某个或某些主机以某个指定的用户身份执行任务。  </div><div class=\"line\">hosts用于指定要执行指定任务的主机其可以是一个或多个由冒号分隔主机组。  </div><div class=\"line\">remote_user则用于指定远程主机上的执行任务的用户。  </div><div class=\"line\">   </div><div class=\"line\">不过remote_user也可用于各task中。也可以通过指定其通过sudo的方式在远程主机上执行任务其可用于play全局或某任务。  </div><div class=\"line\">此外甚至可以在sudo时使用sudo_user指定sudo时切换的用户。  </div><div class=\"line\">   </div><div class=\"line\">- hosts: webnodes  </div><div class=\"line\">remote_user: mageedu  </div><div class=\"line\">tasks:  </div><div class=\"line\">- name: test<span class=\"built_in\"> connection </span>ping:  </div><div class=\"line\">remote_user: mageedu sudo: <span class=\"literal\">yes</span>  </div><div class=\"line\">   </div><div class=\"line\">2、任务列表和action  </div><div class=\"line\">play的主体部分是task list。task list中的各任务按次序逐个在hosts中指定的所有主机上执行即在所有主机上完成第一个任务后再开始第二个。  </div><div class=\"line\">在运行自下而下某playbook时如果中途发生错误所有已执行任务都将回滚因此在更正playbook后重新执行一次即可。  </div><div class=\"line\">task的目的是使用指定的参数执行模块而在模块参数中可以使用变量。模块执行是幂等的这意味着多次执行是安全的因为其结果均一致。  </div><div class=\"line\">每个task都应该有其name用于playbook的执行结果输出建议其内容尽可能清晰地描述任务执行步骤。如果未提供name则action的结果将用于输出。  </div><div class=\"line\">   </div><div class=\"line\">定义task的可以使用“action: module options”或“module: options”的格式推荐使用后者以实现向后兼容。  </div><div class=\"line\">如果action一行的内容过多也中使用在行首使用几个空白字符进行换行。  </div><div class=\"line\">   </div><div class=\"line\">tasks:  </div><div class=\"line\">- name: make sure apache is running  </div><div class=\"line\">service: <span class=\"attribute\">name</span>=httpd <span class=\"attribute\">state</span>=running </div><div class=\"line\">   </div><div class=\"line\">在众多模块中只有command和shell模块仅需要给定一个列表而无需使用“<span class=\"attribute\">key</span>=value”格式例如  </div><div class=\"line\">tasks:  </div><div class=\"line\">- name: <span class=\"builtin-name\">disable</span> selinux  </div><div class=\"line\">command: /sbin/setenforce 0如果命令或脚本的退出码不为零可以使用如下方式替代  </div><div class=\"line\">tasks:  </div><div class=\"line\">- name: <span class=\"builtin-name\">run</span> this command <span class=\"keyword\">and</span> ignore the result  </div><div class=\"line\">shell: /usr/bin/somecommand || /bin/<span class=\"literal\">true</span>  </div><div class=\"line\">或者使用ignore_errors来忽略错误信息  </div><div class=\"line\">tasks:  </div><div class=\"line\">- name: <span class=\"builtin-name\">run</span> this command <span class=\"keyword\">and</span> ignore the result  </div><div class=\"line\">shell: /usr/bin/somecommand  </div><div class=\"line\">ignore_errors: <span class=\"literal\">True</span>   </div><div class=\"line\">   </div><div class=\"line\">3、handlers  </div><div class=\"line\">   </div><div class=\"line\">用于当关注的资源发生变化时采取一定的操作。  </div><div class=\"line\">   </div><div class=\"line\">“notify”这个action可用于在每个play的最后被触发这样可以避免多次有改变发生时每次都执行指定的操作取而代之仅在所有的变化发生完成后一次性地执行指定操作。在notify中列出的操作称为handler也即notify中调用handler中定义的操作。  </div><div class=\"line\">   </div><div class=\"line\">- name: template configuration file  </div><div class=\"line\">template: <span class=\"attribute\">src</span>=template.j2 <span class=\"attribute\">dest</span>=/etc/foo.conf  </div><div class=\"line\">notify:  </div><div class=\"line\">- restart memcached  </div><div class=\"line\">- restart apache   </div><div class=\"line\">   </div><div class=\"line\">handler是task列表这些task与前述的task并没有本质上的不同。  </div><div class=\"line\">   </div><div class=\"line\">handlers:  </div><div class=\"line\">- name: restart memcached  </div><div class=\"line\">service: <span class=\"attribute\">name</span>=memcached <span class=\"attribute\">state</span>=restarted </div><div class=\"line\">- name: restart apache  </div><div class=\"line\">service: <span class=\"attribute\">name</span>=apache <span class=\"attribute\">state</span>=restarted</div></pre></td></tr></table></figure>\n<h3 id=\"5、tags\"><a href=\"#5、tags\" class=\"headerlink\" title=\"5、tags\"></a>5、tags</h3><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div></pre></td><td class=\"code\"><pre><div class=\"line\">tags用于让用户选择运行或路过playbook中的部分代码。ansible具有幂等性因此会自动跳过没有变化的部分即便如此有些代码为测试其确实没有发生变化的时间依然会非常地长。此时如果确信其没有变化就可以通过tags跳过此些代码片断。  </div><div class=\"line\">   </div><div class=\"line\">示例基于playbooks实现web服务的部署  </div><div class=\"line\">1、提供好Inventory文件  </div><div class=\"line\"><span class=\"comment\"># /etc/ansible/hosts基于秘钥认证  </span></div><div class=\"line\">[webhosts]  </div><div class=\"line\">172.16.10.22  </div><div class=\"line\">172.16.10.33  </div><div class=\"line\">   </div><div class=\"line\">2、编辑 palybooks 剧本  </div><div class=\"line\"><span class=\"comment\"># vim /root/web.yaml  </span></div><div class=\"line\">- name: web<span class=\"built_in\"> service </span> </div><div class=\"line\">remote_user: root  </div><div class=\"line\">hosts: webhosts  </div><div class=\"line\">vars:  </div><div class=\"line\">packages: httpd  </div><div class=\"line\">tasks:  </div><div class=\"line\">- name: install httpd yum: name=&#123;&#123; packages &#125;&#125; <span class=\"attribute\">state</span>=present </div><div class=\"line\">tags: install  </div><div class=\"line\">- name: configuration httpd  </div><div class=\"line\">copy: <span class=\"attribute\">src</span>=/root/httpd.conf <span class=\"attribute\">dest</span>=/etc/httpd/conf/httpd.conf  </div><div class=\"line\">tags: conf  </div><div class=\"line\">notify:  </div><div class=\"line\">- restart httpd  </div><div class=\"line\">- name:<span class=\"built_in\"> service </span>httpd start  </div><div class=\"line\">service: <span class=\"attribute\">name</span>=httpd <span class=\"attribute\">enabled</span>=<span class=\"literal\">no</span> <span class=\"attribute\">state</span>=started </div><div class=\"line\">tags: start  </div><div class=\"line\">- name: <span class=\"builtin-name\">add</span> centos <span class=\"keyword\">and</span> hadoop<span class=\"built_in\"> user </span> </div><div class=\"line\">user: name=&#123;&#123; item &#125;&#125; <span class=\"attribute\">state</span>=absent </div><div class=\"line\">tags: adduser  </div><div class=\"line\">with_items:  </div><div class=\"line\">- centos  </div><div class=\"line\">- hadoop  </div><div class=\"line\">handlers:  </div><div class=\"line\">- name: restart httpd  </div><div class=\"line\">service: <span class=\"attribute\">name</span>=httpd <span class=\"attribute\">state</span>=restarted </div><div class=\"line\">   </div><div class=\"line\">3、准备好配置文件  </div><div class=\"line\">将web的配置放到指定目录 <span class=\"attribute\">src</span>=/root/httpd.conf  </div><div class=\"line\">   </div><div class=\"line\">4、开始部署  </div><div class=\"line\">ansible-playbooks /root/web.yml</div></pre></td></tr></table></figure>\n<h3 id=\"结果示例\"><a href=\"#结果示例\" class=\"headerlink\" title=\"结果示例\"></a>结果示例</h3><p><img src=\"http://o9c1bfnxp.bkt.clouddn.com/2016-07-03-ansible-yaml1.png\" alt=\"结果\"></p>\n<h3 id=\"查看端口\"><a href=\"#查看端口\" class=\"headerlink\" title=\"查看端口\"></a>查看端口</h3><p><img src=\"http://o9c1bfnxp.bkt.clouddn.com/2016-07-03-ansible-yaml1.png\" alt=\"端口\"></p>\n<h3 id=\"此时如果配置文件发生变化\"><a href=\"#此时如果配置文件发生变化\" class=\"headerlink\" title=\"此时如果配置文件发生变化\"></a>此时如果配置文件发生变化</h3><p><img src=\"http://o9c1bfnxp.bkt.clouddn.com/2016-07-03-ansible-yaml2.png\" alt=\"\"></p>\n<h3 id=\"至此基本使用配置完成\"><a href=\"#至此基本使用配置完成\" class=\"headerlink\" title=\"至此基本使用配置完成\"></a>至此基本使用配置完成</h3>","site":{"data":{}},"excerpt":"<h1 id=\"ansible简介\"><a href=\"#ansible简介\" class=\"headerlink\" title=\"ansible简介\"></a>ansible简介</h1><p>ansible是新出现的 自动化 运维工具 ， 基于Python研发 。 糅合了众多老牌运维工具的优点实现了批量操作系统配置、批量程序的部署、批量运行命令等功能。 仅需在管理工作站上安装 ansible 程序配置被管控主机的 IP 信息，被管控的主机无客户端。 ansible 应用程序存在于 epel( 第三方社区 ) 源，依赖于很多 python 组件<br>","more":"</p>\n<h1 id=\"ansible-特性\"><a href=\"#ansible-特性\" class=\"headerlink\" title=\"ansible 特性\"></a>ansible 特性</h1><ul>\n<li><p>模块化 设计 ，调用特定的模块来完成特定任务 ，本身是核心组件，短小精悍 ；</p>\n</li>\n<li><p>基于Python语言实现，由Paramiko (python 的一个可并发连接 ssh 主机功能库 ) , PyYAML和Jinja2 ( 模板化 ) 三个关键模块实现；</p>\n</li>\n<li><p>部署简单，agentless 无客户端工具；</p>\n</li>\n<li><p>主从模式 工作；</p>\n</li>\n<li><p>支持自定义模块 功能；</p>\n</li>\n<li><p>支持playbook 剧本，连续任务按先后设置顺序完成；</p>\n</li>\n<li><p>期望每个命令具有 幂等性：</p>\n</li>\n</ul>\n<h1 id=\"ansible-架构\"><a href=\"#ansible-架构\" class=\"headerlink\" title=\"ansible 架构\"></a>ansible 架构</h1><ul>\n<li><p>ansible core ： ansible 自身核心模块</p>\n</li>\n<li><p>host inventory： 主机库，定义可管控的主机列表</p>\n</li>\n<li><p>connection plugins： 连接插件，一般默认基于 ssh 协议连接</p>\n</li>\n<li><p>modules：core modules ( 自带模块 ) 、 custom modules ( 自定义模块 )</p>\n</li>\n<li><p>playbooks ：剧本，按照所设定编排的顺序执行完成安排任务</p>\n</li>\n</ul>\n<p><img src=\"http://o9c1bfnxp.bkt.clouddn.com/2016-07-03-ansible-jiagou.png\" alt=\"ansible架构图\"></p>\n<h1 id=\"ansible的基本使用\"><a href=\"#ansible的基本使用\" class=\"headerlink\" title=\"ansible的基本使用\"></a>ansible的基本使用</h1><blockquote>\n<p>安装软件yum install ansible -y # 对应的软件在 epel 仓库中也可自己手动编译<br>源码地址 <a href=\"https://pypi.python.org/packages/source/a/ansible/ansible-1.5.tar.gz\" target=\"_blank\" rel=\"external\">https://pypi.python.org/packages/source/a/ansible/ansible-1.5.tar.gz</a> </p>\n</blockquote>\n<p><img src=\"http://o9c1bfnxp.bkt.clouddn.com/2016-07-03-ansible2.png\" alt=\"ansible的配置文件\"></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">定义Host Inventory  </div><div class=\"line\"><span class=\"comment\"># vim /etc/ansible/hosts  </span></div><div class=\"line\">[webhosts]  </div><div class=\"line\">172.16.10.22 ansible_ssh_user=root ansible_ssh_pass=guoting </div><div class=\"line\">172.16.10.33 ansible_ssh_user=root ansible_ssh_pass=guoting </div><div class=\"line\">解释  </div><div class=\"line\"><span class=\"comment\">#ansible_ssh_user=root 是ssh登陆用户  </span></div><div class=\"line\"><span class=\"comment\">#ansible_ssh_pass=guoting 是ssh登陆密码3、测试各个模块  </span></div><div class=\"line\"><span class=\"comment\"># 注意每个模块的用法可以使用 ansible-doc MOD 来查看例如ansible-doc copy  </span></div><div class=\"line\">   </div><div class=\"line\">ansible命令最常用的用法  </div><div class=\"line\">ansible &lt;Host-partten&gt; -m MOE -a <span class=\"string\">'MOD_ARV'</span>所支持的模块可以使用ansible-doc -l来查看</div></pre></td></tr></table></figure>\n<h2 id=\"ansible示例\"><a href=\"#ansible示例\" class=\"headerlink\" title=\"ansible示例\"></a>ansible示例</h2><h3 id=\"1、查看时间信息。command、shell模块\"><a href=\"#1、查看时间信息。command、shell模块\" class=\"headerlink\" title=\"1、查看时间信息。command、shell模块\"></a>1、查看时间信息。command、shell模块</h3><p><img src=\"http://o9c1bfnxp.bkt.clouddn.com/2016-07-03-ansible3.png\" alt=\"演示1\"></p>\n<h3 id=\"2、在控制端添加添加用户。user模块\"><a href=\"#2、在控制端添加添加用户。user模块\" class=\"headerlink\" title=\"2、在控制端添加添加用户。user模块\"></a>2、在控制端添加添加用户。user模块</h3><p><img src=\"http://o9c1bfnxp.bkt.clouddn.com/2016-07-03-ansible-useradd.png\" alt=\"\"></p>\n<h3 id=\"3、实现ssh秘钥认证。shell、copy模块\"><a href=\"#3、实现ssh秘钥认证。shell、copy模块\" class=\"headerlink\" title=\"3、实现ssh秘钥认证。shell、copy模块\"></a>3、实现ssh秘钥认证。shell、copy模块</h3><p><img src=\"http://o9c1bfnxp.bkt.clouddn.com/2016-07-03-ansible-ssh.png\" alt=\"\"></p>\n<p>此时就可以实现基于ssh秘钥通信了此时/etc/ansible/hosts可以修改如下</p>\n<figure class=\"highlight clean\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">###### /etc/ansible/hosts  </div><div class=\"line\">[webhosts]  </div><div class=\"line\"><span class=\"number\">172.16</span><span class=\"number\">.10</span><span class=\"number\">.22</span>  </div><div class=\"line\"><span class=\"number\">172.16</span><span class=\"number\">.10</span><span class=\"number\">.33</span></div></pre></td></tr></table></figure>\n<p><img src=\"http://o9c1bfnxp.bkt.clouddn.com/2016-07-03-ansible-host.png\" alt=\"\"></p>\n<h3 id=\"4、安装软件和启动服务。yum、service模块\"><a href=\"#4、安装软件和启动服务。yum、service模块\" class=\"headerlink\" title=\"4、安装软件和启动服务。yum、service模块\"></a>4、安装软件和启动服务。yum、service模块</h3><p><img src=\"http://o9c1bfnxp.bkt.clouddn.com/2016-07-03-ansible-yum.png\" alt=\"\"></p>\n<p><img src=\"http://o9c1bfnxp.bkt.clouddn.com/2016-07-03-ansible-yum2.png\" alt=\"\"></p>\n<h3 id=\"5、支持管道的命令。raw模块，类似于shell模块\"><a href=\"#5、支持管道的命令。raw模块，类似于shell模块\" class=\"headerlink\" title=\"5、支持管道的命令。raw模块，类似于shell模块\"></a>5、支持管道的命令。raw模块，类似于shell模块</h3><p><img src=\"http://o9c1bfnxp.bkt.clouddn.com/2016-07-03-ansible-raw.jpg\" alt=\"\"></p>\n<h1 id=\"YAML语言介绍\"><a href=\"#YAML语言介绍\" class=\"headerlink\" title=\"YAML语言介绍\"></a>YAML语言介绍</h1><h2 id=\"YAML简介\"><a href=\"#YAML简介\" class=\"headerlink\" title=\"YAML简介\"></a>YAML简介</h2><figure class=\"highlight makefile\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div></pre></td><td class=\"code\"><pre><div class=\"line\">YAML是一个可读性高的用来表达资料序列的格式。YAML参考了其他多种语言包括XML、C语言、Python、Perl以及电子邮件格式RFC2822等。Clark Evans在2001年在首次发表了这种语言另外Ingy dtNet与Oren Ben-Kiki也是这语言的共同设计者。  </div><div class=\"line\">YAML Ain't Markup Language即YAML不是XML。不过在开发的这种语言时YAML的意思其实是<span class=\"string\">\"Yet Another Markup Language\"</span>仍是一种标记语言。</div><div class=\"line\"><span class=\"section\">其特性:  </span></div><div class=\"line\">\tYAML的可读性好  </div><div class=\"line\">\tYAML和脚本语言的交互性好  </div><div class=\"line\">\tYAML使用实现语言的数据类型  </div><div class=\"line\">\tYAML有一个一致的信息模型  </div><div class=\"line\">\tYAML易于实现  </div><div class=\"line\">\tYAML可以基于流来处理  </div><div class=\"line\">\tYAML表达能力强扩展性好  </div><div class=\"line\">   </div><div class=\"line\"><span class=\"section\">更多的内容及规范参见http://www.yaml.org。  </span></div><div class=\"line\">   </div><div class=\"line\"><span class=\"comment\">##########################YAML语法  </span></div><div class=\"line\">   </div><div class=\"line\">YAML的语法和其他高阶语言类似并且可以简单表达清单、散列表、标量等数据结构。其结构Structure通过空格来展示序列Sequence里的项用<span class=\"string\">\"-\"</span>来代表  </div><div class=\"line\"><span class=\"section\">Map里的键值对用\":\"分隔。YAML文件扩展名通常为.yaml或者.yml。下面是一个示例。  </span></div><div class=\"line\">   </div><div class=\"line\"><span class=\"section\">name: John Smith  </span></div><div class=\"line\"><span class=\"section\">age: 41gender: Male  </span></div><div class=\"line\"><span class=\"section\">spouse:  </span></div><div class=\"line\"><span class=\"section\">name: Jane Smith  </span></div><div class=\"line\"><span class=\"section\">age: 37  </span></div><div class=\"line\"><span class=\"section\">gender: Female  </span></div><div class=\"line\"><span class=\"section\">children:  </span></div><div class=\"line\">- name: Jimmy Smith  </div><div class=\"line\"><span class=\"section\">age: 17  </span></div><div class=\"line\"><span class=\"section\">gender: Male  </span></div><div class=\"line\">- name: Jenny Smith  </div><div class=\"line\">age 13  </div><div class=\"line\"><span class=\"section\">gender: Female  </span></div><div class=\"line\">   </div><div class=\"line\">YAML 2 个重要的结构组成部分list和directory  </div><div class=\"line\"><span class=\"comment\">################################# list  </span></div><div class=\"line\">   </div><div class=\"line\">列表的所有元素均使用“-”打头例如  </div><div class=\"line\"><span class=\"comment\"># A list of tasty fruits  </span></div><div class=\"line\">- Apple  </div><div class=\"line\">- Orange  </div><div class=\"line\">- Strawberry  </div><div class=\"line\">- Mango  </div><div class=\"line\">   </div><div class=\"line\"><span class=\"comment\">##############################dictionary  </span></div><div class=\"line\">   </div><div class=\"line\">字典通过key与valuef进行标识例如  </div><div class=\"line\">---  </div><div class=\"line\"><span class=\"comment\"># An employee record  </span></div><div class=\"line\"><span class=\"section\">name: Example Developer  </span></div><div class=\"line\"><span class=\"section\">job: Developer  </span></div><div class=\"line\"><span class=\"section\">skill: Elite  </span></div><div class=\"line\">   </div><div class=\"line\"><span class=\"section\">也可以将key:value放置于&#123;&#125;中进行表示例如  </span></div><div class=\"line\">---  </div><div class=\"line\"><span class=\"comment\"># An employee record  </span></div><div class=\"line\"><span class=\"section\">&#123;name: Example Developer, job: Developer, skill: Elite&#125;  </span></div><div class=\"line\">   </div><div class=\"line\">多个映射关系组成一个字典一个列表可以包含多个字典。</div></pre></td></tr></table></figure>\n<h3 id=\"2、ymal中的变量\"><a href=\"#2、ymal中的变量\" class=\"headerlink\" title=\"2、ymal中的变量\"></a>2、ymal中的变量</h3><figure class=\"highlight clean\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">################################## 变量命名  </div><div class=\"line\">变量名仅能由字母、数字和下划线组成且只能以字母开头。  </div><div class=\"line\">   </div><div class=\"line\">################################## facts  </div><div class=\"line\">facts是由正在通信的远程目标主机发回的信息这些信息被保存在ansible变量中。要获取指定的远程主机所支持的所有facts可使用如下命令进行  </div><div class=\"line\"># ansible hostname -m setup 这个命令可以获得被监控端主机的各种信息将这些信息得到后保存到变量中。  </div><div class=\"line\">   </div><div class=\"line\">################################ 自定义变量  </div><div class=\"line\">在 yaml 中可以使用vars关键字来定义变量  </div><div class=\"line\">vars:  </div><div class=\"line\">var_name: value  </div><div class=\"line\">   </div><div class=\"line\">############################# 变量的引用  </div><div class=\"line\">&#123;&#123; var_name &#125;&#125;  </div><div class=\"line\">   </div><div class=\"line\">   </div><div class=\"line\">########################### 特殊的变量迭代  </div><div class=\"line\">当有需要重复性执行的任务时可以使用迭代机制。其使用格式为将需要迭代的内容定义为item变量引用并通过with_items语句来指明迭代的元素列表即可。  </div><div class=\"line\">   </div><div class=\"line\">#######################################示例  </div><div class=\"line\">例如在被控端添加 <span class=\"number\">2</span> 个用户  </div><div class=\"line\">   </div><div class=\"line\">方式<span class=\"number\">1</span>一般做法  </div><div class=\"line\">- name: add user testuser1  </div><div class=\"line\">user: name=testuser1 state=present groups=wheel </div><div class=\"line\">- name: add user testuser2  </div><div class=\"line\">user: name=testuser2 state=present groups=wheel </div><div class=\"line\">   </div><div class=\"line\">方式<span class=\"number\">2</span>使用变量方式  </div><div class=\"line\">- name: add several users  </div><div class=\"line\">vars:  </div><div class=\"line\">user1: testuser1  </div><div class=\"line\">user2: testuser2  </div><div class=\"line\">user: name=&#123;&#123; user1 &#125;&#125; state=present groups=wheel </div><div class=\"line\">user: name=&#123;&#123; user2 &#125;&#125; state=present groups=wheel </div><div class=\"line\">   </div><div class=\"line\">方式<span class=\"number\">3</span>使用迭代方式  </div><div class=\"line\">- name: add several users  </div><div class=\"line\">user: name=&#123;&#123; item &#125;&#125; state=present groups=wheel </div><div class=\"line\">with_items:   </div><div class=\"line\">- testuser1   </div><div class=\"line\">- testuser2  </div><div class=\"line\">事实上with_items中可以使用元素还可为hashes例如  </div><div class=\"line\">- name: add several users  </div><div class=\"line\">user: name=&#123;&#123; item.name &#125;&#125; state=present groups=&#123;&#123; item.groups &#125;&#125;  </div><div class=\"line\">with_items:  </div><div class=\"line\">- &#123; name: <span class=\"string\">'testuser1'</span>, groups: <span class=\"string\">'wheel'</span> &#125;  </div><div class=\"line\">- &#123; name: <span class=\"string\">'testuser2'</span>, groups: <span class=\"string\">'root'</span> &#125;</div></pre></td></tr></table></figure>\n<h3 id=\"3、Inentory文件的格式\"><a href=\"#3、Inentory文件的格式\" class=\"headerlink\" title=\"3、Inentory文件的格式\"></a>3、Inentory文件的格式</h3><figure class=\"highlight clean\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div></pre></td><td class=\"code\"><pre><div class=\"line\">inventory文件遵循INI文件风格中括号中的字符为组名。可以将同一个主机同时归并到多个不同的组中此外当如若目标主机使用了非默认的SSH端口还可以在主机名称之后使用冒号加端口号来标明。  </div><div class=\"line\">   </div><div class=\"line\">[webservers]  </div><div class=\"line\">www1.magedu.com:<span class=\"number\">2222</span>  </div><div class=\"line\">www2.magedu.com  </div><div class=\"line\">[dbservers]  </div><div class=\"line\">db1.magedu.com  </div><div class=\"line\">db2.magedu.com  </div><div class=\"line\">db3.magedu.com  </div><div class=\"line\">   </div><div class=\"line\">如果主机名称遵循相似的命名模式还可以使用列表的方式标识各主机例如  </div><div class=\"line\">[webservers]  </div><div class=\"line\">www[<span class=\"number\">01</span>:<span class=\"number\">50</span>].example.com  </div><div class=\"line\">[databases]  </div><div class=\"line\">db-[a:f].example.com  </div><div class=\"line\">   </div><div class=\"line\">#################### 主机变量  </div><div class=\"line\">可以在inventory中定义主机时为其添加主机变量以便于在playbook中使用。例如  </div><div class=\"line\">[webservers]  </div><div class=\"line\">www1.magedu.com http_port=<span class=\"number\">80</span> maxRequestsPerChild=<span class=\"number\">808</span> </div><div class=\"line\">www2.magedu.com http_port=<span class=\"number\">303</span> maxRequestsPerChild=<span class=\"number\">909</span> </div><div class=\"line\">   </div><div class=\"line\">################### 组变量  </div><div class=\"line\">组变量是指赋予给指定组内所有主机上的在playbook中可用的变量。例如  </div><div class=\"line\">   </div><div class=\"line\">[webservers]  </div><div class=\"line\">www1.magedu.com  </div><div class=\"line\">www2.magedu.com  </div><div class=\"line\">   </div><div class=\"line\">[webservers:vars]  </div><div class=\"line\">ntpntp_server=ntp.magedu.com  </div><div class=\"line\">nfsnfs_server=nfs.magedu.com  </div><div class=\"line\">   </div><div class=\"line\">################## 组嵌套  </div><div class=\"line\">inventory中组还可以包含其它的组并且也可以向组中的主机指定变量。不过这些变量只能在ansible-playbook中使用而ansible不支持。例如  </div><div class=\"line\">   </div><div class=\"line\">[apache]  </div><div class=\"line\">httpd1.magedu.com  </div><div class=\"line\">httpd2.magedu.com  </div><div class=\"line\">   </div><div class=\"line\">[nginx]  </div><div class=\"line\">ngx1.magedu.com  </div><div class=\"line\">ngx2.magedu.com  </div><div class=\"line\">   </div><div class=\"line\">[webservers:children]  </div><div class=\"line\">apache  </div><div class=\"line\">nginx  </div><div class=\"line\">   </div><div class=\"line\">[webservers:vars]  </div><div class=\"line\">ntpntp_server=ntp.magedu.com  </div><div class=\"line\">   </div><div class=\"line\">######################### inventory参数  </div><div class=\"line\">   </div><div class=\"line\">ansible基于ssh连接inventory中指定的远程主机时还可以通过参数指定其交互方式常用的参数如下所示  </div><div class=\"line\">ansible_ssh_host # 要连接的主机名  </div><div class=\"line\">ansible_ssh_port # 端口号默认是<span class=\"number\">22</span>  </div><div class=\"line\">ansible_ssh_user # ssh连接时默认使用的用户名  </div><div class=\"line\">ansible_ssh_pass # ssh连接时的密码  </div><div class=\"line\">ansible_sudo_pass # 使用sudo连接用户是的密码  </div><div class=\"line\">ansible_ssh_private_key_file # 秘钥文件如果不想使用ssh-agent管理时可以使用此选项  </div><div class=\"line\">ansible_shell_type # shell的类型默认sh  </div><div class=\"line\">#########################################################################################  </div><div class=\"line\">ansible的循环机制还有更多的高级功能具体请参见官方文档http:<span class=\"comment\">//docs.ansible.com/playbooks_loops.html。</span></div></pre></td></tr></table></figure>\n<h3 id=\"4、playbooks\"><a href=\"#4、playbooks\" class=\"headerlink\" title=\"4、playbooks\"></a>4、playbooks</h3><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div></pre></td><td class=\"code\"><pre><div class=\"line\">playbook是由一个或多个“play”组成的列表。play的主要功能在于将事先归并为一组的主机装扮成事先通过ansible中的task定义好的角色。  </div><div class=\"line\">从根本上来讲所谓task无非是调用ansible的一个module。将多个play组织在一个playbook中即可以让它们联同起来按事先编排的机制同唱一台大戏。  </div><div class=\"line\">   </div><div class=\"line\"><span class=\"comment\">###########################playbook基础组件  </span></div><div class=\"line\">1、Hosts和Users  </div><div class=\"line\">   </div><div class=\"line\">playbook中的每一个play的目的都是为了让某个或某些主机以某个指定的用户身份执行任务。  </div><div class=\"line\">hosts用于指定要执行指定任务的主机其可以是一个或多个由冒号分隔主机组。  </div><div class=\"line\">remote_user则用于指定远程主机上的执行任务的用户。  </div><div class=\"line\">   </div><div class=\"line\">不过remote_user也可用于各task中。也可以通过指定其通过sudo的方式在远程主机上执行任务其可用于play全局或某任务。  </div><div class=\"line\">此外甚至可以在sudo时使用sudo_user指定sudo时切换的用户。  </div><div class=\"line\">   </div><div class=\"line\">- hosts: webnodes  </div><div class=\"line\">remote_user: mageedu  </div><div class=\"line\">tasks:  </div><div class=\"line\">- name: test<span class=\"built_in\"> connection </span>ping:  </div><div class=\"line\">remote_user: mageedu sudo: <span class=\"literal\">yes</span>  </div><div class=\"line\">   </div><div class=\"line\">2、任务列表和action  </div><div class=\"line\">play的主体部分是task list。task list中的各任务按次序逐个在hosts中指定的所有主机上执行即在所有主机上完成第一个任务后再开始第二个。  </div><div class=\"line\">在运行自下而下某playbook时如果中途发生错误所有已执行任务都将回滚因此在更正playbook后重新执行一次即可。  </div><div class=\"line\">task的目的是使用指定的参数执行模块而在模块参数中可以使用变量。模块执行是幂等的这意味着多次执行是安全的因为其结果均一致。  </div><div class=\"line\">每个task都应该有其name用于playbook的执行结果输出建议其内容尽可能清晰地描述任务执行步骤。如果未提供name则action的结果将用于输出。  </div><div class=\"line\">   </div><div class=\"line\">定义task的可以使用“action: module options”或“module: options”的格式推荐使用后者以实现向后兼容。  </div><div class=\"line\">如果action一行的内容过多也中使用在行首使用几个空白字符进行换行。  </div><div class=\"line\">   </div><div class=\"line\">tasks:  </div><div class=\"line\">- name: make sure apache is running  </div><div class=\"line\">service: <span class=\"attribute\">name</span>=httpd <span class=\"attribute\">state</span>=running </div><div class=\"line\">   </div><div class=\"line\">在众多模块中只有command和shell模块仅需要给定一个列表而无需使用“<span class=\"attribute\">key</span>=value”格式例如  </div><div class=\"line\">tasks:  </div><div class=\"line\">- name: <span class=\"builtin-name\">disable</span> selinux  </div><div class=\"line\">command: /sbin/setenforce 0如果命令或脚本的退出码不为零可以使用如下方式替代  </div><div class=\"line\">tasks:  </div><div class=\"line\">- name: <span class=\"builtin-name\">run</span> this command <span class=\"keyword\">and</span> ignore the result  </div><div class=\"line\">shell: /usr/bin/somecommand || /bin/<span class=\"literal\">true</span>  </div><div class=\"line\">或者使用ignore_errors来忽略错误信息  </div><div class=\"line\">tasks:  </div><div class=\"line\">- name: <span class=\"builtin-name\">run</span> this command <span class=\"keyword\">and</span> ignore the result  </div><div class=\"line\">shell: /usr/bin/somecommand  </div><div class=\"line\">ignore_errors: <span class=\"literal\">True</span>   </div><div class=\"line\">   </div><div class=\"line\">3、handlers  </div><div class=\"line\">   </div><div class=\"line\">用于当关注的资源发生变化时采取一定的操作。  </div><div class=\"line\">   </div><div class=\"line\">“notify”这个action可用于在每个play的最后被触发这样可以避免多次有改变发生时每次都执行指定的操作取而代之仅在所有的变化发生完成后一次性地执行指定操作。在notify中列出的操作称为handler也即notify中调用handler中定义的操作。  </div><div class=\"line\">   </div><div class=\"line\">- name: template configuration file  </div><div class=\"line\">template: <span class=\"attribute\">src</span>=template.j2 <span class=\"attribute\">dest</span>=/etc/foo.conf  </div><div class=\"line\">notify:  </div><div class=\"line\">- restart memcached  </div><div class=\"line\">- restart apache   </div><div class=\"line\">   </div><div class=\"line\">handler是task列表这些task与前述的task并没有本质上的不同。  </div><div class=\"line\">   </div><div class=\"line\">handlers:  </div><div class=\"line\">- name: restart memcached  </div><div class=\"line\">service: <span class=\"attribute\">name</span>=memcached <span class=\"attribute\">state</span>=restarted </div><div class=\"line\">- name: restart apache  </div><div class=\"line\">service: <span class=\"attribute\">name</span>=apache <span class=\"attribute\">state</span>=restarted</div></pre></td></tr></table></figure>\n<h3 id=\"5、tags\"><a href=\"#5、tags\" class=\"headerlink\" title=\"5、tags\"></a>5、tags</h3><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div></pre></td><td class=\"code\"><pre><div class=\"line\">tags用于让用户选择运行或路过playbook中的部分代码。ansible具有幂等性因此会自动跳过没有变化的部分即便如此有些代码为测试其确实没有发生变化的时间依然会非常地长。此时如果确信其没有变化就可以通过tags跳过此些代码片断。  </div><div class=\"line\">   </div><div class=\"line\">示例基于playbooks实现web服务的部署  </div><div class=\"line\">1、提供好Inventory文件  </div><div class=\"line\"><span class=\"comment\"># /etc/ansible/hosts基于秘钥认证  </span></div><div class=\"line\">[webhosts]  </div><div class=\"line\">172.16.10.22  </div><div class=\"line\">172.16.10.33  </div><div class=\"line\">   </div><div class=\"line\">2、编辑 palybooks 剧本  </div><div class=\"line\"><span class=\"comment\"># vim /root/web.yaml  </span></div><div class=\"line\">- name: web<span class=\"built_in\"> service </span> </div><div class=\"line\">remote_user: root  </div><div class=\"line\">hosts: webhosts  </div><div class=\"line\">vars:  </div><div class=\"line\">packages: httpd  </div><div class=\"line\">tasks:  </div><div class=\"line\">- name: install httpd yum: name=&#123;&#123; packages &#125;&#125; <span class=\"attribute\">state</span>=present </div><div class=\"line\">tags: install  </div><div class=\"line\">- name: configuration httpd  </div><div class=\"line\">copy: <span class=\"attribute\">src</span>=/root/httpd.conf <span class=\"attribute\">dest</span>=/etc/httpd/conf/httpd.conf  </div><div class=\"line\">tags: conf  </div><div class=\"line\">notify:  </div><div class=\"line\">- restart httpd  </div><div class=\"line\">- name:<span class=\"built_in\"> service </span>httpd start  </div><div class=\"line\">service: <span class=\"attribute\">name</span>=httpd <span class=\"attribute\">enabled</span>=<span class=\"literal\">no</span> <span class=\"attribute\">state</span>=started </div><div class=\"line\">tags: start  </div><div class=\"line\">- name: <span class=\"builtin-name\">add</span> centos <span class=\"keyword\">and</span> hadoop<span class=\"built_in\"> user </span> </div><div class=\"line\">user: name=&#123;&#123; item &#125;&#125; <span class=\"attribute\">state</span>=absent </div><div class=\"line\">tags: adduser  </div><div class=\"line\">with_items:  </div><div class=\"line\">- centos  </div><div class=\"line\">- hadoop  </div><div class=\"line\">handlers:  </div><div class=\"line\">- name: restart httpd  </div><div class=\"line\">service: <span class=\"attribute\">name</span>=httpd <span class=\"attribute\">state</span>=restarted </div><div class=\"line\">   </div><div class=\"line\">3、准备好配置文件  </div><div class=\"line\">将web的配置放到指定目录 <span class=\"attribute\">src</span>=/root/httpd.conf  </div><div class=\"line\">   </div><div class=\"line\">4、开始部署  </div><div class=\"line\">ansible-playbooks /root/web.yml</div></pre></td></tr></table></figure>\n<h3 id=\"结果示例\"><a href=\"#结果示例\" class=\"headerlink\" title=\"结果示例\"></a>结果示例</h3><p><img src=\"http://o9c1bfnxp.bkt.clouddn.com/2016-07-03-ansible-yaml1.png\" alt=\"结果\"></p>\n<h3 id=\"查看端口\"><a href=\"#查看端口\" class=\"headerlink\" title=\"查看端口\"></a>查看端口</h3><p><img src=\"http://o9c1bfnxp.bkt.clouddn.com/2016-07-03-ansible-yaml1.png\" alt=\"端口\"></p>\n<h3 id=\"此时如果配置文件发生变化\"><a href=\"#此时如果配置文件发生变化\" class=\"headerlink\" title=\"此时如果配置文件发生变化\"></a>此时如果配置文件发生变化</h3><p><img src=\"http://o9c1bfnxp.bkt.clouddn.com/2016-07-03-ansible-yaml2.png\" alt=\"\"></p>\n<h3 id=\"至此基本使用配置完成\"><a href=\"#至此基本使用配置完成\" class=\"headerlink\" title=\"至此基本使用配置完成\"></a>至此基本使用配置完成</h3>"},{"title":"AWK使用案例总结","abbrlink":"1e93adae","date":"2016-06-30T16:00:00.000Z","_content":"\n企业中常见AWK使用案例总结\n<!--more-->\n\n# 1、Nginx日志分析\n\n## 日志格式\n```\n'$remote_addr - $remote_user [$time_local] \"$request\" $status $body_bytes_sent \"$http_referer\" \"$http_user_agent\" \"$http_x_forwarded_for\"'\n```\n## 日志记录\n```\n27.189.231.39 - - [09/Apr/2016:17:21:23 +0800] \"GET /Public/index/images/icon_pre.png HTTP/1.1\" 200 44668 \"http://www.test.com/Public/index/css/global.css\" \"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/44.0.2403.157 Safari/537.36\" \"-\"\n```\n# 案例分享\n## 1）统计日志中访问最多的10个IP\n** 思路：对第一列进行去重，并输出出现的次数 **\n方法1：\n```\n$ awk '{a[$1]++}END{for(i in a)print a[i],i|\"sort -k1 -nr|head -n10\"}' access.log\n```\n方法2：\n```\n$ awk '{print $1}' access.log |sort |uniq -c |sort -k1 -nr |head -n10\n```\n\n> 说明：a[$1]++ 创建数组a，以第一列作为下标，使用运算符++作为数组元素，元素初始值为0。处理一个IP时，下标是IP，元素加1，处理第二个IP时，下标是IP，元素加1，如果这个IP已经存在，则元素再加1，也就是这个IP出现了两次，元素结果是2，以此类推。因此可以实现去重，统计出现次数。\n\n\n## 2）统计日志中访问大于100次的IP\n```\n方法1：\n$ awk '{a[$1]++}END{for(i in a){if(a[i]>100)print i,a[i]}}' access.log\n\n方法2：\n$ awk '{a[$1]++;if(a[$1]>100){b[$1]++}}END{for(i in b){print i,a[i]}}' access.log\n```\n> 说明：方法1是将结果保存a数组后，输出时判断符合要求的IP。方法2是将结果保存a数组时，并判断符合要求的IP放到b数组，最后打印b数组的IP。\n\n\n## 3）统计2016年4月9日一天内访问最多的10个IP\n** 思路：先过滤出这个时间段的日志，然后去重，统计出现次数 **\n```\n方法1：$ awk '$4>=\"[9/Apr/2016:00:00:01\" && $4<=\"[9/Apr/2016:23:59:59\" {a[$1]++}END{for(i in a)print a[i],i|\"sort -k1 -nr|head -n10\"}' access.log\n方法2：$ sed -n '/\\[9\\/Apr\\/2016:00:00:01/,/\\[9\\/Apr\\/2016:23:59:59/p' access.log |sort |uniq -c |sort -k1 -nr |head -n10  #前提开始时间与结束时间日志中必须存在\n```\n\n## 4）统计当前时间前一分钟的访问数\n** 思路：先获取当前时间前一分钟对应日志格式的时间，再匹配统计 **\n```\n$ date=$(date -d '-1 minute' +%d/%b/%Y:%H:%M);awk -vdate=$date '$0~date{c++}END{print c}' access.log\n$ date=$(date -d '-1 minute' +%d/%b/%Y:%H:%M);awk -vdate=$date '$4>=\"[\"date\":00\" && $4<=\"[\"date\":59\"{c++}END{print c}' access.log\n$ grep -c $(date -d '-1 minute' +%d/%b/%Y:%H:%M) access.log\n```\n> 说明：date +%d/%b/%Y:%H:%M --> 09/Apr/2016:01:55\n\n## 5）统计访问最多的前10个页面（$request）\n```\n$ awk '{a[$7]++}END{for(i in a)print a[i],i|\"sort -k1 -nr|head -n10\"}' access.log\n```\n## 6）统计每个URL访问内容的总大小（$body_bytes_sent）\n```\n$ awk '{a[$7]++;size[$7]+=$10}END{for(i in a)print a[i],size[i],i}' access.log\n```\n## 7）统计每个IP访问状态码数量（$status）\n```\n$ awk '{a[$1\" \"$9]++}END{for(i in a)print i,a[i]}' access.log\n```\n## 8）统计访问状态码为404的IP及出现次数\n```\n$ awk '{if($9~/404/)a[$1\" \"$9]++}END{for(i in a)print i,a[i]}' access.log\n```\n\n# 2、两个文件对比\n文件内容如下：\n```\n$ cat a\n    1\n    2\n    3\n    4\n    5\n    6\n$ cat b\n    3\n    4\n    5\n    6\n    7\n    8\n```\n\n## 1）找出相同记录\n```\n方法1：\n$ awk 'FNR==NR{a[$0];next}($0 in a)' a b\n3\n4\n5\n6\n```\n> 解释前，先看下FNR和NR区别：\n\n```\n$ awk '{print NR,$0}' a b\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 3\n8 4\n9 5\n10 6\n11 7\n12 8\n$ awk '{print FNR,$0}' a b\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n1 3\n2 4\n3 5\n4 6\n5 7\n6 8\n```\n\n> 可以看出NR是处理一行记录，编号就会加1，同时也可以看到awk将两个文件当成一个合并后的文件处理。\n而FNR则是处理一行记录，编号也会加1，但是，处理到第二个文件时，编号重新计数。\n说明：FNR和NR是内置变量。FNR==NR常用于对两个文件处理，这个例子可以理解为awk将两个文件当成一个文件处理。\n处理a文件时，FNR是等于NR的，条件为真，执行a[$0],next表达式，意思是将每条记录存放到a数组作为下标（无元素），next是跳出，类似于continue，不执行后面表达式。\n执行过程以此类推，直到处理b件时，FNR不等于NR（FNR重新计数是1，NR继续加1是7），条件为假，不执行后面a[$0],next表达式，直接执行($0 in a)表达式，这句意思是处理b文件第一条继续判断是否在a数组中，如果在则打印这条记录，以此类推。\n\n### 这样可能更好理解些：\n```\n$ awk 'FNR==NR{a[$0]}NR>FNR{if($0 in a)print $0}' a b\n```\n### 方法2：\n```\n$ awk 'FNR==NR{a[$0]=1;next}(a[$0])' a b   #小括号可以不加\n$ awk 'FNR==NR{a[$0]=1;next}(a[$0]==1)' a b\n$ awk 'FNR==NR{a[$0]=1;next}{if(a[$0]==1)print}' a b\n$ awk 'FNR==NR{a[$0]=1}FNR!=NR&&a[$0]==1' a b\n```\n> 说明：先要知道后面的a[$0]不是一个数组，而是通过下标（b文件每条记录）来访问a数组元素。如果a[b的一行记录]获取的a数组元素是1，则为真，也就是等于1，打印这条记录，否则获取不到元素，则为假。\n\n### 方法3：\n```\n$ awk 'ARGIND==1{a[$0]=1}ARGIND==2&&a[$0]==1' a b\n$ awk 'FILENAME==\"a\"{a[$0]=1}FILENAME==\"b\"&&a[$0]==1' a b\n```\n> 说明：ARGIND内置变量，处理文件标识符，第一个文件为1，第二个文件为2。FILENAME也是内置变量，表示输入文件的名字\n\n\n### 方法4：\n```\n$ sort a b |uniq -d\n```\n### 方法5：\n```\n$ grep -f a b\n```\n\n## 2）找不同记录（同上，取反）\n```\n$ awk 'FNR==NR{a[$0];next}!($0 in a)' a b\n$ awk 'FNR==NR{a[$0]=1;next}!a[$0]' a b\n$ awk 'ARGIND==1{a[$0]=1}ARGIND==2&&a[$0]!=1' a b\n$ awk 'FILENAME==\"a\"{a[$0]=1}FILENAME==\"b\"&&a[$0]!=1' a b\n7\n8\n方法2：$ sort a b |uniq -d\n方法3：$ grep -vf a b\n```\n\n# 3、合并两个文件\n## 1）将d文件性别合并到c文件\n```\n$ cat c\nzhangsan 100\nlisi 200\nwangwu 300\n$ cat d\nzhangsan man\nlisi woman\n```\n### 方法1：\n```\n$ awk  'FNR==NR{a[$1]=$0;next}{print a[$1],$2}' c d\nzhangsan 100  man\nlisi 200 woman\nwangwu 300 man\n```\n### 方法2：\n```\n$ awk  'FNR==NR{a[$1]=$0}NR>FNR{print a[$1],$2}' c d\n```\n> 说明：NR==FNR匹配第一个文件，NR>FNR匹配第二个文件，将$1为数组下标\n\n\n###方法3：\n```\n$ awk 'ARGIND==1{a[$1]=$0}ARGIND==2{print a[$1],$2}' c d\n```\n## 2）将a.txt文件中服务名称合并到一个IP中\n```\n$ cat a.txt\n192.168.2.100 : httpd\n192.168.2.100 : tomcat\n192.168.2.101 : httpd\n192.168.2.101 : postfix\n192.168.2.102 : mysqld\n192.168.2.102 : httpd\n```\n### 方法1：\n```\n$ awk -F: -vOFS=\":\" '{a[$1]=a[$1] $2}END{for(i in a)print i,a[i]}' a.txt\n```\n### 方法2:\n```\n$ awk -F: -vOFS=\":\" '{a[$1]=$2 a[$1]}END{for(i in a)print i,a[i]}' a.txt\n192.168.2.100 : httpd  tomcat\n192.168.2.101 : httpd  postfix\n192.168.2.102 : mysqld  httpd\n```\n> 说明：a[$1]=$2 第一列为下标，第二个列是元素，后面跟的a[$1]是通过第一列取a数组元素（服务名），结果是$1=$2 $2，并作为a数组元素。\n\n## 3）将第一行附加给下面每行开头\n```\n$ cat a.txt\nxiaoli\na 100\nb 110\nc 120\n```\n### 方法1：\n```\n$ awk 'NF==1{a=$0;next}{print a,$0}' a.txt\n```\n### 方法2：\n```\n$ awk 'NF==1{a=$0}NF!=1{print a,$0}' a.txt\nxiaoli  a 100\nxiaoli  b 110\nxiaoli  c 120\n```\n\n# 4、倒叙列打印文本\n```\n$ cat a.txt\nxiaoli   a 100\nxiaoli   b 110\nxiaoli   c 120\n$ awk '{for(i=NF;i>=1;i--){printf \"%s \",$i}print s}' a.txt\n100 a xiaoli\n110 b xiaoli\n120 c xiaoli\n$ awk '{for(i=NF;i>=1;i--)if(i==1)printf $i\"\\n\";else printf $i\" \"}' a.txt\n```\n> 说明：利用NF降序输出，把最后一个域作为第一个输出，然后自减，print s或print \"\"打印一个换行符\n\n# 5、从第二列打印到最后\n\n### 方法1：\n```\n$ awk '{for(i=2;i<=NF;i++)if(i==NF)printf $i\"\\n\";else printf $i\" \"}' a.txt\n```\n### 方法2：\n```\n$ awk '{$1=\"\"}{print $0}' a.txt\na 100\nb 110\nc 120\n```\n\n# 6、将c文件中第一列放到到d文件中的第三列\n```\n$ cat c\na\nb\nc\n$ cat d\n1 one\n2 two\n3 three\n```\n### 方法1：\n```\n$ awk 'FNR==NR{a[NR]=$0;next}{$3=a[FNR]}1' c d\n```\n> 说明：以NR编号为下标，元素是每行，当处理d文件时第三列等于获取a数据FNR（重新计数1-3）编号作为下标。\n\n### 方法2：\n```\n$ awk '{getline f<\"c\";print $0,f}' d\n1 one a\n2 two b\n3 three c\n```\n#### 1）替换第二列\n```\n$ awk '{getline f<\"c\";gsub($2,f,$2)}1' d\n1 a\n2 b\n3 c\n```\n#### 2）替换第二列的two\n```\n$ awk '{getline f<\"c\";gsub(\"two\",f,$2)}1' d\n1 one\n2 b\n3 three\n```\n\n# 7、数字求和\n\n### 方法1：\n```\n$ seq 1 100 |awk '{sum+=$0}END{print sum}'\n```\n### 方法2：\n```\n$ awk 'BEGIN{sum=0;i=1;while(i<=100){sum+=i;i++}print sum}'\n```\n### 方法3：\n```\n$ awk 'BEGIN{for(i=1;i<=100;i++)sum+=i}END{print sum}' /dev/null\n```\n### 方法4：\n```\n$ seq -s + 1 100 |bc\n```\n# 8、每隔三行添加一个换行符或内容\n```\n方法1：$ awk '$0;NR%3==0{printf \"\\n\"}' a\n\n方法2：$ awk '{print NR%3?$0:$0\"\\n\"}' a\n\n方法3：$ sed '4~3s/^/\\n/' a\n\n```\n\n# 9、字符串拆分\n### 方法1：\n```\n$ echo \"hello\" |awk -F '' '{for(i=1;i<=NF;i++)print $i}'\n$ echo \"hello\" |awk -F '' '{i=1;while(i<=NF){print $i;i++}}'\nh\ne\nl\nl\no\n```\n### 方法2：\n```\n$ echo \"hello\" |awk '{split($0,a,\"''\");for(i in a)print a[i]}'  #无序\nl\no\nh\ne\nl\n```\n\n# 10、统计字符串中每个字母出现的次数\n```\n$ echo a,b.c.a,b.a |tr \"[,. ]\" \"\\n\" |awk -F '' '{for(i=1;i<=NF;i++)a[$i]++}END{for(i in a)print i,a[i]|\"sort -k2 -rn\"}'\na 3\nb 2\nc 1\n```\n# 11、第一列排序\n```\n$ awk '{a[NR]=$1}END{s=asort(a,b);for(i=1;i<=s;i++){print i,b[i]}}' a.txt\n```\n> 说明：以每行编号作为下标值为$1，并将a数组值放到数组b，a下标丢弃，并将asort默认返回值（原a数组长度）赋值给s，使用for循环小于s的行号，从1开始到数组长度打印排序好的数组。\n\n\n# 12、删除重复行，顺序不变\n```\n$ awk '!a[$0]++' file\n```\n\n# 13、删除指定行\n### 删除第一行：\n```\n$ awk 'NR==1{next}{print $0}' file #$0可省略\n$ awk 'NR!=1{print}' file\n$ sed '1d' file\n$ sed -n '1!p' file\n```\n# 14、在指定行前后加一行\n### 在第二行前一行加txt：\n```\n$ awk 'NR==2{sub('/.*/',\"txt\\n&\")}{print}' a.txt\n$ sed'2s/.*/txt\\n&/' a.txt\n```\n### 在第二行后一行加txt：\n```\n$ awk 'NR==2{sub('/.*/',\"&\\ntxt\")}{print}' a.txt\n$ sed'2s/.*/&\\ntxt/' a.txt\n```\n# 15、通过IP获取网卡名\n```\n$ ifconfig |awk -F'[: ]' '/^eth/{nic=$1}/192.168.18.15/{print nic}'\n```\n# 16、浮点数运算（数字46保留小数点）\n```\n$ awk 'BEGIN{print 46/100}'\n$ awk 'BEGIN{printf \"%.2f\\n\",46/100}'\n$ echo 46|awk '{print $0/100}'\n$ echo 'scale=2;46/100' |bc|sed 's/^/0/'\n$ printf \"%.2f\\n\" $(echo \"scale=2;46/100\" |bc)\n\n结果：0.46\n```\n\n# 17、替换换行符为逗号\n```\n$ cat a.txt\n1\n2\n3\n替换后：1,2,3\n```\n### 方法1：\n```\n$ awk '{s=(s?s\",\"$0:$0)}END{print s}' a.txt\n```\n> 说明：三目运算符(a?b:c)，第一个s是变量，s?s\",\"$0:$0,第一次处理1时，s变量没有赋值初值是0，0为假，结果打印1，第二次处理2时，s值是1，为真，结果1,2。以此类推，小括号可以不写。\n\n### 方法2：\n```\n$ tr '\\n' ',' < a.txt\n```\n### 方法3：\n```\n$ sed ':a;N;s/\\n/,/;$!b a' a.txt\n```\n> 说明：第一个标签a，先读取第一行记录1追加到模式空间，此时模式空间内容是1$，执行$!b（$!最后一行不跳转，b是控制流跳转命令）跳转到a标签，继续读取第二行记录2追加到模式空间，因为使用N命令，每个记录以换行符（\\n）分割，此时模式空间内容是1\\n2$，执行将换行符替换逗号命令，继续跳转到a标签...\n\n\n### 方法4：\n```\n$ sed ':a;$!N;s/\\n/,/;t a' a.txt\n```\n> 说明：与上面类似，其中t是测试命令，当上一个命令（替换）执行成功才跳转。\n\n### 方法5：\n```\n$ awk '{if($0!=3)printf \"%s,\",$0;else print $0}' a.txt\n```\n> 说明：3是文本最后一个数\n### 方法6：\n```\nwhile read line; do\n    a+=($line)\ndone < a.txt\necho ${a[*]} |sed 's/ /,/g'\n```\n> 说明：将每行放到数组，然后替换\n\n# 18、把奇数换行符去掉\n```\n$ cat b.txt\nstring\nnumber\na\n1\nb\n2\n```\n### 方法1\n```\n$ awk 'ORS=NR%2?\"\\t\":\"\\n\"' b.txt  #把奇数行换行符去掉\n```\n### 方法2\n```\n$ xargs -n2 < a.txt  #将两个字段作为一行\nstring number\na 1\nb 2\n```\n# 19、费用统计\n```\n$ cat a.txt\n姓名             费用   数量\nzhangsan        8000    1\nzhangsan        5000    1\nlisi            1000    1\nlisi            2000    1\nwangwu          1500    1\nzhaoliu         6000    1\nzhaoliu         2000    1\nzhaoliu         3000    1\n```\n### 统计每人总费用、总数量：\n```\n$ awk '{name[$1]++;number[$1]+=$3;money[$1]+=$2}END{for(i in name)print i,number[i],money[i]}' a.txt\n\nzhaoliu 3 11000\nzhangsan 2 13000\nwangwu 1 1500\nlisi 2 3000\n```\n\n# 20、打印乘法口诀\n### 方法1：\n```\n$ awk 'BEGIN{for(n=0;n++<9;){for(i=0;i++<n;)printf i\"x\"n\"=\"i*n\" \";print \"\"}}'\n\n1x1=1\n1x2=2 2x2=4\n1x3=3 2x3=6 3x3=9\n1x4=4 2x4=8 3x4=12 4x4=16\n1x5=5 2x5=10 3x5=15 4x5=20 5x5=25\n1x6=6 2x6=12 3x6=18 4x6=24 5x6=30 6x6=36\n1x7=7 2x7=14 3x7=21 4x7=28 5x7=35 6x7=42 7x7=49\n1x8=8 2x8=16 3x8=24 4x8=32 5x8=40 6x8=48 7x8=56 8x8=64\n1x9=9 2x9=18 3x9=27 4x9=36 5x9=45 6x9=54 7x9=63 8x9=72 9x9=81\n```\n### 方法2：\n```\n#!/bin/bash\nfor ((i=1;i<=9;i++)); do\n   for ((j=1;j<=i;j++)); do\n     result=$(($i*$j))\n     #let \"result=i*j\"\n     echo -n \"$i*$j=$result \"\n   done\n   echo\ndone\n```\n# 21、只打印奇数或偶数行\n### 打印奇数行：\n#### 方法1：\n```\n$ seq 1 5 |awk 'i=!i'\n```\n> 说明：先知道对于数值运算，未定义变量初值为0，对于字符运算，未定义变量初值为空字符串。\n读取第一行记录，然后进行模式匹配，i是未定义变量，也就是i=!0，!取反意思。感叹号右边是个布尔值，0或空字符串为假，非0或非空字符串为真，!0就是真，因此i=1，条件为真打印第一条记录。\n没有print为什么会打印呢？因为模式后面没有动作，默认会打印整条记录。\n读取第二行记录，进行模式匹配，因为上次i的值由0变成了1，此时就是i=!1，条件为假不打印。\n读取第三行记录，因为上次条件为假，i恢复初值为0，继续打印。以此类推...\n可以看出，运算时并没有判断记录，而是利用布尔值真假判断。\n\n\n#### 方法2：\n```\n$ seq 1 5 |awk 'NR%2!=0'\n```\n\n#### 方法3：\n```\n$ seq 1 5 |sed -n '1~2p'\n```\n> 说明：步长，每隔一行打印一次\n\n#### 方法4：\n```\n$ seq 1 5 |sed -n 'p;n'\n```\n> 说明：先打印第一行，执行n命令读取当前行的下一行2，放到模式空间，后面再没有打印模式空间行操作，所以只保存不打印，同等方式继续打印第三行。\n\n### 结果\n```\n1\n3\n5\n```\n## 打印偶数行：\n```\n$ seq 1 5 |awk '!(i=!i)'\n$ seq 1 5 |awk 'NR%2==0'\n$ seq 1 5 |sed -n '0~2p'\n$ seq 1 5 |sed -n 'n;p'\n```\n> 说明：读取当前行的下一行2，放到模式空间，使用p命令打印模式空间的行，输出2。\n\n原文地址:[点我](http://lizhenliang.blog.51cto.com/7876557/1764025)\n\n","source":"_posts/2016-07-01-AWK使用案例总结.md","raw":"---\ntitle: AWK使用案例总结\ncategories: 技术与干货\ntag: shell\nabbrlink: 1e93adae\ndate: 2016-07-01 00:00:00\n---\n\n企业中常见AWK使用案例总结\n<!--more-->\n\n# 1、Nginx日志分析\n\n## 日志格式\n```\n'$remote_addr - $remote_user [$time_local] \"$request\" $status $body_bytes_sent \"$http_referer\" \"$http_user_agent\" \"$http_x_forwarded_for\"'\n```\n## 日志记录\n```\n27.189.231.39 - - [09/Apr/2016:17:21:23 +0800] \"GET /Public/index/images/icon_pre.png HTTP/1.1\" 200 44668 \"http://www.test.com/Public/index/css/global.css\" \"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/44.0.2403.157 Safari/537.36\" \"-\"\n```\n# 案例分享\n## 1）统计日志中访问最多的10个IP\n** 思路：对第一列进行去重，并输出出现的次数 **\n方法1：\n```\n$ awk '{a[$1]++}END{for(i in a)print a[i],i|\"sort -k1 -nr|head -n10\"}' access.log\n```\n方法2：\n```\n$ awk '{print $1}' access.log |sort |uniq -c |sort -k1 -nr |head -n10\n```\n\n> 说明：a[$1]++ 创建数组a，以第一列作为下标，使用运算符++作为数组元素，元素初始值为0。处理一个IP时，下标是IP，元素加1，处理第二个IP时，下标是IP，元素加1，如果这个IP已经存在，则元素再加1，也就是这个IP出现了两次，元素结果是2，以此类推。因此可以实现去重，统计出现次数。\n\n\n## 2）统计日志中访问大于100次的IP\n```\n方法1：\n$ awk '{a[$1]++}END{for(i in a){if(a[i]>100)print i,a[i]}}' access.log\n\n方法2：\n$ awk '{a[$1]++;if(a[$1]>100){b[$1]++}}END{for(i in b){print i,a[i]}}' access.log\n```\n> 说明：方法1是将结果保存a数组后，输出时判断符合要求的IP。方法2是将结果保存a数组时，并判断符合要求的IP放到b数组，最后打印b数组的IP。\n\n\n## 3）统计2016年4月9日一天内访问最多的10个IP\n** 思路：先过滤出这个时间段的日志，然后去重，统计出现次数 **\n```\n方法1：$ awk '$4>=\"[9/Apr/2016:00:00:01\" && $4<=\"[9/Apr/2016:23:59:59\" {a[$1]++}END{for(i in a)print a[i],i|\"sort -k1 -nr|head -n10\"}' access.log\n方法2：$ sed -n '/\\[9\\/Apr\\/2016:00:00:01/,/\\[9\\/Apr\\/2016:23:59:59/p' access.log |sort |uniq -c |sort -k1 -nr |head -n10  #前提开始时间与结束时间日志中必须存在\n```\n\n## 4）统计当前时间前一分钟的访问数\n** 思路：先获取当前时间前一分钟对应日志格式的时间，再匹配统计 **\n```\n$ date=$(date -d '-1 minute' +%d/%b/%Y:%H:%M);awk -vdate=$date '$0~date{c++}END{print c}' access.log\n$ date=$(date -d '-1 minute' +%d/%b/%Y:%H:%M);awk -vdate=$date '$4>=\"[\"date\":00\" && $4<=\"[\"date\":59\"{c++}END{print c}' access.log\n$ grep -c $(date -d '-1 minute' +%d/%b/%Y:%H:%M) access.log\n```\n> 说明：date +%d/%b/%Y:%H:%M --> 09/Apr/2016:01:55\n\n## 5）统计访问最多的前10个页面（$request）\n```\n$ awk '{a[$7]++}END{for(i in a)print a[i],i|\"sort -k1 -nr|head -n10\"}' access.log\n```\n## 6）统计每个URL访问内容的总大小（$body_bytes_sent）\n```\n$ awk '{a[$7]++;size[$7]+=$10}END{for(i in a)print a[i],size[i],i}' access.log\n```\n## 7）统计每个IP访问状态码数量（$status）\n```\n$ awk '{a[$1\" \"$9]++}END{for(i in a)print i,a[i]}' access.log\n```\n## 8）统计访问状态码为404的IP及出现次数\n```\n$ awk '{if($9~/404/)a[$1\" \"$9]++}END{for(i in a)print i,a[i]}' access.log\n```\n\n# 2、两个文件对比\n文件内容如下：\n```\n$ cat a\n    1\n    2\n    3\n    4\n    5\n    6\n$ cat b\n    3\n    4\n    5\n    6\n    7\n    8\n```\n\n## 1）找出相同记录\n```\n方法1：\n$ awk 'FNR==NR{a[$0];next}($0 in a)' a b\n3\n4\n5\n6\n```\n> 解释前，先看下FNR和NR区别：\n\n```\n$ awk '{print NR,$0}' a b\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 3\n8 4\n9 5\n10 6\n11 7\n12 8\n$ awk '{print FNR,$0}' a b\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n1 3\n2 4\n3 5\n4 6\n5 7\n6 8\n```\n\n> 可以看出NR是处理一行记录，编号就会加1，同时也可以看到awk将两个文件当成一个合并后的文件处理。\n而FNR则是处理一行记录，编号也会加1，但是，处理到第二个文件时，编号重新计数。\n说明：FNR和NR是内置变量。FNR==NR常用于对两个文件处理，这个例子可以理解为awk将两个文件当成一个文件处理。\n处理a文件时，FNR是等于NR的，条件为真，执行a[$0],next表达式，意思是将每条记录存放到a数组作为下标（无元素），next是跳出，类似于continue，不执行后面表达式。\n执行过程以此类推，直到处理b件时，FNR不等于NR（FNR重新计数是1，NR继续加1是7），条件为假，不执行后面a[$0],next表达式，直接执行($0 in a)表达式，这句意思是处理b文件第一条继续判断是否在a数组中，如果在则打印这条记录，以此类推。\n\n### 这样可能更好理解些：\n```\n$ awk 'FNR==NR{a[$0]}NR>FNR{if($0 in a)print $0}' a b\n```\n### 方法2：\n```\n$ awk 'FNR==NR{a[$0]=1;next}(a[$0])' a b   #小括号可以不加\n$ awk 'FNR==NR{a[$0]=1;next}(a[$0]==1)' a b\n$ awk 'FNR==NR{a[$0]=1;next}{if(a[$0]==1)print}' a b\n$ awk 'FNR==NR{a[$0]=1}FNR!=NR&&a[$0]==1' a b\n```\n> 说明：先要知道后面的a[$0]不是一个数组，而是通过下标（b文件每条记录）来访问a数组元素。如果a[b的一行记录]获取的a数组元素是1，则为真，也就是等于1，打印这条记录，否则获取不到元素，则为假。\n\n### 方法3：\n```\n$ awk 'ARGIND==1{a[$0]=1}ARGIND==2&&a[$0]==1' a b\n$ awk 'FILENAME==\"a\"{a[$0]=1}FILENAME==\"b\"&&a[$0]==1' a b\n```\n> 说明：ARGIND内置变量，处理文件标识符，第一个文件为1，第二个文件为2。FILENAME也是内置变量，表示输入文件的名字\n\n\n### 方法4：\n```\n$ sort a b |uniq -d\n```\n### 方法5：\n```\n$ grep -f a b\n```\n\n## 2）找不同记录（同上，取反）\n```\n$ awk 'FNR==NR{a[$0];next}!($0 in a)' a b\n$ awk 'FNR==NR{a[$0]=1;next}!a[$0]' a b\n$ awk 'ARGIND==1{a[$0]=1}ARGIND==2&&a[$0]!=1' a b\n$ awk 'FILENAME==\"a\"{a[$0]=1}FILENAME==\"b\"&&a[$0]!=1' a b\n7\n8\n方法2：$ sort a b |uniq -d\n方法3：$ grep -vf a b\n```\n\n# 3、合并两个文件\n## 1）将d文件性别合并到c文件\n```\n$ cat c\nzhangsan 100\nlisi 200\nwangwu 300\n$ cat d\nzhangsan man\nlisi woman\n```\n### 方法1：\n```\n$ awk  'FNR==NR{a[$1]=$0;next}{print a[$1],$2}' c d\nzhangsan 100  man\nlisi 200 woman\nwangwu 300 man\n```\n### 方法2：\n```\n$ awk  'FNR==NR{a[$1]=$0}NR>FNR{print a[$1],$2}' c d\n```\n> 说明：NR==FNR匹配第一个文件，NR>FNR匹配第二个文件，将$1为数组下标\n\n\n###方法3：\n```\n$ awk 'ARGIND==1{a[$1]=$0}ARGIND==2{print a[$1],$2}' c d\n```\n## 2）将a.txt文件中服务名称合并到一个IP中\n```\n$ cat a.txt\n192.168.2.100 : httpd\n192.168.2.100 : tomcat\n192.168.2.101 : httpd\n192.168.2.101 : postfix\n192.168.2.102 : mysqld\n192.168.2.102 : httpd\n```\n### 方法1：\n```\n$ awk -F: -vOFS=\":\" '{a[$1]=a[$1] $2}END{for(i in a)print i,a[i]}' a.txt\n```\n### 方法2:\n```\n$ awk -F: -vOFS=\":\" '{a[$1]=$2 a[$1]}END{for(i in a)print i,a[i]}' a.txt\n192.168.2.100 : httpd  tomcat\n192.168.2.101 : httpd  postfix\n192.168.2.102 : mysqld  httpd\n```\n> 说明：a[$1]=$2 第一列为下标，第二个列是元素，后面跟的a[$1]是通过第一列取a数组元素（服务名），结果是$1=$2 $2，并作为a数组元素。\n\n## 3）将第一行附加给下面每行开头\n```\n$ cat a.txt\nxiaoli\na 100\nb 110\nc 120\n```\n### 方法1：\n```\n$ awk 'NF==1{a=$0;next}{print a,$0}' a.txt\n```\n### 方法2：\n```\n$ awk 'NF==1{a=$0}NF!=1{print a,$0}' a.txt\nxiaoli  a 100\nxiaoli  b 110\nxiaoli  c 120\n```\n\n# 4、倒叙列打印文本\n```\n$ cat a.txt\nxiaoli   a 100\nxiaoli   b 110\nxiaoli   c 120\n$ awk '{for(i=NF;i>=1;i--){printf \"%s \",$i}print s}' a.txt\n100 a xiaoli\n110 b xiaoli\n120 c xiaoli\n$ awk '{for(i=NF;i>=1;i--)if(i==1)printf $i\"\\n\";else printf $i\" \"}' a.txt\n```\n> 说明：利用NF降序输出，把最后一个域作为第一个输出，然后自减，print s或print \"\"打印一个换行符\n\n# 5、从第二列打印到最后\n\n### 方法1：\n```\n$ awk '{for(i=2;i<=NF;i++)if(i==NF)printf $i\"\\n\";else printf $i\" \"}' a.txt\n```\n### 方法2：\n```\n$ awk '{$1=\"\"}{print $0}' a.txt\na 100\nb 110\nc 120\n```\n\n# 6、将c文件中第一列放到到d文件中的第三列\n```\n$ cat c\na\nb\nc\n$ cat d\n1 one\n2 two\n3 three\n```\n### 方法1：\n```\n$ awk 'FNR==NR{a[NR]=$0;next}{$3=a[FNR]}1' c d\n```\n> 说明：以NR编号为下标，元素是每行，当处理d文件时第三列等于获取a数据FNR（重新计数1-3）编号作为下标。\n\n### 方法2：\n```\n$ awk '{getline f<\"c\";print $0,f}' d\n1 one a\n2 two b\n3 three c\n```\n#### 1）替换第二列\n```\n$ awk '{getline f<\"c\";gsub($2,f,$2)}1' d\n1 a\n2 b\n3 c\n```\n#### 2）替换第二列的two\n```\n$ awk '{getline f<\"c\";gsub(\"two\",f,$2)}1' d\n1 one\n2 b\n3 three\n```\n\n# 7、数字求和\n\n### 方法1：\n```\n$ seq 1 100 |awk '{sum+=$0}END{print sum}'\n```\n### 方法2：\n```\n$ awk 'BEGIN{sum=0;i=1;while(i<=100){sum+=i;i++}print sum}'\n```\n### 方法3：\n```\n$ awk 'BEGIN{for(i=1;i<=100;i++)sum+=i}END{print sum}' /dev/null\n```\n### 方法4：\n```\n$ seq -s + 1 100 |bc\n```\n# 8、每隔三行添加一个换行符或内容\n```\n方法1：$ awk '$0;NR%3==0{printf \"\\n\"}' a\n\n方法2：$ awk '{print NR%3?$0:$0\"\\n\"}' a\n\n方法3：$ sed '4~3s/^/\\n/' a\n\n```\n\n# 9、字符串拆分\n### 方法1：\n```\n$ echo \"hello\" |awk -F '' '{for(i=1;i<=NF;i++)print $i}'\n$ echo \"hello\" |awk -F '' '{i=1;while(i<=NF){print $i;i++}}'\nh\ne\nl\nl\no\n```\n### 方法2：\n```\n$ echo \"hello\" |awk '{split($0,a,\"''\");for(i in a)print a[i]}'  #无序\nl\no\nh\ne\nl\n```\n\n# 10、统计字符串中每个字母出现的次数\n```\n$ echo a,b.c.a,b.a |tr \"[,. ]\" \"\\n\" |awk -F '' '{for(i=1;i<=NF;i++)a[$i]++}END{for(i in a)print i,a[i]|\"sort -k2 -rn\"}'\na 3\nb 2\nc 1\n```\n# 11、第一列排序\n```\n$ awk '{a[NR]=$1}END{s=asort(a,b);for(i=1;i<=s;i++){print i,b[i]}}' a.txt\n```\n> 说明：以每行编号作为下标值为$1，并将a数组值放到数组b，a下标丢弃，并将asort默认返回值（原a数组长度）赋值给s，使用for循环小于s的行号，从1开始到数组长度打印排序好的数组。\n\n\n# 12、删除重复行，顺序不变\n```\n$ awk '!a[$0]++' file\n```\n\n# 13、删除指定行\n### 删除第一行：\n```\n$ awk 'NR==1{next}{print $0}' file #$0可省略\n$ awk 'NR!=1{print}' file\n$ sed '1d' file\n$ sed -n '1!p' file\n```\n# 14、在指定行前后加一行\n### 在第二行前一行加txt：\n```\n$ awk 'NR==2{sub('/.*/',\"txt\\n&\")}{print}' a.txt\n$ sed'2s/.*/txt\\n&/' a.txt\n```\n### 在第二行后一行加txt：\n```\n$ awk 'NR==2{sub('/.*/',\"&\\ntxt\")}{print}' a.txt\n$ sed'2s/.*/&\\ntxt/' a.txt\n```\n# 15、通过IP获取网卡名\n```\n$ ifconfig |awk -F'[: ]' '/^eth/{nic=$1}/192.168.18.15/{print nic}'\n```\n# 16、浮点数运算（数字46保留小数点）\n```\n$ awk 'BEGIN{print 46/100}'\n$ awk 'BEGIN{printf \"%.2f\\n\",46/100}'\n$ echo 46|awk '{print $0/100}'\n$ echo 'scale=2;46/100' |bc|sed 's/^/0/'\n$ printf \"%.2f\\n\" $(echo \"scale=2;46/100\" |bc)\n\n结果：0.46\n```\n\n# 17、替换换行符为逗号\n```\n$ cat a.txt\n1\n2\n3\n替换后：1,2,3\n```\n### 方法1：\n```\n$ awk '{s=(s?s\",\"$0:$0)}END{print s}' a.txt\n```\n> 说明：三目运算符(a?b:c)，第一个s是变量，s?s\",\"$0:$0,第一次处理1时，s变量没有赋值初值是0，0为假，结果打印1，第二次处理2时，s值是1，为真，结果1,2。以此类推，小括号可以不写。\n\n### 方法2：\n```\n$ tr '\\n' ',' < a.txt\n```\n### 方法3：\n```\n$ sed ':a;N;s/\\n/,/;$!b a' a.txt\n```\n> 说明：第一个标签a，先读取第一行记录1追加到模式空间，此时模式空间内容是1$，执行$!b（$!最后一行不跳转，b是控制流跳转命令）跳转到a标签，继续读取第二行记录2追加到模式空间，因为使用N命令，每个记录以换行符（\\n）分割，此时模式空间内容是1\\n2$，执行将换行符替换逗号命令，继续跳转到a标签...\n\n\n### 方法4：\n```\n$ sed ':a;$!N;s/\\n/,/;t a' a.txt\n```\n> 说明：与上面类似，其中t是测试命令，当上一个命令（替换）执行成功才跳转。\n\n### 方法5：\n```\n$ awk '{if($0!=3)printf \"%s,\",$0;else print $0}' a.txt\n```\n> 说明：3是文本最后一个数\n### 方法6：\n```\nwhile read line; do\n    a+=($line)\ndone < a.txt\necho ${a[*]} |sed 's/ /,/g'\n```\n> 说明：将每行放到数组，然后替换\n\n# 18、把奇数换行符去掉\n```\n$ cat b.txt\nstring\nnumber\na\n1\nb\n2\n```\n### 方法1\n```\n$ awk 'ORS=NR%2?\"\\t\":\"\\n\"' b.txt  #把奇数行换行符去掉\n```\n### 方法2\n```\n$ xargs -n2 < a.txt  #将两个字段作为一行\nstring number\na 1\nb 2\n```\n# 19、费用统计\n```\n$ cat a.txt\n姓名             费用   数量\nzhangsan        8000    1\nzhangsan        5000    1\nlisi            1000    1\nlisi            2000    1\nwangwu          1500    1\nzhaoliu         6000    1\nzhaoliu         2000    1\nzhaoliu         3000    1\n```\n### 统计每人总费用、总数量：\n```\n$ awk '{name[$1]++;number[$1]+=$3;money[$1]+=$2}END{for(i in name)print i,number[i],money[i]}' a.txt\n\nzhaoliu 3 11000\nzhangsan 2 13000\nwangwu 1 1500\nlisi 2 3000\n```\n\n# 20、打印乘法口诀\n### 方法1：\n```\n$ awk 'BEGIN{for(n=0;n++<9;){for(i=0;i++<n;)printf i\"x\"n\"=\"i*n\" \";print \"\"}}'\n\n1x1=1\n1x2=2 2x2=4\n1x3=3 2x3=6 3x3=9\n1x4=4 2x4=8 3x4=12 4x4=16\n1x5=5 2x5=10 3x5=15 4x5=20 5x5=25\n1x6=6 2x6=12 3x6=18 4x6=24 5x6=30 6x6=36\n1x7=7 2x7=14 3x7=21 4x7=28 5x7=35 6x7=42 7x7=49\n1x8=8 2x8=16 3x8=24 4x8=32 5x8=40 6x8=48 7x8=56 8x8=64\n1x9=9 2x9=18 3x9=27 4x9=36 5x9=45 6x9=54 7x9=63 8x9=72 9x9=81\n```\n### 方法2：\n```\n#!/bin/bash\nfor ((i=1;i<=9;i++)); do\n   for ((j=1;j<=i;j++)); do\n     result=$(($i*$j))\n     #let \"result=i*j\"\n     echo -n \"$i*$j=$result \"\n   done\n   echo\ndone\n```\n# 21、只打印奇数或偶数行\n### 打印奇数行：\n#### 方法1：\n```\n$ seq 1 5 |awk 'i=!i'\n```\n> 说明：先知道对于数值运算，未定义变量初值为0，对于字符运算，未定义变量初值为空字符串。\n读取第一行记录，然后进行模式匹配，i是未定义变量，也就是i=!0，!取反意思。感叹号右边是个布尔值，0或空字符串为假，非0或非空字符串为真，!0就是真，因此i=1，条件为真打印第一条记录。\n没有print为什么会打印呢？因为模式后面没有动作，默认会打印整条记录。\n读取第二行记录，进行模式匹配，因为上次i的值由0变成了1，此时就是i=!1，条件为假不打印。\n读取第三行记录，因为上次条件为假，i恢复初值为0，继续打印。以此类推...\n可以看出，运算时并没有判断记录，而是利用布尔值真假判断。\n\n\n#### 方法2：\n```\n$ seq 1 5 |awk 'NR%2!=0'\n```\n\n#### 方法3：\n```\n$ seq 1 5 |sed -n '1~2p'\n```\n> 说明：步长，每隔一行打印一次\n\n#### 方法4：\n```\n$ seq 1 5 |sed -n 'p;n'\n```\n> 说明：先打印第一行，执行n命令读取当前行的下一行2，放到模式空间，后面再没有打印模式空间行操作，所以只保存不打印，同等方式继续打印第三行。\n\n### 结果\n```\n1\n3\n5\n```\n## 打印偶数行：\n```\n$ seq 1 5 |awk '!(i=!i)'\n$ seq 1 5 |awk 'NR%2==0'\n$ seq 1 5 |sed -n '0~2p'\n$ seq 1 5 |sed -n 'n;p'\n```\n> 说明：读取当前行的下一行2，放到模式空间，使用p命令打印模式空间的行，输出2。\n\n原文地址:[点我](http://lizhenliang.blog.51cto.com/7876557/1764025)\n\n","slug":"2016-07-01-AWK使用案例总结","published":1,"updated":"2017-02-14T13:42:45.398Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5mkehr0000yao94fnfoi8ws","content":"<p>企业中常见AWK使用案例总结<br><a id=\"more\"></a></p>\n<h1 id=\"1、Nginx日志分析\"><a href=\"#1、Nginx日志分析\" class=\"headerlink\" title=\"1、Nginx日志分析\"></a>1、Nginx日志分析</h1><h2 id=\"日志格式\"><a href=\"#日志格式\" class=\"headerlink\" title=\"日志格式\"></a>日志格式</h2><figure class=\"highlight nsis\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"string\">'<span class=\"variable\">$remote_addr</span> - <span class=\"variable\">$remote_user</span> [<span class=\"variable\">$time_local</span>] \"<span class=\"variable\">$request</span>\" <span class=\"variable\">$status</span> <span class=\"variable\">$body_bytes_sent</span> \"<span class=\"variable\">$http_referer</span>\" \"<span class=\"variable\">$http_user_agent</span>\" \"<span class=\"variable\">$http_x_forwarded_for</span>\"'</span></div></pre></td></tr></table></figure>\n<h2 id=\"日志记录\"><a href=\"#日志记录\" class=\"headerlink\" title=\"日志记录\"></a>日志记录</h2><figure class=\"highlight accesslog\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"number\">27.189.231.39</span> - - <span class=\"string\">[09/Apr/2016:17:21:23 +0800]</span> <span class=\"string\">\"<span class=\"keyword\">GET</span> /Public/index/images/icon_pre.png HTTP/1.1\"</span> <span class=\"number\">200</span> <span class=\"number\">44668</span> <span class=\"string\">\"http://www.test.com/Public/index/css/global.css\"</span> <span class=\"string\">\"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/44.0.2403.157 Safari/537.36\"</span> <span class=\"string\">\"-\"</span></div></pre></td></tr></table></figure>\n<h1 id=\"案例分享\"><a href=\"#案例分享\" class=\"headerlink\" title=\"案例分享\"></a>案例分享</h1><h2 id=\"1）统计日志中访问最多的10个IP\"><a href=\"#1）统计日志中访问最多的10个IP\" class=\"headerlink\" title=\"1）统计日志中访问最多的10个IP\"></a>1）统计日志中访问最多的10个IP</h2><p><strong> 思路：对第一列进行去重，并输出出现的次数 </strong><br>方法1：<br><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ awk '&#123;a[<span class=\"variable\">$1</span>]++&#125;END&#123;<span class=\"keyword\">for</span>(i <span class=\"keyword\">in</span> a)<span class=\"keyword\">print</span> a[i],i|<span class=\"string\">\"sort -k1 -nr|head -n10\"</span>&#125;' access.<span class=\"built_in\">log</span></div></pre></td></tr></table></figure></p>\n<p>方法2：<br><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ awk '&#123;<span class=\"keyword\">print</span> <span class=\"variable\">$1&#125;</span>' access.<span class=\"keyword\">log</span> |<span class=\"keyword\">sort</span> |uniq -c |<span class=\"keyword\">sort</span> -k1 -nr |head -n10</div></pre></td></tr></table></figure></p>\n<blockquote>\n<p>说明：a[$1]++ 创建数组a，以第一列作为下标，使用运算符++作为数组元素，元素初始值为0。处理一个IP时，下标是IP，元素加1，处理第二个IP时，下标是IP，元素加1，如果这个IP已经存在，则元素再加1，也就是这个IP出现了两次，元素结果是2，以此类推。因此可以实现去重，统计出现次数。</p>\n</blockquote>\n<h2 id=\"2）统计日志中访问大于100次的IP\"><a href=\"#2）统计日志中访问大于100次的IP\" class=\"headerlink\" title=\"2）统计日志中访问大于100次的IP\"></a>2）统计日志中访问大于100次的IP</h2><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">方法1：</div><div class=\"line\">$ awk '&#123;a[<span class=\"variable\">$1</span>]++&#125;END&#123;<span class=\"keyword\">for</span>(i <span class=\"keyword\">in</span> a)&#123;<span class=\"keyword\">if</span>(a[i]&gt;100)<span class=\"keyword\">print</span> i,a[i]&#125;&#125;' access.<span class=\"built_in\">log</span></div><div class=\"line\"></div><div class=\"line\">方法2：</div><div class=\"line\">$ awk '&#123;a[<span class=\"variable\">$1</span>]++;<span class=\"keyword\">if</span>(a[<span class=\"variable\">$1</span>]&gt;100)&#123;b[<span class=\"variable\">$1</span>]++&#125;&#125;END&#123;<span class=\"keyword\">for</span>(i <span class=\"keyword\">in</span> b)&#123;<span class=\"keyword\">print</span> i,a[i]&#125;&#125;' access.<span class=\"built_in\">log</span></div></pre></td></tr></table></figure>\n<blockquote>\n<p>说明：方法1是将结果保存a数组后，输出时判断符合要求的IP。方法2是将结果保存a数组时，并判断符合要求的IP放到b数组，最后打印b数组的IP。</p>\n</blockquote>\n<h2 id=\"3）统计2016年4月9日一天内访问最多的10个IP\"><a href=\"#3）统计2016年4月9日一天内访问最多的10个IP\" class=\"headerlink\" title=\"3）统计2016年4月9日一天内访问最多的10个IP\"></a>3）统计2016年4月9日一天内访问最多的10个IP</h2><p><strong> 思路：先过滤出这个时间段的日志，然后去重，统计出现次数 </strong><br><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">方法1：$ awk '<span class=\"variable\">$4</span>&gt;=<span class=\"string\">\"[9/Apr/2016:00:00:01\"</span> &amp;&amp; <span class=\"variable\">$4</span>&lt;=<span class=\"string\">\"[9/Apr/2016:23:59:59\"</span> &#123;a[<span class=\"variable\">$1</span>]++&#125;END&#123;<span class=\"keyword\">for</span>(i <span class=\"keyword\">in</span> a)<span class=\"keyword\">print</span> a[i],i|<span class=\"string\">\"sort -k1 -nr|head -n10\"</span>&#125;' access.<span class=\"built_in\">log</span></div><div class=\"line\">方法2：$ sed -<span class=\"keyword\">n</span> '/\\[9\\/Apr\\/2016:00:00:01/,/\\[9\\/Apr\\/2016:23:59:59/p' access.<span class=\"keyword\">log</span> |<span class=\"keyword\">sort</span> |uniq -c |<span class=\"keyword\">sort</span> -k1 -nr |head -n10  #前提开始时间与结束时间日志中必须存在</div></pre></td></tr></table></figure></p>\n<h2 id=\"4）统计当前时间前一分钟的访问数\"><a href=\"#4）统计当前时间前一分钟的访问数\" class=\"headerlink\" title=\"4）统计当前时间前一分钟的访问数\"></a>4）统计当前时间前一分钟的访问数</h2><p><strong> 思路：先获取当前时间前一分钟对应日志格式的时间，再匹配统计 </strong><br><figure class=\"highlight mel\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ <span class=\"keyword\">date</span>=$(<span class=\"keyword\">date</span> -d <span class=\"string\">'-1 minute'</span> +%d/%b/%Y:%H:%M);awk -vdate=$date <span class=\"string\">'$0~date&#123;c++&#125;END&#123;print c&#125;'</span> access.<span class=\"keyword\">log</span></div><div class=\"line\">$ <span class=\"keyword\">date</span>=$(<span class=\"keyword\">date</span> -d <span class=\"string\">'-1 minute'</span> +%d/%b/%Y:%H:%M);awk -vdate=$date <span class=\"string\">'$4&gt;=\"[\"date\":00\" &amp;&amp; $4&lt;=\"[\"date\":59\"&#123;c++&#125;END&#123;print c&#125;'</span> access.<span class=\"keyword\">log</span></div><div class=\"line\">$ grep -c $(<span class=\"keyword\">date</span> -d <span class=\"string\">'-1 minute'</span> +%d/%b/%Y:%H:%M) access.<span class=\"keyword\">log</span></div></pre></td></tr></table></figure></p>\n<blockquote>\n<p>说明：date +%d/%b/%Y:%H:%M –&gt; 09/Apr/2016:01:55</p>\n</blockquote>\n<h2 id=\"5）统计访问最多的前10个页面（-request）\"><a href=\"#5）统计访问最多的前10个页面（-request）\" class=\"headerlink\" title=\"5）统计访问最多的前10个页面（$request）\"></a>5）统计访问最多的前10个页面（$request）</h2><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ awk '&#123;a[<span class=\"variable\">$7</span>]++&#125;END&#123;<span class=\"keyword\">for</span>(i <span class=\"keyword\">in</span> a)<span class=\"keyword\">print</span> a[i],i|<span class=\"string\">\"sort -k1 -nr|head -n10\"</span>&#125;' access.<span class=\"built_in\">log</span></div></pre></td></tr></table></figure>\n<h2 id=\"6）统计每个URL访问内容的总大小（-body-bytes-sent）\"><a href=\"#6）统计每个URL访问内容的总大小（-body-bytes-sent）\" class=\"headerlink\" title=\"6）统计每个URL访问内容的总大小（$body_bytes_sent）\"></a>6）统计每个URL访问内容的总大小（$body_bytes_sent）</h2><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ awk '&#123;a[<span class=\"variable\">$7</span>]++;size[<span class=\"variable\">$7</span>]+=<span class=\"variable\">$10&#125;</span>END&#123;<span class=\"keyword\">for</span>(i <span class=\"keyword\">in</span> a)<span class=\"keyword\">print</span> a[i],size[i],i&#125;' access.<span class=\"built_in\">log</span></div></pre></td></tr></table></figure>\n<h2 id=\"7）统计每个IP访问状态码数量（-status）\"><a href=\"#7）统计每个IP访问状态码数量（-status）\" class=\"headerlink\" title=\"7）统计每个IP访问状态码数量（$status）\"></a>7）统计每个IP访问状态码数量（$status）</h2><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ awk '&#123;a[<span class=\"variable\">$1</span><span class=\"string\">\" \"</span><span class=\"variable\">$9</span>]++&#125;END&#123;<span class=\"keyword\">for</span>(i <span class=\"keyword\">in</span> a)<span class=\"keyword\">print</span> i,a[i]&#125;' access.<span class=\"built_in\">log</span></div></pre></td></tr></table></figure>\n<h2 id=\"8）统计访问状态码为404的IP及出现次数\"><a href=\"#8）统计访问状态码为404的IP及出现次数\" class=\"headerlink\" title=\"8）统计访问状态码为404的IP及出现次数\"></a>8）统计访问状态码为404的IP及出现次数</h2><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ awk '&#123;<span class=\"keyword\">if</span>(<span class=\"variable\">$9</span>~/404/)a[<span class=\"variable\">$1</span><span class=\"string\">\" \"</span><span class=\"variable\">$9</span>]++&#125;END&#123;<span class=\"keyword\">for</span>(i <span class=\"keyword\">in</span> a)<span class=\"keyword\">print</span> i,a[i]&#125;' access.<span class=\"built_in\">log</span></div></pre></td></tr></table></figure>\n<h1 id=\"2、两个文件对比\"><a href=\"#2、两个文件对比\" class=\"headerlink\" title=\"2、两个文件对比\"></a>2、两个文件对比</h1><p>文件内容如下：<br><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ cat a</div><div class=\"line\">    <span class=\"number\">1</span></div><div class=\"line\">    <span class=\"number\">2</span></div><div class=\"line\">    <span class=\"number\">3</span></div><div class=\"line\">    <span class=\"number\">4</span></div><div class=\"line\">    <span class=\"number\">5</span></div><div class=\"line\">    <span class=\"number\">6</span></div><div class=\"line\">$ cat b</div><div class=\"line\">    <span class=\"number\">3</span></div><div class=\"line\">    <span class=\"number\">4</span></div><div class=\"line\">    <span class=\"number\">5</span></div><div class=\"line\">    <span class=\"number\">6</span></div><div class=\"line\">    <span class=\"number\">7</span></div><div class=\"line\">    <span class=\"number\">8</span></div></pre></td></tr></table></figure></p>\n<h2 id=\"1）找出相同记录\"><a href=\"#1）找出相同记录\" class=\"headerlink\" title=\"1）找出相同记录\"></a>1）找出相同记录</h2><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">方法<span class=\"number\">1</span>：</div><div class=\"line\">$ awk 'FNR==NR&#123;a[$<span class=\"number\">0</span>];next&#125;($<span class=\"number\">0</span> in a)' a b</div><div class=\"line\"><span class=\"number\">3</span></div><div class=\"line\"><span class=\"number\">4</span></div><div class=\"line\"><span class=\"number\">5</span></div><div class=\"line\"><span class=\"number\">6</span></div></pre></td></tr></table></figure>\n<blockquote>\n<p>解释前，先看下FNR和NR区别：</p>\n</blockquote>\n<figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ awk '&#123;print NR,$<span class=\"number\">0</span>&#125;' a b</div><div class=\"line\"><span class=\"number\">1</span> <span class=\"number\">1</span></div><div class=\"line\"><span class=\"number\">2</span> <span class=\"number\">2</span></div><div class=\"line\"><span class=\"number\">3</span> <span class=\"number\">3</span></div><div class=\"line\"><span class=\"number\">4</span> <span class=\"number\">4</span></div><div class=\"line\"><span class=\"number\">5</span> <span class=\"number\">5</span></div><div class=\"line\"><span class=\"number\">6</span> <span class=\"number\">6</span></div><div class=\"line\"><span class=\"number\">7</span> <span class=\"number\">3</span></div><div class=\"line\"><span class=\"number\">8</span> <span class=\"number\">4</span></div><div class=\"line\"><span class=\"number\">9</span> <span class=\"number\">5</span></div><div class=\"line\"><span class=\"number\">10</span> <span class=\"number\">6</span></div><div class=\"line\"><span class=\"number\">11</span> <span class=\"number\">7</span></div><div class=\"line\"><span class=\"number\">12</span> <span class=\"number\">8</span></div><div class=\"line\">$ awk '&#123;print FNR,$<span class=\"number\">0</span>&#125;' a b</div><div class=\"line\"><span class=\"number\">1</span> <span class=\"number\">1</span></div><div class=\"line\"><span class=\"number\">2</span> <span class=\"number\">2</span></div><div class=\"line\"><span class=\"number\">3</span> <span class=\"number\">3</span></div><div class=\"line\"><span class=\"number\">4</span> <span class=\"number\">4</span></div><div class=\"line\"><span class=\"number\">5</span> <span class=\"number\">5</span></div><div class=\"line\"><span class=\"number\">6</span> <span class=\"number\">6</span></div><div class=\"line\"><span class=\"number\">1</span> <span class=\"number\">3</span></div><div class=\"line\"><span class=\"number\">2</span> <span class=\"number\">4</span></div><div class=\"line\"><span class=\"number\">3</span> <span class=\"number\">5</span></div><div class=\"line\"><span class=\"number\">4</span> <span class=\"number\">6</span></div><div class=\"line\"><span class=\"number\">5</span> <span class=\"number\">7</span></div><div class=\"line\"><span class=\"number\">6</span> <span class=\"number\">8</span></div></pre></td></tr></table></figure>\n<blockquote>\n<p>可以看出NR是处理一行记录，编号就会加1，同时也可以看到awk将两个文件当成一个合并后的文件处理。<br>而FNR则是处理一行记录，编号也会加1，但是，处理到第二个文件时，编号重新计数。<br>说明：FNR和NR是内置变量。FNR==NR常用于对两个文件处理，这个例子可以理解为awk将两个文件当成一个文件处理。<br>处理a文件时，FNR是等于NR的，条件为真，执行a[$0],next表达式，意思是将每条记录存放到a数组作为下标（无元素），next是跳出，类似于continue，不执行后面表达式。<br>执行过程以此类推，直到处理b件时，FNR不等于NR（FNR重新计数是1，NR继续加1是7），条件为假，不执行后面a[$0],next表达式，直接执行($0 in a)表达式，这句意思是处理b文件第一条继续判断是否在a数组中，如果在则打印这条记录，以此类推。</p>\n</blockquote>\n<h3 id=\"这样可能更好理解些：\"><a href=\"#这样可能更好理解些：\" class=\"headerlink\" title=\"这样可能更好理解些：\"></a>这样可能更好理解些：</h3><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ awk 'FNR==NR&#123;a[<span class=\"variable\">$0</span>]&#125;NR&gt;FNR&#123;<span class=\"keyword\">if</span>(<span class=\"variable\">$0</span> <span class=\"keyword\">in</span> a)<span class=\"keyword\">print</span> <span class=\"variable\">$0&#125;</span>' a b</div></pre></td></tr></table></figure>\n<h3 id=\"方法2：\"><a href=\"#方法2：\" class=\"headerlink\" title=\"方法2：\"></a>方法2：</h3><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ awk <span class=\"string\">'FNR==NR&#123;a[$0]=1;next&#125;(a[$0])'</span> <span class=\"selector-tag\">a</span> <span class=\"selector-tag\">b</span>   #小括号可以不加</div><div class=\"line\">$ awk <span class=\"string\">'FNR==NR&#123;a[$0]=1;next&#125;(a[$0]==1)'</span> <span class=\"selector-tag\">a</span> <span class=\"selector-tag\">b</span></div><div class=\"line\">$ awk <span class=\"string\">'FNR==NR&#123;a[$0]=1;next&#125;&#123;if(a[$0]==1)print&#125;'</span> <span class=\"selector-tag\">a</span> <span class=\"selector-tag\">b</span></div><div class=\"line\">$ awk <span class=\"string\">'FNR==NR&#123;a[$0]=1&#125;FNR!=NR&amp;&amp;a[$0]==1'</span> <span class=\"selector-tag\">a</span> b</div></pre></td></tr></table></figure>\n<blockquote>\n<p>说明：先要知道后面的a[$0]不是一个数组，而是通过下标（b文件每条记录）来访问a数组元素。如果a[b的一行记录]获取的a数组元素是1，则为真，也就是等于1，打印这条记录，否则获取不到元素，则为假。</p>\n</blockquote>\n<h3 id=\"方法3：\"><a href=\"#方法3：\" class=\"headerlink\" title=\"方法3：\"></a>方法3：</h3><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ awk 'ARGIND==<span class=\"number\">1</span>&#123;a[$<span class=\"number\">0</span>]=<span class=\"number\">1</span>&#125;ARGIND==<span class=\"number\">2</span>&amp;&amp;a[$<span class=\"number\">0</span>]==<span class=\"number\">1</span>' a b</div><div class=\"line\">$ awk 'FILENAME==<span class=\"string\">\"a\"</span>&#123;a[$<span class=\"number\">0</span>]=<span class=\"number\">1</span>&#125;FILENAME==<span class=\"string\">\"b\"</span>&amp;&amp;a[$<span class=\"number\">0</span>]==<span class=\"number\">1</span>' a b</div></pre></td></tr></table></figure>\n<blockquote>\n<p>说明：ARGIND内置变量，处理文件标识符，第一个文件为1，第二个文件为2。FILENAME也是内置变量，表示输入文件的名字</p>\n</blockquote>\n<h3 id=\"方法4：\"><a href=\"#方法4：\" class=\"headerlink\" title=\"方法4：\"></a>方法4：</h3><figure class=\"highlight livecodeserver\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ <span class=\"built_in\">sort</span> <span class=\"keyword\">a</span> b |uniq -d</div></pre></td></tr></table></figure>\n<h3 id=\"方法5：\"><a href=\"#方法5：\" class=\"headerlink\" title=\"方法5：\"></a>方法5：</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> grep -f a b</span></div></pre></td></tr></table></figure>\n<h2 id=\"2）找不同记录（同上，取反）\"><a href=\"#2）找不同记录（同上，取反）\" class=\"headerlink\" title=\"2）找不同记录（同上，取反）\"></a>2）找不同记录（同上，取反）</h2><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ awk 'FNR==NR&#123;a[$<span class=\"number\">0</span>];next&#125;!($<span class=\"number\">0</span> in a)' a b</div><div class=\"line\">$ awk 'FNR==NR&#123;a[$<span class=\"number\">0</span>]=<span class=\"number\">1</span>;next&#125;!a[$<span class=\"number\">0</span>]' a b</div><div class=\"line\">$ awk 'ARGIND==<span class=\"number\">1</span>&#123;a[$<span class=\"number\">0</span>]=<span class=\"number\">1</span>&#125;ARGIND==<span class=\"number\">2</span>&amp;&amp;a[$<span class=\"number\">0</span>]!=<span class=\"number\">1</span>' a b</div><div class=\"line\">$ awk 'FILENAME==<span class=\"string\">\"a\"</span>&#123;a[$<span class=\"number\">0</span>]=<span class=\"number\">1</span>&#125;FILENAME==<span class=\"string\">\"b\"</span>&amp;&amp;a[$<span class=\"number\">0</span>]!=<span class=\"number\">1</span>' a b</div><div class=\"line\"><span class=\"number\">7</span></div><div class=\"line\"><span class=\"number\">8</span></div><div class=\"line\">方法<span class=\"number\">2</span>：$ sort a b |uniq -d</div><div class=\"line\">方法<span class=\"number\">3</span>：$ grep -vf a b</div></pre></td></tr></table></figure>\n<h1 id=\"3、合并两个文件\"><a href=\"#3、合并两个文件\" class=\"headerlink\" title=\"3、合并两个文件\"></a>3、合并两个文件</h1><h2 id=\"1）将d文件性别合并到c文件\"><a href=\"#1）将d文件性别合并到c文件\" class=\"headerlink\" title=\"1）将d文件性别合并到c文件\"></a>1）将d文件性别合并到c文件</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> cat c</span></div><div class=\"line\">zhangsan 100</div><div class=\"line\">lisi 200</div><div class=\"line\">wangwu 300</div><div class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> cat d</span></div><div class=\"line\">zhangsan man</div><div class=\"line\">lisi woman</div></pre></td></tr></table></figure>\n<h3 id=\"方法1：\"><a href=\"#方法1：\" class=\"headerlink\" title=\"方法1：\"></a>方法1：</h3><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ awk  'FNR==NR&#123;a[<span class=\"variable\">$1</span>]=<span class=\"variable\">$0</span>;next&#125;&#123;<span class=\"keyword\">print</span> a[<span class=\"variable\">$1</span>],<span class=\"variable\">$2&#125;</span>' c <span class=\"built_in\">d</span></div><div class=\"line\">zhangsan 100  <span class=\"keyword\">man</span></div><div class=\"line\">lisi 200 woman</div><div class=\"line\">wangwu 300 <span class=\"keyword\">man</span></div></pre></td></tr></table></figure>\n<h3 id=\"方法2：-1\"><a href=\"#方法2：-1\" class=\"headerlink\" title=\"方法2：\"></a>方法2：</h3><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ awk  'FNR==NR&#123;a[<span class=\"variable\">$1</span>]=<span class=\"variable\">$0&#125;</span>NR&gt;FNR&#123;<span class=\"keyword\">print</span> a[<span class=\"variable\">$1</span>],<span class=\"variable\">$2&#125;</span>' c <span class=\"built_in\">d</span></div></pre></td></tr></table></figure>\n<blockquote>\n<p>说明：NR==FNR匹配第一个文件，NR&gt;FNR匹配第二个文件，将$1为数组下标</p>\n</blockquote>\n<p>###方法3：<br><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ awk 'ARGIND==<span class=\"number\">1</span>&#123;a[$<span class=\"number\">1</span>]=$<span class=\"number\">0</span>&#125;ARGIND==<span class=\"number\">2</span>&#123;print a[$<span class=\"number\">1</span>],$<span class=\"number\">2</span>&#125;' c d</div></pre></td></tr></table></figure></p>\n<h2 id=\"2）将a-txt文件中服务名称合并到一个IP中\"><a href=\"#2）将a-txt文件中服务名称合并到一个IP中\" class=\"headerlink\" title=\"2）将a.txt文件中服务名称合并到一个IP中\"></a>2）将a.txt文件中服务名称合并到一个IP中</h2><figure class=\"highlight x86asm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ cat a.txt</div><div class=\"line\"><span class=\"number\">192.168</span><span class=\"meta\">.2</span><span class=\"meta\">.100</span> : httpd</div><div class=\"line\"><span class=\"number\">192.168</span><span class=\"meta\">.2</span><span class=\"meta\">.100</span> : tomcat</div><div class=\"line\"><span class=\"number\">192.168</span><span class=\"meta\">.2</span><span class=\"meta\">.101</span> : httpd</div><div class=\"line\"><span class=\"number\">192.168</span><span class=\"meta\">.2</span><span class=\"meta\">.101</span> : postfix</div><div class=\"line\"><span class=\"number\">192.168</span><span class=\"meta\">.2</span><span class=\"meta\">.102</span> : mysqld</div><div class=\"line\"><span class=\"number\">192.168</span><span class=\"meta\">.2</span><span class=\"meta\">.102</span> : httpd</div></pre></td></tr></table></figure>\n<h3 id=\"方法1：-1\"><a href=\"#方法1：-1\" class=\"headerlink\" title=\"方法1：\"></a>方法1：</h3><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ awk -F: -vOFS=<span class=\"string\">\":\"</span> '&#123;a[<span class=\"variable\">$1</span>]=a[<span class=\"variable\">$1</span>] <span class=\"variable\">$2&#125;</span>END&#123;<span class=\"keyword\">for</span>(i <span class=\"keyword\">in</span> a)<span class=\"keyword\">print</span> i,a[i]&#125;' a.txt</div></pre></td></tr></table></figure>\n<h3 id=\"方法2\"><a href=\"#方法2\" class=\"headerlink\" title=\"方法2:\"></a>方法2:</h3><figure class=\"highlight accesslog\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ awk -F: -vOFS=<span class=\"string\">\":\"</span> '&#123;a<span class=\"string\">[$1]</span>=$<span class=\"number\">2</span> a<span class=\"string\">[$1]</span>&#125;END&#123;for(i in a)print i,a<span class=\"string\">[i]</span>&#125;' a.txt</div><div class=\"line\"><span class=\"number\">192.168.2.100</span> : httpd  tomcat</div><div class=\"line\"><span class=\"number\">192.168.2.101</span> : httpd  postfix</div><div class=\"line\"><span class=\"number\">192.168.2.102</span> : mysqld  httpd</div></pre></td></tr></table></figure>\n<blockquote>\n<p>说明：a[$1]=$2 第一列为下标，第二个列是元素，后面跟的a[$1]是通过第一列取a数组元素（服务名），结果是$1=$2 $2，并作为a数组元素。</p>\n</blockquote>\n<h2 id=\"3）将第一行附加给下面每行开头\"><a href=\"#3）将第一行附加给下面每行开头\" class=\"headerlink\" title=\"3）将第一行附加给下面每行开头\"></a>3）将第一行附加给下面每行开头</h2><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ cat <span class=\"selector-tag\">a</span><span class=\"selector-class\">.txt</span></div><div class=\"line\">xiaoli</div><div class=\"line\"><span class=\"selector-tag\">a</span> <span class=\"number\">100</span></div><div class=\"line\"><span class=\"selector-tag\">b</span> <span class=\"number\">110</span></div><div class=\"line\">c <span class=\"number\">120</span></div></pre></td></tr></table></figure>\n<h3 id=\"方法1：-2\"><a href=\"#方法1：-2\" class=\"headerlink\" title=\"方法1：\"></a>方法1：</h3><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ awk <span class=\"comment\">'NF==1&#123;a=$0;next&#125;&#123;print a,$0&#125;' a.txt</span></div></pre></td></tr></table></figure>\n<h3 id=\"方法2：-2\"><a href=\"#方法2：-2\" class=\"headerlink\" title=\"方法2：\"></a>方法2：</h3><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ awk <span class=\"string\">'NF==1&#123;a=$0&#125;NF!=1&#123;print a,$0&#125;'</span> <span class=\"selector-tag\">a</span><span class=\"selector-class\">.txt</span></div><div class=\"line\">xiaoli  <span class=\"selector-tag\">a</span> <span class=\"number\">100</span></div><div class=\"line\">xiaoli  <span class=\"selector-tag\">b</span> <span class=\"number\">110</span></div><div class=\"line\">xiaoli  c <span class=\"number\">120</span></div></pre></td></tr></table></figure>\n<h1 id=\"4、倒叙列打印文本\"><a href=\"#4、倒叙列打印文本\" class=\"headerlink\" title=\"4、倒叙列打印文本\"></a>4、倒叙列打印文本</h1><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ cat <span class=\"selector-tag\">a</span><span class=\"selector-class\">.txt</span></div><div class=\"line\">xiaoli   <span class=\"selector-tag\">a</span> <span class=\"number\">100</span></div><div class=\"line\">xiaoli   <span class=\"selector-tag\">b</span> <span class=\"number\">110</span></div><div class=\"line\">xiaoli   c <span class=\"number\">120</span></div><div class=\"line\">$ awk <span class=\"string\">'&#123;for(i=NF;i&gt;=1;i--)&#123;printf \"%s \",$i&#125;print s&#125;'</span> <span class=\"selector-tag\">a</span><span class=\"selector-class\">.txt</span></div><div class=\"line\"><span class=\"number\">100</span> <span class=\"selector-tag\">a</span> xiaoli</div><div class=\"line\"><span class=\"number\">110</span> <span class=\"selector-tag\">b</span> xiaoli</div><div class=\"line\"><span class=\"number\">120</span> c xiaoli</div><div class=\"line\">$ awk <span class=\"string\">'&#123;for(i=NF;i&gt;=1;i--)if(i==1)printf $i\"\\n\";else printf $i\" \"&#125;'</span> <span class=\"selector-tag\">a</span>.txt</div></pre></td></tr></table></figure>\n<blockquote>\n<p>说明：利用NF降序输出，把最后一个域作为第一个输出，然后自减，print s或print “”打印一个换行符</p>\n</blockquote>\n<h1 id=\"5、从第二列打印到最后\"><a href=\"#5、从第二列打印到最后\" class=\"headerlink\" title=\"5、从第二列打印到最后\"></a>5、从第二列打印到最后</h1><h3 id=\"方法1：-3\"><a href=\"#方法1：-3\" class=\"headerlink\" title=\"方法1：\"></a>方法1：</h3><figure class=\"highlight maxima\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ awk '&#123;<span class=\"keyword\">for</span>(i=<span class=\"number\">2</span>;i&lt;=NF;i++)<span class=\"keyword\">if</span>(i==NF)<span class=\"built_in\">printf</span> $i<span class=\"string\">\"\\n\"</span>;<span class=\"keyword\">else</span> <span class=\"built_in\">printf</span> $i<span class=\"string\">\" \"</span>&#125;' a.txt</div></pre></td></tr></table></figure>\n<h3 id=\"方法2：-3\"><a href=\"#方法2：-3\" class=\"headerlink\" title=\"方法2：\"></a>方法2：</h3><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ awk <span class=\"string\">'&#123;$1=\"\"&#125;&#123;print $0&#125;'</span> <span class=\"selector-tag\">a</span><span class=\"selector-class\">.txt</span></div><div class=\"line\"><span class=\"selector-tag\">a</span> <span class=\"number\">100</span></div><div class=\"line\"><span class=\"selector-tag\">b</span> <span class=\"number\">110</span></div><div class=\"line\">c <span class=\"number\">120</span></div></pre></td></tr></table></figure>\n<h1 id=\"6、将c文件中第一列放到到d文件中的第三列\"><a href=\"#6、将c文件中第一列放到到d文件中的第三列\" class=\"headerlink\" title=\"6、将c文件中第一列放到到d文件中的第三列\"></a>6、将c文件中第一列放到到d文件中的第三列</h1><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ <span class=\"keyword\">cat</span> c</div><div class=\"line\">a</div><div class=\"line\">b</div><div class=\"line\">c</div><div class=\"line\">$ <span class=\"keyword\">cat</span> <span class=\"built_in\">d</span></div><div class=\"line\">1 <span class=\"keyword\">one</span></div><div class=\"line\">2 <span class=\"keyword\">two</span></div><div class=\"line\">3 three</div></pre></td></tr></table></figure>\n<h3 id=\"方法1：-4\"><a href=\"#方法1：-4\" class=\"headerlink\" title=\"方法1：\"></a>方法1：</h3><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ awk 'FNR==NR&#123;a[NR]=$<span class=\"number\">0</span>;next&#125;&#123;$<span class=\"number\">3</span>=a[FNR]&#125;<span class=\"number\">1</span>' c d</div></pre></td></tr></table></figure>\n<blockquote>\n<p>说明：以NR编号为下标，元素是每行，当处理d文件时第三列等于获取a数据FNR（重新计数1-3）编号作为下标。</p>\n</blockquote>\n<h3 id=\"方法2：-4\"><a href=\"#方法2：-4\" class=\"headerlink\" title=\"方法2：\"></a>方法2：</h3><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ awk '&#123;getline f&lt;<span class=\"string\">\"c\"</span>;<span class=\"keyword\">print</span> <span class=\"variable\">$0</span>,f&#125;' <span class=\"built_in\">d</span></div><div class=\"line\">1 <span class=\"keyword\">one</span> a</div><div class=\"line\">2 <span class=\"keyword\">two</span> b</div><div class=\"line\">3 three c</div></pre></td></tr></table></figure>\n<h4 id=\"1）替换第二列\"><a href=\"#1）替换第二列\" class=\"headerlink\" title=\"1）替换第二列\"></a>1）替换第二列</h4><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ awk '&#123;getline f&lt;<span class=\"string\">\"c\"</span>;gsub($<span class=\"number\">2</span>,f,$<span class=\"number\">2</span>)&#125;<span class=\"number\">1</span>' d</div><div class=\"line\"><span class=\"number\">1</span> a</div><div class=\"line\"><span class=\"number\">2</span> b</div><div class=\"line\"><span class=\"number\">3</span> c</div></pre></td></tr></table></figure>\n<h4 id=\"2）替换第二列的two\"><a href=\"#2）替换第二列的two\" class=\"headerlink\" title=\"2）替换第二列的two\"></a>2）替换第二列的two</h4><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ awk '&#123;getline f&lt;<span class=\"string\">\"c\"</span>;gsub(<span class=\"string\">\"two\"</span>,f,$<span class=\"number\">2</span>)&#125;<span class=\"number\">1</span>' d</div><div class=\"line\"><span class=\"number\">1</span> one</div><div class=\"line\"><span class=\"number\">2</span> b</div><div class=\"line\"><span class=\"number\">3</span> three</div></pre></td></tr></table></figure>\n<h1 id=\"7、数字求和\"><a href=\"#7、数字求和\" class=\"headerlink\" title=\"7、数字求和\"></a>7、数字求和</h1><h3 id=\"方法1：-5\"><a href=\"#方法1：-5\" class=\"headerlink\" title=\"方法1：\"></a>方法1：</h3><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ seq 1 100 |awk '&#123;<span class=\"keyword\">sum</span>+=<span class=\"variable\">$0&#125;</span>END&#123;<span class=\"keyword\">print</span> <span class=\"keyword\">sum</span>&#125;'</div></pre></td></tr></table></figure>\n<h3 id=\"方法2：-5\"><a href=\"#方法2：-5\" class=\"headerlink\" title=\"方法2：\"></a>方法2：</h3><figure class=\"highlight maxima\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ awk 'BEGIN&#123;<span class=\"built_in\">sum</span>=<span class=\"number\">0</span>;i=<span class=\"number\">1</span>;<span class=\"keyword\">while</span>(i&lt;=<span class=\"number\">100</span>)&#123;<span class=\"built_in\">sum</span>+=i;i++&#125;<span class=\"built_in\">print</span> <span class=\"built_in\">sum</span>&#125;'</div></pre></td></tr></table></figure>\n<h3 id=\"方法3：-1\"><a href=\"#方法3：-1\" class=\"headerlink\" title=\"方法3：\"></a>方法3：</h3><figure class=\"highlight gauss\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ awk 'BEGIN&#123;<span class=\"keyword\">for</span>(i=<span class=\"number\">1</span>;i&lt;=<span class=\"number\">100</span>;i++)sum+=i&#125;<span class=\"keyword\">END</span>&#123;<span class=\"keyword\">print</span> sum&#125;' /dev/<span class=\"built_in\">null</span></div></pre></td></tr></table></figure>\n<h3 id=\"方法4：-1\"><a href=\"#方法4：-1\" class=\"headerlink\" title=\"方法4：\"></a>方法4：</h3><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ seq -s + <span class=\"number\">1</span> <span class=\"number\">100</span> |bc</div></pre></td></tr></table></figure>\n<h1 id=\"8、每隔三行添加一个换行符或内容\"><a href=\"#8、每隔三行添加一个换行符或内容\" class=\"headerlink\" title=\"8、每隔三行添加一个换行符或内容\"></a>8、每隔三行添加一个换行符或内容</h1><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">方法<span class=\"number\">1</span>：$ awk <span class=\"string\">'$0;NR%3==0&#123;printf \"\\n\"&#125;'</span> <span class=\"selector-tag\">a</span></div><div class=\"line\"></div><div class=\"line\">方法<span class=\"number\">2</span>：$ awk <span class=\"string\">'&#123;print NR%3?$0:$0\"\\n\"&#125;'</span> <span class=\"selector-tag\">a</span></div><div class=\"line\"></div><div class=\"line\">方法<span class=\"number\">3</span>：$ sed <span class=\"string\">'4~3s/^/\\n/'</span> a</div></pre></td></tr></table></figure>\n<h1 id=\"9、字符串拆分\"><a href=\"#9、字符串拆分\" class=\"headerlink\" title=\"9、字符串拆分\"></a>9、字符串拆分</h1><h3 id=\"方法1：-6\"><a href=\"#方法1：-6\" class=\"headerlink\" title=\"方法1：\"></a>方法1：</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> <span class=\"built_in\">echo</span> <span class=\"string\">\"hello\"</span> |awk -F <span class=\"string\">''</span> <span class=\"string\">'&#123;for(i=1;i&lt;=NF;i++)print $i&#125;'</span></span></div><div class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> <span class=\"built_in\">echo</span> <span class=\"string\">\"hello\"</span> |awk -F <span class=\"string\">''</span> <span class=\"string\">'&#123;i=1;while(i&lt;=NF)&#123;print $i;i++&#125;&#125;'</span></span></div><div class=\"line\">h</div><div class=\"line\">e</div><div class=\"line\">l</div><div class=\"line\">l</div><div class=\"line\">o</div></pre></td></tr></table></figure>\n<h3 id=\"方法2：-6\"><a href=\"#方法2：-6\" class=\"headerlink\" title=\"方法2：\"></a>方法2：</h3><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ echo <span class=\"string\">\"hello\"</span> |awk '&#123;<span class=\"keyword\">split</span>(<span class=\"variable\">$0</span>,a,<span class=\"string\">\"''\"</span>);<span class=\"keyword\">for</span>(i <span class=\"keyword\">in</span> a)<span class=\"keyword\">print</span> a[i]&#125;'  #无序</div><div class=\"line\"><span class=\"keyword\">l</span></div><div class=\"line\">o</div><div class=\"line\"><span class=\"built_in\">h</span></div><div class=\"line\"><span class=\"built_in\">e</span></div><div class=\"line\"><span class=\"keyword\">l</span></div></pre></td></tr></table></figure>\n<h1 id=\"10、统计字符串中每个字母出现的次数\"><a href=\"#10、统计字符串中每个字母出现的次数\" class=\"headerlink\" title=\"10、统计字符串中每个字母出现的次数\"></a>10、统计字符串中每个字母出现的次数</h1><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ echo a,b.<span class=\"built_in\">c</span>.a,b.a |tr <span class=\"string\">\"[,. ]\"</span> <span class=\"string\">\"\\n\"</span> |awk -<span class=\"type\">F</span> '' '&#123;<span class=\"keyword\">for</span>(i=<span class=\"number\">1</span>;i&lt;=<span class=\"type\">NF</span>;i++)a[$i]++&#125;<span class=\"type\">END</span>&#123;<span class=\"keyword\">for</span>(i <span class=\"keyword\">in</span> a)<span class=\"built_in\">print</span> i,a[i]|<span class=\"string\">\"sort -k2 -rn\"</span>&#125;'</div><div class=\"line\">a <span class=\"number\">3</span></div><div class=\"line\">b <span class=\"number\">2</span></div><div class=\"line\"><span class=\"built_in\">c</span> <span class=\"number\">1</span></div></pre></td></tr></table></figure>\n<h1 id=\"11、第一列排序\"><a href=\"#11、第一列排序\" class=\"headerlink\" title=\"11、第一列排序\"></a>11、第一列排序</h1><figure class=\"highlight brainfuck\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">$</span> <span class=\"comment\">awk</span> <span class=\"comment\">'&#123;a</span><span class=\"title\">[</span><span class=\"comment\">NR</span><span class=\"title\">]</span><span class=\"comment\">=$1&#125;END&#123;s=asort(a</span><span class=\"string\">,</span><span class=\"comment\">b);for(i=1;i</span>&lt;<span class=\"comment\">=s;i</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"comment\">)&#123;print</span> <span class=\"comment\">i</span><span class=\"string\">,</span><span class=\"comment\">b</span><span class=\"title\">[</span><span class=\"comment\">i</span><span class=\"title\">]</span><span class=\"comment\">&#125;&#125;'</span> <span class=\"comment\">a</span><span class=\"string\">.</span><span class=\"comment\">txt</span></div></pre></td></tr></table></figure>\n<blockquote>\n<p>说明：以每行编号作为下标值为$1，并将a数组值放到数组b，a下标丢弃，并将asort默认返回值（原a数组长度）赋值给s，使用for循环小于s的行号，从1开始到数组长度打印排序好的数组。</p>\n</blockquote>\n<h1 id=\"12、删除重复行，顺序不变\"><a href=\"#12、删除重复行，顺序不变\" class=\"headerlink\" title=\"12、删除重复行，顺序不变\"></a>12、删除重复行，顺序不变</h1><figure class=\"highlight gams\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"symbol\">$</span> awk <span class=\"string\">'!a[$0]++'</span> <span class=\"keyword\">file</span></div></pre></td></tr></table></figure>\n<h1 id=\"13、删除指定行\"><a href=\"#13、删除指定行\" class=\"headerlink\" title=\"13、删除指定行\"></a>13、删除指定行</h1><h3 id=\"删除第一行：\"><a href=\"#删除第一行：\" class=\"headerlink\" title=\"删除第一行：\"></a>删除第一行：</h3><figure class=\"highlight gams\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"symbol\">$</span> awk <span class=\"string\">'NR==1&#123;next&#125;&#123;print $0&#125;'</span> <span class=\"keyword\">file</span> #<span class=\"symbol\">$</span><span class=\"number\">0</span>可省略</div><div class=\"line\"><span class=\"symbol\">$</span> awk <span class=\"string\">'NR!=1&#123;print&#125;'</span> <span class=\"keyword\">file</span></div><div class=\"line\"><span class=\"symbol\">$</span> sed <span class=\"string\">'1d'</span> <span class=\"keyword\">file</span></div><div class=\"line\"><span class=\"symbol\">$</span> sed -n <span class=\"string\">'1!p'</span> <span class=\"keyword\">file</span></div></pre></td></tr></table></figure>\n<h1 id=\"14、在指定行前后加一行\"><a href=\"#14、在指定行前后加一行\" class=\"headerlink\" title=\"14、在指定行前后加一行\"></a>14、在指定行前后加一行</h1><h3 id=\"在第二行前一行加txt：\"><a href=\"#在第二行前一行加txt：\" class=\"headerlink\" title=\"在第二行前一行加txt：\"></a>在第二行前一行加txt：</h3><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ awk <span class=\"string\">'NR==2&#123;sub('</span>/.*/<span class=\"string\">',\"txt\\n&amp;\")&#125;&#123;print&#125;'</span> <span class=\"selector-tag\">a</span><span class=\"selector-class\">.txt</span></div><div class=\"line\">$ sed<span class=\"string\">'2s/.*/txt\\n&amp;/'</span> <span class=\"selector-tag\">a</span>.txt</div></pre></td></tr></table></figure>\n<h3 id=\"在第二行后一行加txt：\"><a href=\"#在第二行后一行加txt：\" class=\"headerlink\" title=\"在第二行后一行加txt：\"></a>在第二行后一行加txt：</h3><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ awk <span class=\"string\">'NR==2&#123;sub('</span>/.*/<span class=\"string\">',\"&amp;\\ntxt\")&#125;&#123;print&#125;'</span> <span class=\"selector-tag\">a</span><span class=\"selector-class\">.txt</span></div><div class=\"line\">$ sed<span class=\"string\">'2s/.*/&amp;\\ntxt/'</span> <span class=\"selector-tag\">a</span>.txt</div></pre></td></tr></table></figure>\n<h1 id=\"15、通过IP获取网卡名\"><a href=\"#15、通过IP获取网卡名\" class=\"headerlink\" title=\"15、通过IP获取网卡名\"></a>15、通过IP获取网卡名</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> ifconfig |awk -F<span class=\"string\">'[: ]'</span> <span class=\"string\">'/^eth/&#123;nic=$1&#125;/192.168.18.15/&#123;print nic&#125;'</span></span></div></pre></td></tr></table></figure>\n<h1 id=\"16、浮点数运算（数字46保留小数点）\"><a href=\"#16、浮点数运算（数字46保留小数点）\" class=\"headerlink\" title=\"16、浮点数运算（数字46保留小数点）\"></a>16、浮点数运算（数字46保留小数点）</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> awk <span class=\"string\">'BEGIN&#123;print 46/100&#125;'</span></span></div><div class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> awk <span class=\"string\">'BEGIN&#123;printf \"%.2f\\n\",46/100&#125;'</span></span></div><div class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> <span class=\"built_in\">echo</span> 46|awk <span class=\"string\">'&#123;print $0/100&#125;'</span></span></div><div class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> <span class=\"built_in\">echo</span> <span class=\"string\">'scale=2;46/100'</span> |bc|sed <span class=\"string\">'s/^/0/'</span></span></div><div class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> <span class=\"built_in\">printf</span> <span class=\"string\">\"%.2f\\n\"</span> $(<span class=\"built_in\">echo</span> <span class=\"string\">\"scale=2;46/100\"</span> |bc)</span></div><div class=\"line\"></div><div class=\"line\">结果：0.46</div></pre></td></tr></table></figure>\n<h1 id=\"17、替换换行符为逗号\"><a href=\"#17、替换换行符为逗号\" class=\"headerlink\" title=\"17、替换换行符为逗号\"></a>17、替换换行符为逗号</h1><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ cat a.txt</div><div class=\"line\"><span class=\"number\">1</span></div><div class=\"line\"><span class=\"number\">2</span></div><div class=\"line\"><span class=\"number\">3</span></div><div class=\"line\">替换后：<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span></div></pre></td></tr></table></figure>\n<h3 id=\"方法1：-7\"><a href=\"#方法1：-7\" class=\"headerlink\" title=\"方法1：\"></a>方法1：</h3><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ awk '&#123;s=(s?s<span class=\"string\">\",\"</span><span class=\"variable\">$0</span>:<span class=\"variable\">$0</span>)&#125;END&#123;<span class=\"keyword\">print</span> s&#125;' a.txt</div></pre></td></tr></table></figure>\n<blockquote>\n<p>说明：三目运算符(a?b:c)，第一个s是变量，s?s”,”$0:$0,第一次处理1时，s变量没有赋值初值是0，0为假，结果打印1，第二次处理2时，s值是1，为真，结果1,2。以此类推，小括号可以不写。</p>\n</blockquote>\n<h3 id=\"方法2：-7\"><a href=\"#方法2：-7\" class=\"headerlink\" title=\"方法2：\"></a>方法2：</h3><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ <span class=\"selector-tag\">tr</span> <span class=\"string\">'\\n'</span> <span class=\"string\">','</span> &lt; <span class=\"selector-tag\">a</span>.txt</div></pre></td></tr></table></figure>\n<h3 id=\"方法3：-2\"><a href=\"#方法3：-2\" class=\"headerlink\" title=\"方法3：\"></a>方法3：</h3><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sed <span class=\"comment\">':a;N;s/\\n/,/;$!b a' a.txt</span></div></pre></td></tr></table></figure>\n<blockquote>\n<p>说明：第一个标签a，先读取第一行记录1追加到模式空间，此时模式空间内容是1$，执行$!b（$!最后一行不跳转，b是控制流跳转命令）跳转到a标签，继续读取第二行记录2追加到模式空间，因为使用N命令，每个记录以换行符（\\n）分割，此时模式空间内容是1\\n2$，执行将换行符替换逗号命令，继续跳转到a标签…</p>\n</blockquote>\n<h3 id=\"方法4：-2\"><a href=\"#方法4：-2\" class=\"headerlink\" title=\"方法4：\"></a>方法4：</h3><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sed <span class=\"comment\">':a;$!N;s/\\n/,/;t a' a.txt</span></div></pre></td></tr></table></figure>\n<blockquote>\n<p>说明：与上面类似，其中t是测试命令，当上一个命令（替换）执行成功才跳转。</p>\n</blockquote>\n<h3 id=\"方法5：-1\"><a href=\"#方法5：-1\" class=\"headerlink\" title=\"方法5：\"></a>方法5：</h3><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ awk '&#123;<span class=\"keyword\">if</span>(<span class=\"variable\">$0</span>!=3)printf <span class=\"string\">\"%s,\"</span>,<span class=\"variable\">$0</span>;<span class=\"keyword\">else</span> <span class=\"keyword\">print</span> <span class=\"variable\">$0&#125;</span>' a.txt</div></pre></td></tr></table></figure>\n<blockquote>\n<p>说明：3是文本最后一个数</p>\n<h3 id=\"方法6：\"><a href=\"#方法6：\" class=\"headerlink\" title=\"方法6：\"></a>方法6：</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">while</span> <span class=\"built_in\">read</span> line; <span class=\"keyword\">do</span></div><div class=\"line\">    a+=(<span class=\"variable\">$line</span>)</div><div class=\"line\"><span class=\"keyword\">done</span> &lt; a.txt</div><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;a[*]&#125;</span> |sed <span class=\"string\">'s/ /,/g'</span></div></pre></td></tr></table></figure>\n<p>说明：将每行放到数组，然后替换</p>\n</blockquote>\n<h1 id=\"18、把奇数换行符去掉\"><a href=\"#18、把奇数换行符去掉\" class=\"headerlink\" title=\"18、把奇数换行符去掉\"></a>18、把奇数换行符去掉</h1><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ cat <span class=\"selector-tag\">b</span><span class=\"selector-class\">.txt</span></div><div class=\"line\">string</div><div class=\"line\">number</div><div class=\"line\"><span class=\"selector-tag\">a</span></div><div class=\"line\"><span class=\"number\">1</span></div><div class=\"line\"><span class=\"selector-tag\">b</span></div><div class=\"line\"><span class=\"number\">2</span></div></pre></td></tr></table></figure>\n<h3 id=\"方法1\"><a href=\"#方法1\" class=\"headerlink\" title=\"方法1\"></a>方法1</h3><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ awk <span class=\"string\">'ORS=NR%2?\"\\t\":\"\\n\"'</span> <span class=\"selector-tag\">b</span><span class=\"selector-class\">.txt</span>  #把奇数行换行符去掉</div></pre></td></tr></table></figure>\n<h3 id=\"方法2-1\"><a href=\"#方法2-1\" class=\"headerlink\" title=\"方法2\"></a>方法2</h3><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ xargs -n2 &lt; <span class=\"selector-tag\">a</span><span class=\"selector-class\">.txt</span>  #将两个字段作为一行</div><div class=\"line\">string number</div><div class=\"line\"><span class=\"selector-tag\">a</span> <span class=\"number\">1</span></div><div class=\"line\"><span class=\"selector-tag\">b</span> <span class=\"number\">2</span></div></pre></td></tr></table></figure>\n<h1 id=\"19、费用统计\"><a href=\"#19、费用统计\" class=\"headerlink\" title=\"19、费用统计\"></a>19、费用统计</h1><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ cat a.txt</div><div class=\"line\">姓名             费用   数量</div><div class=\"line\">zhangsan        <span class=\"number\">8000</span>    <span class=\"number\">1</span></div><div class=\"line\">zhangsan        <span class=\"number\">5000</span>    <span class=\"number\">1</span></div><div class=\"line\">lisi            <span class=\"number\">1000</span>    <span class=\"number\">1</span></div><div class=\"line\">lisi            <span class=\"number\">2000</span>    <span class=\"number\">1</span></div><div class=\"line\">wangwu          <span class=\"number\">1500</span>    <span class=\"number\">1</span></div><div class=\"line\">zhaoliu         <span class=\"number\">6000</span>    <span class=\"number\">1</span></div><div class=\"line\">zhaoliu         <span class=\"number\">2000</span>    <span class=\"number\">1</span></div><div class=\"line\">zhaoliu         <span class=\"number\">3000</span>    <span class=\"number\">1</span></div></pre></td></tr></table></figure>\n<h3 id=\"统计每人总费用、总数量：\"><a href=\"#统计每人总费用、总数量：\" class=\"headerlink\" title=\"统计每人总费用、总数量：\"></a>统计每人总费用、总数量：</h3><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ awk '&#123;name[$<span class=\"number\">1</span>]++;number[$<span class=\"number\">1</span>]+=$<span class=\"number\">3</span>;<span class=\"section\">money</span>[$<span class=\"number\">1</span>]+=$<span class=\"number\">2</span>&#125;END&#123;for(i in name)print i,number[i],<span class=\"section\">money</span>[i]&#125;' a.txt</div><div class=\"line\"></div><div class=\"line\">zhaoliu <span class=\"number\">3</span> <span class=\"number\">11000</span></div><div class=\"line\">zhangsan <span class=\"number\">2</span> <span class=\"number\">13000</span></div><div class=\"line\">wangwu <span class=\"number\">1</span> <span class=\"number\">1500</span></div><div class=\"line\">lisi <span class=\"number\">2</span> <span class=\"number\">3000</span></div></pre></td></tr></table></figure>\n<h1 id=\"20、打印乘法口诀\"><a href=\"#20、打印乘法口诀\" class=\"headerlink\" title=\"20、打印乘法口诀\"></a>20、打印乘法口诀</h1><h3 id=\"方法1：-8\"><a href=\"#方法1：-8\" class=\"headerlink\" title=\"方法1：\"></a>方法1：</h3><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ awk 'BEGIN&#123;for(n=<span class=\"number\">0</span>;n++&lt;<span class=\"number\">9</span>;)&#123;for(i=<span class=\"number\">0</span>;i++&lt;n;)printf i<span class=\"string\">\"x\"</span>n<span class=\"string\">\"=\"</span>i*n<span class=\"string\">\" \"</span>;print <span class=\"string\">\"\"</span>&#125;&#125;'</div><div class=\"line\"></div><div class=\"line\"><span class=\"number\">1</span>x1=<span class=\"number\">1</span></div><div class=\"line\"><span class=\"number\">1</span>x2=<span class=\"number\">2</span> <span class=\"number\">2</span>x2=<span class=\"number\">4</span></div><div class=\"line\"><span class=\"number\">1</span>x3=<span class=\"number\">3</span> <span class=\"number\">2</span>x3=<span class=\"number\">6</span> <span class=\"number\">3</span>x3=<span class=\"number\">9</span></div><div class=\"line\"><span class=\"number\">1</span>x4=<span class=\"number\">4</span> <span class=\"number\">2</span>x4=<span class=\"number\">8</span> <span class=\"number\">3</span>x4=<span class=\"number\">12</span> <span class=\"number\">4</span>x4=<span class=\"number\">16</span></div><div class=\"line\"><span class=\"number\">1</span>x5=<span class=\"number\">5</span> <span class=\"number\">2</span>x5=<span class=\"number\">10</span> <span class=\"number\">3</span>x5=<span class=\"number\">15</span> <span class=\"number\">4</span>x5=<span class=\"number\">20</span> <span class=\"number\">5</span>x5=<span class=\"number\">25</span></div><div class=\"line\"><span class=\"number\">1</span>x6=<span class=\"number\">6</span> <span class=\"number\">2</span>x6=<span class=\"number\">12</span> <span class=\"number\">3</span>x6=<span class=\"number\">18</span> <span class=\"number\">4</span>x6=<span class=\"number\">24</span> <span class=\"number\">5</span>x6=<span class=\"number\">30</span> <span class=\"number\">6</span>x6=<span class=\"number\">36</span></div><div class=\"line\"><span class=\"number\">1</span>x7=<span class=\"number\">7</span> <span class=\"number\">2</span>x7=<span class=\"number\">14</span> <span class=\"number\">3</span>x7=<span class=\"number\">21</span> <span class=\"number\">4</span>x7=<span class=\"number\">28</span> <span class=\"number\">5</span>x7=<span class=\"number\">35</span> <span class=\"number\">6</span>x7=<span class=\"number\">42</span> <span class=\"number\">7</span>x7=<span class=\"number\">49</span></div><div class=\"line\"><span class=\"number\">1</span>x8=<span class=\"number\">8</span> <span class=\"number\">2</span>x8=<span class=\"number\">16</span> <span class=\"number\">3</span>x8=<span class=\"number\">24</span> <span class=\"number\">4</span>x8=<span class=\"number\">32</span> <span class=\"number\">5</span>x8=<span class=\"number\">40</span> <span class=\"number\">6</span>x8=<span class=\"number\">48</span> <span class=\"number\">7</span>x8=<span class=\"number\">56</span> <span class=\"number\">8</span>x8=<span class=\"number\">64</span></div><div class=\"line\"><span class=\"number\">1</span>x9=<span class=\"number\">9</span> <span class=\"number\">2</span>x9=<span class=\"number\">18</span> <span class=\"number\">3</span>x9=<span class=\"number\">27</span> <span class=\"number\">4</span>x9=<span class=\"number\">36</span> <span class=\"number\">5</span>x9=<span class=\"number\">45</span> <span class=\"number\">6</span>x9=<span class=\"number\">54</span> <span class=\"number\">7</span>x9=<span class=\"number\">63</span> <span class=\"number\">8</span>x9=<span class=\"number\">72</span> <span class=\"number\">9</span>x9=<span class=\"number\">81</span></div></pre></td></tr></table></figure>\n<h3 id=\"方法2：-8\"><a href=\"#方法2：-8\" class=\"headerlink\" title=\"方法2：\"></a>方法2：</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#!/bin/bash</span></div><div class=\"line\"><span class=\"keyword\">for</span> ((i=1;i&lt;=9;i++)); <span class=\"keyword\">do</span></div><div class=\"line\">   <span class=\"keyword\">for</span> ((j=1;j&lt;=i;j++)); <span class=\"keyword\">do</span></div><div class=\"line\">     result=$((<span class=\"variable\">$i</span>*<span class=\"variable\">$j</span>))</div><div class=\"line\">     <span class=\"comment\">#let \"result=i*j\"</span></div><div class=\"line\">     <span class=\"built_in\">echo</span> -n <span class=\"string\">\"<span class=\"variable\">$i</span>*<span class=\"variable\">$j</span>=<span class=\"variable\">$result</span> \"</span></div><div class=\"line\">   <span class=\"keyword\">done</span></div><div class=\"line\">   <span class=\"built_in\">echo</span></div><div class=\"line\"><span class=\"keyword\">done</span></div></pre></td></tr></table></figure>\n<h1 id=\"21、只打印奇数或偶数行\"><a href=\"#21、只打印奇数或偶数行\" class=\"headerlink\" title=\"21、只打印奇数或偶数行\"></a>21、只打印奇数或偶数行</h1><h3 id=\"打印奇数行：\"><a href=\"#打印奇数行：\" class=\"headerlink\" title=\"打印奇数行：\"></a>打印奇数行：</h3><h4 id=\"方法1：-9\"><a href=\"#方法1：-9\" class=\"headerlink\" title=\"方法1：\"></a>方法1：</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> seq 1 5 |awk <span class=\"string\">'i=!i'</span></span></div></pre></td></tr></table></figure>\n<blockquote>\n<p>说明：先知道对于数值运算，未定义变量初值为0，对于字符运算，未定义变量初值为空字符串。<br>读取第一行记录，然后进行模式匹配，i是未定义变量，也就是i=!0，!取反意思。感叹号右边是个布尔值，0或空字符串为假，非0或非空字符串为真，!0就是真，因此i=1，条件为真打印第一条记录。<br>没有print为什么会打印呢？因为模式后面没有动作，默认会打印整条记录。<br>读取第二行记录，进行模式匹配，因为上次i的值由0变成了1，此时就是i=!1，条件为假不打印。<br>读取第三行记录，因为上次条件为假，i恢复初值为0，继续打印。以此类推…<br>可以看出，运算时并没有判断记录，而是利用布尔值真假判断。</p>\n</blockquote>\n<h4 id=\"方法2：-9\"><a href=\"#方法2：-9\" class=\"headerlink\" title=\"方法2：\"></a>方法2：</h4><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ seq <span class=\"number\">1</span> <span class=\"number\">5</span> |awk 'NR%<span class=\"number\">2</span>!=<span class=\"number\">0</span>'</div></pre></td></tr></table></figure>\n<h4 id=\"方法3：-3\"><a href=\"#方法3：-3\" class=\"headerlink\" title=\"方法3：\"></a>方法3：</h4><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ seq <span class=\"number\">1</span> <span class=\"number\">5</span> |sed -n '<span class=\"number\">1</span>~<span class=\"number\">2</span>p'</div></pre></td></tr></table></figure>\n<blockquote>\n<p>说明：步长，每隔一行打印一次</p>\n</blockquote>\n<h4 id=\"方法4：-3\"><a href=\"#方法4：-3\" class=\"headerlink\" title=\"方法4：\"></a>方法4：</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> seq 1 5 |sed -n <span class=\"string\">'p;n'</span></span></div></pre></td></tr></table></figure>\n<blockquote>\n<p>说明：先打印第一行，执行n命令读取当前行的下一行2，放到模式空间，后面再没有打印模式空间行操作，所以只保存不打印，同等方式继续打印第三行。</p>\n</blockquote>\n<h3 id=\"结果\"><a href=\"#结果\" class=\"headerlink\" title=\"结果\"></a>结果</h3><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"number\">1</span></div><div class=\"line\"><span class=\"number\">3</span></div><div class=\"line\"><span class=\"number\">5</span></div></pre></td></tr></table></figure>\n<h2 id=\"打印偶数行：\"><a href=\"#打印偶数行：\" class=\"headerlink\" title=\"打印偶数行：\"></a>打印偶数行：</h2><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ seq <span class=\"number\">1</span> <span class=\"number\">5</span> |awk '!(i=!i)'</div><div class=\"line\">$ seq <span class=\"number\">1</span> <span class=\"number\">5</span> |awk 'NR%<span class=\"number\">2</span>==<span class=\"number\">0</span>'</div><div class=\"line\">$ seq <span class=\"number\">1</span> <span class=\"number\">5</span> |sed -n '<span class=\"number\">0</span>~<span class=\"number\">2</span>p'</div><div class=\"line\">$ seq <span class=\"number\">1</span> <span class=\"number\">5</span> |sed -n 'n;p'</div></pre></td></tr></table></figure>\n<blockquote>\n<p>说明：读取当前行的下一行2，放到模式空间，使用p命令打印模式空间的行，输出2。</p>\n</blockquote>\n<p>原文地址:<a href=\"http://lizhenliang.blog.51cto.com/7876557/1764025\" target=\"_blank\" rel=\"external\">点我</a></p>\n","site":{"data":{}},"excerpt":"<p>企业中常见AWK使用案例总结<br>","more":"</p>\n<h1 id=\"1、Nginx日志分析\"><a href=\"#1、Nginx日志分析\" class=\"headerlink\" title=\"1、Nginx日志分析\"></a>1、Nginx日志分析</h1><h2 id=\"日志格式\"><a href=\"#日志格式\" class=\"headerlink\" title=\"日志格式\"></a>日志格式</h2><figure class=\"highlight nsis\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"string\">'<span class=\"variable\">$remote_addr</span> - <span class=\"variable\">$remote_user</span> [<span class=\"variable\">$time_local</span>] \"<span class=\"variable\">$request</span>\" <span class=\"variable\">$status</span> <span class=\"variable\">$body_bytes_sent</span> \"<span class=\"variable\">$http_referer</span>\" \"<span class=\"variable\">$http_user_agent</span>\" \"<span class=\"variable\">$http_x_forwarded_for</span>\"'</span></div></pre></td></tr></table></figure>\n<h2 id=\"日志记录\"><a href=\"#日志记录\" class=\"headerlink\" title=\"日志记录\"></a>日志记录</h2><figure class=\"highlight accesslog\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"number\">27.189.231.39</span> - - <span class=\"string\">[09/Apr/2016:17:21:23 +0800]</span> <span class=\"string\">\"<span class=\"keyword\">GET</span> /Public/index/images/icon_pre.png HTTP/1.1\"</span> <span class=\"number\">200</span> <span class=\"number\">44668</span> <span class=\"string\">\"http://www.test.com/Public/index/css/global.css\"</span> <span class=\"string\">\"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/44.0.2403.157 Safari/537.36\"</span> <span class=\"string\">\"-\"</span></div></pre></td></tr></table></figure>\n<h1 id=\"案例分享\"><a href=\"#案例分享\" class=\"headerlink\" title=\"案例分享\"></a>案例分享</h1><h2 id=\"1）统计日志中访问最多的10个IP\"><a href=\"#1）统计日志中访问最多的10个IP\" class=\"headerlink\" title=\"1）统计日志中访问最多的10个IP\"></a>1）统计日志中访问最多的10个IP</h2><p><strong> 思路：对第一列进行去重，并输出出现的次数 </strong><br>方法1：<br><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ awk '&#123;a[<span class=\"variable\">$1</span>]++&#125;END&#123;<span class=\"keyword\">for</span>(i <span class=\"keyword\">in</span> a)<span class=\"keyword\">print</span> a[i],i|<span class=\"string\">\"sort -k1 -nr|head -n10\"</span>&#125;' access.<span class=\"built_in\">log</span></div></pre></td></tr></table></figure></p>\n<p>方法2：<br><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ awk '&#123;<span class=\"keyword\">print</span> <span class=\"variable\">$1&#125;</span>' access.<span class=\"keyword\">log</span> |<span class=\"keyword\">sort</span> |uniq -c |<span class=\"keyword\">sort</span> -k1 -nr |head -n10</div></pre></td></tr></table></figure></p>\n<blockquote>\n<p>说明：a[$1]++ 创建数组a，以第一列作为下标，使用运算符++作为数组元素，元素初始值为0。处理一个IP时，下标是IP，元素加1，处理第二个IP时，下标是IP，元素加1，如果这个IP已经存在，则元素再加1，也就是这个IP出现了两次，元素结果是2，以此类推。因此可以实现去重，统计出现次数。</p>\n</blockquote>\n<h2 id=\"2）统计日志中访问大于100次的IP\"><a href=\"#2）统计日志中访问大于100次的IP\" class=\"headerlink\" title=\"2）统计日志中访问大于100次的IP\"></a>2）统计日志中访问大于100次的IP</h2><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">方法1：</div><div class=\"line\">$ awk '&#123;a[<span class=\"variable\">$1</span>]++&#125;END&#123;<span class=\"keyword\">for</span>(i <span class=\"keyword\">in</span> a)&#123;<span class=\"keyword\">if</span>(a[i]&gt;100)<span class=\"keyword\">print</span> i,a[i]&#125;&#125;' access.<span class=\"built_in\">log</span></div><div class=\"line\"></div><div class=\"line\">方法2：</div><div class=\"line\">$ awk '&#123;a[<span class=\"variable\">$1</span>]++;<span class=\"keyword\">if</span>(a[<span class=\"variable\">$1</span>]&gt;100)&#123;b[<span class=\"variable\">$1</span>]++&#125;&#125;END&#123;<span class=\"keyword\">for</span>(i <span class=\"keyword\">in</span> b)&#123;<span class=\"keyword\">print</span> i,a[i]&#125;&#125;' access.<span class=\"built_in\">log</span></div></pre></td></tr></table></figure>\n<blockquote>\n<p>说明：方法1是将结果保存a数组后，输出时判断符合要求的IP。方法2是将结果保存a数组时，并判断符合要求的IP放到b数组，最后打印b数组的IP。</p>\n</blockquote>\n<h2 id=\"3）统计2016年4月9日一天内访问最多的10个IP\"><a href=\"#3）统计2016年4月9日一天内访问最多的10个IP\" class=\"headerlink\" title=\"3）统计2016年4月9日一天内访问最多的10个IP\"></a>3）统计2016年4月9日一天内访问最多的10个IP</h2><p><strong> 思路：先过滤出这个时间段的日志，然后去重，统计出现次数 </strong><br><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">方法1：$ awk '<span class=\"variable\">$4</span>&gt;=<span class=\"string\">\"[9/Apr/2016:00:00:01\"</span> &amp;&amp; <span class=\"variable\">$4</span>&lt;=<span class=\"string\">\"[9/Apr/2016:23:59:59\"</span> &#123;a[<span class=\"variable\">$1</span>]++&#125;END&#123;<span class=\"keyword\">for</span>(i <span class=\"keyword\">in</span> a)<span class=\"keyword\">print</span> a[i],i|<span class=\"string\">\"sort -k1 -nr|head -n10\"</span>&#125;' access.<span class=\"built_in\">log</span></div><div class=\"line\">方法2：$ sed -<span class=\"keyword\">n</span> '/\\[9\\/Apr\\/2016:00:00:01/,/\\[9\\/Apr\\/2016:23:59:59/p' access.<span class=\"keyword\">log</span> |<span class=\"keyword\">sort</span> |uniq -c |<span class=\"keyword\">sort</span> -k1 -nr |head -n10  #前提开始时间与结束时间日志中必须存在</div></pre></td></tr></table></figure></p>\n<h2 id=\"4）统计当前时间前一分钟的访问数\"><a href=\"#4）统计当前时间前一分钟的访问数\" class=\"headerlink\" title=\"4）统计当前时间前一分钟的访问数\"></a>4）统计当前时间前一分钟的访问数</h2><p><strong> 思路：先获取当前时间前一分钟对应日志格式的时间，再匹配统计 </strong><br><figure class=\"highlight mel\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ <span class=\"keyword\">date</span>=$(<span class=\"keyword\">date</span> -d <span class=\"string\">'-1 minute'</span> +%d/%b/%Y:%H:%M);awk -vdate=$date <span class=\"string\">'$0~date&#123;c++&#125;END&#123;print c&#125;'</span> access.<span class=\"keyword\">log</span></div><div class=\"line\">$ <span class=\"keyword\">date</span>=$(<span class=\"keyword\">date</span> -d <span class=\"string\">'-1 minute'</span> +%d/%b/%Y:%H:%M);awk -vdate=$date <span class=\"string\">'$4&gt;=\"[\"date\":00\" &amp;&amp; $4&lt;=\"[\"date\":59\"&#123;c++&#125;END&#123;print c&#125;'</span> access.<span class=\"keyword\">log</span></div><div class=\"line\">$ grep -c $(<span class=\"keyword\">date</span> -d <span class=\"string\">'-1 minute'</span> +%d/%b/%Y:%H:%M) access.<span class=\"keyword\">log</span></div></pre></td></tr></table></figure></p>\n<blockquote>\n<p>说明：date +%d/%b/%Y:%H:%M –&gt; 09/Apr/2016:01:55</p>\n</blockquote>\n<h2 id=\"5）统计访问最多的前10个页面（-request）\"><a href=\"#5）统计访问最多的前10个页面（-request）\" class=\"headerlink\" title=\"5）统计访问最多的前10个页面（$request）\"></a>5）统计访问最多的前10个页面（$request）</h2><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ awk '&#123;a[<span class=\"variable\">$7</span>]++&#125;END&#123;<span class=\"keyword\">for</span>(i <span class=\"keyword\">in</span> a)<span class=\"keyword\">print</span> a[i],i|<span class=\"string\">\"sort -k1 -nr|head -n10\"</span>&#125;' access.<span class=\"built_in\">log</span></div></pre></td></tr></table></figure>\n<h2 id=\"6）统计每个URL访问内容的总大小（-body-bytes-sent）\"><a href=\"#6）统计每个URL访问内容的总大小（-body-bytes-sent）\" class=\"headerlink\" title=\"6）统计每个URL访问内容的总大小（$body_bytes_sent）\"></a>6）统计每个URL访问内容的总大小（$body_bytes_sent）</h2><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ awk '&#123;a[<span class=\"variable\">$7</span>]++;size[<span class=\"variable\">$7</span>]+=<span class=\"variable\">$10&#125;</span>END&#123;<span class=\"keyword\">for</span>(i <span class=\"keyword\">in</span> a)<span class=\"keyword\">print</span> a[i],size[i],i&#125;' access.<span class=\"built_in\">log</span></div></pre></td></tr></table></figure>\n<h2 id=\"7）统计每个IP访问状态码数量（-status）\"><a href=\"#7）统计每个IP访问状态码数量（-status）\" class=\"headerlink\" title=\"7）统计每个IP访问状态码数量（$status）\"></a>7）统计每个IP访问状态码数量（$status）</h2><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ awk '&#123;a[<span class=\"variable\">$1</span><span class=\"string\">\" \"</span><span class=\"variable\">$9</span>]++&#125;END&#123;<span class=\"keyword\">for</span>(i <span class=\"keyword\">in</span> a)<span class=\"keyword\">print</span> i,a[i]&#125;' access.<span class=\"built_in\">log</span></div></pre></td></tr></table></figure>\n<h2 id=\"8）统计访问状态码为404的IP及出现次数\"><a href=\"#8）统计访问状态码为404的IP及出现次数\" class=\"headerlink\" title=\"8）统计访问状态码为404的IP及出现次数\"></a>8）统计访问状态码为404的IP及出现次数</h2><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ awk '&#123;<span class=\"keyword\">if</span>(<span class=\"variable\">$9</span>~/404/)a[<span class=\"variable\">$1</span><span class=\"string\">\" \"</span><span class=\"variable\">$9</span>]++&#125;END&#123;<span class=\"keyword\">for</span>(i <span class=\"keyword\">in</span> a)<span class=\"keyword\">print</span> i,a[i]&#125;' access.<span class=\"built_in\">log</span></div></pre></td></tr></table></figure>\n<h1 id=\"2、两个文件对比\"><a href=\"#2、两个文件对比\" class=\"headerlink\" title=\"2、两个文件对比\"></a>2、两个文件对比</h1><p>文件内容如下：<br><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ cat a</div><div class=\"line\">    <span class=\"number\">1</span></div><div class=\"line\">    <span class=\"number\">2</span></div><div class=\"line\">    <span class=\"number\">3</span></div><div class=\"line\">    <span class=\"number\">4</span></div><div class=\"line\">    <span class=\"number\">5</span></div><div class=\"line\">    <span class=\"number\">6</span></div><div class=\"line\">$ cat b</div><div class=\"line\">    <span class=\"number\">3</span></div><div class=\"line\">    <span class=\"number\">4</span></div><div class=\"line\">    <span class=\"number\">5</span></div><div class=\"line\">    <span class=\"number\">6</span></div><div class=\"line\">    <span class=\"number\">7</span></div><div class=\"line\">    <span class=\"number\">8</span></div></pre></td></tr></table></figure></p>\n<h2 id=\"1）找出相同记录\"><a href=\"#1）找出相同记录\" class=\"headerlink\" title=\"1）找出相同记录\"></a>1）找出相同记录</h2><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">方法<span class=\"number\">1</span>：</div><div class=\"line\">$ awk 'FNR==NR&#123;a[$<span class=\"number\">0</span>];next&#125;($<span class=\"number\">0</span> in a)' a b</div><div class=\"line\"><span class=\"number\">3</span></div><div class=\"line\"><span class=\"number\">4</span></div><div class=\"line\"><span class=\"number\">5</span></div><div class=\"line\"><span class=\"number\">6</span></div></pre></td></tr></table></figure>\n<blockquote>\n<p>解释前，先看下FNR和NR区别：</p>\n</blockquote>\n<figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ awk '&#123;print NR,$<span class=\"number\">0</span>&#125;' a b</div><div class=\"line\"><span class=\"number\">1</span> <span class=\"number\">1</span></div><div class=\"line\"><span class=\"number\">2</span> <span class=\"number\">2</span></div><div class=\"line\"><span class=\"number\">3</span> <span class=\"number\">3</span></div><div class=\"line\"><span class=\"number\">4</span> <span class=\"number\">4</span></div><div class=\"line\"><span class=\"number\">5</span> <span class=\"number\">5</span></div><div class=\"line\"><span class=\"number\">6</span> <span class=\"number\">6</span></div><div class=\"line\"><span class=\"number\">7</span> <span class=\"number\">3</span></div><div class=\"line\"><span class=\"number\">8</span> <span class=\"number\">4</span></div><div class=\"line\"><span class=\"number\">9</span> <span class=\"number\">5</span></div><div class=\"line\"><span class=\"number\">10</span> <span class=\"number\">6</span></div><div class=\"line\"><span class=\"number\">11</span> <span class=\"number\">7</span></div><div class=\"line\"><span class=\"number\">12</span> <span class=\"number\">8</span></div><div class=\"line\">$ awk '&#123;print FNR,$<span class=\"number\">0</span>&#125;' a b</div><div class=\"line\"><span class=\"number\">1</span> <span class=\"number\">1</span></div><div class=\"line\"><span class=\"number\">2</span> <span class=\"number\">2</span></div><div class=\"line\"><span class=\"number\">3</span> <span class=\"number\">3</span></div><div class=\"line\"><span class=\"number\">4</span> <span class=\"number\">4</span></div><div class=\"line\"><span class=\"number\">5</span> <span class=\"number\">5</span></div><div class=\"line\"><span class=\"number\">6</span> <span class=\"number\">6</span></div><div class=\"line\"><span class=\"number\">1</span> <span class=\"number\">3</span></div><div class=\"line\"><span class=\"number\">2</span> <span class=\"number\">4</span></div><div class=\"line\"><span class=\"number\">3</span> <span class=\"number\">5</span></div><div class=\"line\"><span class=\"number\">4</span> <span class=\"number\">6</span></div><div class=\"line\"><span class=\"number\">5</span> <span class=\"number\">7</span></div><div class=\"line\"><span class=\"number\">6</span> <span class=\"number\">8</span></div></pre></td></tr></table></figure>\n<blockquote>\n<p>可以看出NR是处理一行记录，编号就会加1，同时也可以看到awk将两个文件当成一个合并后的文件处理。<br>而FNR则是处理一行记录，编号也会加1，但是，处理到第二个文件时，编号重新计数。<br>说明：FNR和NR是内置变量。FNR==NR常用于对两个文件处理，这个例子可以理解为awk将两个文件当成一个文件处理。<br>处理a文件时，FNR是等于NR的，条件为真，执行a[$0],next表达式，意思是将每条记录存放到a数组作为下标（无元素），next是跳出，类似于continue，不执行后面表达式。<br>执行过程以此类推，直到处理b件时，FNR不等于NR（FNR重新计数是1，NR继续加1是7），条件为假，不执行后面a[$0],next表达式，直接执行($0 in a)表达式，这句意思是处理b文件第一条继续判断是否在a数组中，如果在则打印这条记录，以此类推。</p>\n</blockquote>\n<h3 id=\"这样可能更好理解些：\"><a href=\"#这样可能更好理解些：\" class=\"headerlink\" title=\"这样可能更好理解些：\"></a>这样可能更好理解些：</h3><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ awk 'FNR==NR&#123;a[<span class=\"variable\">$0</span>]&#125;NR&gt;FNR&#123;<span class=\"keyword\">if</span>(<span class=\"variable\">$0</span> <span class=\"keyword\">in</span> a)<span class=\"keyword\">print</span> <span class=\"variable\">$0&#125;</span>' a b</div></pre></td></tr></table></figure>\n<h3 id=\"方法2：\"><a href=\"#方法2：\" class=\"headerlink\" title=\"方法2：\"></a>方法2：</h3><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ awk <span class=\"string\">'FNR==NR&#123;a[$0]=1;next&#125;(a[$0])'</span> <span class=\"selector-tag\">a</span> <span class=\"selector-tag\">b</span>   #小括号可以不加</div><div class=\"line\">$ awk <span class=\"string\">'FNR==NR&#123;a[$0]=1;next&#125;(a[$0]==1)'</span> <span class=\"selector-tag\">a</span> <span class=\"selector-tag\">b</span></div><div class=\"line\">$ awk <span class=\"string\">'FNR==NR&#123;a[$0]=1;next&#125;&#123;if(a[$0]==1)print&#125;'</span> <span class=\"selector-tag\">a</span> <span class=\"selector-tag\">b</span></div><div class=\"line\">$ awk <span class=\"string\">'FNR==NR&#123;a[$0]=1&#125;FNR!=NR&amp;&amp;a[$0]==1'</span> <span class=\"selector-tag\">a</span> b</div></pre></td></tr></table></figure>\n<blockquote>\n<p>说明：先要知道后面的a[$0]不是一个数组，而是通过下标（b文件每条记录）来访问a数组元素。如果a[b的一行记录]获取的a数组元素是1，则为真，也就是等于1，打印这条记录，否则获取不到元素，则为假。</p>\n</blockquote>\n<h3 id=\"方法3：\"><a href=\"#方法3：\" class=\"headerlink\" title=\"方法3：\"></a>方法3：</h3><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ awk 'ARGIND==<span class=\"number\">1</span>&#123;a[$<span class=\"number\">0</span>]=<span class=\"number\">1</span>&#125;ARGIND==<span class=\"number\">2</span>&amp;&amp;a[$<span class=\"number\">0</span>]==<span class=\"number\">1</span>' a b</div><div class=\"line\">$ awk 'FILENAME==<span class=\"string\">\"a\"</span>&#123;a[$<span class=\"number\">0</span>]=<span class=\"number\">1</span>&#125;FILENAME==<span class=\"string\">\"b\"</span>&amp;&amp;a[$<span class=\"number\">0</span>]==<span class=\"number\">1</span>' a b</div></pre></td></tr></table></figure>\n<blockquote>\n<p>说明：ARGIND内置变量，处理文件标识符，第一个文件为1，第二个文件为2。FILENAME也是内置变量，表示输入文件的名字</p>\n</blockquote>\n<h3 id=\"方法4：\"><a href=\"#方法4：\" class=\"headerlink\" title=\"方法4：\"></a>方法4：</h3><figure class=\"highlight livecodeserver\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ <span class=\"built_in\">sort</span> <span class=\"keyword\">a</span> b |uniq -d</div></pre></td></tr></table></figure>\n<h3 id=\"方法5：\"><a href=\"#方法5：\" class=\"headerlink\" title=\"方法5：\"></a>方法5：</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> grep -f a b</span></div></pre></td></tr></table></figure>\n<h2 id=\"2）找不同记录（同上，取反）\"><a href=\"#2）找不同记录（同上，取反）\" class=\"headerlink\" title=\"2）找不同记录（同上，取反）\"></a>2）找不同记录（同上，取反）</h2><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ awk 'FNR==NR&#123;a[$<span class=\"number\">0</span>];next&#125;!($<span class=\"number\">0</span> in a)' a b</div><div class=\"line\">$ awk 'FNR==NR&#123;a[$<span class=\"number\">0</span>]=<span class=\"number\">1</span>;next&#125;!a[$<span class=\"number\">0</span>]' a b</div><div class=\"line\">$ awk 'ARGIND==<span class=\"number\">1</span>&#123;a[$<span class=\"number\">0</span>]=<span class=\"number\">1</span>&#125;ARGIND==<span class=\"number\">2</span>&amp;&amp;a[$<span class=\"number\">0</span>]!=<span class=\"number\">1</span>' a b</div><div class=\"line\">$ awk 'FILENAME==<span class=\"string\">\"a\"</span>&#123;a[$<span class=\"number\">0</span>]=<span class=\"number\">1</span>&#125;FILENAME==<span class=\"string\">\"b\"</span>&amp;&amp;a[$<span class=\"number\">0</span>]!=<span class=\"number\">1</span>' a b</div><div class=\"line\"><span class=\"number\">7</span></div><div class=\"line\"><span class=\"number\">8</span></div><div class=\"line\">方法<span class=\"number\">2</span>：$ sort a b |uniq -d</div><div class=\"line\">方法<span class=\"number\">3</span>：$ grep -vf a b</div></pre></td></tr></table></figure>\n<h1 id=\"3、合并两个文件\"><a href=\"#3、合并两个文件\" class=\"headerlink\" title=\"3、合并两个文件\"></a>3、合并两个文件</h1><h2 id=\"1）将d文件性别合并到c文件\"><a href=\"#1）将d文件性别合并到c文件\" class=\"headerlink\" title=\"1）将d文件性别合并到c文件\"></a>1）将d文件性别合并到c文件</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> cat c</span></div><div class=\"line\">zhangsan 100</div><div class=\"line\">lisi 200</div><div class=\"line\">wangwu 300</div><div class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> cat d</span></div><div class=\"line\">zhangsan man</div><div class=\"line\">lisi woman</div></pre></td></tr></table></figure>\n<h3 id=\"方法1：\"><a href=\"#方法1：\" class=\"headerlink\" title=\"方法1：\"></a>方法1：</h3><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ awk  'FNR==NR&#123;a[<span class=\"variable\">$1</span>]=<span class=\"variable\">$0</span>;next&#125;&#123;<span class=\"keyword\">print</span> a[<span class=\"variable\">$1</span>],<span class=\"variable\">$2&#125;</span>' c <span class=\"built_in\">d</span></div><div class=\"line\">zhangsan 100  <span class=\"keyword\">man</span></div><div class=\"line\">lisi 200 woman</div><div class=\"line\">wangwu 300 <span class=\"keyword\">man</span></div></pre></td></tr></table></figure>\n<h3 id=\"方法2：-1\"><a href=\"#方法2：-1\" class=\"headerlink\" title=\"方法2：\"></a>方法2：</h3><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ awk  'FNR==NR&#123;a[<span class=\"variable\">$1</span>]=<span class=\"variable\">$0&#125;</span>NR&gt;FNR&#123;<span class=\"keyword\">print</span> a[<span class=\"variable\">$1</span>],<span class=\"variable\">$2&#125;</span>' c <span class=\"built_in\">d</span></div></pre></td></tr></table></figure>\n<blockquote>\n<p>说明：NR==FNR匹配第一个文件，NR&gt;FNR匹配第二个文件，将$1为数组下标</p>\n</blockquote>\n<p>###方法3：<br><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ awk 'ARGIND==<span class=\"number\">1</span>&#123;a[$<span class=\"number\">1</span>]=$<span class=\"number\">0</span>&#125;ARGIND==<span class=\"number\">2</span>&#123;print a[$<span class=\"number\">1</span>],$<span class=\"number\">2</span>&#125;' c d</div></pre></td></tr></table></figure></p>\n<h2 id=\"2）将a-txt文件中服务名称合并到一个IP中\"><a href=\"#2）将a-txt文件中服务名称合并到一个IP中\" class=\"headerlink\" title=\"2）将a.txt文件中服务名称合并到一个IP中\"></a>2）将a.txt文件中服务名称合并到一个IP中</h2><figure class=\"highlight x86asm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ cat a.txt</div><div class=\"line\"><span class=\"number\">192.168</span><span class=\"meta\">.2</span><span class=\"meta\">.100</span> : httpd</div><div class=\"line\"><span class=\"number\">192.168</span><span class=\"meta\">.2</span><span class=\"meta\">.100</span> : tomcat</div><div class=\"line\"><span class=\"number\">192.168</span><span class=\"meta\">.2</span><span class=\"meta\">.101</span> : httpd</div><div class=\"line\"><span class=\"number\">192.168</span><span class=\"meta\">.2</span><span class=\"meta\">.101</span> : postfix</div><div class=\"line\"><span class=\"number\">192.168</span><span class=\"meta\">.2</span><span class=\"meta\">.102</span> : mysqld</div><div class=\"line\"><span class=\"number\">192.168</span><span class=\"meta\">.2</span><span class=\"meta\">.102</span> : httpd</div></pre></td></tr></table></figure>\n<h3 id=\"方法1：-1\"><a href=\"#方法1：-1\" class=\"headerlink\" title=\"方法1：\"></a>方法1：</h3><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ awk -F: -vOFS=<span class=\"string\">\":\"</span> '&#123;a[<span class=\"variable\">$1</span>]=a[<span class=\"variable\">$1</span>] <span class=\"variable\">$2&#125;</span>END&#123;<span class=\"keyword\">for</span>(i <span class=\"keyword\">in</span> a)<span class=\"keyword\">print</span> i,a[i]&#125;' a.txt</div></pre></td></tr></table></figure>\n<h3 id=\"方法2\"><a href=\"#方法2\" class=\"headerlink\" title=\"方法2:\"></a>方法2:</h3><figure class=\"highlight accesslog\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ awk -F: -vOFS=<span class=\"string\">\":\"</span> '&#123;a<span class=\"string\">[$1]</span>=$<span class=\"number\">2</span> a<span class=\"string\">[$1]</span>&#125;END&#123;for(i in a)print i,a<span class=\"string\">[i]</span>&#125;' a.txt</div><div class=\"line\"><span class=\"number\">192.168.2.100</span> : httpd  tomcat</div><div class=\"line\"><span class=\"number\">192.168.2.101</span> : httpd  postfix</div><div class=\"line\"><span class=\"number\">192.168.2.102</span> : mysqld  httpd</div></pre></td></tr></table></figure>\n<blockquote>\n<p>说明：a[$1]=$2 第一列为下标，第二个列是元素，后面跟的a[$1]是通过第一列取a数组元素（服务名），结果是$1=$2 $2，并作为a数组元素。</p>\n</blockquote>\n<h2 id=\"3）将第一行附加给下面每行开头\"><a href=\"#3）将第一行附加给下面每行开头\" class=\"headerlink\" title=\"3）将第一行附加给下面每行开头\"></a>3）将第一行附加给下面每行开头</h2><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ cat <span class=\"selector-tag\">a</span><span class=\"selector-class\">.txt</span></div><div class=\"line\">xiaoli</div><div class=\"line\"><span class=\"selector-tag\">a</span> <span class=\"number\">100</span></div><div class=\"line\"><span class=\"selector-tag\">b</span> <span class=\"number\">110</span></div><div class=\"line\">c <span class=\"number\">120</span></div></pre></td></tr></table></figure>\n<h3 id=\"方法1：-2\"><a href=\"#方法1：-2\" class=\"headerlink\" title=\"方法1：\"></a>方法1：</h3><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ awk <span class=\"comment\">'NF==1&#123;a=$0;next&#125;&#123;print a,$0&#125;' a.txt</span></div></pre></td></tr></table></figure>\n<h3 id=\"方法2：-2\"><a href=\"#方法2：-2\" class=\"headerlink\" title=\"方法2：\"></a>方法2：</h3><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ awk <span class=\"string\">'NF==1&#123;a=$0&#125;NF!=1&#123;print a,$0&#125;'</span> <span class=\"selector-tag\">a</span><span class=\"selector-class\">.txt</span></div><div class=\"line\">xiaoli  <span class=\"selector-tag\">a</span> <span class=\"number\">100</span></div><div class=\"line\">xiaoli  <span class=\"selector-tag\">b</span> <span class=\"number\">110</span></div><div class=\"line\">xiaoli  c <span class=\"number\">120</span></div></pre></td></tr></table></figure>\n<h1 id=\"4、倒叙列打印文本\"><a href=\"#4、倒叙列打印文本\" class=\"headerlink\" title=\"4、倒叙列打印文本\"></a>4、倒叙列打印文本</h1><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ cat <span class=\"selector-tag\">a</span><span class=\"selector-class\">.txt</span></div><div class=\"line\">xiaoli   <span class=\"selector-tag\">a</span> <span class=\"number\">100</span></div><div class=\"line\">xiaoli   <span class=\"selector-tag\">b</span> <span class=\"number\">110</span></div><div class=\"line\">xiaoli   c <span class=\"number\">120</span></div><div class=\"line\">$ awk <span class=\"string\">'&#123;for(i=NF;i&gt;=1;i--)&#123;printf \"%s \",$i&#125;print s&#125;'</span> <span class=\"selector-tag\">a</span><span class=\"selector-class\">.txt</span></div><div class=\"line\"><span class=\"number\">100</span> <span class=\"selector-tag\">a</span> xiaoli</div><div class=\"line\"><span class=\"number\">110</span> <span class=\"selector-tag\">b</span> xiaoli</div><div class=\"line\"><span class=\"number\">120</span> c xiaoli</div><div class=\"line\">$ awk <span class=\"string\">'&#123;for(i=NF;i&gt;=1;i--)if(i==1)printf $i\"\\n\";else printf $i\" \"&#125;'</span> <span class=\"selector-tag\">a</span>.txt</div></pre></td></tr></table></figure>\n<blockquote>\n<p>说明：利用NF降序输出，把最后一个域作为第一个输出，然后自减，print s或print “”打印一个换行符</p>\n</blockquote>\n<h1 id=\"5、从第二列打印到最后\"><a href=\"#5、从第二列打印到最后\" class=\"headerlink\" title=\"5、从第二列打印到最后\"></a>5、从第二列打印到最后</h1><h3 id=\"方法1：-3\"><a href=\"#方法1：-3\" class=\"headerlink\" title=\"方法1：\"></a>方法1：</h3><figure class=\"highlight maxima\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ awk '&#123;<span class=\"keyword\">for</span>(i=<span class=\"number\">2</span>;i&lt;=NF;i++)<span class=\"keyword\">if</span>(i==NF)<span class=\"built_in\">printf</span> $i<span class=\"string\">\"\\n\"</span>;<span class=\"keyword\">else</span> <span class=\"built_in\">printf</span> $i<span class=\"string\">\" \"</span>&#125;' a.txt</div></pre></td></tr></table></figure>\n<h3 id=\"方法2：-3\"><a href=\"#方法2：-3\" class=\"headerlink\" title=\"方法2：\"></a>方法2：</h3><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ awk <span class=\"string\">'&#123;$1=\"\"&#125;&#123;print $0&#125;'</span> <span class=\"selector-tag\">a</span><span class=\"selector-class\">.txt</span></div><div class=\"line\"><span class=\"selector-tag\">a</span> <span class=\"number\">100</span></div><div class=\"line\"><span class=\"selector-tag\">b</span> <span class=\"number\">110</span></div><div class=\"line\">c <span class=\"number\">120</span></div></pre></td></tr></table></figure>\n<h1 id=\"6、将c文件中第一列放到到d文件中的第三列\"><a href=\"#6、将c文件中第一列放到到d文件中的第三列\" class=\"headerlink\" title=\"6、将c文件中第一列放到到d文件中的第三列\"></a>6、将c文件中第一列放到到d文件中的第三列</h1><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ <span class=\"keyword\">cat</span> c</div><div class=\"line\">a</div><div class=\"line\">b</div><div class=\"line\">c</div><div class=\"line\">$ <span class=\"keyword\">cat</span> <span class=\"built_in\">d</span></div><div class=\"line\">1 <span class=\"keyword\">one</span></div><div class=\"line\">2 <span class=\"keyword\">two</span></div><div class=\"line\">3 three</div></pre></td></tr></table></figure>\n<h3 id=\"方法1：-4\"><a href=\"#方法1：-4\" class=\"headerlink\" title=\"方法1：\"></a>方法1：</h3><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ awk 'FNR==NR&#123;a[NR]=$<span class=\"number\">0</span>;next&#125;&#123;$<span class=\"number\">3</span>=a[FNR]&#125;<span class=\"number\">1</span>' c d</div></pre></td></tr></table></figure>\n<blockquote>\n<p>说明：以NR编号为下标，元素是每行，当处理d文件时第三列等于获取a数据FNR（重新计数1-3）编号作为下标。</p>\n</blockquote>\n<h3 id=\"方法2：-4\"><a href=\"#方法2：-4\" class=\"headerlink\" title=\"方法2：\"></a>方法2：</h3><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ awk '&#123;getline f&lt;<span class=\"string\">\"c\"</span>;<span class=\"keyword\">print</span> <span class=\"variable\">$0</span>,f&#125;' <span class=\"built_in\">d</span></div><div class=\"line\">1 <span class=\"keyword\">one</span> a</div><div class=\"line\">2 <span class=\"keyword\">two</span> b</div><div class=\"line\">3 three c</div></pre></td></tr></table></figure>\n<h4 id=\"1）替换第二列\"><a href=\"#1）替换第二列\" class=\"headerlink\" title=\"1）替换第二列\"></a>1）替换第二列</h4><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ awk '&#123;getline f&lt;<span class=\"string\">\"c\"</span>;gsub($<span class=\"number\">2</span>,f,$<span class=\"number\">2</span>)&#125;<span class=\"number\">1</span>' d</div><div class=\"line\"><span class=\"number\">1</span> a</div><div class=\"line\"><span class=\"number\">2</span> b</div><div class=\"line\"><span class=\"number\">3</span> c</div></pre></td></tr></table></figure>\n<h4 id=\"2）替换第二列的two\"><a href=\"#2）替换第二列的two\" class=\"headerlink\" title=\"2）替换第二列的two\"></a>2）替换第二列的two</h4><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ awk '&#123;getline f&lt;<span class=\"string\">\"c\"</span>;gsub(<span class=\"string\">\"two\"</span>,f,$<span class=\"number\">2</span>)&#125;<span class=\"number\">1</span>' d</div><div class=\"line\"><span class=\"number\">1</span> one</div><div class=\"line\"><span class=\"number\">2</span> b</div><div class=\"line\"><span class=\"number\">3</span> three</div></pre></td></tr></table></figure>\n<h1 id=\"7、数字求和\"><a href=\"#7、数字求和\" class=\"headerlink\" title=\"7、数字求和\"></a>7、数字求和</h1><h3 id=\"方法1：-5\"><a href=\"#方法1：-5\" class=\"headerlink\" title=\"方法1：\"></a>方法1：</h3><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ seq 1 100 |awk '&#123;<span class=\"keyword\">sum</span>+=<span class=\"variable\">$0&#125;</span>END&#123;<span class=\"keyword\">print</span> <span class=\"keyword\">sum</span>&#125;'</div></pre></td></tr></table></figure>\n<h3 id=\"方法2：-5\"><a href=\"#方法2：-5\" class=\"headerlink\" title=\"方法2：\"></a>方法2：</h3><figure class=\"highlight maxima\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ awk 'BEGIN&#123;<span class=\"built_in\">sum</span>=<span class=\"number\">0</span>;i=<span class=\"number\">1</span>;<span class=\"keyword\">while</span>(i&lt;=<span class=\"number\">100</span>)&#123;<span class=\"built_in\">sum</span>+=i;i++&#125;<span class=\"built_in\">print</span> <span class=\"built_in\">sum</span>&#125;'</div></pre></td></tr></table></figure>\n<h3 id=\"方法3：-1\"><a href=\"#方法3：-1\" class=\"headerlink\" title=\"方法3：\"></a>方法3：</h3><figure class=\"highlight gauss\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ awk 'BEGIN&#123;<span class=\"keyword\">for</span>(i=<span class=\"number\">1</span>;i&lt;=<span class=\"number\">100</span>;i++)sum+=i&#125;<span class=\"keyword\">END</span>&#123;<span class=\"keyword\">print</span> sum&#125;' /dev/<span class=\"built_in\">null</span></div></pre></td></tr></table></figure>\n<h3 id=\"方法4：-1\"><a href=\"#方法4：-1\" class=\"headerlink\" title=\"方法4：\"></a>方法4：</h3><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ seq -s + <span class=\"number\">1</span> <span class=\"number\">100</span> |bc</div></pre></td></tr></table></figure>\n<h1 id=\"8、每隔三行添加一个换行符或内容\"><a href=\"#8、每隔三行添加一个换行符或内容\" class=\"headerlink\" title=\"8、每隔三行添加一个换行符或内容\"></a>8、每隔三行添加一个换行符或内容</h1><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">方法<span class=\"number\">1</span>：$ awk <span class=\"string\">'$0;NR%3==0&#123;printf \"\\n\"&#125;'</span> <span class=\"selector-tag\">a</span></div><div class=\"line\"></div><div class=\"line\">方法<span class=\"number\">2</span>：$ awk <span class=\"string\">'&#123;print NR%3?$0:$0\"\\n\"&#125;'</span> <span class=\"selector-tag\">a</span></div><div class=\"line\"></div><div class=\"line\">方法<span class=\"number\">3</span>：$ sed <span class=\"string\">'4~3s/^/\\n/'</span> a</div></pre></td></tr></table></figure>\n<h1 id=\"9、字符串拆分\"><a href=\"#9、字符串拆分\" class=\"headerlink\" title=\"9、字符串拆分\"></a>9、字符串拆分</h1><h3 id=\"方法1：-6\"><a href=\"#方法1：-6\" class=\"headerlink\" title=\"方法1：\"></a>方法1：</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> <span class=\"built_in\">echo</span> <span class=\"string\">\"hello\"</span> |awk -F <span class=\"string\">''</span> <span class=\"string\">'&#123;for(i=1;i&lt;=NF;i++)print $i&#125;'</span></span></div><div class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> <span class=\"built_in\">echo</span> <span class=\"string\">\"hello\"</span> |awk -F <span class=\"string\">''</span> <span class=\"string\">'&#123;i=1;while(i&lt;=NF)&#123;print $i;i++&#125;&#125;'</span></span></div><div class=\"line\">h</div><div class=\"line\">e</div><div class=\"line\">l</div><div class=\"line\">l</div><div class=\"line\">o</div></pre></td></tr></table></figure>\n<h3 id=\"方法2：-6\"><a href=\"#方法2：-6\" class=\"headerlink\" title=\"方法2：\"></a>方法2：</h3><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ echo <span class=\"string\">\"hello\"</span> |awk '&#123;<span class=\"keyword\">split</span>(<span class=\"variable\">$0</span>,a,<span class=\"string\">\"''\"</span>);<span class=\"keyword\">for</span>(i <span class=\"keyword\">in</span> a)<span class=\"keyword\">print</span> a[i]&#125;'  #无序</div><div class=\"line\"><span class=\"keyword\">l</span></div><div class=\"line\">o</div><div class=\"line\"><span class=\"built_in\">h</span></div><div class=\"line\"><span class=\"built_in\">e</span></div><div class=\"line\"><span class=\"keyword\">l</span></div></pre></td></tr></table></figure>\n<h1 id=\"10、统计字符串中每个字母出现的次数\"><a href=\"#10、统计字符串中每个字母出现的次数\" class=\"headerlink\" title=\"10、统计字符串中每个字母出现的次数\"></a>10、统计字符串中每个字母出现的次数</h1><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ echo a,b.<span class=\"built_in\">c</span>.a,b.a |tr <span class=\"string\">\"[,. ]\"</span> <span class=\"string\">\"\\n\"</span> |awk -<span class=\"type\">F</span> '' '&#123;<span class=\"keyword\">for</span>(i=<span class=\"number\">1</span>;i&lt;=<span class=\"type\">NF</span>;i++)a[$i]++&#125;<span class=\"type\">END</span>&#123;<span class=\"keyword\">for</span>(i <span class=\"keyword\">in</span> a)<span class=\"built_in\">print</span> i,a[i]|<span class=\"string\">\"sort -k2 -rn\"</span>&#125;'</div><div class=\"line\">a <span class=\"number\">3</span></div><div class=\"line\">b <span class=\"number\">2</span></div><div class=\"line\"><span class=\"built_in\">c</span> <span class=\"number\">1</span></div></pre></td></tr></table></figure>\n<h1 id=\"11、第一列排序\"><a href=\"#11、第一列排序\" class=\"headerlink\" title=\"11、第一列排序\"></a>11、第一列排序</h1><figure class=\"highlight brainfuck\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">$</span> <span class=\"comment\">awk</span> <span class=\"comment\">'&#123;a</span><span class=\"title\">[</span><span class=\"comment\">NR</span><span class=\"title\">]</span><span class=\"comment\">=$1&#125;END&#123;s=asort(a</span><span class=\"string\">,</span><span class=\"comment\">b);for(i=1;i</span>&lt;<span class=\"comment\">=s;i</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"comment\">)&#123;print</span> <span class=\"comment\">i</span><span class=\"string\">,</span><span class=\"comment\">b</span><span class=\"title\">[</span><span class=\"comment\">i</span><span class=\"title\">]</span><span class=\"comment\">&#125;&#125;'</span> <span class=\"comment\">a</span><span class=\"string\">.</span><span class=\"comment\">txt</span></div></pre></td></tr></table></figure>\n<blockquote>\n<p>说明：以每行编号作为下标值为$1，并将a数组值放到数组b，a下标丢弃，并将asort默认返回值（原a数组长度）赋值给s，使用for循环小于s的行号，从1开始到数组长度打印排序好的数组。</p>\n</blockquote>\n<h1 id=\"12、删除重复行，顺序不变\"><a href=\"#12、删除重复行，顺序不变\" class=\"headerlink\" title=\"12、删除重复行，顺序不变\"></a>12、删除重复行，顺序不变</h1><figure class=\"highlight gams\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"symbol\">$</span> awk <span class=\"string\">'!a[$0]++'</span> <span class=\"keyword\">file</span></div></pre></td></tr></table></figure>\n<h1 id=\"13、删除指定行\"><a href=\"#13、删除指定行\" class=\"headerlink\" title=\"13、删除指定行\"></a>13、删除指定行</h1><h3 id=\"删除第一行：\"><a href=\"#删除第一行：\" class=\"headerlink\" title=\"删除第一行：\"></a>删除第一行：</h3><figure class=\"highlight gams\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"symbol\">$</span> awk <span class=\"string\">'NR==1&#123;next&#125;&#123;print $0&#125;'</span> <span class=\"keyword\">file</span> #<span class=\"symbol\">$</span><span class=\"number\">0</span>可省略</div><div class=\"line\"><span class=\"symbol\">$</span> awk <span class=\"string\">'NR!=1&#123;print&#125;'</span> <span class=\"keyword\">file</span></div><div class=\"line\"><span class=\"symbol\">$</span> sed <span class=\"string\">'1d'</span> <span class=\"keyword\">file</span></div><div class=\"line\"><span class=\"symbol\">$</span> sed -n <span class=\"string\">'1!p'</span> <span class=\"keyword\">file</span></div></pre></td></tr></table></figure>\n<h1 id=\"14、在指定行前后加一行\"><a href=\"#14、在指定行前后加一行\" class=\"headerlink\" title=\"14、在指定行前后加一行\"></a>14、在指定行前后加一行</h1><h3 id=\"在第二行前一行加txt：\"><a href=\"#在第二行前一行加txt：\" class=\"headerlink\" title=\"在第二行前一行加txt：\"></a>在第二行前一行加txt：</h3><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ awk <span class=\"string\">'NR==2&#123;sub('</span>/.*/<span class=\"string\">',\"txt\\n&amp;\")&#125;&#123;print&#125;'</span> <span class=\"selector-tag\">a</span><span class=\"selector-class\">.txt</span></div><div class=\"line\">$ sed<span class=\"string\">'2s/.*/txt\\n&amp;/'</span> <span class=\"selector-tag\">a</span>.txt</div></pre></td></tr></table></figure>\n<h3 id=\"在第二行后一行加txt：\"><a href=\"#在第二行后一行加txt：\" class=\"headerlink\" title=\"在第二行后一行加txt：\"></a>在第二行后一行加txt：</h3><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ awk <span class=\"string\">'NR==2&#123;sub('</span>/.*/<span class=\"string\">',\"&amp;\\ntxt\")&#125;&#123;print&#125;'</span> <span class=\"selector-tag\">a</span><span class=\"selector-class\">.txt</span></div><div class=\"line\">$ sed<span class=\"string\">'2s/.*/&amp;\\ntxt/'</span> <span class=\"selector-tag\">a</span>.txt</div></pre></td></tr></table></figure>\n<h1 id=\"15、通过IP获取网卡名\"><a href=\"#15、通过IP获取网卡名\" class=\"headerlink\" title=\"15、通过IP获取网卡名\"></a>15、通过IP获取网卡名</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> ifconfig |awk -F<span class=\"string\">'[: ]'</span> <span class=\"string\">'/^eth/&#123;nic=$1&#125;/192.168.18.15/&#123;print nic&#125;'</span></span></div></pre></td></tr></table></figure>\n<h1 id=\"16、浮点数运算（数字46保留小数点）\"><a href=\"#16、浮点数运算（数字46保留小数点）\" class=\"headerlink\" title=\"16、浮点数运算（数字46保留小数点）\"></a>16、浮点数运算（数字46保留小数点）</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> awk <span class=\"string\">'BEGIN&#123;print 46/100&#125;'</span></span></div><div class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> awk <span class=\"string\">'BEGIN&#123;printf \"%.2f\\n\",46/100&#125;'</span></span></div><div class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> <span class=\"built_in\">echo</span> 46|awk <span class=\"string\">'&#123;print $0/100&#125;'</span></span></div><div class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> <span class=\"built_in\">echo</span> <span class=\"string\">'scale=2;46/100'</span> |bc|sed <span class=\"string\">'s/^/0/'</span></span></div><div class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> <span class=\"built_in\">printf</span> <span class=\"string\">\"%.2f\\n\"</span> $(<span class=\"built_in\">echo</span> <span class=\"string\">\"scale=2;46/100\"</span> |bc)</span></div><div class=\"line\"></div><div class=\"line\">结果：0.46</div></pre></td></tr></table></figure>\n<h1 id=\"17、替换换行符为逗号\"><a href=\"#17、替换换行符为逗号\" class=\"headerlink\" title=\"17、替换换行符为逗号\"></a>17、替换换行符为逗号</h1><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ cat a.txt</div><div class=\"line\"><span class=\"number\">1</span></div><div class=\"line\"><span class=\"number\">2</span></div><div class=\"line\"><span class=\"number\">3</span></div><div class=\"line\">替换后：<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span></div></pre></td></tr></table></figure>\n<h3 id=\"方法1：-7\"><a href=\"#方法1：-7\" class=\"headerlink\" title=\"方法1：\"></a>方法1：</h3><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ awk '&#123;s=(s?s<span class=\"string\">\",\"</span><span class=\"variable\">$0</span>:<span class=\"variable\">$0</span>)&#125;END&#123;<span class=\"keyword\">print</span> s&#125;' a.txt</div></pre></td></tr></table></figure>\n<blockquote>\n<p>说明：三目运算符(a?b:c)，第一个s是变量，s?s”,”$0:$0,第一次处理1时，s变量没有赋值初值是0，0为假，结果打印1，第二次处理2时，s值是1，为真，结果1,2。以此类推，小括号可以不写。</p>\n</blockquote>\n<h3 id=\"方法2：-7\"><a href=\"#方法2：-7\" class=\"headerlink\" title=\"方法2：\"></a>方法2：</h3><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ <span class=\"selector-tag\">tr</span> <span class=\"string\">'\\n'</span> <span class=\"string\">','</span> &lt; <span class=\"selector-tag\">a</span>.txt</div></pre></td></tr></table></figure>\n<h3 id=\"方法3：-2\"><a href=\"#方法3：-2\" class=\"headerlink\" title=\"方法3：\"></a>方法3：</h3><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sed <span class=\"comment\">':a;N;s/\\n/,/;$!b a' a.txt</span></div></pre></td></tr></table></figure>\n<blockquote>\n<p>说明：第一个标签a，先读取第一行记录1追加到模式空间，此时模式空间内容是1$，执行$!b（$!最后一行不跳转，b是控制流跳转命令）跳转到a标签，继续读取第二行记录2追加到模式空间，因为使用N命令，每个记录以换行符（\\n）分割，此时模式空间内容是1\\n2$，执行将换行符替换逗号命令，继续跳转到a标签…</p>\n</blockquote>\n<h3 id=\"方法4：-2\"><a href=\"#方法4：-2\" class=\"headerlink\" title=\"方法4：\"></a>方法4：</h3><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sed <span class=\"comment\">':a;$!N;s/\\n/,/;t a' a.txt</span></div></pre></td></tr></table></figure>\n<blockquote>\n<p>说明：与上面类似，其中t是测试命令，当上一个命令（替换）执行成功才跳转。</p>\n</blockquote>\n<h3 id=\"方法5：-1\"><a href=\"#方法5：-1\" class=\"headerlink\" title=\"方法5：\"></a>方法5：</h3><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ awk '&#123;<span class=\"keyword\">if</span>(<span class=\"variable\">$0</span>!=3)printf <span class=\"string\">\"%s,\"</span>,<span class=\"variable\">$0</span>;<span class=\"keyword\">else</span> <span class=\"keyword\">print</span> <span class=\"variable\">$0&#125;</span>' a.txt</div></pre></td></tr></table></figure>\n<blockquote>\n<p>说明：3是文本最后一个数</p>\n<h3 id=\"方法6：\"><a href=\"#方法6：\" class=\"headerlink\" title=\"方法6：\"></a>方法6：</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">while</span> <span class=\"built_in\">read</span> line; <span class=\"keyword\">do</span></div><div class=\"line\">    a+=(<span class=\"variable\">$line</span>)</div><div class=\"line\"><span class=\"keyword\">done</span> &lt; a.txt</div><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;a[*]&#125;</span> |sed <span class=\"string\">'s/ /,/g'</span></div></pre></td></tr></table></figure>\n<p>说明：将每行放到数组，然后替换</p>\n</blockquote>\n<h1 id=\"18、把奇数换行符去掉\"><a href=\"#18、把奇数换行符去掉\" class=\"headerlink\" title=\"18、把奇数换行符去掉\"></a>18、把奇数换行符去掉</h1><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ cat <span class=\"selector-tag\">b</span><span class=\"selector-class\">.txt</span></div><div class=\"line\">string</div><div class=\"line\">number</div><div class=\"line\"><span class=\"selector-tag\">a</span></div><div class=\"line\"><span class=\"number\">1</span></div><div class=\"line\"><span class=\"selector-tag\">b</span></div><div class=\"line\"><span class=\"number\">2</span></div></pre></td></tr></table></figure>\n<h3 id=\"方法1\"><a href=\"#方法1\" class=\"headerlink\" title=\"方法1\"></a>方法1</h3><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ awk <span class=\"string\">'ORS=NR%2?\"\\t\":\"\\n\"'</span> <span class=\"selector-tag\">b</span><span class=\"selector-class\">.txt</span>  #把奇数行换行符去掉</div></pre></td></tr></table></figure>\n<h3 id=\"方法2-1\"><a href=\"#方法2-1\" class=\"headerlink\" title=\"方法2\"></a>方法2</h3><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ xargs -n2 &lt; <span class=\"selector-tag\">a</span><span class=\"selector-class\">.txt</span>  #将两个字段作为一行</div><div class=\"line\">string number</div><div class=\"line\"><span class=\"selector-tag\">a</span> <span class=\"number\">1</span></div><div class=\"line\"><span class=\"selector-tag\">b</span> <span class=\"number\">2</span></div></pre></td></tr></table></figure>\n<h1 id=\"19、费用统计\"><a href=\"#19、费用统计\" class=\"headerlink\" title=\"19、费用统计\"></a>19、费用统计</h1><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ cat a.txt</div><div class=\"line\">姓名             费用   数量</div><div class=\"line\">zhangsan        <span class=\"number\">8000</span>    <span class=\"number\">1</span></div><div class=\"line\">zhangsan        <span class=\"number\">5000</span>    <span class=\"number\">1</span></div><div class=\"line\">lisi            <span class=\"number\">1000</span>    <span class=\"number\">1</span></div><div class=\"line\">lisi            <span class=\"number\">2000</span>    <span class=\"number\">1</span></div><div class=\"line\">wangwu          <span class=\"number\">1500</span>    <span class=\"number\">1</span></div><div class=\"line\">zhaoliu         <span class=\"number\">6000</span>    <span class=\"number\">1</span></div><div class=\"line\">zhaoliu         <span class=\"number\">2000</span>    <span class=\"number\">1</span></div><div class=\"line\">zhaoliu         <span class=\"number\">3000</span>    <span class=\"number\">1</span></div></pre></td></tr></table></figure>\n<h3 id=\"统计每人总费用、总数量：\"><a href=\"#统计每人总费用、总数量：\" class=\"headerlink\" title=\"统计每人总费用、总数量：\"></a>统计每人总费用、总数量：</h3><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ awk '&#123;name[$<span class=\"number\">1</span>]++;number[$<span class=\"number\">1</span>]+=$<span class=\"number\">3</span>;<span class=\"section\">money</span>[$<span class=\"number\">1</span>]+=$<span class=\"number\">2</span>&#125;END&#123;for(i in name)print i,number[i],<span class=\"section\">money</span>[i]&#125;' a.txt</div><div class=\"line\"></div><div class=\"line\">zhaoliu <span class=\"number\">3</span> <span class=\"number\">11000</span></div><div class=\"line\">zhangsan <span class=\"number\">2</span> <span class=\"number\">13000</span></div><div class=\"line\">wangwu <span class=\"number\">1</span> <span class=\"number\">1500</span></div><div class=\"line\">lisi <span class=\"number\">2</span> <span class=\"number\">3000</span></div></pre></td></tr></table></figure>\n<h1 id=\"20、打印乘法口诀\"><a href=\"#20、打印乘法口诀\" class=\"headerlink\" title=\"20、打印乘法口诀\"></a>20、打印乘法口诀</h1><h3 id=\"方法1：-8\"><a href=\"#方法1：-8\" class=\"headerlink\" title=\"方法1：\"></a>方法1：</h3><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ awk 'BEGIN&#123;for(n=<span class=\"number\">0</span>;n++&lt;<span class=\"number\">9</span>;)&#123;for(i=<span class=\"number\">0</span>;i++&lt;n;)printf i<span class=\"string\">\"x\"</span>n<span class=\"string\">\"=\"</span>i*n<span class=\"string\">\" \"</span>;print <span class=\"string\">\"\"</span>&#125;&#125;'</div><div class=\"line\"></div><div class=\"line\"><span class=\"number\">1</span>x1=<span class=\"number\">1</span></div><div class=\"line\"><span class=\"number\">1</span>x2=<span class=\"number\">2</span> <span class=\"number\">2</span>x2=<span class=\"number\">4</span></div><div class=\"line\"><span class=\"number\">1</span>x3=<span class=\"number\">3</span> <span class=\"number\">2</span>x3=<span class=\"number\">6</span> <span class=\"number\">3</span>x3=<span class=\"number\">9</span></div><div class=\"line\"><span class=\"number\">1</span>x4=<span class=\"number\">4</span> <span class=\"number\">2</span>x4=<span class=\"number\">8</span> <span class=\"number\">3</span>x4=<span class=\"number\">12</span> <span class=\"number\">4</span>x4=<span class=\"number\">16</span></div><div class=\"line\"><span class=\"number\">1</span>x5=<span class=\"number\">5</span> <span class=\"number\">2</span>x5=<span class=\"number\">10</span> <span class=\"number\">3</span>x5=<span class=\"number\">15</span> <span class=\"number\">4</span>x5=<span class=\"number\">20</span> <span class=\"number\">5</span>x5=<span class=\"number\">25</span></div><div class=\"line\"><span class=\"number\">1</span>x6=<span class=\"number\">6</span> <span class=\"number\">2</span>x6=<span class=\"number\">12</span> <span class=\"number\">3</span>x6=<span class=\"number\">18</span> <span class=\"number\">4</span>x6=<span class=\"number\">24</span> <span class=\"number\">5</span>x6=<span class=\"number\">30</span> <span class=\"number\">6</span>x6=<span class=\"number\">36</span></div><div class=\"line\"><span class=\"number\">1</span>x7=<span class=\"number\">7</span> <span class=\"number\">2</span>x7=<span class=\"number\">14</span> <span class=\"number\">3</span>x7=<span class=\"number\">21</span> <span class=\"number\">4</span>x7=<span class=\"number\">28</span> <span class=\"number\">5</span>x7=<span class=\"number\">35</span> <span class=\"number\">6</span>x7=<span class=\"number\">42</span> <span class=\"number\">7</span>x7=<span class=\"number\">49</span></div><div class=\"line\"><span class=\"number\">1</span>x8=<span class=\"number\">8</span> <span class=\"number\">2</span>x8=<span class=\"number\">16</span> <span class=\"number\">3</span>x8=<span class=\"number\">24</span> <span class=\"number\">4</span>x8=<span class=\"number\">32</span> <span class=\"number\">5</span>x8=<span class=\"number\">40</span> <span class=\"number\">6</span>x8=<span class=\"number\">48</span> <span class=\"number\">7</span>x8=<span class=\"number\">56</span> <span class=\"number\">8</span>x8=<span class=\"number\">64</span></div><div class=\"line\"><span class=\"number\">1</span>x9=<span class=\"number\">9</span> <span class=\"number\">2</span>x9=<span class=\"number\">18</span> <span class=\"number\">3</span>x9=<span class=\"number\">27</span> <span class=\"number\">4</span>x9=<span class=\"number\">36</span> <span class=\"number\">5</span>x9=<span class=\"number\">45</span> <span class=\"number\">6</span>x9=<span class=\"number\">54</span> <span class=\"number\">7</span>x9=<span class=\"number\">63</span> <span class=\"number\">8</span>x9=<span class=\"number\">72</span> <span class=\"number\">9</span>x9=<span class=\"number\">81</span></div></pre></td></tr></table></figure>\n<h3 id=\"方法2：-8\"><a href=\"#方法2：-8\" class=\"headerlink\" title=\"方法2：\"></a>方法2：</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#!/bin/bash</span></div><div class=\"line\"><span class=\"keyword\">for</span> ((i=1;i&lt;=9;i++)); <span class=\"keyword\">do</span></div><div class=\"line\">   <span class=\"keyword\">for</span> ((j=1;j&lt;=i;j++)); <span class=\"keyword\">do</span></div><div class=\"line\">     result=$((<span class=\"variable\">$i</span>*<span class=\"variable\">$j</span>))</div><div class=\"line\">     <span class=\"comment\">#let \"result=i*j\"</span></div><div class=\"line\">     <span class=\"built_in\">echo</span> -n <span class=\"string\">\"<span class=\"variable\">$i</span>*<span class=\"variable\">$j</span>=<span class=\"variable\">$result</span> \"</span></div><div class=\"line\">   <span class=\"keyword\">done</span></div><div class=\"line\">   <span class=\"built_in\">echo</span></div><div class=\"line\"><span class=\"keyword\">done</span></div></pre></td></tr></table></figure>\n<h1 id=\"21、只打印奇数或偶数行\"><a href=\"#21、只打印奇数或偶数行\" class=\"headerlink\" title=\"21、只打印奇数或偶数行\"></a>21、只打印奇数或偶数行</h1><h3 id=\"打印奇数行：\"><a href=\"#打印奇数行：\" class=\"headerlink\" title=\"打印奇数行：\"></a>打印奇数行：</h3><h4 id=\"方法1：-9\"><a href=\"#方法1：-9\" class=\"headerlink\" title=\"方法1：\"></a>方法1：</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> seq 1 5 |awk <span class=\"string\">'i=!i'</span></span></div></pre></td></tr></table></figure>\n<blockquote>\n<p>说明：先知道对于数值运算，未定义变量初值为0，对于字符运算，未定义变量初值为空字符串。<br>读取第一行记录，然后进行模式匹配，i是未定义变量，也就是i=!0，!取反意思。感叹号右边是个布尔值，0或空字符串为假，非0或非空字符串为真，!0就是真，因此i=1，条件为真打印第一条记录。<br>没有print为什么会打印呢？因为模式后面没有动作，默认会打印整条记录。<br>读取第二行记录，进行模式匹配，因为上次i的值由0变成了1，此时就是i=!1，条件为假不打印。<br>读取第三行记录，因为上次条件为假，i恢复初值为0，继续打印。以此类推…<br>可以看出，运算时并没有判断记录，而是利用布尔值真假判断。</p>\n</blockquote>\n<h4 id=\"方法2：-9\"><a href=\"#方法2：-9\" class=\"headerlink\" title=\"方法2：\"></a>方法2：</h4><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ seq <span class=\"number\">1</span> <span class=\"number\">5</span> |awk 'NR%<span class=\"number\">2</span>!=<span class=\"number\">0</span>'</div></pre></td></tr></table></figure>\n<h4 id=\"方法3：-3\"><a href=\"#方法3：-3\" class=\"headerlink\" title=\"方法3：\"></a>方法3：</h4><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ seq <span class=\"number\">1</span> <span class=\"number\">5</span> |sed -n '<span class=\"number\">1</span>~<span class=\"number\">2</span>p'</div></pre></td></tr></table></figure>\n<blockquote>\n<p>说明：步长，每隔一行打印一次</p>\n</blockquote>\n<h4 id=\"方法4：-3\"><a href=\"#方法4：-3\" class=\"headerlink\" title=\"方法4：\"></a>方法4：</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> seq 1 5 |sed -n <span class=\"string\">'p;n'</span></span></div></pre></td></tr></table></figure>\n<blockquote>\n<p>说明：先打印第一行，执行n命令读取当前行的下一行2，放到模式空间，后面再没有打印模式空间行操作，所以只保存不打印，同等方式继续打印第三行。</p>\n</blockquote>\n<h3 id=\"结果\"><a href=\"#结果\" class=\"headerlink\" title=\"结果\"></a>结果</h3><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"number\">1</span></div><div class=\"line\"><span class=\"number\">3</span></div><div class=\"line\"><span class=\"number\">5</span></div></pre></td></tr></table></figure>\n<h2 id=\"打印偶数行：\"><a href=\"#打印偶数行：\" class=\"headerlink\" title=\"打印偶数行：\"></a>打印偶数行：</h2><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ seq <span class=\"number\">1</span> <span class=\"number\">5</span> |awk '!(i=!i)'</div><div class=\"line\">$ seq <span class=\"number\">1</span> <span class=\"number\">5</span> |awk 'NR%<span class=\"number\">2</span>==<span class=\"number\">0</span>'</div><div class=\"line\">$ seq <span class=\"number\">1</span> <span class=\"number\">5</span> |sed -n '<span class=\"number\">0</span>~<span class=\"number\">2</span>p'</div><div class=\"line\">$ seq <span class=\"number\">1</span> <span class=\"number\">5</span> |sed -n 'n;p'</div></pre></td></tr></table></figure>\n<blockquote>\n<p>说明：读取当前行的下一行2，放到模式空间，使用p命令打印模式空间的行，输出2。</p>\n</blockquote>\n<p>原文地址:<a href=\"http://lizhenliang.blog.51cto.com/7876557/1764025\" target=\"_blank\" rel=\"external\">点我</a></p>"},{"title":"ssh主机互信","abbrlink":"c34b8b4a","date":"2016-07-03T08:02:32.000Z","_content":"# 什么是linux主机互信\n\n>Linux主机互信，就是主机之间相互信任，什么是信任，就像人与人之间一样，不需要利用金钱等（除了你自己以外其他的东西）来取得对方的信任，大家相互信任对方，不需要额外的凭证。就好比你，你的家人之间，不需要钱来维持你们之间的信任。同样，linux主机之间也是，我们从一台主机登陆到另一台时，往往需要验证你，需要你输入用户密码，才允许你登陆。这样在多台机器之间来回切换登陆就会频繁输入密码，非常麻烦，看看，一切的根源来自于互不信任。可不可以不用输入密码就直接登陆呢？答案是可以，但条件是主机之间相互信任对方。\n<!-- more -->\n因此ssh互信就诞生了。我们在主机值之间配置了公钥认证后，也就是取得信任之后，就不必再输入密码了（当然实际上是ssh使用rsa算法帮你完成了验证过程）。\n\n# 公钥认证的基本思想\n\n>对信息的加密和解密采用不同的key，这对key分别称作private key和publickey，其中，public key存放在欲登录的服务器上，而privatekey为特定的客户机所持有。当客户机向服务器发出建立安全连接的请求时，首先发送自己的public key，如果这个public key是被服务器所允许的，服务器就发送一个经过public key加密的随机数据给客户机，这个数据只能通过private key解密，客户机将解密后的信息发还给服务器，服务器验证正确后即确认客户机是可信任的，从而建立起一条安全的信息通道。通过这种方式，客户机不需要向外发送自己的身份标志“private key”即可达到校验的目的，并且private key是不能通过public key反向推断出来的。这避免了网络窃听可能造成的密码泄露。客户机需要小心的保存自己的private key，以免被其他人窃取，一旦这样的事情发生，就需要各服务器更换受信的publickey列表。\n\n>使用过github的用户就会知道，用git登陆远程仓库github的时候，也会有公钥认证（当然是首次使用git时），首次使用git，就会要求你在客户端生成一个rsa key pairs，一个public-key存放于id_rsa.pub，一个private-key存放于id_rsa，并且上传你的公钥public-key到github上，这样做的目的就是你可以取得github的信任，也就是github信任你，下次你登录的时候，github会使用你上传的公钥来验证你的身份，从而不用输入密码。当然这个过程只是单向的信任，也就是github现在信任你，但是你并没有建立对github的信任，需要建立么，其实没有必要，因为github是不会主动向你发出请求的，大多数情况是你需要主动向github发送请求。\n\n>知道了单向信任，那么相互信任就简单了，就是主机之间的公钥都要告知对方，这样才能相互信任，你信任我，我信任你。那么，以下就是互信建立的步骤了：\n\n# 配置ssh互信的步骤如下\n\n互信的原理了解了，我们可以把配置ssh互信的步骤进行有效的分割。\n1.在要配置互信的机器(web-1和web-2)上生成各自经过认证的key文件。\n2.将所有的key文件汇总到一个总的认证文件夹中。\n3.将打包的key发给想要进行互信的机器(web-1,web-2)\n4.互信的验证\n \n经过分析，思路变的清晰了，下面我们动手来实际操作：\n1.在两台机器上生成认证文件，就是ssh互信的认证文件，需要放在用户的home目录中，所以我们需要先创建这个目录，且保证这个目录的权限为755\n```\n[root@web-1 ~]# mkdir ~/.ssh\n[root@web-1 ~]# chmod 755 ~/.ssh\n[root@web-1 ~]# /usr/bin/ssh-keygen -t rsa ＃下面默认回车就行\n[root@web-1 ~]# /usr/bin/ssh-keygen -t dsa\n \n[root@web-2 ~]# mkdir ~/.ssh\n[root@web-2 ~]# chmod 755 ~/.ssh\n[root@web-2 ~]# /usr/bin/ssh-keygen -t rsa\n[root@web-2 ~]# /usr/bin/ssh-keygen -t dsa\n ```\n2.必须将每个主机上的公共密钥文件id_rsa.pub和id_dsa.pub的内容复制到其他每一个主机的~/.ssh/authorized_keys文件中。注意，当您第一次使用ssh访问远程主机时，其RSA密钥是未知的，所以提示确认一下，确认完毕后SSH将纪录远程主机的RSA密钥，以后连接该主机将不再做出相应的提示。\n```\n[root@web-1 ~]# cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys\n[root@web-1 ~]# cat ~/.ssh/id_dsa.pub >> ~/.ssh/authorized_keys\n[root@web-1 ~]# ssh root@web-2 cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys\n[root@web-1 ~]# ssh root@web-2 cat ~/.ssh/id_dsa.pub >> ~/.ssh/authorized_keys\n ```\n3.经过上述两步，在web-1上存了一份完整的key认证文件，我们只需要把这个目录拷贝到web-2这台机器的对应目录里去就可以了，别忘了把authorized_keys 的权限设置成600\n```\n[root@web-1 ~]# scp ~/.ssh/authorized_keys web-2:~/.ssh/authorized_keys\n[root@web-1 ~]# chmod 600 ~/.ssh/authorized_keys\n```\n","source":"_posts/2016-07-03-ssh互信.md","raw":"---\ntitle: ssh主机互信\ncategories: 实践与总结\ntag: 实践与总结\nabbrlink: c34b8b4a\ndate: 2016-07-03 16:02:32\n---\n# 什么是linux主机互信\n\n>Linux主机互信，就是主机之间相互信任，什么是信任，就像人与人之间一样，不需要利用金钱等（除了你自己以外其他的东西）来取得对方的信任，大家相互信任对方，不需要额外的凭证。就好比你，你的家人之间，不需要钱来维持你们之间的信任。同样，linux主机之间也是，我们从一台主机登陆到另一台时，往往需要验证你，需要你输入用户密码，才允许你登陆。这样在多台机器之间来回切换登陆就会频繁输入密码，非常麻烦，看看，一切的根源来自于互不信任。可不可以不用输入密码就直接登陆呢？答案是可以，但条件是主机之间相互信任对方。\n<!-- more -->\n因此ssh互信就诞生了。我们在主机值之间配置了公钥认证后，也就是取得信任之后，就不必再输入密码了（当然实际上是ssh使用rsa算法帮你完成了验证过程）。\n\n# 公钥认证的基本思想\n\n>对信息的加密和解密采用不同的key，这对key分别称作private key和publickey，其中，public key存放在欲登录的服务器上，而privatekey为特定的客户机所持有。当客户机向服务器发出建立安全连接的请求时，首先发送自己的public key，如果这个public key是被服务器所允许的，服务器就发送一个经过public key加密的随机数据给客户机，这个数据只能通过private key解密，客户机将解密后的信息发还给服务器，服务器验证正确后即确认客户机是可信任的，从而建立起一条安全的信息通道。通过这种方式，客户机不需要向外发送自己的身份标志“private key”即可达到校验的目的，并且private key是不能通过public key反向推断出来的。这避免了网络窃听可能造成的密码泄露。客户机需要小心的保存自己的private key，以免被其他人窃取，一旦这样的事情发生，就需要各服务器更换受信的publickey列表。\n\n>使用过github的用户就会知道，用git登陆远程仓库github的时候，也会有公钥认证（当然是首次使用git时），首次使用git，就会要求你在客户端生成一个rsa key pairs，一个public-key存放于id_rsa.pub，一个private-key存放于id_rsa，并且上传你的公钥public-key到github上，这样做的目的就是你可以取得github的信任，也就是github信任你，下次你登录的时候，github会使用你上传的公钥来验证你的身份，从而不用输入密码。当然这个过程只是单向的信任，也就是github现在信任你，但是你并没有建立对github的信任，需要建立么，其实没有必要，因为github是不会主动向你发出请求的，大多数情况是你需要主动向github发送请求。\n\n>知道了单向信任，那么相互信任就简单了，就是主机之间的公钥都要告知对方，这样才能相互信任，你信任我，我信任你。那么，以下就是互信建立的步骤了：\n\n# 配置ssh互信的步骤如下\n\n互信的原理了解了，我们可以把配置ssh互信的步骤进行有效的分割。\n1.在要配置互信的机器(web-1和web-2)上生成各自经过认证的key文件。\n2.将所有的key文件汇总到一个总的认证文件夹中。\n3.将打包的key发给想要进行互信的机器(web-1,web-2)\n4.互信的验证\n \n经过分析，思路变的清晰了，下面我们动手来实际操作：\n1.在两台机器上生成认证文件，就是ssh互信的认证文件，需要放在用户的home目录中，所以我们需要先创建这个目录，且保证这个目录的权限为755\n```\n[root@web-1 ~]# mkdir ~/.ssh\n[root@web-1 ~]# chmod 755 ~/.ssh\n[root@web-1 ~]# /usr/bin/ssh-keygen -t rsa ＃下面默认回车就行\n[root@web-1 ~]# /usr/bin/ssh-keygen -t dsa\n \n[root@web-2 ~]# mkdir ~/.ssh\n[root@web-2 ~]# chmod 755 ~/.ssh\n[root@web-2 ~]# /usr/bin/ssh-keygen -t rsa\n[root@web-2 ~]# /usr/bin/ssh-keygen -t dsa\n ```\n2.必须将每个主机上的公共密钥文件id_rsa.pub和id_dsa.pub的内容复制到其他每一个主机的~/.ssh/authorized_keys文件中。注意，当您第一次使用ssh访问远程主机时，其RSA密钥是未知的，所以提示确认一下，确认完毕后SSH将纪录远程主机的RSA密钥，以后连接该主机将不再做出相应的提示。\n```\n[root@web-1 ~]# cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys\n[root@web-1 ~]# cat ~/.ssh/id_dsa.pub >> ~/.ssh/authorized_keys\n[root@web-1 ~]# ssh root@web-2 cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys\n[root@web-1 ~]# ssh root@web-2 cat ~/.ssh/id_dsa.pub >> ~/.ssh/authorized_keys\n ```\n3.经过上述两步，在web-1上存了一份完整的key认证文件，我们只需要把这个目录拷贝到web-2这台机器的对应目录里去就可以了，别忘了把authorized_keys 的权限设置成600\n```\n[root@web-1 ~]# scp ~/.ssh/authorized_keys web-2:~/.ssh/authorized_keys\n[root@web-1 ~]# chmod 600 ~/.ssh/authorized_keys\n```\n","slug":"2016-07-03-ssh互信","published":1,"updated":"2017-02-14T13:42:45.401Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5mkehr40011ao94zxkwvkzy","content":"<h1 id=\"什么是linux主机互信\"><a href=\"#什么是linux主机互信\" class=\"headerlink\" title=\"什么是linux主机互信\"></a>什么是linux主机互信</h1><blockquote>\n<p>Linux主机互信，就是主机之间相互信任，什么是信任，就像人与人之间一样，不需要利用金钱等（除了你自己以外其他的东西）来取得对方的信任，大家相互信任对方，不需要额外的凭证。就好比你，你的家人之间，不需要钱来维持你们之间的信任。同样，linux主机之间也是，我们从一台主机登陆到另一台时，往往需要验证你，需要你输入用户密码，才允许你登陆。这样在多台机器之间来回切换登陆就会频繁输入密码，非常麻烦，看看，一切的根源来自于互不信任。可不可以不用输入密码就直接登陆呢？答案是可以，但条件是主机之间相互信任对方。<br><a id=\"more\"></a><br>因此ssh互信就诞生了。我们在主机值之间配置了公钥认证后，也就是取得信任之后，就不必再输入密码了（当然实际上是ssh使用rsa算法帮你完成了验证过程）。</p>\n</blockquote>\n<h1 id=\"公钥认证的基本思想\"><a href=\"#公钥认证的基本思想\" class=\"headerlink\" title=\"公钥认证的基本思想\"></a>公钥认证的基本思想</h1><blockquote>\n<p>对信息的加密和解密采用不同的key，这对key分别称作private key和publickey，其中，public key存放在欲登录的服务器上，而privatekey为特定的客户机所持有。当客户机向服务器发出建立安全连接的请求时，首先发送自己的public key，如果这个public key是被服务器所允许的，服务器就发送一个经过public key加密的随机数据给客户机，这个数据只能通过private key解密，客户机将解密后的信息发还给服务器，服务器验证正确后即确认客户机是可信任的，从而建立起一条安全的信息通道。通过这种方式，客户机不需要向外发送自己的身份标志“private key”即可达到校验的目的，并且private key是不能通过public key反向推断出来的。这避免了网络窃听可能造成的密码泄露。客户机需要小心的保存自己的private key，以免被其他人窃取，一旦这样的事情发生，就需要各服务器更换受信的publickey列表。</p>\n<p>使用过github的用户就会知道，用git登陆远程仓库github的时候，也会有公钥认证（当然是首次使用git时），首次使用git，就会要求你在客户端生成一个rsa key pairs，一个public-key存放于id_rsa.pub，一个private-key存放于id_rsa，并且上传你的公钥public-key到github上，这样做的目的就是你可以取得github的信任，也就是github信任你，下次你登录的时候，github会使用你上传的公钥来验证你的身份，从而不用输入密码。当然这个过程只是单向的信任，也就是github现在信任你，但是你并没有建立对github的信任，需要建立么，其实没有必要，因为github是不会主动向你发出请求的，大多数情况是你需要主动向github发送请求。</p>\n<p>知道了单向信任，那么相互信任就简单了，就是主机之间的公钥都要告知对方，这样才能相互信任，你信任我，我信任你。那么，以下就是互信建立的步骤了：</p>\n</blockquote>\n<h1 id=\"配置ssh互信的步骤如下\"><a href=\"#配置ssh互信的步骤如下\" class=\"headerlink\" title=\"配置ssh互信的步骤如下\"></a>配置ssh互信的步骤如下</h1><p>互信的原理了解了，我们可以把配置ssh互信的步骤进行有效的分割。<br>1.在要配置互信的机器(web-1和web-2)上生成各自经过认证的key文件。<br>2.将所有的key文件汇总到一个总的认证文件夹中。<br>3.将打包的key发给想要进行互信的机器(web-1,web-2)<br>4.互信的验证</p>\n<p>经过分析，思路变的清晰了，下面我们动手来实际操作：<br>1.在两台机器上生成认证文件，就是ssh互信的认证文件，需要放在用户的home目录中，所以我们需要先创建这个目录，且保证这个目录的权限为755<br><figure class=\"highlight autoit\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root<span class=\"symbol\">@web</span><span class=\"number\">-1</span> ~]<span class=\"meta\"># mkdir ~/.ssh</span></div><div class=\"line\">[root<span class=\"symbol\">@web</span><span class=\"number\">-1</span> ~]<span class=\"meta\"># chmod 755 ~/.ssh</span></div><div class=\"line\">[root<span class=\"symbol\">@web</span><span class=\"number\">-1</span> ~]<span class=\"meta\"># /usr/bin/ssh-keygen -t rsa ＃下面默认回车就行</span></div><div class=\"line\">[root<span class=\"symbol\">@web</span><span class=\"number\">-1</span> ~]<span class=\"meta\"># /usr/bin/ssh-keygen -t dsa</span></div><div class=\"line\"> </div><div class=\"line\">[root<span class=\"symbol\">@web</span><span class=\"number\">-2</span> ~]<span class=\"meta\"># mkdir ~/.ssh</span></div><div class=\"line\">[root<span class=\"symbol\">@web</span><span class=\"number\">-2</span> ~]<span class=\"meta\"># chmod 755 ~/.ssh</span></div><div class=\"line\">[root<span class=\"symbol\">@web</span><span class=\"number\">-2</span> ~]<span class=\"meta\"># /usr/bin/ssh-keygen -t rsa</span></div><div class=\"line\">[root<span class=\"symbol\">@web</span><span class=\"number\">-2</span> ~]<span class=\"meta\"># /usr/bin/ssh-keygen -t dsa</span></div></pre></td></tr></table></figure></p>\n<p>2.必须将每个主机上的公共密钥文件id_rsa.pub和id_dsa.pub的内容复制到其他每一个主机的~/.ssh/authorized_keys文件中。注意，当您第一次使用ssh访问远程主机时，其RSA密钥是未知的，所以提示确认一下，确认完毕后SSH将纪录远程主机的RSA密钥，以后连接该主机将不再做出相应的提示。<br><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root<span class=\"meta\">@web</span><span class=\"number\">-1</span> ~]# cat ~<span class=\"regexp\">/.ssh/i</span>d_rsa.pub &gt;&gt; ~<span class=\"regexp\">/.ssh/</span>authorized_keys</div><div class=\"line\">[root<span class=\"meta\">@web</span><span class=\"number\">-1</span> ~]# cat ~<span class=\"regexp\">/.ssh/i</span>d_dsa.pub &gt;&gt; ~<span class=\"regexp\">/.ssh/</span>authorized_keys</div><div class=\"line\">[root<span class=\"meta\">@web</span><span class=\"number\">-1</span> ~]# ssh root<span class=\"meta\">@web</span><span class=\"number\">-2</span> cat ~<span class=\"regexp\">/.ssh/i</span>d_rsa.pub &gt;&gt; ~<span class=\"regexp\">/.ssh/</span>authorized_keys</div><div class=\"line\">[root<span class=\"meta\">@web</span><span class=\"number\">-1</span> ~]# ssh root<span class=\"meta\">@web</span><span class=\"number\">-2</span> cat ~<span class=\"regexp\">/.ssh/i</span>d_dsa.pub &gt;&gt; ~<span class=\"regexp\">/.ssh/</span>authorized_keys</div></pre></td></tr></table></figure></p>\n<p>3.经过上述两步，在web-1上存了一份完整的key认证文件，我们只需要把这个目录拷贝到web-2这台机器的对应目录里去就可以了，别忘了把authorized_keys 的权限设置成600<br><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root<span class=\"meta\">@web</span><span class=\"number\">-1</span> ~]# scp ~<span class=\"regexp\">/.ssh/</span>authorized_keys web<span class=\"number\">-2</span>:~<span class=\"regexp\">/.ssh/</span>authorized_keys</div><div class=\"line\">[root<span class=\"meta\">@web</span><span class=\"number\">-1</span> ~]# chmod <span class=\"number\">600</span> ~<span class=\"regexp\">/.ssh/</span>authorized_keys</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<h1 id=\"什么是linux主机互信\"><a href=\"#什么是linux主机互信\" class=\"headerlink\" title=\"什么是linux主机互信\"></a>什么是linux主机互信</h1><blockquote>\n<p>Linux主机互信，就是主机之间相互信任，什么是信任，就像人与人之间一样，不需要利用金钱等（除了你自己以外其他的东西）来取得对方的信任，大家相互信任对方，不需要额外的凭证。就好比你，你的家人之间，不需要钱来维持你们之间的信任。同样，linux主机之间也是，我们从一台主机登陆到另一台时，往往需要验证你，需要你输入用户密码，才允许你登陆。这样在多台机器之间来回切换登陆就会频繁输入密码，非常麻烦，看看，一切的根源来自于互不信任。可不可以不用输入密码就直接登陆呢？答案是可以，但条件是主机之间相互信任对方。<br>","more":"<br>因此ssh互信就诞生了。我们在主机值之间配置了公钥认证后，也就是取得信任之后，就不必再输入密码了（当然实际上是ssh使用rsa算法帮你完成了验证过程）。</p>\n</blockquote>\n<h1 id=\"公钥认证的基本思想\"><a href=\"#公钥认证的基本思想\" class=\"headerlink\" title=\"公钥认证的基本思想\"></a>公钥认证的基本思想</h1><blockquote>\n<p>对信息的加密和解密采用不同的key，这对key分别称作private key和publickey，其中，public key存放在欲登录的服务器上，而privatekey为特定的客户机所持有。当客户机向服务器发出建立安全连接的请求时，首先发送自己的public key，如果这个public key是被服务器所允许的，服务器就发送一个经过public key加密的随机数据给客户机，这个数据只能通过private key解密，客户机将解密后的信息发还给服务器，服务器验证正确后即确认客户机是可信任的，从而建立起一条安全的信息通道。通过这种方式，客户机不需要向外发送自己的身份标志“private key”即可达到校验的目的，并且private key是不能通过public key反向推断出来的。这避免了网络窃听可能造成的密码泄露。客户机需要小心的保存自己的private key，以免被其他人窃取，一旦这样的事情发生，就需要各服务器更换受信的publickey列表。</p>\n<p>使用过github的用户就会知道，用git登陆远程仓库github的时候，也会有公钥认证（当然是首次使用git时），首次使用git，就会要求你在客户端生成一个rsa key pairs，一个public-key存放于id_rsa.pub，一个private-key存放于id_rsa，并且上传你的公钥public-key到github上，这样做的目的就是你可以取得github的信任，也就是github信任你，下次你登录的时候，github会使用你上传的公钥来验证你的身份，从而不用输入密码。当然这个过程只是单向的信任，也就是github现在信任你，但是你并没有建立对github的信任，需要建立么，其实没有必要，因为github是不会主动向你发出请求的，大多数情况是你需要主动向github发送请求。</p>\n<p>知道了单向信任，那么相互信任就简单了，就是主机之间的公钥都要告知对方，这样才能相互信任，你信任我，我信任你。那么，以下就是互信建立的步骤了：</p>\n</blockquote>\n<h1 id=\"配置ssh互信的步骤如下\"><a href=\"#配置ssh互信的步骤如下\" class=\"headerlink\" title=\"配置ssh互信的步骤如下\"></a>配置ssh互信的步骤如下</h1><p>互信的原理了解了，我们可以把配置ssh互信的步骤进行有效的分割。<br>1.在要配置互信的机器(web-1和web-2)上生成各自经过认证的key文件。<br>2.将所有的key文件汇总到一个总的认证文件夹中。<br>3.将打包的key发给想要进行互信的机器(web-1,web-2)<br>4.互信的验证</p>\n<p>经过分析，思路变的清晰了，下面我们动手来实际操作：<br>1.在两台机器上生成认证文件，就是ssh互信的认证文件，需要放在用户的home目录中，所以我们需要先创建这个目录，且保证这个目录的权限为755<br><figure class=\"highlight autoit\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root<span class=\"symbol\">@web</span><span class=\"number\">-1</span> ~]<span class=\"meta\"># mkdir ~/.ssh</span></div><div class=\"line\">[root<span class=\"symbol\">@web</span><span class=\"number\">-1</span> ~]<span class=\"meta\"># chmod 755 ~/.ssh</span></div><div class=\"line\">[root<span class=\"symbol\">@web</span><span class=\"number\">-1</span> ~]<span class=\"meta\"># /usr/bin/ssh-keygen -t rsa ＃下面默认回车就行</span></div><div class=\"line\">[root<span class=\"symbol\">@web</span><span class=\"number\">-1</span> ~]<span class=\"meta\"># /usr/bin/ssh-keygen -t dsa</span></div><div class=\"line\"> </div><div class=\"line\">[root<span class=\"symbol\">@web</span><span class=\"number\">-2</span> ~]<span class=\"meta\"># mkdir ~/.ssh</span></div><div class=\"line\">[root<span class=\"symbol\">@web</span><span class=\"number\">-2</span> ~]<span class=\"meta\"># chmod 755 ~/.ssh</span></div><div class=\"line\">[root<span class=\"symbol\">@web</span><span class=\"number\">-2</span> ~]<span class=\"meta\"># /usr/bin/ssh-keygen -t rsa</span></div><div class=\"line\">[root<span class=\"symbol\">@web</span><span class=\"number\">-2</span> ~]<span class=\"meta\"># /usr/bin/ssh-keygen -t dsa</span></div></pre></td></tr></table></figure></p>\n<p>2.必须将每个主机上的公共密钥文件id_rsa.pub和id_dsa.pub的内容复制到其他每一个主机的~/.ssh/authorized_keys文件中。注意，当您第一次使用ssh访问远程主机时，其RSA密钥是未知的，所以提示确认一下，确认完毕后SSH将纪录远程主机的RSA密钥，以后连接该主机将不再做出相应的提示。<br><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root<span class=\"meta\">@web</span><span class=\"number\">-1</span> ~]# cat ~<span class=\"regexp\">/.ssh/i</span>d_rsa.pub &gt;&gt; ~<span class=\"regexp\">/.ssh/</span>authorized_keys</div><div class=\"line\">[root<span class=\"meta\">@web</span><span class=\"number\">-1</span> ~]# cat ~<span class=\"regexp\">/.ssh/i</span>d_dsa.pub &gt;&gt; ~<span class=\"regexp\">/.ssh/</span>authorized_keys</div><div class=\"line\">[root<span class=\"meta\">@web</span><span class=\"number\">-1</span> ~]# ssh root<span class=\"meta\">@web</span><span class=\"number\">-2</span> cat ~<span class=\"regexp\">/.ssh/i</span>d_rsa.pub &gt;&gt; ~<span class=\"regexp\">/.ssh/</span>authorized_keys</div><div class=\"line\">[root<span class=\"meta\">@web</span><span class=\"number\">-1</span> ~]# ssh root<span class=\"meta\">@web</span><span class=\"number\">-2</span> cat ~<span class=\"regexp\">/.ssh/i</span>d_dsa.pub &gt;&gt; ~<span class=\"regexp\">/.ssh/</span>authorized_keys</div></pre></td></tr></table></figure></p>\n<p>3.经过上述两步，在web-1上存了一份完整的key认证文件，我们只需要把这个目录拷贝到web-2这台机器的对应目录里去就可以了，别忘了把authorized_keys 的权限设置成600<br><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root<span class=\"meta\">@web</span><span class=\"number\">-1</span> ~]# scp ~<span class=\"regexp\">/.ssh/</span>authorized_keys web<span class=\"number\">-2</span>:~<span class=\"regexp\">/.ssh/</span>authorized_keys</div><div class=\"line\">[root<span class=\"meta\">@web</span><span class=\"number\">-1</span> ~]# chmod <span class=\"number\">600</span> ~<span class=\"regexp\">/.ssh/</span>authorized_keys</div></pre></td></tr></table></figure></p>"},{"title":"TCP三次握手四次挥手详解","abbrlink":"c3aadb","date":"2016-07-03T08:02:32.000Z","_content":"\n# TCP报文格式\nTCP/IP协议的详细信息参看[《TCP/IP协议详解》三卷本](https://book.douban.com/subject/1058634/)。下面是TCP报文格式图：\n<!-- more -->\n![TCP格式图](http://o9c1bfnxp.bkt.clouddn.com/2016-07-tcpip/tcpgeshi.png)\n\n上图中有几个字段需要重点介绍下：\n```\n（1）序号：Seq序号，占32位，用来标识从TCP源端向目的端发送的字节流，发起方发送数据时对此进行标记。\n（2）确认序号：Ack序号，占32位，只有ACK标志位为1时，确认序号字段才有效，Ack=Seq+1。\n（3）标志位：共6个，即URG、ACK、PSH、RST、SYN、FIN等，\t具体含义如下：\n\t（A）URG：紧急指针（urgent pointer）有效。\n\t（B）ACK：确认序号有效。\n\t（C）PSH：接收方应该尽快将这个报文交给应用层。\n\t（D）RST：重置连接。\n\t（E）SYN：发起一个新连接。\n\t（F）FIN：释放一个连接。\n```\n> 需要注意的是：\n\n    （A）不要将确认序号Ack与标志位中的ACK搞混了。\n    （B）确认方Ack=发起方Req+1，两端配对。\n\n# 三次握手\n> 所谓三次握手（Three-Way Handshake）即建立TCP连接，就是指建立一个TCP连接时，需要客户端和服务端总共发送3个包以确认连接的建立。在socket编程中，这一过程由客户端执行connect来触发，整个流程如下图所示：\n\n\n![](http://o9c1bfnxp.bkt.clouddn.com/2016-07-tcpip/woshou.png)\n\n## （1）第一次握手：\n> Client将标志位SYN置为1，随机产生一个值seq=J，并将该数据包发送给Server，Client进入SYN_SENT状态，等待Server确认。\n\n## （2）第二次握手：\n> Server收到数据包后由标志位SYN=1知道Client请求建立连接，Server将标志位SYN和ACK都置为1，ack=J+1，随机产生一个值seq=K，并将该数据包发送给Client以确认连接请求，Server进入SYN_RCVD状态。\n\n## （3）第三次握手：\n> Client收到确认后，检查ack是否为J+1，ACK是否为1，如果正确则将标志位ACK置为1，ack=K+1，并将该数据包发送给Server，Server检查ack是否为K+1，ACK是否为1，如果正确则连接建立成功，Client和Server进入ESTABLISHED状态，完成三次握手，随后Client与Server之间可以开始传输数据了。\n\n## SYN攻击：\n在三次握手过程中，Server发送SYN-ACK之后，收到Client的ACK之前的TCP连接称为半连接（half-open connect），此时Server处于SYN_RCVD状态，当收到ACK后，Server转入ESTABLISHED状态。SYN攻击就是Client在短时间内伪造大量不存在的IP地址，并向Server不断地发送SYN包，Server回复确认包，并等待Client的确认，由于源地址是不存在的，因此，Server需要不断重发直至超时，这些伪造的SYN包将产时间占用未连接队列，导致正常的SYN请求因为队列满而被丢弃，从而引起网络堵塞甚至系统瘫痪。SYN攻击时一种典型的DDOS攻击，检测SYN攻击的方式非常简单，即当Server上有大量半连接状态且源IP地址是随机的，则可以断定遭到SYN攻击了，使用如下命令可以让之现行：\n\n```\n~]# netstat -nap | grep SYN_RECV\n```\n\n三、四次挥手\n         三次握手耳熟能详，四次挥手估计就... 。所谓四次挥手（Four-Way Wavehand）即终止TCP连接，就是指断开一个TCP连接时，需要客户端和服务端总共发送4个包以确认连接的断开。在socket编程中，这一过程由客户端或服务端任一方执行close来触发，整个流程如下图所示：\n\n\n![](http://o9c1bfnxp.bkt.clouddn.com/2016-07-tcpip/duankai.png)\n\n> 由于TCP连接时全双工的，因此，每个方向都必须要单独进行关闭，这一原则是当一方完成数据发送任务后，发送一个FIN来终止这一方向的连接，收到一个FIN只是意味着这一方向上没有数据流动了，即不会再收到数据了，但是在这个TCP连接上仍然能够发送数据，直到这一方向也发送了FIN。首先进行关闭的一方将执行主动关闭，而另一方则执行被动关闭，上图描述的即是如此。\n\n\n（1）第一次挥手：Client发送一个FIN，用来关闭Client到Server的数据传送，Client进入FIN_WAIT_1状态。\n（2）第二次挥手：Server收到FIN后，发送一个ACK给Client，确认序号为收到序号+1（与SYN相同，一个FIN占用一个序号），Server进入CLOSE_WAIT状态。\n（3）第三次挥手：Server发送一个FIN，用来关闭Server到Client的数据传送，Server进入LAST_ACK状态。\n（4）第四次挥手：Client收到FIN后，Client进入TIME_WAIT状态，接着发送一个ACK给Server，确认序号为收到序号+1，Server进入CLOSED状态，完成四次挥手。\n\n> 上面是一方主动关闭，另一方被动关闭的情况，实际中还会出现同时发起主动关闭的情况，具体流程如下图：\n\n\n![](http://o9c1bfnxp.bkt.clouddn.com/2016-07-tcpip/tongshiduankai.png)\n\n 流程和状态在上图中已经很明了了，在此不再赘述，可以参考前面的四次挥手解析步骤。\n\n四、附注\n```\n关于三次握手与四次挥手通常都会有典型的面试题，在此提出供有需求的参考：\n（1）三次握手是什么或者流程？四次握手呢？答案前面分析就是。\n（2）为什么建立连接是三次握手，而关闭连接却是四次挥手呢？\n这是因为服务端在LISTEN状态下，收到建立连接请求的SYN报文后，把ACK和SYN放在一个报文里发送给客户端。而关闭连接时，当收到对方的FIN报文时，仅仅表示对方不再发送数据了但是还能接收数据，己方也未必全部数据都发送给对方了，所以己方可以立即close，也可以发送一些数据给对方后，再发送FIN报文给对方来表示同意现在关闭连接，因此，己方ACK和FIN一般都会分开发送。\n```\n\n\n","source":"_posts/2016-07-03-tcp三次握手四次挥手的理解.md","raw":"---\ntitle: TCP三次握手四次挥手详解\ncategories: 技术与干货\ntag: 技术与干货\nabbrlink: c3aadb\ndate: 2016-07-03 16:02:32\n---\n\n# TCP报文格式\nTCP/IP协议的详细信息参看[《TCP/IP协议详解》三卷本](https://book.douban.com/subject/1058634/)。下面是TCP报文格式图：\n<!-- more -->\n![TCP格式图](http://o9c1bfnxp.bkt.clouddn.com/2016-07-tcpip/tcpgeshi.png)\n\n上图中有几个字段需要重点介绍下：\n```\n（1）序号：Seq序号，占32位，用来标识从TCP源端向目的端发送的字节流，发起方发送数据时对此进行标记。\n（2）确认序号：Ack序号，占32位，只有ACK标志位为1时，确认序号字段才有效，Ack=Seq+1。\n（3）标志位：共6个，即URG、ACK、PSH、RST、SYN、FIN等，\t具体含义如下：\n\t（A）URG：紧急指针（urgent pointer）有效。\n\t（B）ACK：确认序号有效。\n\t（C）PSH：接收方应该尽快将这个报文交给应用层。\n\t（D）RST：重置连接。\n\t（E）SYN：发起一个新连接。\n\t（F）FIN：释放一个连接。\n```\n> 需要注意的是：\n\n    （A）不要将确认序号Ack与标志位中的ACK搞混了。\n    （B）确认方Ack=发起方Req+1，两端配对。\n\n# 三次握手\n> 所谓三次握手（Three-Way Handshake）即建立TCP连接，就是指建立一个TCP连接时，需要客户端和服务端总共发送3个包以确认连接的建立。在socket编程中，这一过程由客户端执行connect来触发，整个流程如下图所示：\n\n\n![](http://o9c1bfnxp.bkt.clouddn.com/2016-07-tcpip/woshou.png)\n\n## （1）第一次握手：\n> Client将标志位SYN置为1，随机产生一个值seq=J，并将该数据包发送给Server，Client进入SYN_SENT状态，等待Server确认。\n\n## （2）第二次握手：\n> Server收到数据包后由标志位SYN=1知道Client请求建立连接，Server将标志位SYN和ACK都置为1，ack=J+1，随机产生一个值seq=K，并将该数据包发送给Client以确认连接请求，Server进入SYN_RCVD状态。\n\n## （3）第三次握手：\n> Client收到确认后，检查ack是否为J+1，ACK是否为1，如果正确则将标志位ACK置为1，ack=K+1，并将该数据包发送给Server，Server检查ack是否为K+1，ACK是否为1，如果正确则连接建立成功，Client和Server进入ESTABLISHED状态，完成三次握手，随后Client与Server之间可以开始传输数据了。\n\n## SYN攻击：\n在三次握手过程中，Server发送SYN-ACK之后，收到Client的ACK之前的TCP连接称为半连接（half-open connect），此时Server处于SYN_RCVD状态，当收到ACK后，Server转入ESTABLISHED状态。SYN攻击就是Client在短时间内伪造大量不存在的IP地址，并向Server不断地发送SYN包，Server回复确认包，并等待Client的确认，由于源地址是不存在的，因此，Server需要不断重发直至超时，这些伪造的SYN包将产时间占用未连接队列，导致正常的SYN请求因为队列满而被丢弃，从而引起网络堵塞甚至系统瘫痪。SYN攻击时一种典型的DDOS攻击，检测SYN攻击的方式非常简单，即当Server上有大量半连接状态且源IP地址是随机的，则可以断定遭到SYN攻击了，使用如下命令可以让之现行：\n\n```\n~]# netstat -nap | grep SYN_RECV\n```\n\n三、四次挥手\n         三次握手耳熟能详，四次挥手估计就... 。所谓四次挥手（Four-Way Wavehand）即终止TCP连接，就是指断开一个TCP连接时，需要客户端和服务端总共发送4个包以确认连接的断开。在socket编程中，这一过程由客户端或服务端任一方执行close来触发，整个流程如下图所示：\n\n\n![](http://o9c1bfnxp.bkt.clouddn.com/2016-07-tcpip/duankai.png)\n\n> 由于TCP连接时全双工的，因此，每个方向都必须要单独进行关闭，这一原则是当一方完成数据发送任务后，发送一个FIN来终止这一方向的连接，收到一个FIN只是意味着这一方向上没有数据流动了，即不会再收到数据了，但是在这个TCP连接上仍然能够发送数据，直到这一方向也发送了FIN。首先进行关闭的一方将执行主动关闭，而另一方则执行被动关闭，上图描述的即是如此。\n\n\n（1）第一次挥手：Client发送一个FIN，用来关闭Client到Server的数据传送，Client进入FIN_WAIT_1状态。\n（2）第二次挥手：Server收到FIN后，发送一个ACK给Client，确认序号为收到序号+1（与SYN相同，一个FIN占用一个序号），Server进入CLOSE_WAIT状态。\n（3）第三次挥手：Server发送一个FIN，用来关闭Server到Client的数据传送，Server进入LAST_ACK状态。\n（4）第四次挥手：Client收到FIN后，Client进入TIME_WAIT状态，接着发送一个ACK给Server，确认序号为收到序号+1，Server进入CLOSED状态，完成四次挥手。\n\n> 上面是一方主动关闭，另一方被动关闭的情况，实际中还会出现同时发起主动关闭的情况，具体流程如下图：\n\n\n![](http://o9c1bfnxp.bkt.clouddn.com/2016-07-tcpip/tongshiduankai.png)\n\n 流程和状态在上图中已经很明了了，在此不再赘述，可以参考前面的四次挥手解析步骤。\n\n四、附注\n```\n关于三次握手与四次挥手通常都会有典型的面试题，在此提出供有需求的参考：\n（1）三次握手是什么或者流程？四次握手呢？答案前面分析就是。\n（2）为什么建立连接是三次握手，而关闭连接却是四次挥手呢？\n这是因为服务端在LISTEN状态下，收到建立连接请求的SYN报文后，把ACK和SYN放在一个报文里发送给客户端。而关闭连接时，当收到对方的FIN报文时，仅仅表示对方不再发送数据了但是还能接收数据，己方也未必全部数据都发送给对方了，所以己方可以立即close，也可以发送一些数据给对方后，再发送FIN报文给对方来表示同意现在关闭连接，因此，己方ACK和FIN一般都会分开发送。\n```\n\n\n","slug":"2016-07-03-tcp三次握手四次挥手的理解","published":1,"updated":"2017-02-14T13:42:45.404Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5mkehr90015ao94v9ochp8s","content":"<h1 id=\"TCP报文格式\"><a href=\"#TCP报文格式\" class=\"headerlink\" title=\"TCP报文格式\"></a>TCP报文格式</h1><p>TCP/IP协议的详细信息参看<a href=\"https://book.douban.com/subject/1058634/\" target=\"_blank\" rel=\"external\">《TCP/IP协议详解》三卷本</a>。下面是TCP报文格式图：<br><a id=\"more\"></a><br><img src=\"http://o9c1bfnxp.bkt.clouddn.com/2016-07-tcpip/tcpgeshi.png\" alt=\"TCP格式图\"></p>\n<p>上图中有几个字段需要重点介绍下：<br><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">（<span class=\"number\">1</span>）序号：Seq序号，占<span class=\"number\">32</span>位，用来标识从TCP源端向目的端发送的字节流，发起方发送数据时对此进行标记。</div><div class=\"line\">（<span class=\"number\">2</span>）确认序号：Ack序号，占<span class=\"number\">32</span>位，只有ACK标志位为<span class=\"number\">1</span>时，确认序号字段才有效，Ack=Seq+<span class=\"number\">1</span>。</div><div class=\"line\">（<span class=\"number\">3</span>）标志位：共<span class=\"number\">6</span>个，即URG、ACK、PSH、RST、SYN、FIN等，\t具体含义如下：</div><div class=\"line\">\t（A）URG：紧急指针（urgent pointer）有效。</div><div class=\"line\">\t（B）ACK：确认序号有效。</div><div class=\"line\">\t（C）PSH：接收方应该尽快将这个报文交给应用层。</div><div class=\"line\">\t（D）RST：重置连接。</div><div class=\"line\">\t（E）SYN：发起一个新连接。</div><div class=\"line\">\t（F）FIN：释放一个连接。</div></pre></td></tr></table></figure></p>\n<blockquote>\n<p>需要注意的是：</p>\n</blockquote>\n<pre><code>（A）不要将确认序号Ack与标志位中的ACK搞混了。\n（B）确认方Ack=发起方Req+1，两端配对。\n</code></pre><h1 id=\"三次握手\"><a href=\"#三次握手\" class=\"headerlink\" title=\"三次握手\"></a>三次握手</h1><blockquote>\n<p>所谓三次握手（Three-Way Handshake）即建立TCP连接，就是指建立一个TCP连接时，需要客户端和服务端总共发送3个包以确认连接的建立。在socket编程中，这一过程由客户端执行connect来触发，整个流程如下图所示：</p>\n</blockquote>\n<p><img src=\"http://o9c1bfnxp.bkt.clouddn.com/2016-07-tcpip/woshou.png\" alt=\"\"></p>\n<h2 id=\"（1）第一次握手：\"><a href=\"#（1）第一次握手：\" class=\"headerlink\" title=\"（1）第一次握手：\"></a>（1）第一次握手：</h2><blockquote>\n<p>Client将标志位SYN置为1，随机产生一个值seq=J，并将该数据包发送给Server，Client进入SYN_SENT状态，等待Server确认。</p>\n</blockquote>\n<h2 id=\"（2）第二次握手：\"><a href=\"#（2）第二次握手：\" class=\"headerlink\" title=\"（2）第二次握手：\"></a>（2）第二次握手：</h2><blockquote>\n<p>Server收到数据包后由标志位SYN=1知道Client请求建立连接，Server将标志位SYN和ACK都置为1，ack=J+1，随机产生一个值seq=K，并将该数据包发送给Client以确认连接请求，Server进入SYN_RCVD状态。</p>\n</blockquote>\n<h2 id=\"（3）第三次握手：\"><a href=\"#（3）第三次握手：\" class=\"headerlink\" title=\"（3）第三次握手：\"></a>（3）第三次握手：</h2><blockquote>\n<p>Client收到确认后，检查ack是否为J+1，ACK是否为1，如果正确则将标志位ACK置为1，ack=K+1，并将该数据包发送给Server，Server检查ack是否为K+1，ACK是否为1，如果正确则连接建立成功，Client和Server进入ESTABLISHED状态，完成三次握手，随后Client与Server之间可以开始传输数据了。</p>\n</blockquote>\n<h2 id=\"SYN攻击：\"><a href=\"#SYN攻击：\" class=\"headerlink\" title=\"SYN攻击：\"></a>SYN攻击：</h2><p>在三次握手过程中，Server发送SYN-ACK之后，收到Client的ACK之前的TCP连接称为半连接（half-open connect），此时Server处于SYN_RCVD状态，当收到ACK后，Server转入ESTABLISHED状态。SYN攻击就是Client在短时间内伪造大量不存在的IP地址，并向Server不断地发送SYN包，Server回复确认包，并等待Client的确认，由于源地址是不存在的，因此，Server需要不断重发直至超时，这些伪造的SYN包将产时间占用未连接队列，导致正常的SYN请求因为队列满而被丢弃，从而引起网络堵塞甚至系统瘫痪。SYN攻击时一种典型的DDOS攻击，检测SYN攻击的方式非常简单，即当Server上有大量半连接状态且源IP地址是随机的，则可以断定遭到SYN攻击了，使用如下命令可以让之现行：</p>\n<figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">~]<span class=\"comment\"># netstat -nap | grep SYN_RECV</span></div></pre></td></tr></table></figure>\n<p>三、四次挥手<br>         三次握手耳熟能详，四次挥手估计就… 。所谓四次挥手（Four-Way Wavehand）即终止TCP连接，就是指断开一个TCP连接时，需要客户端和服务端总共发送4个包以确认连接的断开。在socket编程中，这一过程由客户端或服务端任一方执行close来触发，整个流程如下图所示：</p>\n<p><img src=\"http://o9c1bfnxp.bkt.clouddn.com/2016-07-tcpip/duankai.png\" alt=\"\"></p>\n<blockquote>\n<p>由于TCP连接时全双工的，因此，每个方向都必须要单独进行关闭，这一原则是当一方完成数据发送任务后，发送一个FIN来终止这一方向的连接，收到一个FIN只是意味着这一方向上没有数据流动了，即不会再收到数据了，但是在这个TCP连接上仍然能够发送数据，直到这一方向也发送了FIN。首先进行关闭的一方将执行主动关闭，而另一方则执行被动关闭，上图描述的即是如此。</p>\n</blockquote>\n<p>（1）第一次挥手：Client发送一个FIN，用来关闭Client到Server的数据传送，Client进入FIN_WAIT_1状态。<br>（2）第二次挥手：Server收到FIN后，发送一个ACK给Client，确认序号为收到序号+1（与SYN相同，一个FIN占用一个序号），Server进入CLOSE_WAIT状态。<br>（3）第三次挥手：Server发送一个FIN，用来关闭Server到Client的数据传送，Server进入LAST_ACK状态。<br>（4）第四次挥手：Client收到FIN后，Client进入TIME_WAIT状态，接着发送一个ACK给Server，确认序号为收到序号+1，Server进入CLOSED状态，完成四次挥手。</p>\n<blockquote>\n<p>上面是一方主动关闭，另一方被动关闭的情况，实际中还会出现同时发起主动关闭的情况，具体流程如下图：</p>\n</blockquote>\n<p><img src=\"http://o9c1bfnxp.bkt.clouddn.com/2016-07-tcpip/tongshiduankai.png\" alt=\"\"></p>\n<p> 流程和状态在上图中已经很明了了，在此不再赘述，可以参考前面的四次挥手解析步骤。</p>\n<p>四、附注<br><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">关于三次握手与四次挥手通常都会有典型的面试题，在此提出供有需求的参考：</div><div class=\"line\">（<span class=\"number\">1</span>）三次握手是什么或者流程？四次握手呢？答案前面分析就是。</div><div class=\"line\">（<span class=\"number\">2</span>）为什么建立连接是三次握手，而关闭连接却是四次挥手呢？</div><div class=\"line\">这是因为服务端在LISTEN状态下，收到建立连接请求的SYN报文后，把ACK和SYN放在一个报文里发送给客户端。而关闭连接时，当收到对方的FIN报文时，仅仅表示对方不再发送数据了但是还能接收数据，己方也未必全部数据都发送给对方了，所以己方可以立即close，也可以发送一些数据给对方后，再发送FIN报文给对方来表示同意现在关闭连接，因此，己方ACK和FIN一般都会分开发送。</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<h1 id=\"TCP报文格式\"><a href=\"#TCP报文格式\" class=\"headerlink\" title=\"TCP报文格式\"></a>TCP报文格式</h1><p>TCP/IP协议的详细信息参看<a href=\"https://book.douban.com/subject/1058634/\" target=\"_blank\" rel=\"external\">《TCP/IP协议详解》三卷本</a>。下面是TCP报文格式图：<br>","more":"<br><img src=\"http://o9c1bfnxp.bkt.clouddn.com/2016-07-tcpip/tcpgeshi.png\" alt=\"TCP格式图\"></p>\n<p>上图中有几个字段需要重点介绍下：<br><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">（<span class=\"number\">1</span>）序号：Seq序号，占<span class=\"number\">32</span>位，用来标识从TCP源端向目的端发送的字节流，发起方发送数据时对此进行标记。</div><div class=\"line\">（<span class=\"number\">2</span>）确认序号：Ack序号，占<span class=\"number\">32</span>位，只有ACK标志位为<span class=\"number\">1</span>时，确认序号字段才有效，Ack=Seq+<span class=\"number\">1</span>。</div><div class=\"line\">（<span class=\"number\">3</span>）标志位：共<span class=\"number\">6</span>个，即URG、ACK、PSH、RST、SYN、FIN等，\t具体含义如下：</div><div class=\"line\">\t（A）URG：紧急指针（urgent pointer）有效。</div><div class=\"line\">\t（B）ACK：确认序号有效。</div><div class=\"line\">\t（C）PSH：接收方应该尽快将这个报文交给应用层。</div><div class=\"line\">\t（D）RST：重置连接。</div><div class=\"line\">\t（E）SYN：发起一个新连接。</div><div class=\"line\">\t（F）FIN：释放一个连接。</div></pre></td></tr></table></figure></p>\n<blockquote>\n<p>需要注意的是：</p>\n</blockquote>\n<pre><code>（A）不要将确认序号Ack与标志位中的ACK搞混了。\n（B）确认方Ack=发起方Req+1，两端配对。\n</code></pre><h1 id=\"三次握手\"><a href=\"#三次握手\" class=\"headerlink\" title=\"三次握手\"></a>三次握手</h1><blockquote>\n<p>所谓三次握手（Three-Way Handshake）即建立TCP连接，就是指建立一个TCP连接时，需要客户端和服务端总共发送3个包以确认连接的建立。在socket编程中，这一过程由客户端执行connect来触发，整个流程如下图所示：</p>\n</blockquote>\n<p><img src=\"http://o9c1bfnxp.bkt.clouddn.com/2016-07-tcpip/woshou.png\" alt=\"\"></p>\n<h2 id=\"（1）第一次握手：\"><a href=\"#（1）第一次握手：\" class=\"headerlink\" title=\"（1）第一次握手：\"></a>（1）第一次握手：</h2><blockquote>\n<p>Client将标志位SYN置为1，随机产生一个值seq=J，并将该数据包发送给Server，Client进入SYN_SENT状态，等待Server确认。</p>\n</blockquote>\n<h2 id=\"（2）第二次握手：\"><a href=\"#（2）第二次握手：\" class=\"headerlink\" title=\"（2）第二次握手：\"></a>（2）第二次握手：</h2><blockquote>\n<p>Server收到数据包后由标志位SYN=1知道Client请求建立连接，Server将标志位SYN和ACK都置为1，ack=J+1，随机产生一个值seq=K，并将该数据包发送给Client以确认连接请求，Server进入SYN_RCVD状态。</p>\n</blockquote>\n<h2 id=\"（3）第三次握手：\"><a href=\"#（3）第三次握手：\" class=\"headerlink\" title=\"（3）第三次握手：\"></a>（3）第三次握手：</h2><blockquote>\n<p>Client收到确认后，检查ack是否为J+1，ACK是否为1，如果正确则将标志位ACK置为1，ack=K+1，并将该数据包发送给Server，Server检查ack是否为K+1，ACK是否为1，如果正确则连接建立成功，Client和Server进入ESTABLISHED状态，完成三次握手，随后Client与Server之间可以开始传输数据了。</p>\n</blockquote>\n<h2 id=\"SYN攻击：\"><a href=\"#SYN攻击：\" class=\"headerlink\" title=\"SYN攻击：\"></a>SYN攻击：</h2><p>在三次握手过程中，Server发送SYN-ACK之后，收到Client的ACK之前的TCP连接称为半连接（half-open connect），此时Server处于SYN_RCVD状态，当收到ACK后，Server转入ESTABLISHED状态。SYN攻击就是Client在短时间内伪造大量不存在的IP地址，并向Server不断地发送SYN包，Server回复确认包，并等待Client的确认，由于源地址是不存在的，因此，Server需要不断重发直至超时，这些伪造的SYN包将产时间占用未连接队列，导致正常的SYN请求因为队列满而被丢弃，从而引起网络堵塞甚至系统瘫痪。SYN攻击时一种典型的DDOS攻击，检测SYN攻击的方式非常简单，即当Server上有大量半连接状态且源IP地址是随机的，则可以断定遭到SYN攻击了，使用如下命令可以让之现行：</p>\n<figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">~]<span class=\"comment\"># netstat -nap | grep SYN_RECV</span></div></pre></td></tr></table></figure>\n<p>三、四次挥手<br>         三次握手耳熟能详，四次挥手估计就… 。所谓四次挥手（Four-Way Wavehand）即终止TCP连接，就是指断开一个TCP连接时，需要客户端和服务端总共发送4个包以确认连接的断开。在socket编程中，这一过程由客户端或服务端任一方执行close来触发，整个流程如下图所示：</p>\n<p><img src=\"http://o9c1bfnxp.bkt.clouddn.com/2016-07-tcpip/duankai.png\" alt=\"\"></p>\n<blockquote>\n<p>由于TCP连接时全双工的，因此，每个方向都必须要单独进行关闭，这一原则是当一方完成数据发送任务后，发送一个FIN来终止这一方向的连接，收到一个FIN只是意味着这一方向上没有数据流动了，即不会再收到数据了，但是在这个TCP连接上仍然能够发送数据，直到这一方向也发送了FIN。首先进行关闭的一方将执行主动关闭，而另一方则执行被动关闭，上图描述的即是如此。</p>\n</blockquote>\n<p>（1）第一次挥手：Client发送一个FIN，用来关闭Client到Server的数据传送，Client进入FIN_WAIT_1状态。<br>（2）第二次挥手：Server收到FIN后，发送一个ACK给Client，确认序号为收到序号+1（与SYN相同，一个FIN占用一个序号），Server进入CLOSE_WAIT状态。<br>（3）第三次挥手：Server发送一个FIN，用来关闭Server到Client的数据传送，Server进入LAST_ACK状态。<br>（4）第四次挥手：Client收到FIN后，Client进入TIME_WAIT状态，接着发送一个ACK给Server，确认序号为收到序号+1，Server进入CLOSED状态，完成四次挥手。</p>\n<blockquote>\n<p>上面是一方主动关闭，另一方被动关闭的情况，实际中还会出现同时发起主动关闭的情况，具体流程如下图：</p>\n</blockquote>\n<p><img src=\"http://o9c1bfnxp.bkt.clouddn.com/2016-07-tcpip/tongshiduankai.png\" alt=\"\"></p>\n<p> 流程和状态在上图中已经很明了了，在此不再赘述，可以参考前面的四次挥手解析步骤。</p>\n<p>四、附注<br><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">关于三次握手与四次挥手通常都会有典型的面试题，在此提出供有需求的参考：</div><div class=\"line\">（<span class=\"number\">1</span>）三次握手是什么或者流程？四次握手呢？答案前面分析就是。</div><div class=\"line\">（<span class=\"number\">2</span>）为什么建立连接是三次握手，而关闭连接却是四次挥手呢？</div><div class=\"line\">这是因为服务端在LISTEN状态下，收到建立连接请求的SYN报文后，把ACK和SYN放在一个报文里发送给客户端。而关闭连接时，当收到对方的FIN报文时，仅仅表示对方不再发送数据了但是还能接收数据，己方也未必全部数据都发送给对方了，所以己方可以立即close，也可以发送一些数据给对方后，再发送FIN报文给对方来表示同意现在关闭连接，因此，己方ACK和FIN一般都会分开发送。</div></pre></td></tr></table></figure></p>"},{"title":"Tomcat安装配置与简单部署","date":"2016-07-05T02:00:00.000Z","abbrlink":"977dfd0f","_content":"# Tomcat简介\n> Tomcat是一个免费开源的web服务器应用程序,使用java编程语言所编写，运行于jvm（java虚拟机）之上，轻量安全是其特性，适用于反访问量不大的中小型服务系统\n<!-- more -->\n> Tomcat可以独立运行为一个web服务器，但其通常作为Apache web 服务的一个扩展，Apache处理html静态页面，tomcat处理动态内容\n> \n如果您要了解这种技术的细节可以查阅[参考资料](http://tomcat.apache.org/tomcat-9.0-doc/index.html)。\n\n# Tomcat基础组件与框架\n```\nserver：位于最外层，一个server即一个tomcat实例\n    connecter（连接器），为辅助组件，附加在引擎之上，将用户的请求定义至指定的虚拟主机\n    service：把连接器与引擎关联起来的组件\n    engine：运行虚拟主机的容器\n    host：虚拟主机\n\n    提醒：一个引擎内部可以定义多个虚拟主机，每个虚拟主机可定义多个context（别名）\n    \n    每个组件由“类”实现，分为如下几类：\n        顶级组件：server\n        服务组件：service\n        连接器组件：http，https，ajp\n        容器类：engine，host，context\n\n        被嵌套类组件：valve，logger，realm，loader，manager    \n\n    框架：    \n        <sever>    \n            <service>    \n                <connector/>\n                <connectot/>\n                    <engine>\n                        <host>\n                            <context/>\n                            …\n                        </host>\n                            …    \n                    </engine>\n                </service>\n        </server>\n```\n\n# 准备工作\n>准备一台虚拟机, 均为CentOS-7-x86_64最小化安装, iptables与SELinux均处于关闭状态, 配置好yum源(base和epel). 做好快照, 以便每次实验后快速恢复.\n\n# tomcat安装\n> 综上所述，tomcat是用Java语言研发，运行于jvm(java virtual machine)之上，所以要安装的话需要提供JDK开发平台。\n> 由此，安装可分为两步：\n> JDK+tomcat\n\n\n## OracleJDK+Tomcat(binary)\n使用Oracle官方提供的JDK安装包和Apache官方提供的Tomcat二进制安装包来安装, 请自行去官方站点下载\n```\n# 安装OracleJDK\n[root@1478a474 ~]# rpm -ivh jdk-7u79-linux-x64.rpm \nPreparing...                          ################################# [100%]\nUpdating / installing...\n   1:jdk-2000:1.7.0_79-fcs            ################################# [100%]\nUnpacking JAR files...\n\trt.jar...\n\tjsse.jar...\n\tcharsets.jar...\n\ttools.jar...\n\tlocaledata.jar...\n\tjfxrt.jar...\n[root@1478a474 ~]# java -version\njava version \"1.7.0_79\"\nJava(TM) SE Runtime Environment (build 1.7.0_79-b15)\nJava HotSpot(TM) 64-Bit Server VM (build 24.79-b02, mixed mode)\n# 安装Tomcat\n[root@1478a474 ~]# tar -xf apache-tomcat-7.0.57.tar.gz -C /usr/local/\n[root@1478a474 ~]# ln -s apache-tomcat-7.0.57/ /usr/local/tomcat\n[root@1478a474 ~]# tree -L 1 /usr/local/tomcat/\n/usr/local/tomcat/\n├── bin\t# 脚本及启动时用到的类\n├── conf # 配置文件\n├── lib\t# 类库\n├── LICENSE\n├── logs\t# 日志文件\n├── NOTICE\n├── RELEASE-NOTES\n├── RUNNING.txt\n├── temp\t# 临时文件\n├── webapps\t# 应用程序默认部署目录\n└── work\t# 工作目录, jsp代码编译成class文件装入JVM运行, 生成class文件就存放在此目录.\n\n7 directories, 4 files\n# 需要导出环境变量\n[root@1478a474 ~]# echo 'export PATH=/usr/local/tomcat/bin:$PATH' > /etc/profile.d/tomcat.sh\n[root@1478a474 ~]# exec bash\n# 似乎也不用特别设置CATALINA_BASE和JAVA_HOME环境变量, 都自动识别出来了.\n[root@1478a474 ~]# catalina.sh version\nUsing CATALINA_BASE:   /usr/local/tomcat\nUsing CATALINA_HOME:   /usr/local/tomcat\nUsing CATALINA_TMPDIR: /usr/local/tomcat/temp\nUsing JRE_HOME:        /usr\nUsing CLASSPATH:       /usr/local/tomcat/bin/bootstrap.jar:/usr/local/tomcat/bin/tomcat-juli.jar\nServer version: Apache Tomcat/7.0.57\nServer built:   Nov 3 2014 08:39:16 UTC\nServer number:  7.0.57.0\nOS Name:        Linux\nOS Version:     3.10.0-327.el7.x86_64\nArchitecture:   amd64\nJVM Version:    1.7.0_79-b15\nJVM Vendor:     Oracle Corporation\n# 直接启动\n[root@1478a474 ~]# catalina.sh start\nUsing CATALINA_BASE:   /usr/local/tomcat\nUsing CATALINA_HOME:   /usr/local/tomcat\nUsing CATALINA_TMPDIR: /usr/local/tomcat/temp\nUsing JRE_HOME:        /usr\nUsing CLASSPATH:       /usr/local/tomcat/bin/bootstrap.jar:/usr/local/tomcat/bin/tomcat-juli.jar\nTomcat started.\n# 监听了三个端口, 8080是http监控端口, 8009是ajp协议监控端口, 8005端口是控制端口, 可以用来关闭tomcat. \n[root@1478a474 ~]# ss -tnl\nState      Recv-Q Send-Q           Local Address:Port                          Peer Address:Port              \nLISTEN     0      128                          *:22                                       *:*                  \nLISTEN     0      100                  127.0.0.1:25                                       *:*                  \nLISTEN     0      100                         :::8009                                    :::*                  \nLISTEN     0      100                         :::8080                                    :::*                  \nLISTEN     0      128                         :::22                                      :::*                  \nLISTEN     0      100                        ::1:25                                      :::*                  \nLISTEN     0      1             ::ffff:127.0.0.1:8005                                    :::*\n# 可以看到JVM是以root用户身份启动的, 这个是不安全的. \n# 官方是建议使用普通用户来启动的, 这也是为什么默认使用8080端口而不80端口的原因, 因为只有管理员身份启动的进程才能监听在特权端口(1-1024)上.\n[root@1478a474 ~]# ps aux | grep -v grep | grep java\nroot      30867  3.6  6.8 1544928 68260 pts/2   Sl   21:24   0:05 /usr/bin/java -Djava.util.logging.config.file=/usr/local/tomca......\n# 所以建立一个普通用户来启动tomcat\n[root@1478a474 ~]# useradd -r tomcat\n[root@1478a474 ~]# chown -R tomcat:tomcat /usr/local/tomcat/\n[root@1478a474 ~]# ps aux | grep -v grep | grep java\ntomcat    31726  167  6.2 1343180 62448 ?       Sl   21:44   0:03 /usr/bin/java -Djava.util.logging.config.file=/usr/local/tomca......\n```\n\n## yum源安装\n使用centos官方yum中提供的OpenJDK与Tomcat安装包来安装.\n\n```\n# 提供了三个版本的, 根据实际需要选择. 一般生产环境追求的是稳定, 不会激进地采用最新版本.\n[root@1478a474 ~]# yum list | grep -i openjdk\njava-1.6.0-openjdk.x86_64                   1:1.6.0.36-1.13.8.1.el7_1  local    \njava-1.6.0-openjdk-demo.x86_64              1:1.6.0.36-1.13.8.1.el7_1  local    \njava-1.6.0-openjdk-devel.x86_64             1:1.6.0.36-1.13.8.1.el7_1  local    \njava-1.6.0-openjdk-javadoc.x86_64           1:1.6.0.36-1.13.8.1.el7_1  local    \njava-1.6.0-openjdk-src.x86_64               1:1.6.0.36-1.13.8.1.el7_1  local    \njava-1.7.0-openjdk.x86_64                   1:1.7.0.91-2.6.2.3.el7     local    \njava-1.7.0-openjdk-accessibility.x86_64     1:1.7.0.91-2.6.2.3.el7     local    \njava-1.7.0-openjdk-demo.x86_64              1:1.7.0.91-2.6.2.3.el7     local    \njava-1.7.0-openjdk-devel.x86_64             1:1.7.0.91-2.6.2.3.el7     local    \njava-1.7.0-openjdk-headless.x86_64          1:1.7.0.91-2.6.2.3.el7     local    \njava-1.7.0-openjdk-javadoc.noarch           1:1.7.0.91-2.6.2.3.el7     local    \njava-1.7.0-openjdk-src.x86_64               1:1.7.0.91-2.6.2.3.el7     local    \njava-1.8.0-openjdk.x86_64                   1:1.8.0.65-3.b17.el7       local    \njava-1.8.0-openjdk-accessibility.x86_64     1:1.8.0.65-3.b17.el7       local    \njava-1.8.0-openjdk-accessibility-debug.x86_64\njava-1.8.0-openjdk-debug.x86_64             1:1.8.0.65-3.b17.el7       local    \njava-1.8.0-openjdk-demo.x86_64              1:1.8.0.65-3.b17.el7       local    \njava-1.8.0-openjdk-demo-debug.x86_64        1:1.8.0.65-3.b17.el7       local    \njava-1.8.0-openjdk-devel.x86_64             1:1.8.0.65-3.b17.el7       local    \njava-1.8.0-openjdk-devel-debug.x86_64       1:1.8.0.65-3.b17.el7       local    \njava-1.8.0-openjdk-headless.x86_64          1:1.8.0.65-3.b17.el7       local    \njava-1.8.0-openjdk-headless-debug.x86_64    1:1.8.0.65-3.b17.el7       local    \njava-1.8.0-openjdk-javadoc.noarch           1:1.8.0.65-3.b17.el7       local    \njava-1.8.0-openjdk-javadoc-debug.noarch     1:1.8.0.65-3.b17.el7       local    \njava-1.8.0-openjdk-src.x86_64               1:1.8.0.65-3.b17.el7       local    \njava-1.8.0-openjdk-src-debug.x86_64         1:1.8.0.65-3.b17.el7       local\n# 选择1.7, 中庸之道.\n[root@1478a474 ~]# yum install -y java-1.7.0-openjdk java-1.7.0-openjdk-devel java-1.7.0-openjdk-headless\n# 再来安装tomcat\n[root@1478a474 ~]# yum install -y tomcat tomcat-lib tomcat-webapps tomcat-admin-webapps\n# 好像也不用配什么JAVA_HOME还有CATALINA_BASE这些环境变量, 直接就可以启动了.\n[root@1478a474 ~]# systemctl start tomcat.service\n# 这个8005端口好像监听会慢一些, 总是得等一会才能看到. \n[root@1478a474 ~]# ss -tnl\nState      Recv-Q Send-Q           Local Address:Port                          Peer Address:Port              \nLISTEN     0      128                          *:22                                       *:*                  \nLISTEN     0      100                  127.0.0.1:25                                       *:*                  \nLISTEN     0      100                         :::8009                                    :::*                  \nLISTEN     0      100                         :::8080                                    :::*                  \nLISTEN     0      128                         :::22                                      :::*                  \nLISTEN     0      100                        ::1:25                                      :::*                  \nLISTEN     0      1             ::ffff:127.0.0.1:8005                                    :::*\n# 如果要配的话, 除了可以配置环境变量, 也可以修改/etc/sysconfig/tomcat这个文件.\n[root@1478a474 ~]# cat /etc/sysconfig/tomcat\n...\n# Where your java installation lives\n#JAVA_HOME=\"/usr/lib/jvm/java\"\n\n# Where your tomcat installation lives\n#CATALINA_BASE=\"/usr/share/tomcat\"\n#CATALINA_HOME=\"/usr/share/tomcat\"\n#JASPER_HOME=\"/usr/share/tomcat\"\n#CATALINA_TMPDIR=\"/var/cache/tomcat/temp\"\n\n# 这里面还可以配置jvm的启动参数, 比如指定使用内存大小. \n# 这个在大内存的时候有用, 因为JVM有个32G内存限制, 使用超过32G内存性能反而会下降. \n# 所以如果内存超过32G时, 最好分多个JVM实例启动, 每个JVM实例使用不超过32G内存.\n# -Xms：初始值\n# -Xmx：最大值\n# -Xmn：最小值\n#JAVA_OPTS=\"-Xms512m -Xmx1024m\"\n...\n\n# 可以看到JVM是以tomcat用户身份启动的, 所以安全问题也不用操心了.\n[root@1478a474 ~]# ps aux | grep -v grep | grep java\ntomcat    30217  1.8  9.1 1932192 91672 ?       Ssl  20:40   0:15 java -classpath /usr/share/tomcat/bin/bootstrap.jar:/usr/share/tomc...\n\n```\n# 管理接口用户认证\n用浏览器打开http://172.18.71.130:8080, 默认主页是tomcat的管理接口.\n\n![](http://o9c1bfnxp.bkt.clouddn.com/2016-07-tomcat/tomcat1.png)\n\n但是访问管理接口是需要通过身份认证的, 这需要在`tomcat-users.xml`配置角色/用户/口令. `yum`源安装时, 此文件是放在`/etc/tomcat`目录中, 二进制包安装时此文件是放在`/usr/local/tomcat/conf`目录中.\n`Server Status`是查看服务器运行状态的管理接口, 对应的角色是`manager-status`.\n`Manager App`是应用程序管理接口, 对应的角色是`manager-gui`.\n`Host Manager`是虚拟主机管理接口, 对应的角色是`admin-gui`.\n为某管理接口创建认证用户就是要在`tomcat-users.xml`配置文件中创建用户和口令, 并属于对应的角色. 以为`Manager App`创建认证用户为例.\n```\n[root@1478a474 ~]# vim /etc/tomcat/tomcat-users.xml\n<tomcat-users>\n  <role rolename=\"manager-gui\"/>\n  <user username=\"tomcat\" password=\"magedu\" roles=\"manager-gui\"/>\n</tomcat-users>\n[root@1478a474 ~]# systemctl restart tomcat.service\n```\n\n![](http://o9c1bfnxp.bkt.clouddn.com/2016-07-tomcat/tomcat_2.gif)\n\n\n# 应用部署\n在应用程序部署目录`webapps`下创建一个新应用`demo`.\n\n`WEB-INF` 私有资源目录, 通常存放当前应用自用的`web.xml`.\n`META-INF` 私有资源目录, 通常存放当前应用自用的`context.xml`.\n`classes` 此应用的私有类.\n`lib` 此应用的私有类, 被打包为`jar`格式类.\n`index.jsp` 此应用的主页.\n\n```\n[root@1478a474 ~]# mkdir -p /var/lib/tomcat/webapps/demo/{classes,META-INF,WEB-INF,lib}\n[root@1478a474 ~]# cat << EOF > /var/lib/tomcat/webapps/demo/index.jsp\n<%@ page language=\"java\" %>\n<html>\n  <head><title>TomcatA</title></head>\n  <body>\n    <h1><font color=\"red\">TomcatA.magedu.com</font></h1>\n    <table align=\"centre\" border=\"1\">\n      <tr>\n        <td>Session ID</td>\n    <% session.setAttribute(\"magedu.com\",\"magedu.com\"); %>\n        <td><%= session.getId() %></td>\n      </tr>\n      <tr>\n        <td>Created on</td>\n        <td><%= session.getCreationTime() %></td>\n     </tr>\n    </table>\n  </body>\n</html>\nEOF\n```\n\n![](http://o9c1bfnxp.bkt.clouddn.com/2016-07-tomcat/tomcat3.png)\n\n# 虚拟主机\n\n```\n[root@1478a474 ~]# vim /etc/tomcat/server.xml\n...\n<!-- 将默认虚拟主机改为自定义的虚拟主机www.twoyang.net -->\n<Engine name=\"Catalina\" defaultHost=\"www.twoyang.net\">\n  ...\n  <Host name=\"localhost\"  appBase=\"webapps\"\n        unpackWARs=\"true\" autoDeploy=\"true\">\n    <Valve className=\"org.apache.catalina.valves.AccessLogValve\" directory=\"logs\"\n           prefix=\"localhost_access_log.\" suffix=\".txt\"\n           pattern=\"%h %l %u %t &quot;%r&quot; %s %b\" />\n\n  </Host>\n  <!-- 自定义虚拟主机www.twoyang.net, 应用基础路径为/data/webapps. -->\n  <Host name=\"www.twoyang.net\"  appBase=\"/data/webapps\"\n        unpackWARs=\"true\" autoDeploy=\"true\">\n    <Valve className=\"org.apache.catalina.valves.AccessLogValve\" directory=\"logs\"\n           prefix=\"localhost_access_log.\" suffix=\".txt\"\n           pattern=\"%h %l %u %t &quot;%r&quot; %s %b\" />\n  </Host>\n</Engine>\n...\n\n[root@1478a474 ~]# mkdir -p /data/webapps\n[root@1478a474 ~]# mv /var/lib/tomcat/webapps/demo/ /data/webapps/\n[root@1478a474 ~]# chown -R tomcat:tomcat /data/webapps\n[root@1478a474 ~]# systemctl restart tomcat.service\n# 增加本地对www.twoyang.net的解析\n[root@1478a474 ~]# echo \"172.18.71.130 www.twoyang.net\" >> /etc/hosts\n[root@1478a474 ~]# curl http://www.twoyang.net:8080/demo/\n\n<html>\n  <head><title>TomcatA</title></head>\n  <body>\n    <h1><font color=\"red\">TomcatA.magedu.com</font></h1>\n    <table align=\"centre\" border=\"1\">\n      <tr>\n        <td>Session ID</td>\n    \n        <td>B733951E170B4A86839C70C9C633EB2B</td>\n      </tr>\n      <tr>\n        <td>Created on</td>\n        <td>1465651810125</td>\n     </tr>\n    </table>\n  </body>\n</html>\n```\n\n#反向代理\n\n使用`nginx`或`haproxy`作为前端反向代理时, 只能走`http`协议. 只有使用`httpd`作为前端反向代理时, 才能走`ajp`协议.\n而通过`httpd`来向后做反向代理时, 可以分为几种模块, 一种是通过`mode_proxy_http`模块, 一种是通过`mode_proxy_ajp`模块, 还有一种是用过`mod_jk`模块. 其中第三种模块是一种比较老的方式, 多见于一些较老的`httpd`版本, 后来已经被`mode_proxy_ajp`模块所取代, 但是目前仍然有一些企业在使用.\n不过既然后来已经被淘汰了, 就不演示它了, 真的要用了再去研究吧. 只演示一下使用`httpd`分别通过`http`协议和`ajp`协议来进行反向代理.\n\n## mode_proxy_http\n\n```\n[root@1478a474 ~]# yum install -y httpd\n[root@1478a474 ~]# httpd -M | grep proxy_http\n proxy_http_module (shared)\n[root@1478a474 ~]# vim /etc/httpd/conf.d/proxy_http.conf\n# 用于控制在http首部是否使用Via, 主要用于在多级代理中控制代理请求的流向.\n# 默认为Off, 即不启用此功能; On表示每个请求和响应报文均添加Via.\n# Full表示每个Via行都会添加当前apache服务器的版本号信息.\n# Block表示每个代理请求报文中的Via都会被移除.\nProxyVia Off\n# 是否开启apache正向代理的功能, 启用此项时为了代理http协议必须启用mod_proxy_http模块.\n# 同时, 如果为apache设置了ProxyPass, 则必须将ProxyRequests设置为Off.\nProxyRequests Off\n# 如果启用此功能, 代理会将用户请求报文中的Host行发送给后端的服务器, 而不再使用ProxyPass指定的服务器地址.\n# 如果想在反向代理中支持虚拟主机, 则需要开启此项, 否则就无需打开此功能.\nProxyPreserveHost Off\n# 将请求反向代理至后端主机\nProxyPass / http://172.18.71.130:8080/\n# 用于让apache调整HTTP重定向响应报文中的Location, Content-Location及URI标签所对应的URL.\n# 在反向代理环境中必须使用此指令避免重定向报文绕过proxy服务器.\nProxyPassReverse / http://172.18.71.130:8080/\n<Proxy *>\n  Require all granted\n</Proxy>\n<Location  / >\n  Require all granted\n</Location>\n[root@1478a474 ~]# httpd -t\nSyntax OK\n[root@1478a474 ~]# systemctl start httpd.service\n[root@1478a474 ~]# ss -tnl | grep -w 80\nLISTEN     0      128         :::80                      :::*\n[root@1478a474 ~]# curl http://172.18.71.130/demo/\n\n<html>\n  <head><title>TomcatA</title></head>\n  <body>\n    <h1><font color=\"red\">TomcatA.magedu.com</font></h1>\n    <table align=\"centre\" border=\"1\">\n      <tr>\n        <td>Session ID</td>\n    \n        <td>BADEAC947662D40AF3B7662014B10742</td>\n      </tr>\n      <tr>\n        <td>Created on</td>\n        <td>1465654377253</td>\n     </tr>\n    </table>\n  </body>\n</html>\n```\n\n## mode_proxy_ajp ##\n\n```\n[root@1478a474 ~]# yum install -y httpd\n[root@1478a474 ~]# httpd -M | grep proxy_ajp\n proxy_ajp_module (shared)\n[root@1478a474 ~]# mv /etc/httpd/conf.d/proxy_http.conf{,.bak}\n[root@1478a474 ~]# vim /etc/httpd/conf.d/proxy_ajp.conf\nProxyVia Off\nProxyRequests Off\nProxyPreserveHost Off\n# 与走http协议的配置基本一致, 只是这个地方需要使用ajp协议和响应的8009端口.\nProxyPass / ajp://172.18.71.130:8009/\nProxyPassReverse / ajp://172.18.71.130:8009/\n<Proxy *>\n  Require all granted\n</Proxy>\n<Location  / >\n  Require all granted\n</Location>\n[root@1478a474 ~]# httpd -t\nSyntax OK\n[root@1478a474 ~]# systemctl restart httpd.service\n[root@1478a474 ~]# ss -tnl | grep -w 80\nLISTEN     0      128         :::80                      :::*\n[root@1478a474 ~]# curl http://172.18.71.130/demo/\n\n<html>\n  <head><title>TomcatA</title></head>\n  <body>\n    <h1><font color=\"red\">TomcatA.magedu.com</font></h1>\n    <table align=\"centre\" border=\"1\">\n      <tr>\n        <td>Session ID</td>\n    \n        <td>BADEAC947662D40AF3B7662014B10742</td>\n      </tr>\n      <tr>\n        <td>Created on</td>\n        <td>1465654377253</td>\n     </tr>\n    </table>\n  </body>\n</html>\n```\n\n其实`tomcat`一侧也是需要配置的, 只不过`tomcat`有默认的`Connector`配置. 如果`tomcat`没有使用默认配置, 那么`httpd`也需要做相应修改.\n```\n[root@1478a474 ~]# vim /etc/tomcat/server.xml\n<Service name=\"Catalina\">\n...\n<Connector port=\"8080\" protocol=\"HTTP/1.1\"\n               connectionTimeout=\"20000\"\n               redirectPort=\"8443\" />\n<Connector port=\"8009\" protocol=\"AJP/1.3\" redirectPort=\"8443\" />\n...\n</Service>\n```\n\n> 参考http://twoyang.net","source":"_posts/2016-07-05-tomcat基础安装及简单配置与部署.md","raw":"---\ntitle: Tomcat安装配置与简单部署\ndate: '2016-07-05 10:00'\ncategories: 实践与总结\ntag: web\nabbrlink: 977dfd0f\n---\n# Tomcat简介\n> Tomcat是一个免费开源的web服务器应用程序,使用java编程语言所编写，运行于jvm（java虚拟机）之上，轻量安全是其特性，适用于反访问量不大的中小型服务系统\n<!-- more -->\n> Tomcat可以独立运行为一个web服务器，但其通常作为Apache web 服务的一个扩展，Apache处理html静态页面，tomcat处理动态内容\n> \n如果您要了解这种技术的细节可以查阅[参考资料](http://tomcat.apache.org/tomcat-9.0-doc/index.html)。\n\n# Tomcat基础组件与框架\n```\nserver：位于最外层，一个server即一个tomcat实例\n    connecter（连接器），为辅助组件，附加在引擎之上，将用户的请求定义至指定的虚拟主机\n    service：把连接器与引擎关联起来的组件\n    engine：运行虚拟主机的容器\n    host：虚拟主机\n\n    提醒：一个引擎内部可以定义多个虚拟主机，每个虚拟主机可定义多个context（别名）\n    \n    每个组件由“类”实现，分为如下几类：\n        顶级组件：server\n        服务组件：service\n        连接器组件：http，https，ajp\n        容器类：engine，host，context\n\n        被嵌套类组件：valve，logger，realm，loader，manager    \n\n    框架：    \n        <sever>    \n            <service>    \n                <connector/>\n                <connectot/>\n                    <engine>\n                        <host>\n                            <context/>\n                            …\n                        </host>\n                            …    \n                    </engine>\n                </service>\n        </server>\n```\n\n# 准备工作\n>准备一台虚拟机, 均为CentOS-7-x86_64最小化安装, iptables与SELinux均处于关闭状态, 配置好yum源(base和epel). 做好快照, 以便每次实验后快速恢复.\n\n# tomcat安装\n> 综上所述，tomcat是用Java语言研发，运行于jvm(java virtual machine)之上，所以要安装的话需要提供JDK开发平台。\n> 由此，安装可分为两步：\n> JDK+tomcat\n\n\n## OracleJDK+Tomcat(binary)\n使用Oracle官方提供的JDK安装包和Apache官方提供的Tomcat二进制安装包来安装, 请自行去官方站点下载\n```\n# 安装OracleJDK\n[root@1478a474 ~]# rpm -ivh jdk-7u79-linux-x64.rpm \nPreparing...                          ################################# [100%]\nUpdating / installing...\n   1:jdk-2000:1.7.0_79-fcs            ################################# [100%]\nUnpacking JAR files...\n\trt.jar...\n\tjsse.jar...\n\tcharsets.jar...\n\ttools.jar...\n\tlocaledata.jar...\n\tjfxrt.jar...\n[root@1478a474 ~]# java -version\njava version \"1.7.0_79\"\nJava(TM) SE Runtime Environment (build 1.7.0_79-b15)\nJava HotSpot(TM) 64-Bit Server VM (build 24.79-b02, mixed mode)\n# 安装Tomcat\n[root@1478a474 ~]# tar -xf apache-tomcat-7.0.57.tar.gz -C /usr/local/\n[root@1478a474 ~]# ln -s apache-tomcat-7.0.57/ /usr/local/tomcat\n[root@1478a474 ~]# tree -L 1 /usr/local/tomcat/\n/usr/local/tomcat/\n├── bin\t# 脚本及启动时用到的类\n├── conf # 配置文件\n├── lib\t# 类库\n├── LICENSE\n├── logs\t# 日志文件\n├── NOTICE\n├── RELEASE-NOTES\n├── RUNNING.txt\n├── temp\t# 临时文件\n├── webapps\t# 应用程序默认部署目录\n└── work\t# 工作目录, jsp代码编译成class文件装入JVM运行, 生成class文件就存放在此目录.\n\n7 directories, 4 files\n# 需要导出环境变量\n[root@1478a474 ~]# echo 'export PATH=/usr/local/tomcat/bin:$PATH' > /etc/profile.d/tomcat.sh\n[root@1478a474 ~]# exec bash\n# 似乎也不用特别设置CATALINA_BASE和JAVA_HOME环境变量, 都自动识别出来了.\n[root@1478a474 ~]# catalina.sh version\nUsing CATALINA_BASE:   /usr/local/tomcat\nUsing CATALINA_HOME:   /usr/local/tomcat\nUsing CATALINA_TMPDIR: /usr/local/tomcat/temp\nUsing JRE_HOME:        /usr\nUsing CLASSPATH:       /usr/local/tomcat/bin/bootstrap.jar:/usr/local/tomcat/bin/tomcat-juli.jar\nServer version: Apache Tomcat/7.0.57\nServer built:   Nov 3 2014 08:39:16 UTC\nServer number:  7.0.57.0\nOS Name:        Linux\nOS Version:     3.10.0-327.el7.x86_64\nArchitecture:   amd64\nJVM Version:    1.7.0_79-b15\nJVM Vendor:     Oracle Corporation\n# 直接启动\n[root@1478a474 ~]# catalina.sh start\nUsing CATALINA_BASE:   /usr/local/tomcat\nUsing CATALINA_HOME:   /usr/local/tomcat\nUsing CATALINA_TMPDIR: /usr/local/tomcat/temp\nUsing JRE_HOME:        /usr\nUsing CLASSPATH:       /usr/local/tomcat/bin/bootstrap.jar:/usr/local/tomcat/bin/tomcat-juli.jar\nTomcat started.\n# 监听了三个端口, 8080是http监控端口, 8009是ajp协议监控端口, 8005端口是控制端口, 可以用来关闭tomcat. \n[root@1478a474 ~]# ss -tnl\nState      Recv-Q Send-Q           Local Address:Port                          Peer Address:Port              \nLISTEN     0      128                          *:22                                       *:*                  \nLISTEN     0      100                  127.0.0.1:25                                       *:*                  \nLISTEN     0      100                         :::8009                                    :::*                  \nLISTEN     0      100                         :::8080                                    :::*                  \nLISTEN     0      128                         :::22                                      :::*                  \nLISTEN     0      100                        ::1:25                                      :::*                  \nLISTEN     0      1             ::ffff:127.0.0.1:8005                                    :::*\n# 可以看到JVM是以root用户身份启动的, 这个是不安全的. \n# 官方是建议使用普通用户来启动的, 这也是为什么默认使用8080端口而不80端口的原因, 因为只有管理员身份启动的进程才能监听在特权端口(1-1024)上.\n[root@1478a474 ~]# ps aux | grep -v grep | grep java\nroot      30867  3.6  6.8 1544928 68260 pts/2   Sl   21:24   0:05 /usr/bin/java -Djava.util.logging.config.file=/usr/local/tomca......\n# 所以建立一个普通用户来启动tomcat\n[root@1478a474 ~]# useradd -r tomcat\n[root@1478a474 ~]# chown -R tomcat:tomcat /usr/local/tomcat/\n[root@1478a474 ~]# ps aux | grep -v grep | grep java\ntomcat    31726  167  6.2 1343180 62448 ?       Sl   21:44   0:03 /usr/bin/java -Djava.util.logging.config.file=/usr/local/tomca......\n```\n\n## yum源安装\n使用centos官方yum中提供的OpenJDK与Tomcat安装包来安装.\n\n```\n# 提供了三个版本的, 根据实际需要选择. 一般生产环境追求的是稳定, 不会激进地采用最新版本.\n[root@1478a474 ~]# yum list | grep -i openjdk\njava-1.6.0-openjdk.x86_64                   1:1.6.0.36-1.13.8.1.el7_1  local    \njava-1.6.0-openjdk-demo.x86_64              1:1.6.0.36-1.13.8.1.el7_1  local    \njava-1.6.0-openjdk-devel.x86_64             1:1.6.0.36-1.13.8.1.el7_1  local    \njava-1.6.0-openjdk-javadoc.x86_64           1:1.6.0.36-1.13.8.1.el7_1  local    \njava-1.6.0-openjdk-src.x86_64               1:1.6.0.36-1.13.8.1.el7_1  local    \njava-1.7.0-openjdk.x86_64                   1:1.7.0.91-2.6.2.3.el7     local    \njava-1.7.0-openjdk-accessibility.x86_64     1:1.7.0.91-2.6.2.3.el7     local    \njava-1.7.0-openjdk-demo.x86_64              1:1.7.0.91-2.6.2.3.el7     local    \njava-1.7.0-openjdk-devel.x86_64             1:1.7.0.91-2.6.2.3.el7     local    \njava-1.7.0-openjdk-headless.x86_64          1:1.7.0.91-2.6.2.3.el7     local    \njava-1.7.0-openjdk-javadoc.noarch           1:1.7.0.91-2.6.2.3.el7     local    \njava-1.7.0-openjdk-src.x86_64               1:1.7.0.91-2.6.2.3.el7     local    \njava-1.8.0-openjdk.x86_64                   1:1.8.0.65-3.b17.el7       local    \njava-1.8.0-openjdk-accessibility.x86_64     1:1.8.0.65-3.b17.el7       local    \njava-1.8.0-openjdk-accessibility-debug.x86_64\njava-1.8.0-openjdk-debug.x86_64             1:1.8.0.65-3.b17.el7       local    \njava-1.8.0-openjdk-demo.x86_64              1:1.8.0.65-3.b17.el7       local    \njava-1.8.0-openjdk-demo-debug.x86_64        1:1.8.0.65-3.b17.el7       local    \njava-1.8.0-openjdk-devel.x86_64             1:1.8.0.65-3.b17.el7       local    \njava-1.8.0-openjdk-devel-debug.x86_64       1:1.8.0.65-3.b17.el7       local    \njava-1.8.0-openjdk-headless.x86_64          1:1.8.0.65-3.b17.el7       local    \njava-1.8.0-openjdk-headless-debug.x86_64    1:1.8.0.65-3.b17.el7       local    \njava-1.8.0-openjdk-javadoc.noarch           1:1.8.0.65-3.b17.el7       local    \njava-1.8.0-openjdk-javadoc-debug.noarch     1:1.8.0.65-3.b17.el7       local    \njava-1.8.0-openjdk-src.x86_64               1:1.8.0.65-3.b17.el7       local    \njava-1.8.0-openjdk-src-debug.x86_64         1:1.8.0.65-3.b17.el7       local\n# 选择1.7, 中庸之道.\n[root@1478a474 ~]# yum install -y java-1.7.0-openjdk java-1.7.0-openjdk-devel java-1.7.0-openjdk-headless\n# 再来安装tomcat\n[root@1478a474 ~]# yum install -y tomcat tomcat-lib tomcat-webapps tomcat-admin-webapps\n# 好像也不用配什么JAVA_HOME还有CATALINA_BASE这些环境变量, 直接就可以启动了.\n[root@1478a474 ~]# systemctl start tomcat.service\n# 这个8005端口好像监听会慢一些, 总是得等一会才能看到. \n[root@1478a474 ~]# ss -tnl\nState      Recv-Q Send-Q           Local Address:Port                          Peer Address:Port              \nLISTEN     0      128                          *:22                                       *:*                  \nLISTEN     0      100                  127.0.0.1:25                                       *:*                  \nLISTEN     0      100                         :::8009                                    :::*                  \nLISTEN     0      100                         :::8080                                    :::*                  \nLISTEN     0      128                         :::22                                      :::*                  \nLISTEN     0      100                        ::1:25                                      :::*                  \nLISTEN     0      1             ::ffff:127.0.0.1:8005                                    :::*\n# 如果要配的话, 除了可以配置环境变量, 也可以修改/etc/sysconfig/tomcat这个文件.\n[root@1478a474 ~]# cat /etc/sysconfig/tomcat\n...\n# Where your java installation lives\n#JAVA_HOME=\"/usr/lib/jvm/java\"\n\n# Where your tomcat installation lives\n#CATALINA_BASE=\"/usr/share/tomcat\"\n#CATALINA_HOME=\"/usr/share/tomcat\"\n#JASPER_HOME=\"/usr/share/tomcat\"\n#CATALINA_TMPDIR=\"/var/cache/tomcat/temp\"\n\n# 这里面还可以配置jvm的启动参数, 比如指定使用内存大小. \n# 这个在大内存的时候有用, 因为JVM有个32G内存限制, 使用超过32G内存性能反而会下降. \n# 所以如果内存超过32G时, 最好分多个JVM实例启动, 每个JVM实例使用不超过32G内存.\n# -Xms：初始值\n# -Xmx：最大值\n# -Xmn：最小值\n#JAVA_OPTS=\"-Xms512m -Xmx1024m\"\n...\n\n# 可以看到JVM是以tomcat用户身份启动的, 所以安全问题也不用操心了.\n[root@1478a474 ~]# ps aux | grep -v grep | grep java\ntomcat    30217  1.8  9.1 1932192 91672 ?       Ssl  20:40   0:15 java -classpath /usr/share/tomcat/bin/bootstrap.jar:/usr/share/tomc...\n\n```\n# 管理接口用户认证\n用浏览器打开http://172.18.71.130:8080, 默认主页是tomcat的管理接口.\n\n![](http://o9c1bfnxp.bkt.clouddn.com/2016-07-tomcat/tomcat1.png)\n\n但是访问管理接口是需要通过身份认证的, 这需要在`tomcat-users.xml`配置角色/用户/口令. `yum`源安装时, 此文件是放在`/etc/tomcat`目录中, 二进制包安装时此文件是放在`/usr/local/tomcat/conf`目录中.\n`Server Status`是查看服务器运行状态的管理接口, 对应的角色是`manager-status`.\n`Manager App`是应用程序管理接口, 对应的角色是`manager-gui`.\n`Host Manager`是虚拟主机管理接口, 对应的角色是`admin-gui`.\n为某管理接口创建认证用户就是要在`tomcat-users.xml`配置文件中创建用户和口令, 并属于对应的角色. 以为`Manager App`创建认证用户为例.\n```\n[root@1478a474 ~]# vim /etc/tomcat/tomcat-users.xml\n<tomcat-users>\n  <role rolename=\"manager-gui\"/>\n  <user username=\"tomcat\" password=\"magedu\" roles=\"manager-gui\"/>\n</tomcat-users>\n[root@1478a474 ~]# systemctl restart tomcat.service\n```\n\n![](http://o9c1bfnxp.bkt.clouddn.com/2016-07-tomcat/tomcat_2.gif)\n\n\n# 应用部署\n在应用程序部署目录`webapps`下创建一个新应用`demo`.\n\n`WEB-INF` 私有资源目录, 通常存放当前应用自用的`web.xml`.\n`META-INF` 私有资源目录, 通常存放当前应用自用的`context.xml`.\n`classes` 此应用的私有类.\n`lib` 此应用的私有类, 被打包为`jar`格式类.\n`index.jsp` 此应用的主页.\n\n```\n[root@1478a474 ~]# mkdir -p /var/lib/tomcat/webapps/demo/{classes,META-INF,WEB-INF,lib}\n[root@1478a474 ~]# cat << EOF > /var/lib/tomcat/webapps/demo/index.jsp\n<%@ page language=\"java\" %>\n<html>\n  <head><title>TomcatA</title></head>\n  <body>\n    <h1><font color=\"red\">TomcatA.magedu.com</font></h1>\n    <table align=\"centre\" border=\"1\">\n      <tr>\n        <td>Session ID</td>\n    <% session.setAttribute(\"magedu.com\",\"magedu.com\"); %>\n        <td><%= session.getId() %></td>\n      </tr>\n      <tr>\n        <td>Created on</td>\n        <td><%= session.getCreationTime() %></td>\n     </tr>\n    </table>\n  </body>\n</html>\nEOF\n```\n\n![](http://o9c1bfnxp.bkt.clouddn.com/2016-07-tomcat/tomcat3.png)\n\n# 虚拟主机\n\n```\n[root@1478a474 ~]# vim /etc/tomcat/server.xml\n...\n<!-- 将默认虚拟主机改为自定义的虚拟主机www.twoyang.net -->\n<Engine name=\"Catalina\" defaultHost=\"www.twoyang.net\">\n  ...\n  <Host name=\"localhost\"  appBase=\"webapps\"\n        unpackWARs=\"true\" autoDeploy=\"true\">\n    <Valve className=\"org.apache.catalina.valves.AccessLogValve\" directory=\"logs\"\n           prefix=\"localhost_access_log.\" suffix=\".txt\"\n           pattern=\"%h %l %u %t &quot;%r&quot; %s %b\" />\n\n  </Host>\n  <!-- 自定义虚拟主机www.twoyang.net, 应用基础路径为/data/webapps. -->\n  <Host name=\"www.twoyang.net\"  appBase=\"/data/webapps\"\n        unpackWARs=\"true\" autoDeploy=\"true\">\n    <Valve className=\"org.apache.catalina.valves.AccessLogValve\" directory=\"logs\"\n           prefix=\"localhost_access_log.\" suffix=\".txt\"\n           pattern=\"%h %l %u %t &quot;%r&quot; %s %b\" />\n  </Host>\n</Engine>\n...\n\n[root@1478a474 ~]# mkdir -p /data/webapps\n[root@1478a474 ~]# mv /var/lib/tomcat/webapps/demo/ /data/webapps/\n[root@1478a474 ~]# chown -R tomcat:tomcat /data/webapps\n[root@1478a474 ~]# systemctl restart tomcat.service\n# 增加本地对www.twoyang.net的解析\n[root@1478a474 ~]# echo \"172.18.71.130 www.twoyang.net\" >> /etc/hosts\n[root@1478a474 ~]# curl http://www.twoyang.net:8080/demo/\n\n<html>\n  <head><title>TomcatA</title></head>\n  <body>\n    <h1><font color=\"red\">TomcatA.magedu.com</font></h1>\n    <table align=\"centre\" border=\"1\">\n      <tr>\n        <td>Session ID</td>\n    \n        <td>B733951E170B4A86839C70C9C633EB2B</td>\n      </tr>\n      <tr>\n        <td>Created on</td>\n        <td>1465651810125</td>\n     </tr>\n    </table>\n  </body>\n</html>\n```\n\n#反向代理\n\n使用`nginx`或`haproxy`作为前端反向代理时, 只能走`http`协议. 只有使用`httpd`作为前端反向代理时, 才能走`ajp`协议.\n而通过`httpd`来向后做反向代理时, 可以分为几种模块, 一种是通过`mode_proxy_http`模块, 一种是通过`mode_proxy_ajp`模块, 还有一种是用过`mod_jk`模块. 其中第三种模块是一种比较老的方式, 多见于一些较老的`httpd`版本, 后来已经被`mode_proxy_ajp`模块所取代, 但是目前仍然有一些企业在使用.\n不过既然后来已经被淘汰了, 就不演示它了, 真的要用了再去研究吧. 只演示一下使用`httpd`分别通过`http`协议和`ajp`协议来进行反向代理.\n\n## mode_proxy_http\n\n```\n[root@1478a474 ~]# yum install -y httpd\n[root@1478a474 ~]# httpd -M | grep proxy_http\n proxy_http_module (shared)\n[root@1478a474 ~]# vim /etc/httpd/conf.d/proxy_http.conf\n# 用于控制在http首部是否使用Via, 主要用于在多级代理中控制代理请求的流向.\n# 默认为Off, 即不启用此功能; On表示每个请求和响应报文均添加Via.\n# Full表示每个Via行都会添加当前apache服务器的版本号信息.\n# Block表示每个代理请求报文中的Via都会被移除.\nProxyVia Off\n# 是否开启apache正向代理的功能, 启用此项时为了代理http协议必须启用mod_proxy_http模块.\n# 同时, 如果为apache设置了ProxyPass, 则必须将ProxyRequests设置为Off.\nProxyRequests Off\n# 如果启用此功能, 代理会将用户请求报文中的Host行发送给后端的服务器, 而不再使用ProxyPass指定的服务器地址.\n# 如果想在反向代理中支持虚拟主机, 则需要开启此项, 否则就无需打开此功能.\nProxyPreserveHost Off\n# 将请求反向代理至后端主机\nProxyPass / http://172.18.71.130:8080/\n# 用于让apache调整HTTP重定向响应报文中的Location, Content-Location及URI标签所对应的URL.\n# 在反向代理环境中必须使用此指令避免重定向报文绕过proxy服务器.\nProxyPassReverse / http://172.18.71.130:8080/\n<Proxy *>\n  Require all granted\n</Proxy>\n<Location  / >\n  Require all granted\n</Location>\n[root@1478a474 ~]# httpd -t\nSyntax OK\n[root@1478a474 ~]# systemctl start httpd.service\n[root@1478a474 ~]# ss -tnl | grep -w 80\nLISTEN     0      128         :::80                      :::*\n[root@1478a474 ~]# curl http://172.18.71.130/demo/\n\n<html>\n  <head><title>TomcatA</title></head>\n  <body>\n    <h1><font color=\"red\">TomcatA.magedu.com</font></h1>\n    <table align=\"centre\" border=\"1\">\n      <tr>\n        <td>Session ID</td>\n    \n        <td>BADEAC947662D40AF3B7662014B10742</td>\n      </tr>\n      <tr>\n        <td>Created on</td>\n        <td>1465654377253</td>\n     </tr>\n    </table>\n  </body>\n</html>\n```\n\n## mode_proxy_ajp ##\n\n```\n[root@1478a474 ~]# yum install -y httpd\n[root@1478a474 ~]# httpd -M | grep proxy_ajp\n proxy_ajp_module (shared)\n[root@1478a474 ~]# mv /etc/httpd/conf.d/proxy_http.conf{,.bak}\n[root@1478a474 ~]# vim /etc/httpd/conf.d/proxy_ajp.conf\nProxyVia Off\nProxyRequests Off\nProxyPreserveHost Off\n# 与走http协议的配置基本一致, 只是这个地方需要使用ajp协议和响应的8009端口.\nProxyPass / ajp://172.18.71.130:8009/\nProxyPassReverse / ajp://172.18.71.130:8009/\n<Proxy *>\n  Require all granted\n</Proxy>\n<Location  / >\n  Require all granted\n</Location>\n[root@1478a474 ~]# httpd -t\nSyntax OK\n[root@1478a474 ~]# systemctl restart httpd.service\n[root@1478a474 ~]# ss -tnl | grep -w 80\nLISTEN     0      128         :::80                      :::*\n[root@1478a474 ~]# curl http://172.18.71.130/demo/\n\n<html>\n  <head><title>TomcatA</title></head>\n  <body>\n    <h1><font color=\"red\">TomcatA.magedu.com</font></h1>\n    <table align=\"centre\" border=\"1\">\n      <tr>\n        <td>Session ID</td>\n    \n        <td>BADEAC947662D40AF3B7662014B10742</td>\n      </tr>\n      <tr>\n        <td>Created on</td>\n        <td>1465654377253</td>\n     </tr>\n    </table>\n  </body>\n</html>\n```\n\n其实`tomcat`一侧也是需要配置的, 只不过`tomcat`有默认的`Connector`配置. 如果`tomcat`没有使用默认配置, 那么`httpd`也需要做相应修改.\n```\n[root@1478a474 ~]# vim /etc/tomcat/server.xml\n<Service name=\"Catalina\">\n...\n<Connector port=\"8080\" protocol=\"HTTP/1.1\"\n               connectionTimeout=\"20000\"\n               redirectPort=\"8443\" />\n<Connector port=\"8009\" protocol=\"AJP/1.3\" redirectPort=\"8443\" />\n...\n</Service>\n```\n\n> 参考http://twoyang.net","slug":"2016-07-05-tomcat基础安装及简单配置与部署","published":1,"updated":"2017-02-14T13:42:45.404Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5mkehrd0018ao94crkybedk","content":"<h1 id=\"Tomcat简介\"><a href=\"#Tomcat简介\" class=\"headerlink\" title=\"Tomcat简介\"></a>Tomcat简介</h1><blockquote>\n<p>Tomcat是一个免费开源的web服务器应用程序,使用java编程语言所编写，运行于jvm（java虚拟机）之上，轻量安全是其特性，适用于反访问量不大的中小型服务系统<br><a id=\"more\"></a><br>Tomcat可以独立运行为一个web服务器，但其通常作为Apache web 服务的一个扩展，Apache处理html静态页面，tomcat处理动态内容</p>\n<p>如果您要了解这种技术的细节可以查阅<a href=\"http://tomcat.apache.org/tomcat-9.0-doc/index.html\" target=\"_blank\" rel=\"external\">参考资料</a>。</p>\n</blockquote>\n<h1 id=\"Tomcat基础组件与框架\"><a href=\"#Tomcat基础组件与框架\" class=\"headerlink\" title=\"Tomcat基础组件与框架\"></a>Tomcat基础组件与框架</h1><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div></pre></td><td class=\"code\"><pre><div class=\"line\">server：位于最外层，一个server即一个tomcat实例</div><div class=\"line\">    connecter（连接器），为辅助组件，附加在引擎之上，将用户的请求定义至指定的虚拟主机</div><div class=\"line\">    service：把连接器与引擎关联起来的组件</div><div class=\"line\">    engine：运行虚拟主机的容器</div><div class=\"line\">    host：虚拟主机</div><div class=\"line\"></div><div class=\"line\">    提醒：一个引擎内部可以定义多个虚拟主机，每个虚拟主机可定义多个context（别名）</div><div class=\"line\">    </div><div class=\"line\">    每个组件由“类”实现，分为如下几类：</div><div class=\"line\">        顶级组件：server</div><div class=\"line\">        服务组件：service</div><div class=\"line\">        连接器组件：http，https，ajp</div><div class=\"line\">        容器类：engine，host，context</div><div class=\"line\"></div><div class=\"line\">        被嵌套类组件：valve，logger，realm，loader，manager    </div><div class=\"line\"></div><div class=\"line\">    框架：    </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">sever</span>&gt;</span>    </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">service</span>&gt;</span>    </div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">connector</span>/&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">connectot</span>/&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">engine</span>&gt;</span></div><div class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">host</span>&gt;</span></div><div class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">context</span>/&gt;</span></div><div class=\"line\">                            …</div><div class=\"line\">                        <span class=\"tag\">&lt;/<span class=\"name\">host</span>&gt;</span></div><div class=\"line\">                            …    </div><div class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">engine</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">service</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">server</span>&gt;</span></div></pre></td></tr></table></figure>\n<h1 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h1><blockquote>\n<p>准备一台虚拟机, 均为CentOS-7-x86_64最小化安装, iptables与SELinux均处于关闭状态, 配置好yum源(base和epel). 做好快照, 以便每次实验后快速恢复.</p>\n</blockquote>\n<h1 id=\"tomcat安装\"><a href=\"#tomcat安装\" class=\"headerlink\" title=\"tomcat安装\"></a>tomcat安装</h1><blockquote>\n<p>综上所述，tomcat是用Java语言研发，运行于jvm(java virtual machine)之上，所以要安装的话需要提供JDK开发平台。<br>由此，安装可分为两步：<br>JDK+tomcat</p>\n</blockquote>\n<h2 id=\"OracleJDK-Tomcat-binary\"><a href=\"#OracleJDK-Tomcat-binary\" class=\"headerlink\" title=\"OracleJDK+Tomcat(binary)\"></a>OracleJDK+Tomcat(binary)</h2><p>使用Oracle官方提供的JDK安装包和Apache官方提供的Tomcat二进制安装包来安装, 请自行去官方站点下载<br><figure class=\"highlight clean\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 安装OracleJDK</div><div class=\"line\">[root@<span class=\"number\">1478</span>a474 ~]# rpm -ivh jdk<span class=\"number\">-7</span>u79-linux-x64.rpm </div><div class=\"line\">Preparing...                          ################################# [<span class=\"number\">100</span>%]</div><div class=\"line\">Updating / installing...</div><div class=\"line\">   <span class=\"number\">1</span>:jdk<span class=\"number\">-2000</span>:<span class=\"number\">1.7</span><span class=\"number\">.0</span>_79-fcs            ################################# [<span class=\"number\">100</span>%]</div><div class=\"line\">Unpacking JAR files...</div><div class=\"line\">\trt.jar...</div><div class=\"line\">\tjsse.jar...</div><div class=\"line\">\tcharsets.jar...</div><div class=\"line\">\ttools.jar...</div><div class=\"line\">\tlocaledata.jar...</div><div class=\"line\">\tjfxrt.jar...</div><div class=\"line\">[root@<span class=\"number\">1478</span>a474 ~]# java -version</div><div class=\"line\">java version <span class=\"string\">\"1.7.0_79\"</span></div><div class=\"line\">Java(TM) SE Runtime Environment (build <span class=\"number\">1.7</span><span class=\"number\">.0</span>_79-b15)</div><div class=\"line\">Java HotSpot(TM) <span class=\"number\">64</span>-Bit Server VM (build <span class=\"number\">24.79</span>-b02, mixed mode)</div><div class=\"line\"># 安装Tomcat</div><div class=\"line\">[root@<span class=\"number\">1478</span>a474 ~]# tar -xf apache-tomcat<span class=\"number\">-7.0</span><span class=\"number\">.57</span>.tar.gz -C /usr/local/</div><div class=\"line\">[root@<span class=\"number\">1478</span>a474 ~]# ln -s apache-tomcat<span class=\"number\">-7.0</span><span class=\"number\">.57</span>/ /usr/local/tomcat</div><div class=\"line\">[root@<span class=\"number\">1478</span>a474 ~]# tree -L <span class=\"number\">1</span> /usr/local/tomcat/</div><div class=\"line\">/usr/local/tomcat/</div><div class=\"line\">├── bin\t# 脚本及启动时用到的类</div><div class=\"line\">├── conf # 配置文件</div><div class=\"line\">├── lib\t# 类库</div><div class=\"line\">├── LICENSE</div><div class=\"line\">├── logs\t# 日志文件</div><div class=\"line\">├── NOTICE</div><div class=\"line\">├── RELEASE-NOTES</div><div class=\"line\">├── RUNNING.txt</div><div class=\"line\">├── temp\t# 临时文件</div><div class=\"line\">├── webapps\t# 应用程序默认部署目录</div><div class=\"line\">└── work\t# 工作目录, jsp代码编译成<span class=\"keyword\">class</span>文件装入JVM运行, 生成<span class=\"keyword\">class</span>文件就存放在此目录.</div><div class=\"line\"></div><div class=\"line\"><span class=\"number\">7</span> directories, <span class=\"number\">4</span> files</div><div class=\"line\"># 需要导出环境变量</div><div class=\"line\">[root@<span class=\"number\">1478</span>a474 ~]# echo <span class=\"string\">'export PATH=/usr/local/tomcat/bin:$PATH'</span> &gt; /etc/profile.d/tomcat.sh</div><div class=\"line\">[root@<span class=\"number\">1478</span>a474 ~]# exec bash</div><div class=\"line\"># 似乎也不用特别设置CATALINA_BASE和JAVA_HOME环境变量, 都自动识别出来了.</div><div class=\"line\">[root@<span class=\"number\">1478</span>a474 ~]# catalina.sh version</div><div class=\"line\">Using CATALINA_BASE:   /usr/local/tomcat</div><div class=\"line\">Using CATALINA_HOME:   /usr/local/tomcat</div><div class=\"line\">Using CATALINA_TMPDIR: /usr/local/tomcat/temp</div><div class=\"line\">Using JRE_HOME:        /usr</div><div class=\"line\">Using CLASSPATH:       /usr/local/tomcat/bin/bootstrap.jar:/usr/local/tomcat/bin/tomcat-juli.jar</div><div class=\"line\">Server version: Apache Tomcat/<span class=\"number\">7.0</span><span class=\"number\">.57</span></div><div class=\"line\">Server built:   Nov <span class=\"number\">3</span> <span class=\"number\">2014</span> <span class=\"number\">08</span>:<span class=\"number\">39</span>:<span class=\"number\">16</span> UTC</div><div class=\"line\">Server number:  <span class=\"number\">7.0</span><span class=\"number\">.57</span><span class=\"number\">.0</span></div><div class=\"line\">OS Name:        Linux</div><div class=\"line\">OS Version:     <span class=\"number\">3.10</span><span class=\"number\">.0</span><span class=\"number\">-327.</span>el7.x86_64</div><div class=\"line\">Architecture:   amd64</div><div class=\"line\">JVM Version:    <span class=\"number\">1.7</span><span class=\"number\">.0</span>_79-b15</div><div class=\"line\">JVM Vendor:     Oracle Corporation</div><div class=\"line\"># 直接启动</div><div class=\"line\">[root@<span class=\"number\">1478</span>a474 ~]# catalina.sh start</div><div class=\"line\">Using CATALINA_BASE:   /usr/local/tomcat</div><div class=\"line\">Using CATALINA_HOME:   /usr/local/tomcat</div><div class=\"line\">Using CATALINA_TMPDIR: /usr/local/tomcat/temp</div><div class=\"line\">Using JRE_HOME:        /usr</div><div class=\"line\">Using CLASSPATH:       /usr/local/tomcat/bin/bootstrap.jar:/usr/local/tomcat/bin/tomcat-juli.jar</div><div class=\"line\">Tomcat started.</div><div class=\"line\"># 监听了三个端口, <span class=\"number\">8080</span>是http监控端口, <span class=\"number\">8009</span>是ajp协议监控端口, <span class=\"number\">8005</span>端口是控制端口, 可以用来关闭tomcat. </div><div class=\"line\">[root@<span class=\"number\">1478</span>a474 ~]# ss -tnl</div><div class=\"line\">State      Recv-Q Send-Q           Local Address:Port                          Peer Address:Port              </div><div class=\"line\">LISTEN     <span class=\"number\">0</span>      <span class=\"number\">128</span>                          *:<span class=\"number\">22</span>                                       *:*                  </div><div class=\"line\">LISTEN     <span class=\"number\">0</span>      <span class=\"number\">100</span>                  <span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">25</span>                                       *:*                  </div><div class=\"line\">LISTEN     <span class=\"number\">0</span>      <span class=\"number\">100</span>                         :::<span class=\"number\">8009</span>                                    :::*                  </div><div class=\"line\">LISTEN     <span class=\"number\">0</span>      <span class=\"number\">100</span>                         :::<span class=\"number\">8080</span>                                    :::*                  </div><div class=\"line\">LISTEN     <span class=\"number\">0</span>      <span class=\"number\">128</span>                         :::<span class=\"number\">22</span>                                      :::*                  </div><div class=\"line\">LISTEN     <span class=\"number\">0</span>      <span class=\"number\">100</span>                        ::<span class=\"number\">1</span>:<span class=\"number\">25</span>                                      :::*                  </div><div class=\"line\">LISTEN     <span class=\"number\">0</span>      <span class=\"number\">1</span>             ::ffff:<span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">8005</span>                                    :::*</div><div class=\"line\"># 可以看到JVM是以root用户身份启动的, 这个是不安全的. </div><div class=\"line\"># 官方是建议使用普通用户来启动的, 这也是为什么默认使用<span class=\"number\">8080</span>端口而不<span class=\"number\">80</span>端口的原因, 因为只有管理员身份启动的进程才能监听在特权端口(<span class=\"number\">1</span><span class=\"number\">-1024</span>)上.</div><div class=\"line\">[root@<span class=\"number\">1478</span>a474 ~]# ps aux | grep -v grep | grep java</div><div class=\"line\">root      <span class=\"number\">30867</span>  <span class=\"number\">3.6</span>  <span class=\"number\">6.8</span> <span class=\"number\">1544928</span> <span class=\"number\">68260</span> pts/<span class=\"number\">2</span>   Sl   <span class=\"number\">21</span>:<span class=\"number\">24</span>   <span class=\"number\">0</span>:<span class=\"number\">05</span> /usr/bin/java -Djava.util.logging.config.file=/usr/local/tomca......</div><div class=\"line\"># 所以建立一个普通用户来启动tomcat</div><div class=\"line\">[root@<span class=\"number\">1478</span>a474 ~]# useradd -r tomcat</div><div class=\"line\">[root@<span class=\"number\">1478</span>a474 ~]# chown -R tomcat:tomcat /usr/local/tomcat/</div><div class=\"line\">[root@<span class=\"number\">1478</span>a474 ~]# ps aux | grep -v grep | grep java</div><div class=\"line\">tomcat    <span class=\"number\">31726</span>  <span class=\"number\">167</span>  <span class=\"number\">6.2</span> <span class=\"number\">1343180</span> <span class=\"number\">62448</span> ?       Sl   <span class=\"number\">21</span>:<span class=\"number\">44</span>   <span class=\"number\">0</span>:<span class=\"number\">03</span> /usr/bin/java -Djava.util.logging.config.file=/usr/local/tomca......</div></pre></td></tr></table></figure></p>\n<h2 id=\"yum源安装\"><a href=\"#yum源安装\" class=\"headerlink\" title=\"yum源安装\"></a>yum源安装</h2><p>使用centos官方yum中提供的OpenJDK与Tomcat安装包来安装.</p>\n<figure class=\"highlight x86asm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 提供了三个版本的, 根据实际需要选择. 一般生产环境追求的是稳定, 不会激进地采用最新版本.</div><div class=\"line\">[root@1478a474 ~]# yum list | grep -i openjdk</div><div class=\"line\">java-<span class=\"number\">1.6</span><span class=\"meta\">.0</span>-openjdk.x86_64                   <span class=\"number\">1</span>:<span class=\"number\">1.6</span><span class=\"meta\">.0</span><span class=\"meta\">.36</span>-<span class=\"number\">1.13</span><span class=\"meta\">.8</span><span class=\"meta\">.1</span>.el7_1  local    </div><div class=\"line\">java-<span class=\"number\">1.6</span><span class=\"meta\">.0</span>-openjdk-demo.x86_64              <span class=\"number\">1</span>:<span class=\"number\">1.6</span><span class=\"meta\">.0</span><span class=\"meta\">.36</span>-<span class=\"number\">1.13</span><span class=\"meta\">.8</span><span class=\"meta\">.1</span>.el7_1  local    </div><div class=\"line\">java-<span class=\"number\">1.6</span><span class=\"meta\">.0</span>-openjdk-devel.x86_64             <span class=\"number\">1</span>:<span class=\"number\">1.6</span><span class=\"meta\">.0</span><span class=\"meta\">.36</span>-<span class=\"number\">1.13</span><span class=\"meta\">.8</span><span class=\"meta\">.1</span>.el7_1  local    </div><div class=\"line\">java-<span class=\"number\">1.6</span><span class=\"meta\">.0</span>-openjdk-javadoc.x86_64           <span class=\"number\">1</span>:<span class=\"number\">1.6</span><span class=\"meta\">.0</span><span class=\"meta\">.36</span>-<span class=\"number\">1.13</span><span class=\"meta\">.8</span><span class=\"meta\">.1</span>.el7_1  local    </div><div class=\"line\">java-<span class=\"number\">1.6</span><span class=\"meta\">.0</span>-openjdk-src.x86_64               <span class=\"number\">1</span>:<span class=\"number\">1.6</span><span class=\"meta\">.0</span><span class=\"meta\">.36</span>-<span class=\"number\">1.13</span><span class=\"meta\">.8</span><span class=\"meta\">.1</span>.el7_1  local    </div><div class=\"line\">java-<span class=\"number\">1.7</span><span class=\"meta\">.0</span>-openjdk.x86_64                   <span class=\"number\">1</span>:<span class=\"number\">1.7</span><span class=\"meta\">.0</span><span class=\"meta\">.91</span>-<span class=\"number\">2.6</span><span class=\"meta\">.2</span><span class=\"meta\">.3</span>.el7     local    </div><div class=\"line\">java-<span class=\"number\">1.7</span><span class=\"meta\">.0</span>-openjdk-accessibility.x86_64     <span class=\"number\">1</span>:<span class=\"number\">1.7</span><span class=\"meta\">.0</span><span class=\"meta\">.91</span>-<span class=\"number\">2.6</span><span class=\"meta\">.2</span><span class=\"meta\">.3</span>.el7     local    </div><div class=\"line\">java-<span class=\"number\">1.7</span><span class=\"meta\">.0</span>-openjdk-demo.x86_64              <span class=\"number\">1</span>:<span class=\"number\">1.7</span><span class=\"meta\">.0</span><span class=\"meta\">.91</span>-<span class=\"number\">2.6</span><span class=\"meta\">.2</span><span class=\"meta\">.3</span>.el7     local    </div><div class=\"line\">java-<span class=\"number\">1.7</span><span class=\"meta\">.0</span>-openjdk-devel.x86_64             <span class=\"number\">1</span>:<span class=\"number\">1.7</span><span class=\"meta\">.0</span><span class=\"meta\">.91</span>-<span class=\"number\">2.6</span><span class=\"meta\">.2</span><span class=\"meta\">.3</span>.el7     local    </div><div class=\"line\">java-<span class=\"number\">1.7</span><span class=\"meta\">.0</span>-openjdk-headless.x86_64          <span class=\"number\">1</span>:<span class=\"number\">1.7</span><span class=\"meta\">.0</span><span class=\"meta\">.91</span>-<span class=\"number\">2.6</span><span class=\"meta\">.2</span><span class=\"meta\">.3</span>.el7     local    </div><div class=\"line\">java-<span class=\"number\">1.7</span><span class=\"meta\">.0</span>-openjdk-javadoc.noarch           <span class=\"number\">1</span>:<span class=\"number\">1.7</span><span class=\"meta\">.0</span><span class=\"meta\">.91</span>-<span class=\"number\">2.6</span><span class=\"meta\">.2</span><span class=\"meta\">.3</span>.el7     local    </div><div class=\"line\">java-<span class=\"number\">1.7</span><span class=\"meta\">.0</span>-openjdk-src.x86_64               <span class=\"number\">1</span>:<span class=\"number\">1.7</span><span class=\"meta\">.0</span><span class=\"meta\">.91</span>-<span class=\"number\">2.6</span><span class=\"meta\">.2</span><span class=\"meta\">.3</span>.el7     local    </div><div class=\"line\">java-<span class=\"number\">1.8</span><span class=\"meta\">.0</span>-openjdk.x86_64                   <span class=\"number\">1</span>:<span class=\"number\">1.8</span><span class=\"meta\">.0</span><span class=\"meta\">.65</span>-<span class=\"number\">3.</span>b17.el7       local    </div><div class=\"line\">java-<span class=\"number\">1.8</span><span class=\"meta\">.0</span>-openjdk-accessibility.x86_64     <span class=\"number\">1</span>:<span class=\"number\">1.8</span><span class=\"meta\">.0</span><span class=\"meta\">.65</span>-<span class=\"number\">3.</span>b17.el7       local    </div><div class=\"line\">java-<span class=\"number\">1.8</span><span class=\"meta\">.0</span>-openjdk-accessibility-debug.x86_64</div><div class=\"line\">java-<span class=\"number\">1.8</span><span class=\"meta\">.0</span>-openjdk-debug.x86_64             <span class=\"number\">1</span>:<span class=\"number\">1.8</span><span class=\"meta\">.0</span><span class=\"meta\">.65</span>-<span class=\"number\">3.</span>b17.el7       local    </div><div class=\"line\">java-<span class=\"number\">1.8</span><span class=\"meta\">.0</span>-openjdk-demo.x86_64              <span class=\"number\">1</span>:<span class=\"number\">1.8</span><span class=\"meta\">.0</span><span class=\"meta\">.65</span>-<span class=\"number\">3.</span>b17.el7       local    </div><div class=\"line\">java-<span class=\"number\">1.8</span><span class=\"meta\">.0</span>-openjdk-demo-debug.x86_64        <span class=\"number\">1</span>:<span class=\"number\">1.8</span><span class=\"meta\">.0</span><span class=\"meta\">.65</span>-<span class=\"number\">3.</span>b17.el7       local    </div><div class=\"line\">java-<span class=\"number\">1.8</span><span class=\"meta\">.0</span>-openjdk-devel.x86_64             <span class=\"number\">1</span>:<span class=\"number\">1.8</span><span class=\"meta\">.0</span><span class=\"meta\">.65</span>-<span class=\"number\">3.</span>b17.el7       local    </div><div class=\"line\">java-<span class=\"number\">1.8</span><span class=\"meta\">.0</span>-openjdk-devel-debug.x86_64       <span class=\"number\">1</span>:<span class=\"number\">1.8</span><span class=\"meta\">.0</span><span class=\"meta\">.65</span>-<span class=\"number\">3.</span>b17.el7       local    </div><div class=\"line\">java-<span class=\"number\">1.8</span><span class=\"meta\">.0</span>-openjdk-headless.x86_64          <span class=\"number\">1</span>:<span class=\"number\">1.8</span><span class=\"meta\">.0</span><span class=\"meta\">.65</span>-<span class=\"number\">3.</span>b17.el7       local    </div><div class=\"line\">java-<span class=\"number\">1.8</span><span class=\"meta\">.0</span>-openjdk-headless-debug.x86_64    <span class=\"number\">1</span>:<span class=\"number\">1.8</span><span class=\"meta\">.0</span><span class=\"meta\">.65</span>-<span class=\"number\">3.</span>b17.el7       local    </div><div class=\"line\">java-<span class=\"number\">1.8</span><span class=\"meta\">.0</span>-openjdk-javadoc.noarch           <span class=\"number\">1</span>:<span class=\"number\">1.8</span><span class=\"meta\">.0</span><span class=\"meta\">.65</span>-<span class=\"number\">3.</span>b17.el7       local    </div><div class=\"line\">java-<span class=\"number\">1.8</span><span class=\"meta\">.0</span>-openjdk-javadoc-debug.noarch     <span class=\"number\">1</span>:<span class=\"number\">1.8</span><span class=\"meta\">.0</span><span class=\"meta\">.65</span>-<span class=\"number\">3.</span>b17.el7       local    </div><div class=\"line\">java-<span class=\"number\">1.8</span><span class=\"meta\">.0</span>-openjdk-src.x86_64               <span class=\"number\">1</span>:<span class=\"number\">1.8</span><span class=\"meta\">.0</span><span class=\"meta\">.65</span>-<span class=\"number\">3.</span>b17.el7       local    </div><div class=\"line\">java-<span class=\"number\">1.8</span><span class=\"meta\">.0</span>-openjdk-src-debug.x86_64         <span class=\"number\">1</span>:<span class=\"number\">1.8</span><span class=\"meta\">.0</span><span class=\"meta\">.65</span>-<span class=\"number\">3.</span>b17.el7       local</div><div class=\"line\"># 选择<span class=\"number\">1.7</span>, 中庸之道.</div><div class=\"line\">[root@1478a474 ~]# yum install -y java-<span class=\"number\">1.7</span><span class=\"meta\">.0</span>-openjdk java-<span class=\"number\">1.7</span><span class=\"meta\">.0</span>-openjdk-devel java-<span class=\"number\">1.7</span><span class=\"meta\">.0</span>-openjdk-headless</div><div class=\"line\"># 再来安装tomcat</div><div class=\"line\">[root@1478a474 ~]# yum install -y tomcat tomcat-lib tomcat-webapps tomcat-admin-webapps</div><div class=\"line\"># 好像也不用配什么JAVA_HOME还有CATALINA_BASE这些环境变量, 直接就可以启动了.</div><div class=\"line\">[root@1478a474 ~]# systemctl start tomcat.service</div><div class=\"line\"># 这个<span class=\"number\">8005</span>端口好像监听会慢一些, 总是得等一会才能看到. </div><div class=\"line\">[root@1478a474 ~]# <span class=\"built_in\">ss</span> -tnl</div><div class=\"line\">State      Recv-Q Send-Q           Local Address:Port                          Peer Address:Port              </div><div class=\"line\">LISTEN     <span class=\"number\">0</span>      <span class=\"number\">128</span>                          *:<span class=\"number\">22</span>                                       *:*                  </div><div class=\"line\">LISTEN     <span class=\"number\">0</span>      <span class=\"number\">100</span>                  <span class=\"number\">127.0</span><span class=\"meta\">.0</span><span class=\"meta\">.1</span>:<span class=\"number\">25</span>                                       *:*                  </div><div class=\"line\">LISTEN     <span class=\"number\">0</span>      <span class=\"number\">100</span>                         :::<span class=\"number\">8009</span>                                    :::*                  </div><div class=\"line\">LISTEN     <span class=\"number\">0</span>      <span class=\"number\">100</span>                         :::<span class=\"number\">8080</span>                                    :::*                  </div><div class=\"line\">LISTEN     <span class=\"number\">0</span>      <span class=\"number\">128</span>                         :::<span class=\"number\">22</span>                                      :::*                  </div><div class=\"line\">LISTEN     <span class=\"number\">0</span>      <span class=\"number\">100</span>                        ::<span class=\"number\">1</span>:<span class=\"number\">25</span>                                      :::*                  </div><div class=\"line\">LISTEN     <span class=\"number\">0</span>      <span class=\"number\">1</span>             ::ffff:<span class=\"number\">127.0</span><span class=\"meta\">.0</span><span class=\"meta\">.1</span>:<span class=\"number\">8005</span>                                    :::*</div><div class=\"line\"># 如果要配的话, 除了可以配置环境变量, 也可以修改/etc/sysconfig/tomcat这个文件.</div><div class=\"line\">[root@1478a474 ~]# cat /etc/sysconfig/tomcat</div><div class=\"line\">...</div><div class=\"line\"># Where your java installation lives</div><div class=\"line\">#JAVA_HOME=<span class=\"string\">\"/usr/lib/jvm/java\"</span></div><div class=\"line\"></div><div class=\"line\"># Where your tomcat installation lives</div><div class=\"line\">#CATALINA_BASE=<span class=\"string\">\"/usr/share/tomcat\"</span></div><div class=\"line\">#CATALINA_HOME=<span class=\"string\">\"/usr/share/tomcat\"</span></div><div class=\"line\">#JASPER_HOME=<span class=\"string\">\"/usr/share/tomcat\"</span></div><div class=\"line\">#CATALINA_TMPDIR=<span class=\"string\">\"/var/cache/tomcat/temp\"</span></div><div class=\"line\"></div><div class=\"line\"># 这里面还可以配置jvm的启动参数, 比如指定使用内存大小. </div><div class=\"line\"># 这个在大内存的时候有用, 因为JVM有个32G内存限制, 使用超过32G内存性能反而会下降. </div><div class=\"line\"># 所以如果内存超过32G时, 最好分多个JVM实例启动, 每个JVM实例使用不超过32G内存.</div><div class=\"line\"># -Xms：初始值</div><div class=\"line\"># -Xmx：最大值</div><div class=\"line\"># -Xmn：最小值</div><div class=\"line\">#JAVA_OPTS=<span class=\"string\">\"-Xms512m -Xmx1024m\"</span></div><div class=\"line\">...</div><div class=\"line\"></div><div class=\"line\"># 可以看到JVM是以tomcat用户身份启动的, 所以安全问题也不用操心了.</div><div class=\"line\">[root@1478a474 ~]# ps aux | grep -v grep | grep java</div><div class=\"line\">tomcat    <span class=\"number\">30217</span>  <span class=\"number\">1.8</span>  <span class=\"number\">9.1</span> <span class=\"number\">1932192</span> <span class=\"number\">91672</span> ?       Ssl  <span class=\"number\">20</span>:<span class=\"number\">40</span>   <span class=\"number\">0</span>:<span class=\"number\">15</span> java -classpath /usr/share/tomcat/bin/bootstrap.jar:/usr/share/tomc...</div></pre></td></tr></table></figure>\n<h1 id=\"管理接口用户认证\"><a href=\"#管理接口用户认证\" class=\"headerlink\" title=\"管理接口用户认证\"></a>管理接口用户认证</h1><p>用浏览器打开<a href=\"http://172.18.71.130:8080\" target=\"_blank\" rel=\"external\">http://172.18.71.130:8080</a>, 默认主页是tomcat的管理接口.</p>\n<p><img src=\"http://o9c1bfnxp.bkt.clouddn.com/2016-07-tomcat/tomcat1.png\" alt=\"\"></p>\n<p>但是访问管理接口是需要通过身份认证的, 这需要在<code>tomcat-users.xml</code>配置角色/用户/口令. <code>yum</code>源安装时, 此文件是放在<code>/etc/tomcat</code>目录中, 二进制包安装时此文件是放在<code>/usr/local/tomcat/conf</code>目录中.<br><code>Server Status</code>是查看服务器运行状态的管理接口, 对应的角色是<code>manager-status</code>.<br><code>Manager App</code>是应用程序管理接口, 对应的角色是<code>manager-gui</code>.<br><code>Host Manager</code>是虚拟主机管理接口, 对应的角色是<code>admin-gui</code>.<br>为某管理接口创建认证用户就是要在<code>tomcat-users.xml</code>配置文件中创建用户和口令, 并属于对应的角色. 以为<code>Manager App</code>创建认证用户为例.<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@1478a474 ~]# vim /etc/tomcat/tomcat-users.xml</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">tomcat-users</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">role</span> <span class=\"attr\">rolename</span>=<span class=\"string\">\"manager-gui\"</span>/&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">user</span> <span class=\"attr\">username</span>=<span class=\"string\">\"tomcat\"</span> <span class=\"attr\">password</span>=<span class=\"string\">\"magedu\"</span> <span class=\"attr\">roles</span>=<span class=\"string\">\"manager-gui\"</span>/&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">tomcat-users</span>&gt;</span></div><div class=\"line\">[root@1478a474 ~]# systemctl restart tomcat.service</div></pre></td></tr></table></figure></p>\n<p><img src=\"http://o9c1bfnxp.bkt.clouddn.com/2016-07-tomcat/tomcat_2.gif\" alt=\"\"></p>\n<h1 id=\"应用部署\"><a href=\"#应用部署\" class=\"headerlink\" title=\"应用部署\"></a>应用部署</h1><p>在应用程序部署目录<code>webapps</code>下创建一个新应用<code>demo</code>.</p>\n<p><code>WEB-INF</code> 私有资源目录, 通常存放当前应用自用的<code>web.xml</code>.<br><code>META-INF</code> 私有资源目录, 通常存放当前应用自用的<code>context.xml</code>.<br><code>classes</code> 此应用的私有类.<br><code>lib</code> 此应用的私有类, 被打包为<code>jar</code>格式类.<br><code>index.jsp</code> 此应用的主页.</p>\n<figure class=\"highlight erb\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\">[root@1478a474 ~]# mkdir -p /var/lib/tomcat/webapps/demo/&#123;classes,META-INF,WEB-INF,lib&#125;</span></div><div class=\"line\">[root@1478a474 ~]# cat <span class=\"tag\">&lt;&lt; <span class=\"attr\">EOF</span> &gt;</span> /var/lib/tomcat/webapps/demo/index.jsp</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%</span></span><span class=\"ruby\">@ page language=<span class=\"string\">\"java\"</span> </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>TomcatA<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">font</span> <span class=\"attr\">color</span>=<span class=\"string\">\"red\"</span>&gt;</span>TomcatA.magedu.com<span class=\"tag\">&lt;/<span class=\"name\">font</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">align</span>=<span class=\"string\">\"centre\"</span> <span class=\"attr\">border</span>=<span class=\"string\">\"1\"</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>Session ID<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">%</span></span><span class=\"ruby\"> session.setAttribute(<span class=\"string\">\"magedu.com\"</span>,<span class=\"string\">\"magedu.com\"</span>); </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">%=</span></span><span class=\"ruby\"> session.getId() </span><span class=\"xml\"><span class=\"tag\">%&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span></div><div class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>Created on<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">%=</span></span><span class=\"ruby\"> session.getCreationTime() </span><span class=\"xml\"><span class=\"tag\">%&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span></div><div class=\"line\">     <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div><div class=\"line\">EOF</div></pre></td></tr></table></figure>\n<p><img src=\"http://o9c1bfnxp.bkt.clouddn.com/2016-07-tomcat/tomcat3.png\" alt=\"\"></p>\n<h1 id=\"虚拟主机\"><a href=\"#虚拟主机\" class=\"headerlink\" title=\"虚拟主机\"></a>虚拟主机</h1><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@1478a474 ~]# vim /etc/tomcat/server.xml</div><div class=\"line\">...</div><div class=\"line\"><span class=\"comment\">&lt;!-- 将默认虚拟主机改为自定义的虚拟主机www.twoyang.net --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Engine</span> <span class=\"attr\">name</span>=<span class=\"string\">\"Catalina\"</span> <span class=\"attr\">defaultHost</span>=<span class=\"string\">\"www.twoyang.net\"</span>&gt;</span></div><div class=\"line\">  ...</div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">Host</span> <span class=\"attr\">name</span>=<span class=\"string\">\"localhost\"</span>  <span class=\"attr\">appBase</span>=<span class=\"string\">\"webapps\"</span></span></div><div class=\"line\">        <span class=\"attr\">unpackWARs</span>=<span class=\"string\">\"true\"</span> <span class=\"attr\">autoDeploy</span>=<span class=\"string\">\"true\"</span>&gt;</div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Valve</span> <span class=\"attr\">className</span>=<span class=\"string\">\"org.apache.catalina.valves.AccessLogValve\"</span> <span class=\"attr\">directory</span>=<span class=\"string\">\"logs\"</span></span></div><div class=\"line\">           <span class=\"attr\">prefix</span>=<span class=\"string\">\"localhost_access_log.\"</span> <span class=\"attr\">suffix</span>=<span class=\"string\">\".txt\"</span></div><div class=\"line\">           <span class=\"attr\">pattern</span>=<span class=\"string\">\"%h %l %u %t &amp;quot;%r&amp;quot; %s %b\"</span> /&gt;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">Host</span>&gt;</span></div><div class=\"line\">  <span class=\"comment\">&lt;!-- 自定义虚拟主机www.twoyang.net, 应用基础路径为/data/webapps. --&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">Host</span> <span class=\"attr\">name</span>=<span class=\"string\">\"www.twoyang.net\"</span>  <span class=\"attr\">appBase</span>=<span class=\"string\">\"/data/webapps\"</span></span></div><div class=\"line\">        <span class=\"attr\">unpackWARs</span>=<span class=\"string\">\"true\"</span> <span class=\"attr\">autoDeploy</span>=<span class=\"string\">\"true\"</span>&gt;</div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Valve</span> <span class=\"attr\">className</span>=<span class=\"string\">\"org.apache.catalina.valves.AccessLogValve\"</span> <span class=\"attr\">directory</span>=<span class=\"string\">\"logs\"</span></span></div><div class=\"line\">           <span class=\"attr\">prefix</span>=<span class=\"string\">\"localhost_access_log.\"</span> <span class=\"attr\">suffix</span>=<span class=\"string\">\".txt\"</span></div><div class=\"line\">           <span class=\"attr\">pattern</span>=<span class=\"string\">\"%h %l %u %t &amp;quot;%r&amp;quot; %s %b\"</span> /&gt;</div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">Host</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Engine</span>&gt;</span></div><div class=\"line\">...</div><div class=\"line\"></div><div class=\"line\">[root@1478a474 ~]# mkdir -p /data/webapps</div><div class=\"line\">[root@1478a474 ~]# mv /var/lib/tomcat/webapps/demo/ /data/webapps/</div><div class=\"line\">[root@1478a474 ~]# chown -R tomcat:tomcat /data/webapps</div><div class=\"line\">[root@1478a474 ~]# systemctl restart tomcat.service</div><div class=\"line\"># 增加本地对www.twoyang.net的解析</div><div class=\"line\">[root@1478a474 ~]# echo \"172.18.71.130 www.twoyang.net\" &gt;&gt; /etc/hosts</div><div class=\"line\">[root@1478a474 ~]# curl http://www.twoyang.net:8080/demo/</div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>TomcatA<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">font</span> <span class=\"attr\">color</span>=<span class=\"string\">\"red\"</span>&gt;</span>TomcatA.magedu.com<span class=\"tag\">&lt;/<span class=\"name\">font</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">align</span>=<span class=\"string\">\"centre\"</span> <span class=\"attr\">border</span>=<span class=\"string\">\"1\"</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>Session ID<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">    </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>B733951E170B4A86839C70C9C633EB2B<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>Created on<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>1465651810125<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">     <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>#反向代理</p>\n<p>使用<code>nginx</code>或<code>haproxy</code>作为前端反向代理时, 只能走<code>http</code>协议. 只有使用<code>httpd</code>作为前端反向代理时, 才能走<code>ajp</code>协议.<br>而通过<code>httpd</code>来向后做反向代理时, 可以分为几种模块, 一种是通过<code>mode_proxy_http</code>模块, 一种是通过<code>mode_proxy_ajp</code>模块, 还有一种是用过<code>mod_jk</code>模块. 其中第三种模块是一种比较老的方式, 多见于一些较老的<code>httpd</code>版本, 后来已经被<code>mode_proxy_ajp</code>模块所取代, 但是目前仍然有一些企业在使用.<br>不过既然后来已经被淘汰了, 就不演示它了, 真的要用了再去研究吧. 只演示一下使用<code>httpd</code>分别通过<code>http</code>协议和<code>ajp</code>协议来进行反向代理.</p>\n<h2 id=\"mode-proxy-http\"><a href=\"#mode-proxy-http\" class=\"headerlink\" title=\"mode_proxy_http\"></a>mode_proxy_http</h2><figure class=\"highlight gherkin\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root<span class=\"meta\">@1478a474</span> ~]<span class=\"comment\"># yum install -y httpd</span></div><div class=\"line\">[root<span class=\"meta\">@1478a474</span> ~]<span class=\"comment\"># httpd -M | grep proxy_http</span></div><div class=\"line\"> proxy_http_module (shared)</div><div class=\"line\">[root<span class=\"meta\">@1478a474</span> ~]<span class=\"comment\"># vim /etc/httpd/conf.d/proxy_http.conf</span></div><div class=\"line\"><span class=\"comment\"># 用于控制在http首部是否使用Via, 主要用于在多级代理中控制代理请求的流向.</span></div><div class=\"line\"><span class=\"comment\"># 默认为Off, 即不启用此功能; On表示每个请求和响应报文均添加Via.</span></div><div class=\"line\"><span class=\"comment\"># Full表示每个Via行都会添加当前apache服务器的版本号信息.</span></div><div class=\"line\"><span class=\"comment\"># Block表示每个代理请求报文中的Via都会被移除.</span></div><div class=\"line\">ProxyVia Off</div><div class=\"line\"><span class=\"comment\"># 是否开启apache正向代理的功能, 启用此项时为了代理http协议必须启用mod_proxy_http模块.</span></div><div class=\"line\"><span class=\"comment\"># 同时, 如果为apache设置了ProxyPass, 则必须将ProxyRequests设置为Off.</span></div><div class=\"line\">ProxyRequests Off</div><div class=\"line\"><span class=\"comment\"># 如果启用此功能, 代理会将用户请求报文中的Host行发送给后端的服务器, 而不再使用ProxyPass指定的服务器地址.</span></div><div class=\"line\"><span class=\"comment\"># 如果想在反向代理中支持虚拟主机, 则需要开启此项, 否则就无需打开此功能.</span></div><div class=\"line\">ProxyPreserveHost Off</div><div class=\"line\"><span class=\"comment\"># 将请求反向代理至后端主机</span></div><div class=\"line\">ProxyPass / http://172.18.71.130:8080/</div><div class=\"line\"><span class=\"comment\"># 用于让apache调整HTTP重定向响应报文中的Location, Content-Location及URI标签所对应的URL.</span></div><div class=\"line\"><span class=\"comment\"># 在反向代理环境中必须使用此指令避免重定向报文绕过proxy服务器.</span></div><div class=\"line\">ProxyPassReverse / http://172.18.71.130:8080/</div><div class=\"line\"><span class=\"variable\">&lt;Proxy *&gt;</span></div><div class=\"line\">  Require all granted</div><div class=\"line\"><span class=\"variable\">&lt;/Proxy&gt;</span></div><div class=\"line\"><span class=\"variable\">&lt;Location  / &gt;</span></div><div class=\"line\">  Require all granted</div><div class=\"line\"><span class=\"variable\">&lt;/Location&gt;</span></div><div class=\"line\">[root<span class=\"meta\">@1478a474</span> ~]<span class=\"comment\"># httpd -t</span></div><div class=\"line\">Syntax OK</div><div class=\"line\">[root<span class=\"meta\">@1478a474</span> ~]<span class=\"comment\"># systemctl start httpd.service</span></div><div class=\"line\">[root<span class=\"meta\">@1478a474</span> ~]<span class=\"comment\"># ss -tnl | grep -w 80</span></div><div class=\"line\">LISTEN     0      128         :::80                      :::<span class=\"symbol\">*</span></div><div class=\"line\">[root<span class=\"meta\">@1478a474</span> ~]<span class=\"comment\"># curl http://172.18.71.130/demo/</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"variable\">&lt;html&gt;</span></div><div class=\"line\">  <span class=\"variable\">&lt;head&gt;</span><span class=\"variable\">&lt;title&gt;</span>TomcatA<span class=\"variable\">&lt;/title&gt;</span><span class=\"variable\">&lt;/head&gt;</span></div><div class=\"line\">  <span class=\"variable\">&lt;body&gt;</span></div><div class=\"line\">    <span class=\"variable\">&lt;h1&gt;</span><span class=\"variable\">&lt;font color=\"red\"&gt;</span>TomcatA.magedu.com<span class=\"variable\">&lt;/font&gt;</span><span class=\"variable\">&lt;/h1&gt;</span></div><div class=\"line\">    <span class=\"variable\">&lt;table align=\"centre\" border=\"1\"&gt;</span></div><div class=\"line\">      <span class=\"variable\">&lt;tr&gt;</span></div><div class=\"line\">        <span class=\"variable\">&lt;td&gt;</span>Session ID<span class=\"variable\">&lt;/td&gt;</span></div><div class=\"line\">    </div><div class=\"line\">        <span class=\"variable\">&lt;td&gt;</span>BADEAC947662D40AF3B7662014B10742<span class=\"variable\">&lt;/td&gt;</span></div><div class=\"line\">      <span class=\"variable\">&lt;/tr&gt;</span></div><div class=\"line\">      <span class=\"variable\">&lt;tr&gt;</span></div><div class=\"line\">        <span class=\"variable\">&lt;td&gt;</span>Created on<span class=\"variable\">&lt;/td&gt;</span></div><div class=\"line\">        <span class=\"variable\">&lt;td&gt;</span>1465654377253<span class=\"variable\">&lt;/td&gt;</span></div><div class=\"line\">     <span class=\"variable\">&lt;/tr&gt;</span></div><div class=\"line\">    <span class=\"variable\">&lt;/table&gt;</span></div><div class=\"line\">  <span class=\"variable\">&lt;/body&gt;</span></div><div class=\"line\"><span class=\"variable\">&lt;/html&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"mode-proxy-ajp\"><a href=\"#mode-proxy-ajp\" class=\"headerlink\" title=\"mode_proxy_ajp\"></a>mode_proxy_ajp</h2><figure class=\"highlight gherkin\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root<span class=\"meta\">@1478a474</span> ~]<span class=\"comment\"># yum install -y httpd</span></div><div class=\"line\">[root<span class=\"meta\">@1478a474</span> ~]<span class=\"comment\"># httpd -M | grep proxy_ajp</span></div><div class=\"line\"> proxy_ajp_module (shared)</div><div class=\"line\">[root<span class=\"meta\">@1478a474</span> ~]<span class=\"comment\"># mv /etc/httpd/conf.d/proxy_http.conf&#123;,.bak&#125;</span></div><div class=\"line\">[root<span class=\"meta\">@1478a474</span> ~]<span class=\"comment\"># vim /etc/httpd/conf.d/proxy_ajp.conf</span></div><div class=\"line\">ProxyVia Off</div><div class=\"line\">ProxyRequests Off</div><div class=\"line\">ProxyPreserveHost Off</div><div class=\"line\"><span class=\"comment\"># 与走http协议的配置基本一致, 只是这个地方需要使用ajp协议和响应的8009端口.</span></div><div class=\"line\">ProxyPass / ajp://172.18.71.130:8009/</div><div class=\"line\">ProxyPassReverse / ajp://172.18.71.130:8009/</div><div class=\"line\"><span class=\"variable\">&lt;Proxy *&gt;</span></div><div class=\"line\">  Require all granted</div><div class=\"line\"><span class=\"variable\">&lt;/Proxy&gt;</span></div><div class=\"line\"><span class=\"variable\">&lt;Location  / &gt;</span></div><div class=\"line\">  Require all granted</div><div class=\"line\"><span class=\"variable\">&lt;/Location&gt;</span></div><div class=\"line\">[root<span class=\"meta\">@1478a474</span> ~]<span class=\"comment\"># httpd -t</span></div><div class=\"line\">Syntax OK</div><div class=\"line\">[root<span class=\"meta\">@1478a474</span> ~]<span class=\"comment\"># systemctl restart httpd.service</span></div><div class=\"line\">[root<span class=\"meta\">@1478a474</span> ~]<span class=\"comment\"># ss -tnl | grep -w 80</span></div><div class=\"line\">LISTEN     0      128         :::80                      :::<span class=\"symbol\">*</span></div><div class=\"line\">[root<span class=\"meta\">@1478a474</span> ~]<span class=\"comment\"># curl http://172.18.71.130/demo/</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"variable\">&lt;html&gt;</span></div><div class=\"line\">  <span class=\"variable\">&lt;head&gt;</span><span class=\"variable\">&lt;title&gt;</span>TomcatA<span class=\"variable\">&lt;/title&gt;</span><span class=\"variable\">&lt;/head&gt;</span></div><div class=\"line\">  <span class=\"variable\">&lt;body&gt;</span></div><div class=\"line\">    <span class=\"variable\">&lt;h1&gt;</span><span class=\"variable\">&lt;font color=\"red\"&gt;</span>TomcatA.magedu.com<span class=\"variable\">&lt;/font&gt;</span><span class=\"variable\">&lt;/h1&gt;</span></div><div class=\"line\">    <span class=\"variable\">&lt;table align=\"centre\" border=\"1\"&gt;</span></div><div class=\"line\">      <span class=\"variable\">&lt;tr&gt;</span></div><div class=\"line\">        <span class=\"variable\">&lt;td&gt;</span>Session ID<span class=\"variable\">&lt;/td&gt;</span></div><div class=\"line\">    </div><div class=\"line\">        <span class=\"variable\">&lt;td&gt;</span>BADEAC947662D40AF3B7662014B10742<span class=\"variable\">&lt;/td&gt;</span></div><div class=\"line\">      <span class=\"variable\">&lt;/tr&gt;</span></div><div class=\"line\">      <span class=\"variable\">&lt;tr&gt;</span></div><div class=\"line\">        <span class=\"variable\">&lt;td&gt;</span>Created on<span class=\"variable\">&lt;/td&gt;</span></div><div class=\"line\">        <span class=\"variable\">&lt;td&gt;</span>1465654377253<span class=\"variable\">&lt;/td&gt;</span></div><div class=\"line\">     <span class=\"variable\">&lt;/tr&gt;</span></div><div class=\"line\">    <span class=\"variable\">&lt;/table&gt;</span></div><div class=\"line\">  <span class=\"variable\">&lt;/body&gt;</span></div><div class=\"line\"><span class=\"variable\">&lt;/html&gt;</span></div></pre></td></tr></table></figure>\n<p>其实<code>tomcat</code>一侧也是需要配置的, 只不过<code>tomcat</code>有默认的<code>Connector</code>配置. 如果<code>tomcat</code>没有使用默认配置, 那么<code>httpd</code>也需要做相应修改.<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@1478a474 ~]# vim /etc/tomcat/server.xml</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Service</span> <span class=\"attr\">name</span>=<span class=\"string\">\"Catalina\"</span>&gt;</span></div><div class=\"line\">...</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Connector</span> <span class=\"attr\">port</span>=<span class=\"string\">\"8080\"</span> <span class=\"attr\">protocol</span>=<span class=\"string\">\"HTTP/1.1\"</span></span></div><div class=\"line\">               <span class=\"attr\">connectionTimeout</span>=<span class=\"string\">\"20000\"</span></div><div class=\"line\">               <span class=\"attr\">redirectPort</span>=<span class=\"string\">\"8443\"</span> /&gt;</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Connector</span> <span class=\"attr\">port</span>=<span class=\"string\">\"8009\"</span> <span class=\"attr\">protocol</span>=<span class=\"string\">\"AJP/1.3\"</span> <span class=\"attr\">redirectPort</span>=<span class=\"string\">\"8443\"</span> /&gt;</span></div><div class=\"line\">...</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Service</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<blockquote>\n<p>参考<a href=\"http://twoyang.net\" target=\"_blank\" rel=\"external\">http://twoyang.net</a></p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<h1 id=\"Tomcat简介\"><a href=\"#Tomcat简介\" class=\"headerlink\" title=\"Tomcat简介\"></a>Tomcat简介</h1><blockquote>\n<p>Tomcat是一个免费开源的web服务器应用程序,使用java编程语言所编写，运行于jvm（java虚拟机）之上，轻量安全是其特性，适用于反访问量不大的中小型服务系统<br>","more":"<br>Tomcat可以独立运行为一个web服务器，但其通常作为Apache web 服务的一个扩展，Apache处理html静态页面，tomcat处理动态内容</p>\n<p>如果您要了解这种技术的细节可以查阅<a href=\"http://tomcat.apache.org/tomcat-9.0-doc/index.html\" target=\"_blank\" rel=\"external\">参考资料</a>。</p>\n</blockquote>\n<h1 id=\"Tomcat基础组件与框架\"><a href=\"#Tomcat基础组件与框架\" class=\"headerlink\" title=\"Tomcat基础组件与框架\"></a>Tomcat基础组件与框架</h1><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div></pre></td><td class=\"code\"><pre><div class=\"line\">server：位于最外层，一个server即一个tomcat实例</div><div class=\"line\">    connecter（连接器），为辅助组件，附加在引擎之上，将用户的请求定义至指定的虚拟主机</div><div class=\"line\">    service：把连接器与引擎关联起来的组件</div><div class=\"line\">    engine：运行虚拟主机的容器</div><div class=\"line\">    host：虚拟主机</div><div class=\"line\"></div><div class=\"line\">    提醒：一个引擎内部可以定义多个虚拟主机，每个虚拟主机可定义多个context（别名）</div><div class=\"line\">    </div><div class=\"line\">    每个组件由“类”实现，分为如下几类：</div><div class=\"line\">        顶级组件：server</div><div class=\"line\">        服务组件：service</div><div class=\"line\">        连接器组件：http，https，ajp</div><div class=\"line\">        容器类：engine，host，context</div><div class=\"line\"></div><div class=\"line\">        被嵌套类组件：valve，logger，realm，loader，manager    </div><div class=\"line\"></div><div class=\"line\">    框架：    </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">sever</span>&gt;</span>    </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">service</span>&gt;</span>    </div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">connector</span>/&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">connectot</span>/&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">engine</span>&gt;</span></div><div class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">host</span>&gt;</span></div><div class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">context</span>/&gt;</span></div><div class=\"line\">                            …</div><div class=\"line\">                        <span class=\"tag\">&lt;/<span class=\"name\">host</span>&gt;</span></div><div class=\"line\">                            …    </div><div class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">engine</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">service</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">server</span>&gt;</span></div></pre></td></tr></table></figure>\n<h1 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h1><blockquote>\n<p>准备一台虚拟机, 均为CentOS-7-x86_64最小化安装, iptables与SELinux均处于关闭状态, 配置好yum源(base和epel). 做好快照, 以便每次实验后快速恢复.</p>\n</blockquote>\n<h1 id=\"tomcat安装\"><a href=\"#tomcat安装\" class=\"headerlink\" title=\"tomcat安装\"></a>tomcat安装</h1><blockquote>\n<p>综上所述，tomcat是用Java语言研发，运行于jvm(java virtual machine)之上，所以要安装的话需要提供JDK开发平台。<br>由此，安装可分为两步：<br>JDK+tomcat</p>\n</blockquote>\n<h2 id=\"OracleJDK-Tomcat-binary\"><a href=\"#OracleJDK-Tomcat-binary\" class=\"headerlink\" title=\"OracleJDK+Tomcat(binary)\"></a>OracleJDK+Tomcat(binary)</h2><p>使用Oracle官方提供的JDK安装包和Apache官方提供的Tomcat二进制安装包来安装, 请自行去官方站点下载<br><figure class=\"highlight clean\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 安装OracleJDK</div><div class=\"line\">[root@<span class=\"number\">1478</span>a474 ~]# rpm -ivh jdk<span class=\"number\">-7</span>u79-linux-x64.rpm </div><div class=\"line\">Preparing...                          ################################# [<span class=\"number\">100</span>%]</div><div class=\"line\">Updating / installing...</div><div class=\"line\">   <span class=\"number\">1</span>:jdk<span class=\"number\">-2000</span>:<span class=\"number\">1.7</span><span class=\"number\">.0</span>_79-fcs            ################################# [<span class=\"number\">100</span>%]</div><div class=\"line\">Unpacking JAR files...</div><div class=\"line\">\trt.jar...</div><div class=\"line\">\tjsse.jar...</div><div class=\"line\">\tcharsets.jar...</div><div class=\"line\">\ttools.jar...</div><div class=\"line\">\tlocaledata.jar...</div><div class=\"line\">\tjfxrt.jar...</div><div class=\"line\">[root@<span class=\"number\">1478</span>a474 ~]# java -version</div><div class=\"line\">java version <span class=\"string\">\"1.7.0_79\"</span></div><div class=\"line\">Java(TM) SE Runtime Environment (build <span class=\"number\">1.7</span><span class=\"number\">.0</span>_79-b15)</div><div class=\"line\">Java HotSpot(TM) <span class=\"number\">64</span>-Bit Server VM (build <span class=\"number\">24.79</span>-b02, mixed mode)</div><div class=\"line\"># 安装Tomcat</div><div class=\"line\">[root@<span class=\"number\">1478</span>a474 ~]# tar -xf apache-tomcat<span class=\"number\">-7.0</span><span class=\"number\">.57</span>.tar.gz -C /usr/local/</div><div class=\"line\">[root@<span class=\"number\">1478</span>a474 ~]# ln -s apache-tomcat<span class=\"number\">-7.0</span><span class=\"number\">.57</span>/ /usr/local/tomcat</div><div class=\"line\">[root@<span class=\"number\">1478</span>a474 ~]# tree -L <span class=\"number\">1</span> /usr/local/tomcat/</div><div class=\"line\">/usr/local/tomcat/</div><div class=\"line\">├── bin\t# 脚本及启动时用到的类</div><div class=\"line\">├── conf # 配置文件</div><div class=\"line\">├── lib\t# 类库</div><div class=\"line\">├── LICENSE</div><div class=\"line\">├── logs\t# 日志文件</div><div class=\"line\">├── NOTICE</div><div class=\"line\">├── RELEASE-NOTES</div><div class=\"line\">├── RUNNING.txt</div><div class=\"line\">├── temp\t# 临时文件</div><div class=\"line\">├── webapps\t# 应用程序默认部署目录</div><div class=\"line\">└── work\t# 工作目录, jsp代码编译成<span class=\"keyword\">class</span>文件装入JVM运行, 生成<span class=\"keyword\">class</span>文件就存放在此目录.</div><div class=\"line\"></div><div class=\"line\"><span class=\"number\">7</span> directories, <span class=\"number\">4</span> files</div><div class=\"line\"># 需要导出环境变量</div><div class=\"line\">[root@<span class=\"number\">1478</span>a474 ~]# echo <span class=\"string\">'export PATH=/usr/local/tomcat/bin:$PATH'</span> &gt; /etc/profile.d/tomcat.sh</div><div class=\"line\">[root@<span class=\"number\">1478</span>a474 ~]# exec bash</div><div class=\"line\"># 似乎也不用特别设置CATALINA_BASE和JAVA_HOME环境变量, 都自动识别出来了.</div><div class=\"line\">[root@<span class=\"number\">1478</span>a474 ~]# catalina.sh version</div><div class=\"line\">Using CATALINA_BASE:   /usr/local/tomcat</div><div class=\"line\">Using CATALINA_HOME:   /usr/local/tomcat</div><div class=\"line\">Using CATALINA_TMPDIR: /usr/local/tomcat/temp</div><div class=\"line\">Using JRE_HOME:        /usr</div><div class=\"line\">Using CLASSPATH:       /usr/local/tomcat/bin/bootstrap.jar:/usr/local/tomcat/bin/tomcat-juli.jar</div><div class=\"line\">Server version: Apache Tomcat/<span class=\"number\">7.0</span><span class=\"number\">.57</span></div><div class=\"line\">Server built:   Nov <span class=\"number\">3</span> <span class=\"number\">2014</span> <span class=\"number\">08</span>:<span class=\"number\">39</span>:<span class=\"number\">16</span> UTC</div><div class=\"line\">Server number:  <span class=\"number\">7.0</span><span class=\"number\">.57</span><span class=\"number\">.0</span></div><div class=\"line\">OS Name:        Linux</div><div class=\"line\">OS Version:     <span class=\"number\">3.10</span><span class=\"number\">.0</span><span class=\"number\">-327.</span>el7.x86_64</div><div class=\"line\">Architecture:   amd64</div><div class=\"line\">JVM Version:    <span class=\"number\">1.7</span><span class=\"number\">.0</span>_79-b15</div><div class=\"line\">JVM Vendor:     Oracle Corporation</div><div class=\"line\"># 直接启动</div><div class=\"line\">[root@<span class=\"number\">1478</span>a474 ~]# catalina.sh start</div><div class=\"line\">Using CATALINA_BASE:   /usr/local/tomcat</div><div class=\"line\">Using CATALINA_HOME:   /usr/local/tomcat</div><div class=\"line\">Using CATALINA_TMPDIR: /usr/local/tomcat/temp</div><div class=\"line\">Using JRE_HOME:        /usr</div><div class=\"line\">Using CLASSPATH:       /usr/local/tomcat/bin/bootstrap.jar:/usr/local/tomcat/bin/tomcat-juli.jar</div><div class=\"line\">Tomcat started.</div><div class=\"line\"># 监听了三个端口, <span class=\"number\">8080</span>是http监控端口, <span class=\"number\">8009</span>是ajp协议监控端口, <span class=\"number\">8005</span>端口是控制端口, 可以用来关闭tomcat. </div><div class=\"line\">[root@<span class=\"number\">1478</span>a474 ~]# ss -tnl</div><div class=\"line\">State      Recv-Q Send-Q           Local Address:Port                          Peer Address:Port              </div><div class=\"line\">LISTEN     <span class=\"number\">0</span>      <span class=\"number\">128</span>                          *:<span class=\"number\">22</span>                                       *:*                  </div><div class=\"line\">LISTEN     <span class=\"number\">0</span>      <span class=\"number\">100</span>                  <span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">25</span>                                       *:*                  </div><div class=\"line\">LISTEN     <span class=\"number\">0</span>      <span class=\"number\">100</span>                         :::<span class=\"number\">8009</span>                                    :::*                  </div><div class=\"line\">LISTEN     <span class=\"number\">0</span>      <span class=\"number\">100</span>                         :::<span class=\"number\">8080</span>                                    :::*                  </div><div class=\"line\">LISTEN     <span class=\"number\">0</span>      <span class=\"number\">128</span>                         :::<span class=\"number\">22</span>                                      :::*                  </div><div class=\"line\">LISTEN     <span class=\"number\">0</span>      <span class=\"number\">100</span>                        ::<span class=\"number\">1</span>:<span class=\"number\">25</span>                                      :::*                  </div><div class=\"line\">LISTEN     <span class=\"number\">0</span>      <span class=\"number\">1</span>             ::ffff:<span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">8005</span>                                    :::*</div><div class=\"line\"># 可以看到JVM是以root用户身份启动的, 这个是不安全的. </div><div class=\"line\"># 官方是建议使用普通用户来启动的, 这也是为什么默认使用<span class=\"number\">8080</span>端口而不<span class=\"number\">80</span>端口的原因, 因为只有管理员身份启动的进程才能监听在特权端口(<span class=\"number\">1</span><span class=\"number\">-1024</span>)上.</div><div class=\"line\">[root@<span class=\"number\">1478</span>a474 ~]# ps aux | grep -v grep | grep java</div><div class=\"line\">root      <span class=\"number\">30867</span>  <span class=\"number\">3.6</span>  <span class=\"number\">6.8</span> <span class=\"number\">1544928</span> <span class=\"number\">68260</span> pts/<span class=\"number\">2</span>   Sl   <span class=\"number\">21</span>:<span class=\"number\">24</span>   <span class=\"number\">0</span>:<span class=\"number\">05</span> /usr/bin/java -Djava.util.logging.config.file=/usr/local/tomca......</div><div class=\"line\"># 所以建立一个普通用户来启动tomcat</div><div class=\"line\">[root@<span class=\"number\">1478</span>a474 ~]# useradd -r tomcat</div><div class=\"line\">[root@<span class=\"number\">1478</span>a474 ~]# chown -R tomcat:tomcat /usr/local/tomcat/</div><div class=\"line\">[root@<span class=\"number\">1478</span>a474 ~]# ps aux | grep -v grep | grep java</div><div class=\"line\">tomcat    <span class=\"number\">31726</span>  <span class=\"number\">167</span>  <span class=\"number\">6.2</span> <span class=\"number\">1343180</span> <span class=\"number\">62448</span> ?       Sl   <span class=\"number\">21</span>:<span class=\"number\">44</span>   <span class=\"number\">0</span>:<span class=\"number\">03</span> /usr/bin/java -Djava.util.logging.config.file=/usr/local/tomca......</div></pre></td></tr></table></figure></p>\n<h2 id=\"yum源安装\"><a href=\"#yum源安装\" class=\"headerlink\" title=\"yum源安装\"></a>yum源安装</h2><p>使用centos官方yum中提供的OpenJDK与Tomcat安装包来安装.</p>\n<figure class=\"highlight x86asm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 提供了三个版本的, 根据实际需要选择. 一般生产环境追求的是稳定, 不会激进地采用最新版本.</div><div class=\"line\">[root@1478a474 ~]# yum list | grep -i openjdk</div><div class=\"line\">java-<span class=\"number\">1.6</span><span class=\"meta\">.0</span>-openjdk.x86_64                   <span class=\"number\">1</span>:<span class=\"number\">1.6</span><span class=\"meta\">.0</span><span class=\"meta\">.36</span>-<span class=\"number\">1.13</span><span class=\"meta\">.8</span><span class=\"meta\">.1</span>.el7_1  local    </div><div class=\"line\">java-<span class=\"number\">1.6</span><span class=\"meta\">.0</span>-openjdk-demo.x86_64              <span class=\"number\">1</span>:<span class=\"number\">1.6</span><span class=\"meta\">.0</span><span class=\"meta\">.36</span>-<span class=\"number\">1.13</span><span class=\"meta\">.8</span><span class=\"meta\">.1</span>.el7_1  local    </div><div class=\"line\">java-<span class=\"number\">1.6</span><span class=\"meta\">.0</span>-openjdk-devel.x86_64             <span class=\"number\">1</span>:<span class=\"number\">1.6</span><span class=\"meta\">.0</span><span class=\"meta\">.36</span>-<span class=\"number\">1.13</span><span class=\"meta\">.8</span><span class=\"meta\">.1</span>.el7_1  local    </div><div class=\"line\">java-<span class=\"number\">1.6</span><span class=\"meta\">.0</span>-openjdk-javadoc.x86_64           <span class=\"number\">1</span>:<span class=\"number\">1.6</span><span class=\"meta\">.0</span><span class=\"meta\">.36</span>-<span class=\"number\">1.13</span><span class=\"meta\">.8</span><span class=\"meta\">.1</span>.el7_1  local    </div><div class=\"line\">java-<span class=\"number\">1.6</span><span class=\"meta\">.0</span>-openjdk-src.x86_64               <span class=\"number\">1</span>:<span class=\"number\">1.6</span><span class=\"meta\">.0</span><span class=\"meta\">.36</span>-<span class=\"number\">1.13</span><span class=\"meta\">.8</span><span class=\"meta\">.1</span>.el7_1  local    </div><div class=\"line\">java-<span class=\"number\">1.7</span><span class=\"meta\">.0</span>-openjdk.x86_64                   <span class=\"number\">1</span>:<span class=\"number\">1.7</span><span class=\"meta\">.0</span><span class=\"meta\">.91</span>-<span class=\"number\">2.6</span><span class=\"meta\">.2</span><span class=\"meta\">.3</span>.el7     local    </div><div class=\"line\">java-<span class=\"number\">1.7</span><span class=\"meta\">.0</span>-openjdk-accessibility.x86_64     <span class=\"number\">1</span>:<span class=\"number\">1.7</span><span class=\"meta\">.0</span><span class=\"meta\">.91</span>-<span class=\"number\">2.6</span><span class=\"meta\">.2</span><span class=\"meta\">.3</span>.el7     local    </div><div class=\"line\">java-<span class=\"number\">1.7</span><span class=\"meta\">.0</span>-openjdk-demo.x86_64              <span class=\"number\">1</span>:<span class=\"number\">1.7</span><span class=\"meta\">.0</span><span class=\"meta\">.91</span>-<span class=\"number\">2.6</span><span class=\"meta\">.2</span><span class=\"meta\">.3</span>.el7     local    </div><div class=\"line\">java-<span class=\"number\">1.7</span><span class=\"meta\">.0</span>-openjdk-devel.x86_64             <span class=\"number\">1</span>:<span class=\"number\">1.7</span><span class=\"meta\">.0</span><span class=\"meta\">.91</span>-<span class=\"number\">2.6</span><span class=\"meta\">.2</span><span class=\"meta\">.3</span>.el7     local    </div><div class=\"line\">java-<span class=\"number\">1.7</span><span class=\"meta\">.0</span>-openjdk-headless.x86_64          <span class=\"number\">1</span>:<span class=\"number\">1.7</span><span class=\"meta\">.0</span><span class=\"meta\">.91</span>-<span class=\"number\">2.6</span><span class=\"meta\">.2</span><span class=\"meta\">.3</span>.el7     local    </div><div class=\"line\">java-<span class=\"number\">1.7</span><span class=\"meta\">.0</span>-openjdk-javadoc.noarch           <span class=\"number\">1</span>:<span class=\"number\">1.7</span><span class=\"meta\">.0</span><span class=\"meta\">.91</span>-<span class=\"number\">2.6</span><span class=\"meta\">.2</span><span class=\"meta\">.3</span>.el7     local    </div><div class=\"line\">java-<span class=\"number\">1.7</span><span class=\"meta\">.0</span>-openjdk-src.x86_64               <span class=\"number\">1</span>:<span class=\"number\">1.7</span><span class=\"meta\">.0</span><span class=\"meta\">.91</span>-<span class=\"number\">2.6</span><span class=\"meta\">.2</span><span class=\"meta\">.3</span>.el7     local    </div><div class=\"line\">java-<span class=\"number\">1.8</span><span class=\"meta\">.0</span>-openjdk.x86_64                   <span class=\"number\">1</span>:<span class=\"number\">1.8</span><span class=\"meta\">.0</span><span class=\"meta\">.65</span>-<span class=\"number\">3.</span>b17.el7       local    </div><div class=\"line\">java-<span class=\"number\">1.8</span><span class=\"meta\">.0</span>-openjdk-accessibility.x86_64     <span class=\"number\">1</span>:<span class=\"number\">1.8</span><span class=\"meta\">.0</span><span class=\"meta\">.65</span>-<span class=\"number\">3.</span>b17.el7       local    </div><div class=\"line\">java-<span class=\"number\">1.8</span><span class=\"meta\">.0</span>-openjdk-accessibility-debug.x86_64</div><div class=\"line\">java-<span class=\"number\">1.8</span><span class=\"meta\">.0</span>-openjdk-debug.x86_64             <span class=\"number\">1</span>:<span class=\"number\">1.8</span><span class=\"meta\">.0</span><span class=\"meta\">.65</span>-<span class=\"number\">3.</span>b17.el7       local    </div><div class=\"line\">java-<span class=\"number\">1.8</span><span class=\"meta\">.0</span>-openjdk-demo.x86_64              <span class=\"number\">1</span>:<span class=\"number\">1.8</span><span class=\"meta\">.0</span><span class=\"meta\">.65</span>-<span class=\"number\">3.</span>b17.el7       local    </div><div class=\"line\">java-<span class=\"number\">1.8</span><span class=\"meta\">.0</span>-openjdk-demo-debug.x86_64        <span class=\"number\">1</span>:<span class=\"number\">1.8</span><span class=\"meta\">.0</span><span class=\"meta\">.65</span>-<span class=\"number\">3.</span>b17.el7       local    </div><div class=\"line\">java-<span class=\"number\">1.8</span><span class=\"meta\">.0</span>-openjdk-devel.x86_64             <span class=\"number\">1</span>:<span class=\"number\">1.8</span><span class=\"meta\">.0</span><span class=\"meta\">.65</span>-<span class=\"number\">3.</span>b17.el7       local    </div><div class=\"line\">java-<span class=\"number\">1.8</span><span class=\"meta\">.0</span>-openjdk-devel-debug.x86_64       <span class=\"number\">1</span>:<span class=\"number\">1.8</span><span class=\"meta\">.0</span><span class=\"meta\">.65</span>-<span class=\"number\">3.</span>b17.el7       local    </div><div class=\"line\">java-<span class=\"number\">1.8</span><span class=\"meta\">.0</span>-openjdk-headless.x86_64          <span class=\"number\">1</span>:<span class=\"number\">1.8</span><span class=\"meta\">.0</span><span class=\"meta\">.65</span>-<span class=\"number\">3.</span>b17.el7       local    </div><div class=\"line\">java-<span class=\"number\">1.8</span><span class=\"meta\">.0</span>-openjdk-headless-debug.x86_64    <span class=\"number\">1</span>:<span class=\"number\">1.8</span><span class=\"meta\">.0</span><span class=\"meta\">.65</span>-<span class=\"number\">3.</span>b17.el7       local    </div><div class=\"line\">java-<span class=\"number\">1.8</span><span class=\"meta\">.0</span>-openjdk-javadoc.noarch           <span class=\"number\">1</span>:<span class=\"number\">1.8</span><span class=\"meta\">.0</span><span class=\"meta\">.65</span>-<span class=\"number\">3.</span>b17.el7       local    </div><div class=\"line\">java-<span class=\"number\">1.8</span><span class=\"meta\">.0</span>-openjdk-javadoc-debug.noarch     <span class=\"number\">1</span>:<span class=\"number\">1.8</span><span class=\"meta\">.0</span><span class=\"meta\">.65</span>-<span class=\"number\">3.</span>b17.el7       local    </div><div class=\"line\">java-<span class=\"number\">1.8</span><span class=\"meta\">.0</span>-openjdk-src.x86_64               <span class=\"number\">1</span>:<span class=\"number\">1.8</span><span class=\"meta\">.0</span><span class=\"meta\">.65</span>-<span class=\"number\">3.</span>b17.el7       local    </div><div class=\"line\">java-<span class=\"number\">1.8</span><span class=\"meta\">.0</span>-openjdk-src-debug.x86_64         <span class=\"number\">1</span>:<span class=\"number\">1.8</span><span class=\"meta\">.0</span><span class=\"meta\">.65</span>-<span class=\"number\">3.</span>b17.el7       local</div><div class=\"line\"># 选择<span class=\"number\">1.7</span>, 中庸之道.</div><div class=\"line\">[root@1478a474 ~]# yum install -y java-<span class=\"number\">1.7</span><span class=\"meta\">.0</span>-openjdk java-<span class=\"number\">1.7</span><span class=\"meta\">.0</span>-openjdk-devel java-<span class=\"number\">1.7</span><span class=\"meta\">.0</span>-openjdk-headless</div><div class=\"line\"># 再来安装tomcat</div><div class=\"line\">[root@1478a474 ~]# yum install -y tomcat tomcat-lib tomcat-webapps tomcat-admin-webapps</div><div class=\"line\"># 好像也不用配什么JAVA_HOME还有CATALINA_BASE这些环境变量, 直接就可以启动了.</div><div class=\"line\">[root@1478a474 ~]# systemctl start tomcat.service</div><div class=\"line\"># 这个<span class=\"number\">8005</span>端口好像监听会慢一些, 总是得等一会才能看到. </div><div class=\"line\">[root@1478a474 ~]# <span class=\"built_in\">ss</span> -tnl</div><div class=\"line\">State      Recv-Q Send-Q           Local Address:Port                          Peer Address:Port              </div><div class=\"line\">LISTEN     <span class=\"number\">0</span>      <span class=\"number\">128</span>                          *:<span class=\"number\">22</span>                                       *:*                  </div><div class=\"line\">LISTEN     <span class=\"number\">0</span>      <span class=\"number\">100</span>                  <span class=\"number\">127.0</span><span class=\"meta\">.0</span><span class=\"meta\">.1</span>:<span class=\"number\">25</span>                                       *:*                  </div><div class=\"line\">LISTEN     <span class=\"number\">0</span>      <span class=\"number\">100</span>                         :::<span class=\"number\">8009</span>                                    :::*                  </div><div class=\"line\">LISTEN     <span class=\"number\">0</span>      <span class=\"number\">100</span>                         :::<span class=\"number\">8080</span>                                    :::*                  </div><div class=\"line\">LISTEN     <span class=\"number\">0</span>      <span class=\"number\">128</span>                         :::<span class=\"number\">22</span>                                      :::*                  </div><div class=\"line\">LISTEN     <span class=\"number\">0</span>      <span class=\"number\">100</span>                        ::<span class=\"number\">1</span>:<span class=\"number\">25</span>                                      :::*                  </div><div class=\"line\">LISTEN     <span class=\"number\">0</span>      <span class=\"number\">1</span>             ::ffff:<span class=\"number\">127.0</span><span class=\"meta\">.0</span><span class=\"meta\">.1</span>:<span class=\"number\">8005</span>                                    :::*</div><div class=\"line\"># 如果要配的话, 除了可以配置环境变量, 也可以修改/etc/sysconfig/tomcat这个文件.</div><div class=\"line\">[root@1478a474 ~]# cat /etc/sysconfig/tomcat</div><div class=\"line\">...</div><div class=\"line\"># Where your java installation lives</div><div class=\"line\">#JAVA_HOME=<span class=\"string\">\"/usr/lib/jvm/java\"</span></div><div class=\"line\"></div><div class=\"line\"># Where your tomcat installation lives</div><div class=\"line\">#CATALINA_BASE=<span class=\"string\">\"/usr/share/tomcat\"</span></div><div class=\"line\">#CATALINA_HOME=<span class=\"string\">\"/usr/share/tomcat\"</span></div><div class=\"line\">#JASPER_HOME=<span class=\"string\">\"/usr/share/tomcat\"</span></div><div class=\"line\">#CATALINA_TMPDIR=<span class=\"string\">\"/var/cache/tomcat/temp\"</span></div><div class=\"line\"></div><div class=\"line\"># 这里面还可以配置jvm的启动参数, 比如指定使用内存大小. </div><div class=\"line\"># 这个在大内存的时候有用, 因为JVM有个32G内存限制, 使用超过32G内存性能反而会下降. </div><div class=\"line\"># 所以如果内存超过32G时, 最好分多个JVM实例启动, 每个JVM实例使用不超过32G内存.</div><div class=\"line\"># -Xms：初始值</div><div class=\"line\"># -Xmx：最大值</div><div class=\"line\"># -Xmn：最小值</div><div class=\"line\">#JAVA_OPTS=<span class=\"string\">\"-Xms512m -Xmx1024m\"</span></div><div class=\"line\">...</div><div class=\"line\"></div><div class=\"line\"># 可以看到JVM是以tomcat用户身份启动的, 所以安全问题也不用操心了.</div><div class=\"line\">[root@1478a474 ~]# ps aux | grep -v grep | grep java</div><div class=\"line\">tomcat    <span class=\"number\">30217</span>  <span class=\"number\">1.8</span>  <span class=\"number\">9.1</span> <span class=\"number\">1932192</span> <span class=\"number\">91672</span> ?       Ssl  <span class=\"number\">20</span>:<span class=\"number\">40</span>   <span class=\"number\">0</span>:<span class=\"number\">15</span> java -classpath /usr/share/tomcat/bin/bootstrap.jar:/usr/share/tomc...</div></pre></td></tr></table></figure>\n<h1 id=\"管理接口用户认证\"><a href=\"#管理接口用户认证\" class=\"headerlink\" title=\"管理接口用户认证\"></a>管理接口用户认证</h1><p>用浏览器打开<a href=\"http://172.18.71.130:8080\" target=\"_blank\" rel=\"external\">http://172.18.71.130:8080</a>, 默认主页是tomcat的管理接口.</p>\n<p><img src=\"http://o9c1bfnxp.bkt.clouddn.com/2016-07-tomcat/tomcat1.png\" alt=\"\"></p>\n<p>但是访问管理接口是需要通过身份认证的, 这需要在<code>tomcat-users.xml</code>配置角色/用户/口令. <code>yum</code>源安装时, 此文件是放在<code>/etc/tomcat</code>目录中, 二进制包安装时此文件是放在<code>/usr/local/tomcat/conf</code>目录中.<br><code>Server Status</code>是查看服务器运行状态的管理接口, 对应的角色是<code>manager-status</code>.<br><code>Manager App</code>是应用程序管理接口, 对应的角色是<code>manager-gui</code>.<br><code>Host Manager</code>是虚拟主机管理接口, 对应的角色是<code>admin-gui</code>.<br>为某管理接口创建认证用户就是要在<code>tomcat-users.xml</code>配置文件中创建用户和口令, 并属于对应的角色. 以为<code>Manager App</code>创建认证用户为例.<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@1478a474 ~]# vim /etc/tomcat/tomcat-users.xml</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">tomcat-users</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">role</span> <span class=\"attr\">rolename</span>=<span class=\"string\">\"manager-gui\"</span>/&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">user</span> <span class=\"attr\">username</span>=<span class=\"string\">\"tomcat\"</span> <span class=\"attr\">password</span>=<span class=\"string\">\"magedu\"</span> <span class=\"attr\">roles</span>=<span class=\"string\">\"manager-gui\"</span>/&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">tomcat-users</span>&gt;</span></div><div class=\"line\">[root@1478a474 ~]# systemctl restart tomcat.service</div></pre></td></tr></table></figure></p>\n<p><img src=\"http://o9c1bfnxp.bkt.clouddn.com/2016-07-tomcat/tomcat_2.gif\" alt=\"\"></p>\n<h1 id=\"应用部署\"><a href=\"#应用部署\" class=\"headerlink\" title=\"应用部署\"></a>应用部署</h1><p>在应用程序部署目录<code>webapps</code>下创建一个新应用<code>demo</code>.</p>\n<p><code>WEB-INF</code> 私有资源目录, 通常存放当前应用自用的<code>web.xml</code>.<br><code>META-INF</code> 私有资源目录, 通常存放当前应用自用的<code>context.xml</code>.<br><code>classes</code> 此应用的私有类.<br><code>lib</code> 此应用的私有类, 被打包为<code>jar</code>格式类.<br><code>index.jsp</code> 此应用的主页.</p>\n<figure class=\"highlight erb\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\">[root@1478a474 ~]# mkdir -p /var/lib/tomcat/webapps/demo/&#123;classes,META-INF,WEB-INF,lib&#125;</span></div><div class=\"line\">[root@1478a474 ~]# cat <span class=\"tag\">&lt;&lt; <span class=\"attr\">EOF</span> &gt;</span> /var/lib/tomcat/webapps/demo/index.jsp</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%</span></span><span class=\"ruby\">@ page language=<span class=\"string\">\"java\"</span> </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>TomcatA<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">font</span> <span class=\"attr\">color</span>=<span class=\"string\">\"red\"</span>&gt;</span>TomcatA.magedu.com<span class=\"tag\">&lt;/<span class=\"name\">font</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">align</span>=<span class=\"string\">\"centre\"</span> <span class=\"attr\">border</span>=<span class=\"string\">\"1\"</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>Session ID<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">%</span></span><span class=\"ruby\"> session.setAttribute(<span class=\"string\">\"magedu.com\"</span>,<span class=\"string\">\"magedu.com\"</span>); </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">%=</span></span><span class=\"ruby\"> session.getId() </span><span class=\"xml\"><span class=\"tag\">%&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span></div><div class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>Created on<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">%=</span></span><span class=\"ruby\"> session.getCreationTime() </span><span class=\"xml\"><span class=\"tag\">%&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span></div><div class=\"line\">     <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div><div class=\"line\">EOF</div></pre></td></tr></table></figure>\n<p><img src=\"http://o9c1bfnxp.bkt.clouddn.com/2016-07-tomcat/tomcat3.png\" alt=\"\"></p>\n<h1 id=\"虚拟主机\"><a href=\"#虚拟主机\" class=\"headerlink\" title=\"虚拟主机\"></a>虚拟主机</h1><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@1478a474 ~]# vim /etc/tomcat/server.xml</div><div class=\"line\">...</div><div class=\"line\"><span class=\"comment\">&lt;!-- 将默认虚拟主机改为自定义的虚拟主机www.twoyang.net --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Engine</span> <span class=\"attr\">name</span>=<span class=\"string\">\"Catalina\"</span> <span class=\"attr\">defaultHost</span>=<span class=\"string\">\"www.twoyang.net\"</span>&gt;</span></div><div class=\"line\">  ...</div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">Host</span> <span class=\"attr\">name</span>=<span class=\"string\">\"localhost\"</span>  <span class=\"attr\">appBase</span>=<span class=\"string\">\"webapps\"</span></span></div><div class=\"line\">        <span class=\"attr\">unpackWARs</span>=<span class=\"string\">\"true\"</span> <span class=\"attr\">autoDeploy</span>=<span class=\"string\">\"true\"</span>&gt;</div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Valve</span> <span class=\"attr\">className</span>=<span class=\"string\">\"org.apache.catalina.valves.AccessLogValve\"</span> <span class=\"attr\">directory</span>=<span class=\"string\">\"logs\"</span></span></div><div class=\"line\">           <span class=\"attr\">prefix</span>=<span class=\"string\">\"localhost_access_log.\"</span> <span class=\"attr\">suffix</span>=<span class=\"string\">\".txt\"</span></div><div class=\"line\">           <span class=\"attr\">pattern</span>=<span class=\"string\">\"%h %l %u %t &amp;quot;%r&amp;quot; %s %b\"</span> /&gt;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">Host</span>&gt;</span></div><div class=\"line\">  <span class=\"comment\">&lt;!-- 自定义虚拟主机www.twoyang.net, 应用基础路径为/data/webapps. --&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">Host</span> <span class=\"attr\">name</span>=<span class=\"string\">\"www.twoyang.net\"</span>  <span class=\"attr\">appBase</span>=<span class=\"string\">\"/data/webapps\"</span></span></div><div class=\"line\">        <span class=\"attr\">unpackWARs</span>=<span class=\"string\">\"true\"</span> <span class=\"attr\">autoDeploy</span>=<span class=\"string\">\"true\"</span>&gt;</div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Valve</span> <span class=\"attr\">className</span>=<span class=\"string\">\"org.apache.catalina.valves.AccessLogValve\"</span> <span class=\"attr\">directory</span>=<span class=\"string\">\"logs\"</span></span></div><div class=\"line\">           <span class=\"attr\">prefix</span>=<span class=\"string\">\"localhost_access_log.\"</span> <span class=\"attr\">suffix</span>=<span class=\"string\">\".txt\"</span></div><div class=\"line\">           <span class=\"attr\">pattern</span>=<span class=\"string\">\"%h %l %u %t &amp;quot;%r&amp;quot; %s %b\"</span> /&gt;</div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">Host</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Engine</span>&gt;</span></div><div class=\"line\">...</div><div class=\"line\"></div><div class=\"line\">[root@1478a474 ~]# mkdir -p /data/webapps</div><div class=\"line\">[root@1478a474 ~]# mv /var/lib/tomcat/webapps/demo/ /data/webapps/</div><div class=\"line\">[root@1478a474 ~]# chown -R tomcat:tomcat /data/webapps</div><div class=\"line\">[root@1478a474 ~]# systemctl restart tomcat.service</div><div class=\"line\"># 增加本地对www.twoyang.net的解析</div><div class=\"line\">[root@1478a474 ~]# echo \"172.18.71.130 www.twoyang.net\" &gt;&gt; /etc/hosts</div><div class=\"line\">[root@1478a474 ~]# curl http://www.twoyang.net:8080/demo/</div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>TomcatA<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">font</span> <span class=\"attr\">color</span>=<span class=\"string\">\"red\"</span>&gt;</span>TomcatA.magedu.com<span class=\"tag\">&lt;/<span class=\"name\">font</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">align</span>=<span class=\"string\">\"centre\"</span> <span class=\"attr\">border</span>=<span class=\"string\">\"1\"</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>Session ID<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">    </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>B733951E170B4A86839C70C9C633EB2B<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>Created on<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>1465651810125<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">     <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>#反向代理</p>\n<p>使用<code>nginx</code>或<code>haproxy</code>作为前端反向代理时, 只能走<code>http</code>协议. 只有使用<code>httpd</code>作为前端反向代理时, 才能走<code>ajp</code>协议.<br>而通过<code>httpd</code>来向后做反向代理时, 可以分为几种模块, 一种是通过<code>mode_proxy_http</code>模块, 一种是通过<code>mode_proxy_ajp</code>模块, 还有一种是用过<code>mod_jk</code>模块. 其中第三种模块是一种比较老的方式, 多见于一些较老的<code>httpd</code>版本, 后来已经被<code>mode_proxy_ajp</code>模块所取代, 但是目前仍然有一些企业在使用.<br>不过既然后来已经被淘汰了, 就不演示它了, 真的要用了再去研究吧. 只演示一下使用<code>httpd</code>分别通过<code>http</code>协议和<code>ajp</code>协议来进行反向代理.</p>\n<h2 id=\"mode-proxy-http\"><a href=\"#mode-proxy-http\" class=\"headerlink\" title=\"mode_proxy_http\"></a>mode_proxy_http</h2><figure class=\"highlight gherkin\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root<span class=\"meta\">@1478a474</span> ~]<span class=\"comment\"># yum install -y httpd</span></div><div class=\"line\">[root<span class=\"meta\">@1478a474</span> ~]<span class=\"comment\"># httpd -M | grep proxy_http</span></div><div class=\"line\"> proxy_http_module (shared)</div><div class=\"line\">[root<span class=\"meta\">@1478a474</span> ~]<span class=\"comment\"># vim /etc/httpd/conf.d/proxy_http.conf</span></div><div class=\"line\"><span class=\"comment\"># 用于控制在http首部是否使用Via, 主要用于在多级代理中控制代理请求的流向.</span></div><div class=\"line\"><span class=\"comment\"># 默认为Off, 即不启用此功能; On表示每个请求和响应报文均添加Via.</span></div><div class=\"line\"><span class=\"comment\"># Full表示每个Via行都会添加当前apache服务器的版本号信息.</span></div><div class=\"line\"><span class=\"comment\"># Block表示每个代理请求报文中的Via都会被移除.</span></div><div class=\"line\">ProxyVia Off</div><div class=\"line\"><span class=\"comment\"># 是否开启apache正向代理的功能, 启用此项时为了代理http协议必须启用mod_proxy_http模块.</span></div><div class=\"line\"><span class=\"comment\"># 同时, 如果为apache设置了ProxyPass, 则必须将ProxyRequests设置为Off.</span></div><div class=\"line\">ProxyRequests Off</div><div class=\"line\"><span class=\"comment\"># 如果启用此功能, 代理会将用户请求报文中的Host行发送给后端的服务器, 而不再使用ProxyPass指定的服务器地址.</span></div><div class=\"line\"><span class=\"comment\"># 如果想在反向代理中支持虚拟主机, 则需要开启此项, 否则就无需打开此功能.</span></div><div class=\"line\">ProxyPreserveHost Off</div><div class=\"line\"><span class=\"comment\"># 将请求反向代理至后端主机</span></div><div class=\"line\">ProxyPass / http://172.18.71.130:8080/</div><div class=\"line\"><span class=\"comment\"># 用于让apache调整HTTP重定向响应报文中的Location, Content-Location及URI标签所对应的URL.</span></div><div class=\"line\"><span class=\"comment\"># 在反向代理环境中必须使用此指令避免重定向报文绕过proxy服务器.</span></div><div class=\"line\">ProxyPassReverse / http://172.18.71.130:8080/</div><div class=\"line\"><span class=\"variable\">&lt;Proxy *&gt;</span></div><div class=\"line\">  Require all granted</div><div class=\"line\"><span class=\"variable\">&lt;/Proxy&gt;</span></div><div class=\"line\"><span class=\"variable\">&lt;Location  / &gt;</span></div><div class=\"line\">  Require all granted</div><div class=\"line\"><span class=\"variable\">&lt;/Location&gt;</span></div><div class=\"line\">[root<span class=\"meta\">@1478a474</span> ~]<span class=\"comment\"># httpd -t</span></div><div class=\"line\">Syntax OK</div><div class=\"line\">[root<span class=\"meta\">@1478a474</span> ~]<span class=\"comment\"># systemctl start httpd.service</span></div><div class=\"line\">[root<span class=\"meta\">@1478a474</span> ~]<span class=\"comment\"># ss -tnl | grep -w 80</span></div><div class=\"line\">LISTEN     0      128         :::80                      :::<span class=\"symbol\">*</span></div><div class=\"line\">[root<span class=\"meta\">@1478a474</span> ~]<span class=\"comment\"># curl http://172.18.71.130/demo/</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"variable\">&lt;html&gt;</span></div><div class=\"line\">  <span class=\"variable\">&lt;head&gt;</span><span class=\"variable\">&lt;title&gt;</span>TomcatA<span class=\"variable\">&lt;/title&gt;</span><span class=\"variable\">&lt;/head&gt;</span></div><div class=\"line\">  <span class=\"variable\">&lt;body&gt;</span></div><div class=\"line\">    <span class=\"variable\">&lt;h1&gt;</span><span class=\"variable\">&lt;font color=\"red\"&gt;</span>TomcatA.magedu.com<span class=\"variable\">&lt;/font&gt;</span><span class=\"variable\">&lt;/h1&gt;</span></div><div class=\"line\">    <span class=\"variable\">&lt;table align=\"centre\" border=\"1\"&gt;</span></div><div class=\"line\">      <span class=\"variable\">&lt;tr&gt;</span></div><div class=\"line\">        <span class=\"variable\">&lt;td&gt;</span>Session ID<span class=\"variable\">&lt;/td&gt;</span></div><div class=\"line\">    </div><div class=\"line\">        <span class=\"variable\">&lt;td&gt;</span>BADEAC947662D40AF3B7662014B10742<span class=\"variable\">&lt;/td&gt;</span></div><div class=\"line\">      <span class=\"variable\">&lt;/tr&gt;</span></div><div class=\"line\">      <span class=\"variable\">&lt;tr&gt;</span></div><div class=\"line\">        <span class=\"variable\">&lt;td&gt;</span>Created on<span class=\"variable\">&lt;/td&gt;</span></div><div class=\"line\">        <span class=\"variable\">&lt;td&gt;</span>1465654377253<span class=\"variable\">&lt;/td&gt;</span></div><div class=\"line\">     <span class=\"variable\">&lt;/tr&gt;</span></div><div class=\"line\">    <span class=\"variable\">&lt;/table&gt;</span></div><div class=\"line\">  <span class=\"variable\">&lt;/body&gt;</span></div><div class=\"line\"><span class=\"variable\">&lt;/html&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"mode-proxy-ajp\"><a href=\"#mode-proxy-ajp\" class=\"headerlink\" title=\"mode_proxy_ajp\"></a>mode_proxy_ajp</h2><figure class=\"highlight gherkin\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root<span class=\"meta\">@1478a474</span> ~]<span class=\"comment\"># yum install -y httpd</span></div><div class=\"line\">[root<span class=\"meta\">@1478a474</span> ~]<span class=\"comment\"># httpd -M | grep proxy_ajp</span></div><div class=\"line\"> proxy_ajp_module (shared)</div><div class=\"line\">[root<span class=\"meta\">@1478a474</span> ~]<span class=\"comment\"># mv /etc/httpd/conf.d/proxy_http.conf&#123;,.bak&#125;</span></div><div class=\"line\">[root<span class=\"meta\">@1478a474</span> ~]<span class=\"comment\"># vim /etc/httpd/conf.d/proxy_ajp.conf</span></div><div class=\"line\">ProxyVia Off</div><div class=\"line\">ProxyRequests Off</div><div class=\"line\">ProxyPreserveHost Off</div><div class=\"line\"><span class=\"comment\"># 与走http协议的配置基本一致, 只是这个地方需要使用ajp协议和响应的8009端口.</span></div><div class=\"line\">ProxyPass / ajp://172.18.71.130:8009/</div><div class=\"line\">ProxyPassReverse / ajp://172.18.71.130:8009/</div><div class=\"line\"><span class=\"variable\">&lt;Proxy *&gt;</span></div><div class=\"line\">  Require all granted</div><div class=\"line\"><span class=\"variable\">&lt;/Proxy&gt;</span></div><div class=\"line\"><span class=\"variable\">&lt;Location  / &gt;</span></div><div class=\"line\">  Require all granted</div><div class=\"line\"><span class=\"variable\">&lt;/Location&gt;</span></div><div class=\"line\">[root<span class=\"meta\">@1478a474</span> ~]<span class=\"comment\"># httpd -t</span></div><div class=\"line\">Syntax OK</div><div class=\"line\">[root<span class=\"meta\">@1478a474</span> ~]<span class=\"comment\"># systemctl restart httpd.service</span></div><div class=\"line\">[root<span class=\"meta\">@1478a474</span> ~]<span class=\"comment\"># ss -tnl | grep -w 80</span></div><div class=\"line\">LISTEN     0      128         :::80                      :::<span class=\"symbol\">*</span></div><div class=\"line\">[root<span class=\"meta\">@1478a474</span> ~]<span class=\"comment\"># curl http://172.18.71.130/demo/</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"variable\">&lt;html&gt;</span></div><div class=\"line\">  <span class=\"variable\">&lt;head&gt;</span><span class=\"variable\">&lt;title&gt;</span>TomcatA<span class=\"variable\">&lt;/title&gt;</span><span class=\"variable\">&lt;/head&gt;</span></div><div class=\"line\">  <span class=\"variable\">&lt;body&gt;</span></div><div class=\"line\">    <span class=\"variable\">&lt;h1&gt;</span><span class=\"variable\">&lt;font color=\"red\"&gt;</span>TomcatA.magedu.com<span class=\"variable\">&lt;/font&gt;</span><span class=\"variable\">&lt;/h1&gt;</span></div><div class=\"line\">    <span class=\"variable\">&lt;table align=\"centre\" border=\"1\"&gt;</span></div><div class=\"line\">      <span class=\"variable\">&lt;tr&gt;</span></div><div class=\"line\">        <span class=\"variable\">&lt;td&gt;</span>Session ID<span class=\"variable\">&lt;/td&gt;</span></div><div class=\"line\">    </div><div class=\"line\">        <span class=\"variable\">&lt;td&gt;</span>BADEAC947662D40AF3B7662014B10742<span class=\"variable\">&lt;/td&gt;</span></div><div class=\"line\">      <span class=\"variable\">&lt;/tr&gt;</span></div><div class=\"line\">      <span class=\"variable\">&lt;tr&gt;</span></div><div class=\"line\">        <span class=\"variable\">&lt;td&gt;</span>Created on<span class=\"variable\">&lt;/td&gt;</span></div><div class=\"line\">        <span class=\"variable\">&lt;td&gt;</span>1465654377253<span class=\"variable\">&lt;/td&gt;</span></div><div class=\"line\">     <span class=\"variable\">&lt;/tr&gt;</span></div><div class=\"line\">    <span class=\"variable\">&lt;/table&gt;</span></div><div class=\"line\">  <span class=\"variable\">&lt;/body&gt;</span></div><div class=\"line\"><span class=\"variable\">&lt;/html&gt;</span></div></pre></td></tr></table></figure>\n<p>其实<code>tomcat</code>一侧也是需要配置的, 只不过<code>tomcat</code>有默认的<code>Connector</code>配置. 如果<code>tomcat</code>没有使用默认配置, 那么<code>httpd</code>也需要做相应修改.<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@1478a474 ~]# vim /etc/tomcat/server.xml</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Service</span> <span class=\"attr\">name</span>=<span class=\"string\">\"Catalina\"</span>&gt;</span></div><div class=\"line\">...</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Connector</span> <span class=\"attr\">port</span>=<span class=\"string\">\"8080\"</span> <span class=\"attr\">protocol</span>=<span class=\"string\">\"HTTP/1.1\"</span></span></div><div class=\"line\">               <span class=\"attr\">connectionTimeout</span>=<span class=\"string\">\"20000\"</span></div><div class=\"line\">               <span class=\"attr\">redirectPort</span>=<span class=\"string\">\"8443\"</span> /&gt;</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Connector</span> <span class=\"attr\">port</span>=<span class=\"string\">\"8009\"</span> <span class=\"attr\">protocol</span>=<span class=\"string\">\"AJP/1.3\"</span> <span class=\"attr\">redirectPort</span>=<span class=\"string\">\"8443\"</span> /&gt;</span></div><div class=\"line\">...</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Service</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<blockquote>\n<p>参考<a href=\"http://twoyang.net\" target=\"_blank\" rel=\"external\">http://twoyang.net</a></p>\n</blockquote>"},{"title":"web网站的几个并发连接","abbrlink":"8e49ebb7","date":"2016-07-12T16:00:00.000Z","_content":"\n> 评价一个网站的“大小”，处于视角的不同，有很多种衡量的方法，类似文章数，页面数之类的数据非常明显，也没有什么可以争议的。但对于并发来说，争议非常之多，这里就从一个技术的角度开始，谈谈几个Web网站的数量级。\n\n<!--more-->\n\n> 相信很多人谈论一个网站的热度，总免不了会询问日均PV，同时在线人数、注册用户数等运营数据，说实话从技术角度来说，这几个数值没有一个可以放在一起比较的——一个静态网站的PV跟一个SNS类/Web Game网站的PV根本就不是一回事。由于互联网有一个传说中的“3秒定律”，可能当下更多的网站技术指标要求1.5秒以内加载整页，或者至少可以达到阅读的标准。如果要较真什么“同时在线”，毫不客气的说，对于HTTP这类短链接的网络协议来说，在WebSocket还不普及的时代，能统计在线纯属扯淡，唯一能做的只是取个时间段，计算下访问用户而已。这些依然可以换算成QPS（Quest Per Second每秒请求数）。就并发而言，我唯一推崇的只有理论最大QPS和悲观QPS。\n\n\n# 这里就大致根据理论最大QPS，给网站做几个分类\n\n## 50QPS以下——小网站\n\n> 没什么好说的，简单的小网站而已，就如同本站这样，你可以用最简单的方法快速搭建，短期没有太多的技术瓶颈，只要服务器不要太烂就好。\n\n## 50～100QPS——DB极限型\n\n> 大部分的关系型数据库的每次请求大多都能控制在0.01秒左右，即便你的网站每页面只有一次DB请求，那么页面请求无法保证在1秒钟内完成100个请求，这个阶段要考虑做Cache或者多DB负载。无论那种方案，网站重构是不可避免的。\n\n## 300～800QPS——带宽极限型\n\n> 目前服务器大多用了IDC提供的“百兆带宽”，这意味着网站出口的实际带宽是8M Byte左右。假定每个页面只有10K Byte，在这个并发条件下，百兆带宽已经吃完。首要考虑是CDN加速／异地缓存，多机负载等技术。\n\n## 500～1000QPS——内网带宽极限＋Memcache极限型\n\n> 由于Key/value的特性，每个页面对memcache的请求远大于直接对DB的请求，Memcache的悲观并发数在2w左右，看似很高，但事实上大多数情况下，首先是有可能在次之前内网的带宽就已经吃光，接着是在8K QPS左右的情况下，Memcache已经表现出了不稳定，如果代码上没有足够的优化，可能直接将压力转嫁到了DB层上，这就最终导致整个系统在达到某个阀值之上，性能迅速下滑。\n\n## 1000～2000QPS——FORK/SELECT，锁模式极限型\n\n> 好吧，一句话：线程模型决定吞吐量。不管你系统中最常见的锁是什么锁，这个级别下，文件系统访问锁都成为了灾难。这就要求系统中不能存在中央节点，所有的数据都必须分布存储，数据需要分布处理。总之，关键词：分布\n\n## 2000QPS以上——C10K极限\n\n> 尽管现在很多应用已经实现了C25K，但短板理论告诉我们，决定网站整体并发的永远是最低效的那个环节。我承认我生涯中从未遇到过2000QPS以上，甚至1.5K以上的网站，希望有此经验的哥们可以一起交流下\n\n[原文地址](http://www.litrin.net/2013/03/27/web%E7%BD%91%E7%AB%99%E7%9A%84%E5%87%A0%E4%B8%AA%E5%B9%B6%E5%8F%91%E9%87%8F%E7%BA%A7/)\n","source":"_posts/2016-07-13-web网站的几个并发连接.md","raw":"---\ntitle: web网站的几个并发连接\ncategories: 技术与干货\ntag: 技术与干货\nabbrlink: 8e49ebb7\ndate: 2016-07-13 00:00:00\n---\n\n> 评价一个网站的“大小”，处于视角的不同，有很多种衡量的方法，类似文章数，页面数之类的数据非常明显，也没有什么可以争议的。但对于并发来说，争议非常之多，这里就从一个技术的角度开始，谈谈几个Web网站的数量级。\n\n<!--more-->\n\n> 相信很多人谈论一个网站的热度，总免不了会询问日均PV，同时在线人数、注册用户数等运营数据，说实话从技术角度来说，这几个数值没有一个可以放在一起比较的——一个静态网站的PV跟一个SNS类/Web Game网站的PV根本就不是一回事。由于互联网有一个传说中的“3秒定律”，可能当下更多的网站技术指标要求1.5秒以内加载整页，或者至少可以达到阅读的标准。如果要较真什么“同时在线”，毫不客气的说，对于HTTP这类短链接的网络协议来说，在WebSocket还不普及的时代，能统计在线纯属扯淡，唯一能做的只是取个时间段，计算下访问用户而已。这些依然可以换算成QPS（Quest Per Second每秒请求数）。就并发而言，我唯一推崇的只有理论最大QPS和悲观QPS。\n\n\n# 这里就大致根据理论最大QPS，给网站做几个分类\n\n## 50QPS以下——小网站\n\n> 没什么好说的，简单的小网站而已，就如同本站这样，你可以用最简单的方法快速搭建，短期没有太多的技术瓶颈，只要服务器不要太烂就好。\n\n## 50～100QPS——DB极限型\n\n> 大部分的关系型数据库的每次请求大多都能控制在0.01秒左右，即便你的网站每页面只有一次DB请求，那么页面请求无法保证在1秒钟内完成100个请求，这个阶段要考虑做Cache或者多DB负载。无论那种方案，网站重构是不可避免的。\n\n## 300～800QPS——带宽极限型\n\n> 目前服务器大多用了IDC提供的“百兆带宽”，这意味着网站出口的实际带宽是8M Byte左右。假定每个页面只有10K Byte，在这个并发条件下，百兆带宽已经吃完。首要考虑是CDN加速／异地缓存，多机负载等技术。\n\n## 500～1000QPS——内网带宽极限＋Memcache极限型\n\n> 由于Key/value的特性，每个页面对memcache的请求远大于直接对DB的请求，Memcache的悲观并发数在2w左右，看似很高，但事实上大多数情况下，首先是有可能在次之前内网的带宽就已经吃光，接着是在8K QPS左右的情况下，Memcache已经表现出了不稳定，如果代码上没有足够的优化，可能直接将压力转嫁到了DB层上，这就最终导致整个系统在达到某个阀值之上，性能迅速下滑。\n\n## 1000～2000QPS——FORK/SELECT，锁模式极限型\n\n> 好吧，一句话：线程模型决定吞吐量。不管你系统中最常见的锁是什么锁，这个级别下，文件系统访问锁都成为了灾难。这就要求系统中不能存在中央节点，所有的数据都必须分布存储，数据需要分布处理。总之，关键词：分布\n\n## 2000QPS以上——C10K极限\n\n> 尽管现在很多应用已经实现了C25K，但短板理论告诉我们，决定网站整体并发的永远是最低效的那个环节。我承认我生涯中从未遇到过2000QPS以上，甚至1.5K以上的网站，希望有此经验的哥们可以一起交流下\n\n[原文地址](http://www.litrin.net/2013/03/27/web%E7%BD%91%E7%AB%99%E7%9A%84%E5%87%A0%E4%B8%AA%E5%B9%B6%E5%8F%91%E9%87%8F%E7%BA%A7/)\n","slug":"2016-07-13-web网站的几个并发连接","published":1,"updated":"2017-02-14T13:42:45.406Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5mkehri001bao94sr22gdh1","content":"<blockquote>\n<p>评价一个网站的“大小”，处于视角的不同，有很多种衡量的方法，类似文章数，页面数之类的数据非常明显，也没有什么可以争议的。但对于并发来说，争议非常之多，这里就从一个技术的角度开始，谈谈几个Web网站的数量级。</p>\n</blockquote>\n<a id=\"more\"></a>\n<blockquote>\n<p>相信很多人谈论一个网站的热度，总免不了会询问日均PV，同时在线人数、注册用户数等运营数据，说实话从技术角度来说，这几个数值没有一个可以放在一起比较的——一个静态网站的PV跟一个SNS类/Web Game网站的PV根本就不是一回事。由于互联网有一个传说中的“3秒定律”，可能当下更多的网站技术指标要求1.5秒以内加载整页，或者至少可以达到阅读的标准。如果要较真什么“同时在线”，毫不客气的说，对于HTTP这类短链接的网络协议来说，在WebSocket还不普及的时代，能统计在线纯属扯淡，唯一能做的只是取个时间段，计算下访问用户而已。这些依然可以换算成QPS（Quest Per Second每秒请求数）。就并发而言，我唯一推崇的只有理论最大QPS和悲观QPS。</p>\n</blockquote>\n<h1 id=\"这里就大致根据理论最大QPS，给网站做几个分类\"><a href=\"#这里就大致根据理论最大QPS，给网站做几个分类\" class=\"headerlink\" title=\"这里就大致根据理论最大QPS，给网站做几个分类\"></a>这里就大致根据理论最大QPS，给网站做几个分类</h1><h2 id=\"50QPS以下——小网站\"><a href=\"#50QPS以下——小网站\" class=\"headerlink\" title=\"50QPS以下——小网站\"></a>50QPS以下——小网站</h2><blockquote>\n<p>没什么好说的，简单的小网站而已，就如同本站这样，你可以用最简单的方法快速搭建，短期没有太多的技术瓶颈，只要服务器不要太烂就好。</p>\n</blockquote>\n<h2 id=\"50～100QPS——DB极限型\"><a href=\"#50～100QPS——DB极限型\" class=\"headerlink\" title=\"50～100QPS——DB极限型\"></a>50～100QPS——DB极限型</h2><blockquote>\n<p>大部分的关系型数据库的每次请求大多都能控制在0.01秒左右，即便你的网站每页面只有一次DB请求，那么页面请求无法保证在1秒钟内完成100个请求，这个阶段要考虑做Cache或者多DB负载。无论那种方案，网站重构是不可避免的。</p>\n</blockquote>\n<h2 id=\"300～800QPS——带宽极限型\"><a href=\"#300～800QPS——带宽极限型\" class=\"headerlink\" title=\"300～800QPS——带宽极限型\"></a>300～800QPS——带宽极限型</h2><blockquote>\n<p>目前服务器大多用了IDC提供的“百兆带宽”，这意味着网站出口的实际带宽是8M Byte左右。假定每个页面只有10K Byte，在这个并发条件下，百兆带宽已经吃完。首要考虑是CDN加速／异地缓存，多机负载等技术。</p>\n</blockquote>\n<h2 id=\"500～1000QPS——内网带宽极限＋Memcache极限型\"><a href=\"#500～1000QPS——内网带宽极限＋Memcache极限型\" class=\"headerlink\" title=\"500～1000QPS——内网带宽极限＋Memcache极限型\"></a>500～1000QPS——内网带宽极限＋Memcache极限型</h2><blockquote>\n<p>由于Key/value的特性，每个页面对memcache的请求远大于直接对DB的请求，Memcache的悲观并发数在2w左右，看似很高，但事实上大多数情况下，首先是有可能在次之前内网的带宽就已经吃光，接着是在8K QPS左右的情况下，Memcache已经表现出了不稳定，如果代码上没有足够的优化，可能直接将压力转嫁到了DB层上，这就最终导致整个系统在达到某个阀值之上，性能迅速下滑。</p>\n</blockquote>\n<h2 id=\"1000～2000QPS——FORK-SELECT，锁模式极限型\"><a href=\"#1000～2000QPS——FORK-SELECT，锁模式极限型\" class=\"headerlink\" title=\"1000～2000QPS——FORK/SELECT，锁模式极限型\"></a>1000～2000QPS——FORK/SELECT，锁模式极限型</h2><blockquote>\n<p>好吧，一句话：线程模型决定吞吐量。不管你系统中最常见的锁是什么锁，这个级别下，文件系统访问锁都成为了灾难。这就要求系统中不能存在中央节点，所有的数据都必须分布存储，数据需要分布处理。总之，关键词：分布</p>\n</blockquote>\n<h2 id=\"2000QPS以上——C10K极限\"><a href=\"#2000QPS以上——C10K极限\" class=\"headerlink\" title=\"2000QPS以上——C10K极限\"></a>2000QPS以上——C10K极限</h2><blockquote>\n<p>尽管现在很多应用已经实现了C25K，但短板理论告诉我们，决定网站整体并发的永远是最低效的那个环节。我承认我生涯中从未遇到过2000QPS以上，甚至1.5K以上的网站，希望有此经验的哥们可以一起交流下</p>\n</blockquote>\n<p><a href=\"http://www.litrin.net/2013/03/27/web%E7%BD%91%E7%AB%99%E7%9A%84%E5%87%A0%E4%B8%AA%E5%B9%B6%E5%8F%91%E9%87%8F%E7%BA%A7/\" target=\"_blank\" rel=\"external\">原文地址</a></p>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>评价一个网站的“大小”，处于视角的不同，有很多种衡量的方法，类似文章数，页面数之类的数据非常明显，也没有什么可以争议的。但对于并发来说，争议非常之多，这里就从一个技术的角度开始，谈谈几个Web网站的数量级。</p>\n</blockquote>","more":"<blockquote>\n<p>相信很多人谈论一个网站的热度，总免不了会询问日均PV，同时在线人数、注册用户数等运营数据，说实话从技术角度来说，这几个数值没有一个可以放在一起比较的——一个静态网站的PV跟一个SNS类/Web Game网站的PV根本就不是一回事。由于互联网有一个传说中的“3秒定律”，可能当下更多的网站技术指标要求1.5秒以内加载整页，或者至少可以达到阅读的标准。如果要较真什么“同时在线”，毫不客气的说，对于HTTP这类短链接的网络协议来说，在WebSocket还不普及的时代，能统计在线纯属扯淡，唯一能做的只是取个时间段，计算下访问用户而已。这些依然可以换算成QPS（Quest Per Second每秒请求数）。就并发而言，我唯一推崇的只有理论最大QPS和悲观QPS。</p>\n</blockquote>\n<h1 id=\"这里就大致根据理论最大QPS，给网站做几个分类\"><a href=\"#这里就大致根据理论最大QPS，给网站做几个分类\" class=\"headerlink\" title=\"这里就大致根据理论最大QPS，给网站做几个分类\"></a>这里就大致根据理论最大QPS，给网站做几个分类</h1><h2 id=\"50QPS以下——小网站\"><a href=\"#50QPS以下——小网站\" class=\"headerlink\" title=\"50QPS以下——小网站\"></a>50QPS以下——小网站</h2><blockquote>\n<p>没什么好说的，简单的小网站而已，就如同本站这样，你可以用最简单的方法快速搭建，短期没有太多的技术瓶颈，只要服务器不要太烂就好。</p>\n</blockquote>\n<h2 id=\"50～100QPS——DB极限型\"><a href=\"#50～100QPS——DB极限型\" class=\"headerlink\" title=\"50～100QPS——DB极限型\"></a>50～100QPS——DB极限型</h2><blockquote>\n<p>大部分的关系型数据库的每次请求大多都能控制在0.01秒左右，即便你的网站每页面只有一次DB请求，那么页面请求无法保证在1秒钟内完成100个请求，这个阶段要考虑做Cache或者多DB负载。无论那种方案，网站重构是不可避免的。</p>\n</blockquote>\n<h2 id=\"300～800QPS——带宽极限型\"><a href=\"#300～800QPS——带宽极限型\" class=\"headerlink\" title=\"300～800QPS——带宽极限型\"></a>300～800QPS——带宽极限型</h2><blockquote>\n<p>目前服务器大多用了IDC提供的“百兆带宽”，这意味着网站出口的实际带宽是8M Byte左右。假定每个页面只有10K Byte，在这个并发条件下，百兆带宽已经吃完。首要考虑是CDN加速／异地缓存，多机负载等技术。</p>\n</blockquote>\n<h2 id=\"500～1000QPS——内网带宽极限＋Memcache极限型\"><a href=\"#500～1000QPS——内网带宽极限＋Memcache极限型\" class=\"headerlink\" title=\"500～1000QPS——内网带宽极限＋Memcache极限型\"></a>500～1000QPS——内网带宽极限＋Memcache极限型</h2><blockquote>\n<p>由于Key/value的特性，每个页面对memcache的请求远大于直接对DB的请求，Memcache的悲观并发数在2w左右，看似很高，但事实上大多数情况下，首先是有可能在次之前内网的带宽就已经吃光，接着是在8K QPS左右的情况下，Memcache已经表现出了不稳定，如果代码上没有足够的优化，可能直接将压力转嫁到了DB层上，这就最终导致整个系统在达到某个阀值之上，性能迅速下滑。</p>\n</blockquote>\n<h2 id=\"1000～2000QPS——FORK-SELECT，锁模式极限型\"><a href=\"#1000～2000QPS——FORK-SELECT，锁模式极限型\" class=\"headerlink\" title=\"1000～2000QPS——FORK/SELECT，锁模式极限型\"></a>1000～2000QPS——FORK/SELECT，锁模式极限型</h2><blockquote>\n<p>好吧，一句话：线程模型决定吞吐量。不管你系统中最常见的锁是什么锁，这个级别下，文件系统访问锁都成为了灾难。这就要求系统中不能存在中央节点，所有的数据都必须分布存储，数据需要分布处理。总之，关键词：分布</p>\n</blockquote>\n<h2 id=\"2000QPS以上——C10K极限\"><a href=\"#2000QPS以上——C10K极限\" class=\"headerlink\" title=\"2000QPS以上——C10K极限\"></a>2000QPS以上——C10K极限</h2><blockquote>\n<p>尽管现在很多应用已经实现了C25K，但短板理论告诉我们，决定网站整体并发的永远是最低效的那个环节。我承认我生涯中从未遇到过2000QPS以上，甚至1.5K以上的网站，希望有此经验的哥们可以一起交流下</p>\n</blockquote>\n<p><a href=\"http://www.litrin.net/2013/03/27/web%E7%BD%91%E7%AB%99%E7%9A%84%E5%87%A0%E4%B8%AA%E5%B9%B6%E5%8F%91%E9%87%8F%E7%BA%A7/\" target=\"_blank\" rel=\"external\">原文地址</a></p>"},{"title":"CentOS Linux服务器安全设置","date":"2016-07-08T08:43:00.000Z","abbrlink":"6d1e2a65","_content":"\n> 我们必须明白：最小的权限+最少的服务=最大的安全\n所以，无论是配置任何服务器，我们都必须把不用的服务关闭、把系统权限设置到最小话，这样才能保证服务器最大的安全。下面是CentOS服务器安全设置，供大家参考。\n\n<!-- more -->\n# 一、注释掉系统不需要的用户和用户组\n> 注意：不建议直接删除，当你需要某个用户时，自己重新添加会很麻烦。\n\n``` \n cp  /etc/passwd  /etc/passwdbak   #修改之前先备份\n vi /etc/passwd  #编辑用户，在前面加上#注释掉此行 \n\n#adm:x:3:4:adm:/var/adm:/sbin/nologin\n#lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin\n#sync:x:5:0:sync:/sbin:/bin/sync\n#shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown\n#halt:x:7:0:halt:/sbin:/sbin/halt\n#uucp:x:10:14:uucp:/var/spool/uucp:/sbin/nologin\n#operator:x:11:0:operator:/root:/sbin/nologin\n#games:x:12:100:games:/usr/games:/sbin/nologin\n#gopher:x:13:30:gopher:/var/gopher:/sbin/nologin\n#ftp:x:14:50:FTP User:/var/ftp:/sbin/nologin    #注释掉ftp匿名账号\n\n\ncp /etc/group   /etc/groupbak   #修改之前先备份\nvi /etc/group  #编辑用户组，在前面加上#注释掉此行\n#adm:x:4:root,adm,daemon\n#lp:x:7:daemon,lp\n#uucp:x:14:uucp\n#games:x:20:\n#dip:x:40:\n```\n# 二、关闭系统不需要的服务\n```\nservice acpid stop  chkconfig acpid off   #停止服务，取消开机启动  #电源进阶设定，常用在 Laptop 上\nservice autofs stop  chkconfig autofs off  #停用自动挂载档桉系统与週边装置\nservice bluetooth stop  chkconfig  bluetooth  off   #停用Bluetooth蓝芽\nservice cpuspeed stop  chkconfig  cpuspeed  off   #停用控制CPU速度主要用来省电\nservice cups stop   chkconfig cups off    #停用 Common UNIX Printing System 使系统支援印表机\nservice ip6tables stop  chkconfig ip6tables off   #禁止IPv6\n\n\n如果要恢复某一个服务，可以执行下面操作\nservice acpid start  \nchkconfig acpid on  \n```\n\n# 三、禁止非root用户执行/etc/rc.d/init.d/下的系统命令\n```\nchmod -R 700 /etc/rc.d/init.d/*\nchmod -R 777 /etc/rc.d/init.d/*    #恢复默认设置\n```\n\n# 四、给下面的文件加上不可更改属性，从而防止非授权用户获得权限\n```\nchattr +i /etc/passwd\nchattr +i /etc/shadow\nchattr +i /etc/group\nchattr +i /etc/gshadow\nchattr +i /etc/services    #给系统服务端口列表文件加锁,防止未经许可的删除或添加服务\nlsattr  /etc/passwd   /etc/shadow  /etc/group  /etc/gshadow   /etc/services   #显示文件的属性\n  注意：执行以上权限修改之后，就无法添加删除用户了。\n如果再要添加删除用户，需要先取消上面的设置，等用户添加删除完成之后，再执行上面的操作\nchattr -i /etc/passwd     #取消权限锁定设置\n  chattr -i /etc/shadow\n  chattr -i /etc/group\n  chattr -i /etc/gshadow\n  chattr -i /etc/services   #取消系统服务端口列表文件加锁\n现在可以进行添加删除用户了，操作完之后再锁定目录文件\n```\n# 五、限制不同文件的权限\n```\nchattr +a .bash_history           #避免删除.bash_history或者重定向到/dev/null\nchattr +i .bash_history\nchmod 700 /usr/bin                恢复  chmod 555 /usr/bin\nchmod 700 /bin/ping              恢复  chmod 4755 /bin/ping\nchmod 700 /usr/bin/vim         恢复  chmod 755 /usr/bin/vim\nchmod 700 /bin/netstat          恢复  chmod 755 /bin/netstat\nchmod 700 /usr/bin/tail          恢复  chmod 755 /usr/bin/tail\nchmod 700 /usr/bin/less         恢复  chmod 755 /usr/bin/less\nchmod 700 /usr/bin/head       恢复  chmod 755 /usr/bin/head\nchmod 700 /bin/cat                恢复  chmod 755 /bin/cat\nchmod 700 /bin/uname          恢复  chmod 755 /bin/uname\nchmod 500 /bin/ps                 恢复  chmod 755 /bin/ps\n```\n# 六、禁止使用Ctrl+Alt+Del快捷键重启服务器\n```\ncp /etc/inittab  /etc/inittabbak\nvi /etc/inittab   \n#ca::ctrlaltdel:/sbin/shutdown -t3 -r now  #注释掉此行\n```\n# 七、使用yum update更新系统时不升级内核，只更新软件包\n```\n由于系统与硬件的兼容性问题，有可能升级内核后导致服务器不能正常启动，这是非常可怕的，没有特别的需要，建议不要随意升级内核。\ncp /etc/yum.conf    /etc/yum.confbak\n1、修改yum的配置文件 vi /etc/yum.conf  在[main]的最后添加 exclude=kernel*\n2、直接在yum的命令后面加上如下的参数：\nyum --exclude=kernel* update\n查看系统版本  cat /etc/issue\n查看内核版本  uname -a\n```\n# 八、关闭Centos自动更新\n```\nchkconfig --list yum-updatesd  #显示当前系统状态\nyum-updatesd    0:关闭  1:关闭  2:启用  3:启用  4:启用  5:启用  6:关闭\nservice yum-updatesd stop      #关闭  开启参数为start\n停止 yum-updatesd：                                        [确定]\nservice yum-updatesd status   #查看是否关闭\nyum-updatesd 已停\nchkconfig --level 35 yum-updatesd off  #禁止开启启动（系统模式为3、5）\nchkconfig yum-updatesd off  #禁止开启启动（所有启动模式全部禁止）\nchkconfig --list yum-updatesd  #显示当前系统状态\nyum-updatesd    0:关闭  1:关闭  2:启用  3:关闭  4:启用  5:关闭  6:关闭\n```\n# 九、关闭多余的虚拟控制台\n> 我们知道从控制台切换到 X 窗口，一般采用 Alt-F7 ，为什么呢？因为系统默认定义了 6 个虚拟控制台，所以 X 就成了第7个。实际上，很多人一般不会需要这么多虚拟控制台的，修改/etc/inittab ，注释掉那些你不需要的。\n\n```\ncp  /etc/inittab  /etc/inittabbak\nvi /etc/inittab\n# Run gettys in standard runlevels\n1:2345:respawn:/sbin/mingetty tty1\n#2:2345:respawn:/sbin/mingetty tty2\n#3:2345:respawn:/sbin/mingetty tty3\n#4:2345:respawn:/sbin/mingetty tty4\n#5:2345:respawn:/sbin/mingetty tty5\n#6:2345:respawn:/sbin/mingetty tty6\n```\n# 十、删除MySQL历史记录\n> 用户登陆数据库后执行的SQL命令也会被MySQL记录在用户目录的.mysql_history文件里。\n如果数据库用户用SQL语句修改了数据库密码，也会因.mysql_history文件而泄漏。\n所以我们在shell登陆及备份的时候不要在-p后直接加密码，而是在提示后再输入数据库密码。\n另外这两个文件我们也应该不让它记录我们的操作，以防万一。\n\n```\ncd\ncp .bash_history  .bash_historybak  #备份\ncp .mysql_history .mysql_historybak\nrm .bash_history .mysql_history\nln -s /dev/null .bash_history\nln -s /dev/null .mysql_history\n```\n# 十一、修改history命令记录\n```\ncp /etc/profile   /etc/profilebak\nvi /etc/profile\n找到 HISTSIZE=1000 改为 HISTSIZE=50\n```\n\n# 十二、隐藏服务器系统信息\n> 在缺省情况下，当你登陆到linux系统，它会告诉你该linux发行版的名称、版本、内核版本、服务器的名称。\n为了不让这些默认的信息泄露出来，我们要进行下面的操作，让它只显示一个\"login:\"提示符。\n删除/etc/issue和/etc/issue.net这两个文件，或者把这2个文件改名，效果是一样的。\n\n```\nmv  /etc/issue /etc/issuebak\nmv  /etc/issue.net   /etc/issue.netbak\n```\n# 十三、优化Linux内核参数\n```\ncp /etc/sysctl.conf  /etc/sysctl.confbak\nvi /etc/sysctl.conf    #在文件末尾添加以下内容\n\nnet.ipv4.ip_forward = 1 #修改为1\nnet.core.somaxconn = 262144\nnet.core.netdev_max_backlog = 262144\nnet.core.wmem_default = 8388608\nnet.core.rmem_default = 8388608\nnet.core.rmem_max = 16777216\nnet.core.wmem_max = 16777216\nnet.ipv4.netfilter.ip_conntrack_max = 131072\nnet.ipv4.netfilter.ip_conntrack_tcp_timeout_established = 180\nnet.ipv4.route.gc_timeout = 20\nnet.ipv4.ip_conntrack_max = 819200\nnet.ipv4.ip_local_port_range = 10024  65535\nnet.ipv4.tcp_retries2 = 5\nnet.ipv4.tcp_fin_timeout = 30\nnet.ipv4.tcp_syn_retries = 1\nnet.ipv4.tcp_synack_retries = 1\nnet.ipv4.tcp_timestamps = 0\nnet.ipv4.tcp_tw_recycle = 1\nnet.ipv4.tcp_tw_len = 1\nnet.ipv4.tcp_tw_reuse = 1\nnet.ipv4.tcp_keepalive_time = 120\nnet.ipv4.tcp_keepalive_probes = 3\nnet.ipv4.tcp_keepalive_intvl = 15\nnet.ipv4.tcp_max_tw_buckets = 36000\nnet.ipv4.tcp_max_orphans = 3276800\nnet.ipv4.tcp_max_syn_backlog = 262144\nnet.ipv4.tcp_wmem = 8192 131072 16777216\nnet.ipv4.tcp_rmem = 32768 131072 16777216\nnet.ipv4.tcp_mem = 94500000 915000000 927000000\n/sbin/sysctl -p   #使配置立即生效\n\n```\n# 十四、CentOS 系统优化\n```\ncp  /etc/profile  /etc/profilebak2\nvi /etc/profile      #在文件末尾添加以下内容\nulimit -c unlimited\nulimit -s unlimited\nulimit -SHn 65535\nulimit -S -c 0\nexport LC_ALL=C\nsource  /etc/profile    #使配置立即生效\nulimit -a    #显示当前的各种用户进程限制\n```\n# 十五、服务器禁止ping\n```\ncp  /etc/rc.d/rc.local  /etc/rc.d/rc.localbak\nvi  /etc/rc.d/rc.local        #在文件末尾增加下面这一行\necho 1 > /proc/sys/net/ipv4/icmp_echo_ignore_all\n参数0表示允许   1表示禁止\n```\n至此，CentOS Linux服务器安全设置基本完成，以上设置经过笔者实战测试（CentOS-5.5-x86_64）完全可用，更多的安全设置以及服务器优化，还请大家自行测试。","source":"_posts/2016-07-08-CentOS Linux服务器安全设置.md","raw":"---\ntitle: CentOS Linux服务器安全设置\ndate: '2016-07-08 16:43'\ncategories: 技术与干货\ntag: 安全\nabbrlink: 6d1e2a65\n---\n\n> 我们必须明白：最小的权限+最少的服务=最大的安全\n所以，无论是配置任何服务器，我们都必须把不用的服务关闭、把系统权限设置到最小话，这样才能保证服务器最大的安全。下面是CentOS服务器安全设置，供大家参考。\n\n<!-- more -->\n# 一、注释掉系统不需要的用户和用户组\n> 注意：不建议直接删除，当你需要某个用户时，自己重新添加会很麻烦。\n\n``` \n cp  /etc/passwd  /etc/passwdbak   #修改之前先备份\n vi /etc/passwd  #编辑用户，在前面加上#注释掉此行 \n\n#adm:x:3:4:adm:/var/adm:/sbin/nologin\n#lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin\n#sync:x:5:0:sync:/sbin:/bin/sync\n#shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown\n#halt:x:7:0:halt:/sbin:/sbin/halt\n#uucp:x:10:14:uucp:/var/spool/uucp:/sbin/nologin\n#operator:x:11:0:operator:/root:/sbin/nologin\n#games:x:12:100:games:/usr/games:/sbin/nologin\n#gopher:x:13:30:gopher:/var/gopher:/sbin/nologin\n#ftp:x:14:50:FTP User:/var/ftp:/sbin/nologin    #注释掉ftp匿名账号\n\n\ncp /etc/group   /etc/groupbak   #修改之前先备份\nvi /etc/group  #编辑用户组，在前面加上#注释掉此行\n#adm:x:4:root,adm,daemon\n#lp:x:7:daemon,lp\n#uucp:x:14:uucp\n#games:x:20:\n#dip:x:40:\n```\n# 二、关闭系统不需要的服务\n```\nservice acpid stop  chkconfig acpid off   #停止服务，取消开机启动  #电源进阶设定，常用在 Laptop 上\nservice autofs stop  chkconfig autofs off  #停用自动挂载档桉系统与週边装置\nservice bluetooth stop  chkconfig  bluetooth  off   #停用Bluetooth蓝芽\nservice cpuspeed stop  chkconfig  cpuspeed  off   #停用控制CPU速度主要用来省电\nservice cups stop   chkconfig cups off    #停用 Common UNIX Printing System 使系统支援印表机\nservice ip6tables stop  chkconfig ip6tables off   #禁止IPv6\n\n\n如果要恢复某一个服务，可以执行下面操作\nservice acpid start  \nchkconfig acpid on  \n```\n\n# 三、禁止非root用户执行/etc/rc.d/init.d/下的系统命令\n```\nchmod -R 700 /etc/rc.d/init.d/*\nchmod -R 777 /etc/rc.d/init.d/*    #恢复默认设置\n```\n\n# 四、给下面的文件加上不可更改属性，从而防止非授权用户获得权限\n```\nchattr +i /etc/passwd\nchattr +i /etc/shadow\nchattr +i /etc/group\nchattr +i /etc/gshadow\nchattr +i /etc/services    #给系统服务端口列表文件加锁,防止未经许可的删除或添加服务\nlsattr  /etc/passwd   /etc/shadow  /etc/group  /etc/gshadow   /etc/services   #显示文件的属性\n  注意：执行以上权限修改之后，就无法添加删除用户了。\n如果再要添加删除用户，需要先取消上面的设置，等用户添加删除完成之后，再执行上面的操作\nchattr -i /etc/passwd     #取消权限锁定设置\n  chattr -i /etc/shadow\n  chattr -i /etc/group\n  chattr -i /etc/gshadow\n  chattr -i /etc/services   #取消系统服务端口列表文件加锁\n现在可以进行添加删除用户了，操作完之后再锁定目录文件\n```\n# 五、限制不同文件的权限\n```\nchattr +a .bash_history           #避免删除.bash_history或者重定向到/dev/null\nchattr +i .bash_history\nchmod 700 /usr/bin                恢复  chmod 555 /usr/bin\nchmod 700 /bin/ping              恢复  chmod 4755 /bin/ping\nchmod 700 /usr/bin/vim         恢复  chmod 755 /usr/bin/vim\nchmod 700 /bin/netstat          恢复  chmod 755 /bin/netstat\nchmod 700 /usr/bin/tail          恢复  chmod 755 /usr/bin/tail\nchmod 700 /usr/bin/less         恢复  chmod 755 /usr/bin/less\nchmod 700 /usr/bin/head       恢复  chmod 755 /usr/bin/head\nchmod 700 /bin/cat                恢复  chmod 755 /bin/cat\nchmod 700 /bin/uname          恢复  chmod 755 /bin/uname\nchmod 500 /bin/ps                 恢复  chmod 755 /bin/ps\n```\n# 六、禁止使用Ctrl+Alt+Del快捷键重启服务器\n```\ncp /etc/inittab  /etc/inittabbak\nvi /etc/inittab   \n#ca::ctrlaltdel:/sbin/shutdown -t3 -r now  #注释掉此行\n```\n# 七、使用yum update更新系统时不升级内核，只更新软件包\n```\n由于系统与硬件的兼容性问题，有可能升级内核后导致服务器不能正常启动，这是非常可怕的，没有特别的需要，建议不要随意升级内核。\ncp /etc/yum.conf    /etc/yum.confbak\n1、修改yum的配置文件 vi /etc/yum.conf  在[main]的最后添加 exclude=kernel*\n2、直接在yum的命令后面加上如下的参数：\nyum --exclude=kernel* update\n查看系统版本  cat /etc/issue\n查看内核版本  uname -a\n```\n# 八、关闭Centos自动更新\n```\nchkconfig --list yum-updatesd  #显示当前系统状态\nyum-updatesd    0:关闭  1:关闭  2:启用  3:启用  4:启用  5:启用  6:关闭\nservice yum-updatesd stop      #关闭  开启参数为start\n停止 yum-updatesd：                                        [确定]\nservice yum-updatesd status   #查看是否关闭\nyum-updatesd 已停\nchkconfig --level 35 yum-updatesd off  #禁止开启启动（系统模式为3、5）\nchkconfig yum-updatesd off  #禁止开启启动（所有启动模式全部禁止）\nchkconfig --list yum-updatesd  #显示当前系统状态\nyum-updatesd    0:关闭  1:关闭  2:启用  3:关闭  4:启用  5:关闭  6:关闭\n```\n# 九、关闭多余的虚拟控制台\n> 我们知道从控制台切换到 X 窗口，一般采用 Alt-F7 ，为什么呢？因为系统默认定义了 6 个虚拟控制台，所以 X 就成了第7个。实际上，很多人一般不会需要这么多虚拟控制台的，修改/etc/inittab ，注释掉那些你不需要的。\n\n```\ncp  /etc/inittab  /etc/inittabbak\nvi /etc/inittab\n# Run gettys in standard runlevels\n1:2345:respawn:/sbin/mingetty tty1\n#2:2345:respawn:/sbin/mingetty tty2\n#3:2345:respawn:/sbin/mingetty tty3\n#4:2345:respawn:/sbin/mingetty tty4\n#5:2345:respawn:/sbin/mingetty tty5\n#6:2345:respawn:/sbin/mingetty tty6\n```\n# 十、删除MySQL历史记录\n> 用户登陆数据库后执行的SQL命令也会被MySQL记录在用户目录的.mysql_history文件里。\n如果数据库用户用SQL语句修改了数据库密码，也会因.mysql_history文件而泄漏。\n所以我们在shell登陆及备份的时候不要在-p后直接加密码，而是在提示后再输入数据库密码。\n另外这两个文件我们也应该不让它记录我们的操作，以防万一。\n\n```\ncd\ncp .bash_history  .bash_historybak  #备份\ncp .mysql_history .mysql_historybak\nrm .bash_history .mysql_history\nln -s /dev/null .bash_history\nln -s /dev/null .mysql_history\n```\n# 十一、修改history命令记录\n```\ncp /etc/profile   /etc/profilebak\nvi /etc/profile\n找到 HISTSIZE=1000 改为 HISTSIZE=50\n```\n\n# 十二、隐藏服务器系统信息\n> 在缺省情况下，当你登陆到linux系统，它会告诉你该linux发行版的名称、版本、内核版本、服务器的名称。\n为了不让这些默认的信息泄露出来，我们要进行下面的操作，让它只显示一个\"login:\"提示符。\n删除/etc/issue和/etc/issue.net这两个文件，或者把这2个文件改名，效果是一样的。\n\n```\nmv  /etc/issue /etc/issuebak\nmv  /etc/issue.net   /etc/issue.netbak\n```\n# 十三、优化Linux内核参数\n```\ncp /etc/sysctl.conf  /etc/sysctl.confbak\nvi /etc/sysctl.conf    #在文件末尾添加以下内容\n\nnet.ipv4.ip_forward = 1 #修改为1\nnet.core.somaxconn = 262144\nnet.core.netdev_max_backlog = 262144\nnet.core.wmem_default = 8388608\nnet.core.rmem_default = 8388608\nnet.core.rmem_max = 16777216\nnet.core.wmem_max = 16777216\nnet.ipv4.netfilter.ip_conntrack_max = 131072\nnet.ipv4.netfilter.ip_conntrack_tcp_timeout_established = 180\nnet.ipv4.route.gc_timeout = 20\nnet.ipv4.ip_conntrack_max = 819200\nnet.ipv4.ip_local_port_range = 10024  65535\nnet.ipv4.tcp_retries2 = 5\nnet.ipv4.tcp_fin_timeout = 30\nnet.ipv4.tcp_syn_retries = 1\nnet.ipv4.tcp_synack_retries = 1\nnet.ipv4.tcp_timestamps = 0\nnet.ipv4.tcp_tw_recycle = 1\nnet.ipv4.tcp_tw_len = 1\nnet.ipv4.tcp_tw_reuse = 1\nnet.ipv4.tcp_keepalive_time = 120\nnet.ipv4.tcp_keepalive_probes = 3\nnet.ipv4.tcp_keepalive_intvl = 15\nnet.ipv4.tcp_max_tw_buckets = 36000\nnet.ipv4.tcp_max_orphans = 3276800\nnet.ipv4.tcp_max_syn_backlog = 262144\nnet.ipv4.tcp_wmem = 8192 131072 16777216\nnet.ipv4.tcp_rmem = 32768 131072 16777216\nnet.ipv4.tcp_mem = 94500000 915000000 927000000\n/sbin/sysctl -p   #使配置立即生效\n\n```\n# 十四、CentOS 系统优化\n```\ncp  /etc/profile  /etc/profilebak2\nvi /etc/profile      #在文件末尾添加以下内容\nulimit -c unlimited\nulimit -s unlimited\nulimit -SHn 65535\nulimit -S -c 0\nexport LC_ALL=C\nsource  /etc/profile    #使配置立即生效\nulimit -a    #显示当前的各种用户进程限制\n```\n# 十五、服务器禁止ping\n```\ncp  /etc/rc.d/rc.local  /etc/rc.d/rc.localbak\nvi  /etc/rc.d/rc.local        #在文件末尾增加下面这一行\necho 1 > /proc/sys/net/ipv4/icmp_echo_ignore_all\n参数0表示允许   1表示禁止\n```\n至此，CentOS Linux服务器安全设置基本完成，以上设置经过笔者实战测试（CentOS-5.5-x86_64）完全可用，更多的安全设置以及服务器优化，还请大家自行测试。","slug":"2016-07-08-CentOS Linux服务器安全设置","published":1,"updated":"2017-02-14T13:42:45.405Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5mkehrm001eao94nzxjgs3u","content":"<blockquote>\n<p>我们必须明白：最小的权限+最少的服务=最大的安全<br>所以，无论是配置任何服务器，我们都必须把不用的服务关闭、把系统权限设置到最小话，这样才能保证服务器最大的安全。下面是CentOS服务器安全设置，供大家参考。</p>\n</blockquote>\n<a id=\"more\"></a>\n<h1 id=\"一、注释掉系统不需要的用户和用户组\"><a href=\"#一、注释掉系统不需要的用户和用户组\" class=\"headerlink\" title=\"一、注释掉系统不需要的用户和用户组\"></a>一、注释掉系统不需要的用户和用户组</h1><blockquote>\n<p>注意：不建议直接删除，当你需要某个用户时，自己重新添加会很麻烦。</p>\n</blockquote>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"> <span class=\"selector-tag\">cp</span>  /<span class=\"selector-tag\">etc</span>/<span class=\"selector-tag\">passwd</span>  /<span class=\"selector-tag\">etc</span>/<span class=\"selector-tag\">passwdbak</span>   #修改之前先备份</div><div class=\"line\"> <span class=\"selector-tag\">vi</span> /<span class=\"selector-tag\">etc</span>/<span class=\"selector-tag\">passwd</span>  #编辑用户，在前面加上#注释掉此行 </div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-id\">#adm</span><span class=\"selector-pseudo\">:x</span><span class=\"selector-pseudo\">:3</span><span class=\"selector-pseudo\">:4</span><span class=\"selector-pseudo\">:adm</span>:/<span class=\"selector-tag\">var</span>/<span class=\"selector-tag\">adm</span>:/<span class=\"selector-tag\">sbin</span>/<span class=\"selector-tag\">nologin</span></div><div class=\"line\"><span class=\"selector-id\">#lp</span><span class=\"selector-pseudo\">:x</span><span class=\"selector-pseudo\">:4</span><span class=\"selector-pseudo\">:7</span><span class=\"selector-pseudo\">:lp</span>:/<span class=\"selector-tag\">var</span>/<span class=\"selector-tag\">spool</span>/<span class=\"selector-tag\">lpd</span>:/<span class=\"selector-tag\">sbin</span>/<span class=\"selector-tag\">nologin</span></div><div class=\"line\"><span class=\"selector-id\">#sync</span><span class=\"selector-pseudo\">:x</span><span class=\"selector-pseudo\">:5</span><span class=\"selector-pseudo\">:0</span><span class=\"selector-pseudo\">:sync</span>:/<span class=\"selector-tag\">sbin</span>:/<span class=\"selector-tag\">bin</span>/<span class=\"selector-tag\">sync</span></div><div class=\"line\"><span class=\"selector-id\">#shutdown</span><span class=\"selector-pseudo\">:x</span><span class=\"selector-pseudo\">:6</span><span class=\"selector-pseudo\">:0</span><span class=\"selector-pseudo\">:shutdown</span>:/<span class=\"selector-tag\">sbin</span>:/<span class=\"selector-tag\">sbin</span>/<span class=\"selector-tag\">shutdown</span></div><div class=\"line\"><span class=\"selector-id\">#halt</span><span class=\"selector-pseudo\">:x</span><span class=\"selector-pseudo\">:7</span><span class=\"selector-pseudo\">:0</span><span class=\"selector-pseudo\">:halt</span>:/<span class=\"selector-tag\">sbin</span>:/<span class=\"selector-tag\">sbin</span>/<span class=\"selector-tag\">halt</span></div><div class=\"line\"><span class=\"selector-id\">#uucp</span><span class=\"selector-pseudo\">:x</span><span class=\"selector-pseudo\">:10</span><span class=\"selector-pseudo\">:14</span><span class=\"selector-pseudo\">:uucp</span>:/<span class=\"selector-tag\">var</span>/<span class=\"selector-tag\">spool</span>/<span class=\"selector-tag\">uucp</span>:/<span class=\"selector-tag\">sbin</span>/<span class=\"selector-tag\">nologin</span></div><div class=\"line\"><span class=\"selector-id\">#operator</span><span class=\"selector-pseudo\">:x</span><span class=\"selector-pseudo\">:11</span><span class=\"selector-pseudo\">:0</span><span class=\"selector-pseudo\">:operator</span>:/<span class=\"selector-tag\">root</span>:/<span class=\"selector-tag\">sbin</span>/<span class=\"selector-tag\">nologin</span></div><div class=\"line\"><span class=\"selector-id\">#games</span><span class=\"selector-pseudo\">:x</span><span class=\"selector-pseudo\">:12</span><span class=\"selector-pseudo\">:100</span><span class=\"selector-pseudo\">:games</span>:/<span class=\"selector-tag\">usr</span>/<span class=\"selector-tag\">games</span>:/<span class=\"selector-tag\">sbin</span>/<span class=\"selector-tag\">nologin</span></div><div class=\"line\"><span class=\"selector-id\">#gopher</span><span class=\"selector-pseudo\">:x</span><span class=\"selector-pseudo\">:13</span><span class=\"selector-pseudo\">:30</span><span class=\"selector-pseudo\">:gopher</span>:/<span class=\"selector-tag\">var</span>/<span class=\"selector-tag\">gopher</span>:/<span class=\"selector-tag\">sbin</span>/<span class=\"selector-tag\">nologin</span></div><div class=\"line\"><span class=\"selector-id\">#ftp</span><span class=\"selector-pseudo\">:x</span><span class=\"selector-pseudo\">:14</span><span class=\"selector-pseudo\">:50</span><span class=\"selector-pseudo\">:FTP</span> <span class=\"selector-tag\">User</span>:/<span class=\"selector-tag\">var</span>/<span class=\"selector-tag\">ftp</span>:/<span class=\"selector-tag\">sbin</span>/<span class=\"selector-tag\">nologin</span>    #注释掉<span class=\"selector-tag\">ftp</span>匿名账号</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-tag\">cp</span> /<span class=\"selector-tag\">etc</span>/<span class=\"selector-tag\">group</span>   /<span class=\"selector-tag\">etc</span>/<span class=\"selector-tag\">groupbak</span>   #修改之前先备份</div><div class=\"line\"><span class=\"selector-tag\">vi</span> /<span class=\"selector-tag\">etc</span>/<span class=\"selector-tag\">group</span>  #编辑用户组，在前面加上#注释掉此行</div><div class=\"line\"><span class=\"selector-id\">#adm</span><span class=\"selector-pseudo\">:x</span><span class=\"selector-pseudo\">:4</span><span class=\"selector-pseudo\">:root</span>,<span class=\"selector-tag\">adm</span>,<span class=\"selector-tag\">daemon</span></div><div class=\"line\"><span class=\"selector-id\">#lp</span><span class=\"selector-pseudo\">:x</span><span class=\"selector-pseudo\">:7</span><span class=\"selector-pseudo\">:daemon</span>,<span class=\"selector-tag\">lp</span></div><div class=\"line\"><span class=\"selector-id\">#uucp</span><span class=\"selector-pseudo\">:x</span><span class=\"selector-pseudo\">:14</span><span class=\"selector-pseudo\">:uucp</span></div><div class=\"line\"><span class=\"selector-id\">#games</span><span class=\"selector-pseudo\">:x</span><span class=\"selector-pseudo\">:20</span>:</div><div class=\"line\"><span class=\"selector-id\">#dip</span><span class=\"selector-pseudo\">:x</span><span class=\"selector-pseudo\">:40</span>:</div></pre></td></tr></table></figure>\n<h1 id=\"二、关闭系统不需要的服务\"><a href=\"#二、关闭系统不需要的服务\" class=\"headerlink\" title=\"二、关闭系统不需要的服务\"></a>二、关闭系统不需要的服务</h1><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">service acpid stop  chkconfig acpid off   #停止服务，取消开机启动  #电源进阶设定，常用在 Laptop 上<span class=\"built_in\"></span></div><div class=\"line\">service autofs stop  chkconfig autofs off  #停用自动挂载档桉系统与週边装置<span class=\"built_in\"></span></div><div class=\"line\">service bluetooth stop  chkconfig  bluetooth  off   #停用Bluetooth蓝芽<span class=\"built_in\"></span></div><div class=\"line\">service cpuspeed stop  chkconfig  cpuspeed  off   #停用控制CPU速度主要用来省电<span class=\"built_in\"></span></div><div class=\"line\">service cups stop   chkconfig cups off    #停用 Common UNIX Printing<span class=\"built_in\"> System </span>使系统支援印表机<span class=\"built_in\"></span></div><div class=\"line\">service ip6tables stop  chkconfig ip6tables off   #禁止IPv6</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">如果要恢复某一个服务，可以执行下面操作<span class=\"built_in\"></span></div><div class=\"line\">service acpid start  </div><div class=\"line\">chkconfig acpid on</div></pre></td></tr></table></figure>\n<h1 id=\"三、禁止非root用户执行-etc-rc-d-init-d-下的系统命令\"><a href=\"#三、禁止非root用户执行-etc-rc-d-init-d-下的系统命令\" class=\"headerlink\" title=\"三、禁止非root用户执行/etc/rc.d/init.d/下的系统命令\"></a>三、禁止非root用户执行/etc/rc.d/init.d/下的系统命令</h1><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">chmod -R <span class=\"number\">700</span> <span class=\"regexp\">/etc/</span>rc.d<span class=\"regexp\">/init.d/</span>*</div><div class=\"line\">chmod -R <span class=\"number\">777</span> <span class=\"regexp\">/etc/</span>rc.d<span class=\"regexp\">/init.d/</span>*    <span class=\"comment\">#恢复默认设置</span></div></pre></td></tr></table></figure>\n<h1 id=\"四、给下面的文件加上不可更改属性，从而防止非授权用户获得权限\"><a href=\"#四、给下面的文件加上不可更改属性，从而防止非授权用户获得权限\" class=\"headerlink\" title=\"四、给下面的文件加上不可更改属性，从而防止非授权用户获得权限\"></a>四、给下面的文件加上不可更改属性，从而防止非授权用户获得权限</h1><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">chattr +i /etc/passwd</div><div class=\"line\">chattr +i /etc/shadow</div><div class=\"line\">chattr +i /etc<span class=\"built_in\">/group</span></div><div class=\"line\">chattr +i /etc/gshadow</div><div class=\"line\">chattr +i /etc/services    #给系统服务端口列表文件加锁,防止未经许可的删除或添加服务</div><div class=\"line\">lsattr  /etc/passwd   /etc/shadow  /etc<span class=\"built_in\">/group </span> /etc/gshadow   /etc/services   #显示文件的属性</div><div class=\"line\">  注意：执行以上权限修改之后，就无法添加删除用户了。</div><div class=\"line\">如果再要添加删除用户，需要先取消上面的设置，等用户添加删除完成之后，再执行上面的操作</div><div class=\"line\">chattr -i /etc/passwd     #取消权限锁定设置</div><div class=\"line\">  chattr -i /etc/shadow</div><div class=\"line\">  chattr -i /etc<span class=\"built_in\">/group</span></div><div class=\"line\">  chattr -i /etc/gshadow</div><div class=\"line\">  chattr -i /etc/services   #取消系统服务端口列表文件加锁</div><div class=\"line\">现在可以进行添加删除用户了，操作完之后再锁定目录文件</div></pre></td></tr></table></figure>\n<h1 id=\"五、限制不同文件的权限\"><a href=\"#五、限制不同文件的权限\" class=\"headerlink\" title=\"五、限制不同文件的权限\"></a>五、限制不同文件的权限</h1><figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">chattr +a .bash_history           #避免删除.bash_history或者重定向到<span class=\"regexp\">/dev/</span><span class=\"keyword\">null</span></div><div class=\"line\">chattr +i .bash_history</div><div class=\"line\">chmod <span class=\"number\">700</span> <span class=\"regexp\">/usr/</span>bin                恢复  chmod <span class=\"number\">555</span> <span class=\"regexp\">/usr/</span>bin</div><div class=\"line\">chmod <span class=\"number\">700</span> <span class=\"regexp\">/bin/</span>ping              恢复  chmod <span class=\"number\">4755</span> <span class=\"regexp\">/bin/</span>ping</div><div class=\"line\">chmod <span class=\"number\">700</span> <span class=\"regexp\">/usr/</span>bin<span class=\"regexp\">/vim         恢复  chmod 755 /u</span>sr<span class=\"regexp\">/bin/</span>vim</div><div class=\"line\">chmod <span class=\"number\">700</span> <span class=\"regexp\">/bin/</span>netstat          恢复  chmod <span class=\"number\">755</span> <span class=\"regexp\">/bin/</span>netstat</div><div class=\"line\">chmod <span class=\"number\">700</span> <span class=\"regexp\">/usr/</span>bin<span class=\"regexp\">/tail          恢复  chmod 755 /u</span>sr<span class=\"regexp\">/bin/</span>tail</div><div class=\"line\">chmod <span class=\"number\">700</span> <span class=\"regexp\">/usr/</span>bin<span class=\"regexp\">/less         恢复  chmod 755 /u</span>sr<span class=\"regexp\">/bin/</span>less</div><div class=\"line\">chmod <span class=\"number\">700</span> <span class=\"regexp\">/usr/</span>bin<span class=\"regexp\">/head       恢复  chmod 755 /u</span>sr<span class=\"regexp\">/bin/</span>head</div><div class=\"line\">chmod <span class=\"number\">700</span> <span class=\"regexp\">/bin/</span>cat                恢复  chmod <span class=\"number\">755</span> <span class=\"regexp\">/bin/</span>cat</div><div class=\"line\">chmod <span class=\"number\">700</span> <span class=\"regexp\">/bin/u</span>name          恢复  chmod <span class=\"number\">755</span> <span class=\"regexp\">/bin/u</span>name</div><div class=\"line\">chmod <span class=\"number\">500</span> <span class=\"regexp\">/bin/</span>ps                 恢复  chmod <span class=\"number\">755</span> <span class=\"regexp\">/bin/</span>ps</div></pre></td></tr></table></figure>\n<h1 id=\"六、禁止使用Ctrl-Alt-Del快捷键重启服务器\"><a href=\"#六、禁止使用Ctrl-Alt-Del快捷键重启服务器\" class=\"headerlink\" title=\"六、禁止使用Ctrl+Alt+Del快捷键重启服务器\"></a>六、禁止使用Ctrl+Alt+Del快捷键重启服务器</h1><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">cp <span class=\"regexp\">/etc/i</span>nittab  <span class=\"regexp\">/etc/i</span>nittabbak</div><div class=\"line\">vi <span class=\"regexp\">/etc/i</span>nittab   </div><div class=\"line\"><span class=\"comment\">#ca::ctrlaltdel:/sbin/shutdown -t3 -r now  #注释掉此行</span></div></pre></td></tr></table></figure>\n<h1 id=\"七、使用yum-update更新系统时不升级内核，只更新软件包\"><a href=\"#七、使用yum-update更新系统时不升级内核，只更新软件包\" class=\"headerlink\" title=\"七、使用yum update更新系统时不升级内核，只更新软件包\"></a>七、使用yum update更新系统时不升级内核，只更新软件包</h1><figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">由于系统与硬件的兼容性问题，有可能升级内核后导致服务器不能正常启动，这是非常可怕的，没有特别的需要，建议不要随意升级内核。</div><div class=\"line\">cp <span class=\"regexp\">/etc/yum</span>.conf    <span class=\"regexp\">/etc/yum</span>.confbak</div><div class=\"line\"><span class=\"number\">1</span>、修改yum的配置文件 vi <span class=\"regexp\">/etc/yum</span>.conf  在[main]的最后添加 <span class=\"keyword\">exclude</span>=kernel*</div><div class=\"line\"><span class=\"number\">2</span>、直接在yum的命令后面加上如下的参数：</div><div class=\"line\">yum --<span class=\"keyword\">exclude</span>=kernel* update</div><div class=\"line\">查看系统版本  cat <span class=\"regexp\">/etc/i</span>ssue</div><div class=\"line\">查看内核版本  uname -a</div></pre></td></tr></table></figure>\n<h1 id=\"八、关闭Centos自动更新\"><a href=\"#八、关闭Centos自动更新\" class=\"headerlink\" title=\"八、关闭Centos自动更新\"></a>八、关闭Centos自动更新</h1><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">chkconfig --list yum-updatesd  #显示当前系统状态</div><div class=\"line\">yum-updatesd    0:关闭  1:关闭  2:启用  3:启用  4:启用  5:启用  6:关闭<span class=\"built_in\"></span></div><div class=\"line\">service yum-updatesd stop      #关闭  开启参数为start</div><div class=\"line\">停止 yum-updatesd：                                        [确定]<span class=\"built_in\"></span></div><div class=\"line\">service yum-updatesd status   #查看是否关闭</div><div class=\"line\">yum-updatesd 已停</div><div class=\"line\">chkconfig --level 35 yum-updatesd off  #禁止开启启动（系统模式为3、5）</div><div class=\"line\">chkconfig yum-updatesd off  #禁止开启启动（所有启动模式全部禁止）</div><div class=\"line\">chkconfig --list yum-updatesd  #显示当前系统状态</div><div class=\"line\">yum-updatesd    0:关闭  1:关闭  2:启用  3:关闭  4:启用  5:关闭  6:关闭</div></pre></td></tr></table></figure>\n<h1 id=\"九、关闭多余的虚拟控制台\"><a href=\"#九、关闭多余的虚拟控制台\" class=\"headerlink\" title=\"九、关闭多余的虚拟控制台\"></a>九、关闭多余的虚拟控制台</h1><blockquote>\n<p>我们知道从控制台切换到 X 窗口，一般采用 Alt-F7 ，为什么呢？因为系统默认定义了 6 个虚拟控制台，所以 X 就成了第7个。实际上，很多人一般不会需要这么多虚拟控制台的，修改/etc/inittab ，注释掉那些你不需要的。</p>\n</blockquote>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">cp</span>  /<span class=\"selector-tag\">etc</span>/<span class=\"selector-tag\">inittab</span>  /<span class=\"selector-tag\">etc</span>/<span class=\"selector-tag\">inittabbak</span></div><div class=\"line\"><span class=\"selector-tag\">vi</span> /<span class=\"selector-tag\">etc</span>/<span class=\"selector-tag\">inittab</span></div><div class=\"line\"># <span class=\"selector-tag\">Run</span> <span class=\"selector-tag\">gettys</span> <span class=\"selector-tag\">in</span> <span class=\"selector-tag\">standard</span> <span class=\"selector-tag\">runlevels</span></div><div class=\"line\"><span class=\"selector-tag\">1</span><span class=\"selector-pseudo\">:2345</span><span class=\"selector-pseudo\">:respawn</span>:/<span class=\"selector-tag\">sbin</span>/<span class=\"selector-tag\">mingetty</span> <span class=\"selector-tag\">tty1</span></div><div class=\"line\"><span class=\"selector-id\">#2</span><span class=\"selector-pseudo\">:2345</span><span class=\"selector-pseudo\">:respawn</span>:/<span class=\"selector-tag\">sbin</span>/<span class=\"selector-tag\">mingetty</span> <span class=\"selector-tag\">tty2</span></div><div class=\"line\"><span class=\"selector-id\">#3</span><span class=\"selector-pseudo\">:2345</span><span class=\"selector-pseudo\">:respawn</span>:/<span class=\"selector-tag\">sbin</span>/<span class=\"selector-tag\">mingetty</span> <span class=\"selector-tag\">tty3</span></div><div class=\"line\"><span class=\"selector-id\">#4</span><span class=\"selector-pseudo\">:2345</span><span class=\"selector-pseudo\">:respawn</span>:/<span class=\"selector-tag\">sbin</span>/<span class=\"selector-tag\">mingetty</span> <span class=\"selector-tag\">tty4</span></div><div class=\"line\"><span class=\"selector-id\">#5</span><span class=\"selector-pseudo\">:2345</span><span class=\"selector-pseudo\">:respawn</span>:/<span class=\"selector-tag\">sbin</span>/<span class=\"selector-tag\">mingetty</span> <span class=\"selector-tag\">tty5</span></div><div class=\"line\"><span class=\"selector-id\">#6</span><span class=\"selector-pseudo\">:2345</span><span class=\"selector-pseudo\">:respawn</span>:/<span class=\"selector-tag\">sbin</span>/<span class=\"selector-tag\">mingetty</span> <span class=\"selector-tag\">tty6</span></div></pre></td></tr></table></figure>\n<h1 id=\"十、删除MySQL历史记录\"><a href=\"#十、删除MySQL历史记录\" class=\"headerlink\" title=\"十、删除MySQL历史记录\"></a>十、删除MySQL历史记录</h1><blockquote>\n<p>用户登陆数据库后执行的SQL命令也会被MySQL记录在用户目录的.mysql_history文件里。<br>如果数据库用户用SQL语句修改了数据库密码，也会因.mysql_history文件而泄漏。<br>所以我们在shell登陆及备份的时候不要在-p后直接加密码，而是在提示后再输入数据库密码。<br>另外这两个文件我们也应该不让它记录我们的操作，以防万一。</p>\n</blockquote>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd</div><div class=\"line\">cp <span class=\"selector-class\">.bash_history</span>  <span class=\"selector-class\">.bash_historybak</span>  #备份</div><div class=\"line\">cp <span class=\"selector-class\">.mysql_history</span> <span class=\"selector-class\">.mysql_historybak</span></div><div class=\"line\">rm <span class=\"selector-class\">.bash_history</span> <span class=\"selector-class\">.mysql_history</span></div><div class=\"line\">ln -s /dev/null <span class=\"selector-class\">.bash_history</span></div><div class=\"line\">ln -s /dev/null .mysql_history</div></pre></td></tr></table></figure>\n<h1 id=\"十一、修改history命令记录\"><a href=\"#十一、修改history命令记录\" class=\"headerlink\" title=\"十一、修改history命令记录\"></a>十一、修改history命令记录</h1><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">cp /etc<span class=\"built_in\">/profile </span>  /etc/profilebak</div><div class=\"line\">vi /etc<span class=\"built_in\">/profile</span></div><div class=\"line\">找到 <span class=\"attribute\">HISTSIZE</span>=1000 改为 <span class=\"attribute\">HISTSIZE</span>=50</div></pre></td></tr></table></figure>\n<h1 id=\"十二、隐藏服务器系统信息\"><a href=\"#十二、隐藏服务器系统信息\" class=\"headerlink\" title=\"十二、隐藏服务器系统信息\"></a>十二、隐藏服务器系统信息</h1><blockquote>\n<p>在缺省情况下，当你登陆到linux系统，它会告诉你该linux发行版的名称、版本、内核版本、服务器的名称。<br>为了不让这些默认的信息泄露出来，我们要进行下面的操作，让它只显示一个”login:”提示符。<br>删除/etc/issue和/etc/issue.net这两个文件，或者把这2个文件改名，效果是一样的。</p>\n</blockquote>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">mv  <span class=\"regexp\">/etc/i</span>ssue <span class=\"regexp\">/etc/i</span>ssuebak</div><div class=\"line\">mv  <span class=\"regexp\">/etc/i</span>ssue.net   <span class=\"regexp\">/etc/i</span>ssue.netbak</div></pre></td></tr></table></figure>\n<h1 id=\"十三、优化Linux内核参数\"><a href=\"#十三、优化Linux内核参数\" class=\"headerlink\" title=\"十三、优化Linux内核参数\"></a>十三、优化Linux内核参数</h1><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div></pre></td><td class=\"code\"><pre><div class=\"line\">cp /etc/sysctl<span class=\"selector-class\">.conf</span>  /etc/sysctl<span class=\"selector-class\">.confbak</span></div><div class=\"line\">vi /etc/sysctl<span class=\"selector-class\">.conf</span>    #在文件末尾添加以下内容</div><div class=\"line\"></div><div class=\"line\">net<span class=\"selector-class\">.ipv4</span><span class=\"selector-class\">.ip_forward</span> = <span class=\"number\">1</span> #修改为<span class=\"number\">1</span></div><div class=\"line\">net<span class=\"selector-class\">.core</span><span class=\"selector-class\">.somaxconn</span> = <span class=\"number\">262144</span></div><div class=\"line\">net<span class=\"selector-class\">.core</span><span class=\"selector-class\">.netdev_max_backlog</span> = <span class=\"number\">262144</span></div><div class=\"line\">net<span class=\"selector-class\">.core</span><span class=\"selector-class\">.wmem_default</span> = <span class=\"number\">8388608</span></div><div class=\"line\">net<span class=\"selector-class\">.core</span><span class=\"selector-class\">.rmem_default</span> = <span class=\"number\">8388608</span></div><div class=\"line\">net<span class=\"selector-class\">.core</span><span class=\"selector-class\">.rmem_max</span> = <span class=\"number\">16777216</span></div><div class=\"line\">net<span class=\"selector-class\">.core</span><span class=\"selector-class\">.wmem_max</span> = <span class=\"number\">16777216</span></div><div class=\"line\">net<span class=\"selector-class\">.ipv4</span><span class=\"selector-class\">.netfilter</span><span class=\"selector-class\">.ip_conntrack_max</span> = <span class=\"number\">131072</span></div><div class=\"line\">net<span class=\"selector-class\">.ipv4</span><span class=\"selector-class\">.netfilter</span><span class=\"selector-class\">.ip_conntrack_tcp_timeout_established</span> = <span class=\"number\">180</span></div><div class=\"line\">net<span class=\"selector-class\">.ipv4</span><span class=\"selector-class\">.route</span><span class=\"selector-class\">.gc_timeout</span> = <span class=\"number\">20</span></div><div class=\"line\">net<span class=\"selector-class\">.ipv4</span><span class=\"selector-class\">.ip_conntrack_max</span> = <span class=\"number\">819200</span></div><div class=\"line\">net<span class=\"selector-class\">.ipv4</span><span class=\"selector-class\">.ip_local_port_range</span> = <span class=\"number\">10024</span>  <span class=\"number\">65535</span></div><div class=\"line\">net<span class=\"selector-class\">.ipv4</span><span class=\"selector-class\">.tcp_retries2</span> = <span class=\"number\">5</span></div><div class=\"line\">net<span class=\"selector-class\">.ipv4</span><span class=\"selector-class\">.tcp_fin_timeout</span> = <span class=\"number\">30</span></div><div class=\"line\">net<span class=\"selector-class\">.ipv4</span><span class=\"selector-class\">.tcp_syn_retries</span> = <span class=\"number\">1</span></div><div class=\"line\">net<span class=\"selector-class\">.ipv4</span><span class=\"selector-class\">.tcp_synack_retries</span> = <span class=\"number\">1</span></div><div class=\"line\">net<span class=\"selector-class\">.ipv4</span><span class=\"selector-class\">.tcp_timestamps</span> = <span class=\"number\">0</span></div><div class=\"line\">net<span class=\"selector-class\">.ipv4</span><span class=\"selector-class\">.tcp_tw_recycle</span> = <span class=\"number\">1</span></div><div class=\"line\">net<span class=\"selector-class\">.ipv4</span><span class=\"selector-class\">.tcp_tw_len</span> = <span class=\"number\">1</span></div><div class=\"line\">net<span class=\"selector-class\">.ipv4</span><span class=\"selector-class\">.tcp_tw_reuse</span> = <span class=\"number\">1</span></div><div class=\"line\">net<span class=\"selector-class\">.ipv4</span><span class=\"selector-class\">.tcp_keepalive_time</span> = <span class=\"number\">120</span></div><div class=\"line\">net<span class=\"selector-class\">.ipv4</span><span class=\"selector-class\">.tcp_keepalive_probes</span> = <span class=\"number\">3</span></div><div class=\"line\">net<span class=\"selector-class\">.ipv4</span><span class=\"selector-class\">.tcp_keepalive_intvl</span> = <span class=\"number\">15</span></div><div class=\"line\">net<span class=\"selector-class\">.ipv4</span><span class=\"selector-class\">.tcp_max_tw_buckets</span> = <span class=\"number\">36000</span></div><div class=\"line\">net<span class=\"selector-class\">.ipv4</span><span class=\"selector-class\">.tcp_max_orphans</span> = <span class=\"number\">3276800</span></div><div class=\"line\">net<span class=\"selector-class\">.ipv4</span><span class=\"selector-class\">.tcp_max_syn_backlog</span> = <span class=\"number\">262144</span></div><div class=\"line\">net<span class=\"selector-class\">.ipv4</span><span class=\"selector-class\">.tcp_wmem</span> = <span class=\"number\">8192</span> <span class=\"number\">131072</span> <span class=\"number\">16777216</span></div><div class=\"line\">net<span class=\"selector-class\">.ipv4</span><span class=\"selector-class\">.tcp_rmem</span> = <span class=\"number\">32768</span> <span class=\"number\">131072</span> <span class=\"number\">16777216</span></div><div class=\"line\">net<span class=\"selector-class\">.ipv4</span><span class=\"selector-class\">.tcp_mem</span> = <span class=\"number\">94500000</span> <span class=\"number\">915000000</span> <span class=\"number\">927000000</span></div><div class=\"line\">/sbin/sysctl -<span class=\"selector-tag\">p</span>   #使配置立即生效</div></pre></td></tr></table></figure>\n<h1 id=\"十四、CentOS-系统优化\"><a href=\"#十四、CentOS-系统优化\" class=\"headerlink\" title=\"十四、CentOS 系统优化\"></a>十四、CentOS 系统优化</h1><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">cp  /etc<span class=\"built_in\">/profile </span> /etc/profilebak2</div><div class=\"line\">vi /etc<span class=\"built_in\">/profile </span>     #在文件末尾添加以下内容</div><div class=\"line\">ulimit -c unlimited</div><div class=\"line\">ulimit -s unlimited</div><div class=\"line\">ulimit -SHn 65535</div><div class=\"line\">ulimit -S -c 0</div><div class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">LC_ALL</span>=C</div><div class=\"line\">source  /etc<span class=\"built_in\">/profile </span>   #使配置立即生效</div><div class=\"line\">ulimit -a    #显示当前的各种用户进程限制</div></pre></td></tr></table></figure>\n<h1 id=\"十五、服务器禁止ping\"><a href=\"#十五、服务器禁止ping\" class=\"headerlink\" title=\"十五、服务器禁止ping\"></a>十五、服务器禁止ping</h1><figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">cp  <span class=\"meta-keyword\">/etc/</span>rc.d/rc.local  <span class=\"meta-keyword\">/etc/</span>rc.d/rc.localbak</div><div class=\"line\">vi  <span class=\"meta-keyword\">/etc/</span>rc.d/rc.local        <span class=\"meta\">#在文件末尾增加下面这一行</span></div><div class=\"line\">echo <span class=\"number\">1</span> &gt; <span class=\"meta-keyword\">/proc/</span>sys<span class=\"meta-keyword\">/net/</span>ipv4/icmp_echo_ignore_all</div><div class=\"line\">参数<span class=\"number\">0</span>表示允许   <span class=\"number\">1</span>表示禁止</div></pre></td></tr></table></figure>\n<p>至此，CentOS Linux服务器安全设置基本完成，以上设置经过笔者实战测试（CentOS-5.5-x86_64）完全可用，更多的安全设置以及服务器优化，还请大家自行测试。</p>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>我们必须明白：最小的权限+最少的服务=最大的安全<br>所以，无论是配置任何服务器，我们都必须把不用的服务关闭、把系统权限设置到最小话，这样才能保证服务器最大的安全。下面是CentOS服务器安全设置，供大家参考。</p>\n</blockquote>","more":"<h1 id=\"一、注释掉系统不需要的用户和用户组\"><a href=\"#一、注释掉系统不需要的用户和用户组\" class=\"headerlink\" title=\"一、注释掉系统不需要的用户和用户组\"></a>一、注释掉系统不需要的用户和用户组</h1><blockquote>\n<p>注意：不建议直接删除，当你需要某个用户时，自己重新添加会很麻烦。</p>\n</blockquote>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"> <span class=\"selector-tag\">cp</span>  /<span class=\"selector-tag\">etc</span>/<span class=\"selector-tag\">passwd</span>  /<span class=\"selector-tag\">etc</span>/<span class=\"selector-tag\">passwdbak</span>   #修改之前先备份</div><div class=\"line\"> <span class=\"selector-tag\">vi</span> /<span class=\"selector-tag\">etc</span>/<span class=\"selector-tag\">passwd</span>  #编辑用户，在前面加上#注释掉此行 </div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-id\">#adm</span><span class=\"selector-pseudo\">:x</span><span class=\"selector-pseudo\">:3</span><span class=\"selector-pseudo\">:4</span><span class=\"selector-pseudo\">:adm</span>:/<span class=\"selector-tag\">var</span>/<span class=\"selector-tag\">adm</span>:/<span class=\"selector-tag\">sbin</span>/<span class=\"selector-tag\">nologin</span></div><div class=\"line\"><span class=\"selector-id\">#lp</span><span class=\"selector-pseudo\">:x</span><span class=\"selector-pseudo\">:4</span><span class=\"selector-pseudo\">:7</span><span class=\"selector-pseudo\">:lp</span>:/<span class=\"selector-tag\">var</span>/<span class=\"selector-tag\">spool</span>/<span class=\"selector-tag\">lpd</span>:/<span class=\"selector-tag\">sbin</span>/<span class=\"selector-tag\">nologin</span></div><div class=\"line\"><span class=\"selector-id\">#sync</span><span class=\"selector-pseudo\">:x</span><span class=\"selector-pseudo\">:5</span><span class=\"selector-pseudo\">:0</span><span class=\"selector-pseudo\">:sync</span>:/<span class=\"selector-tag\">sbin</span>:/<span class=\"selector-tag\">bin</span>/<span class=\"selector-tag\">sync</span></div><div class=\"line\"><span class=\"selector-id\">#shutdown</span><span class=\"selector-pseudo\">:x</span><span class=\"selector-pseudo\">:6</span><span class=\"selector-pseudo\">:0</span><span class=\"selector-pseudo\">:shutdown</span>:/<span class=\"selector-tag\">sbin</span>:/<span class=\"selector-tag\">sbin</span>/<span class=\"selector-tag\">shutdown</span></div><div class=\"line\"><span class=\"selector-id\">#halt</span><span class=\"selector-pseudo\">:x</span><span class=\"selector-pseudo\">:7</span><span class=\"selector-pseudo\">:0</span><span class=\"selector-pseudo\">:halt</span>:/<span class=\"selector-tag\">sbin</span>:/<span class=\"selector-tag\">sbin</span>/<span class=\"selector-tag\">halt</span></div><div class=\"line\"><span class=\"selector-id\">#uucp</span><span class=\"selector-pseudo\">:x</span><span class=\"selector-pseudo\">:10</span><span class=\"selector-pseudo\">:14</span><span class=\"selector-pseudo\">:uucp</span>:/<span class=\"selector-tag\">var</span>/<span class=\"selector-tag\">spool</span>/<span class=\"selector-tag\">uucp</span>:/<span class=\"selector-tag\">sbin</span>/<span class=\"selector-tag\">nologin</span></div><div class=\"line\"><span class=\"selector-id\">#operator</span><span class=\"selector-pseudo\">:x</span><span class=\"selector-pseudo\">:11</span><span class=\"selector-pseudo\">:0</span><span class=\"selector-pseudo\">:operator</span>:/<span class=\"selector-tag\">root</span>:/<span class=\"selector-tag\">sbin</span>/<span class=\"selector-tag\">nologin</span></div><div class=\"line\"><span class=\"selector-id\">#games</span><span class=\"selector-pseudo\">:x</span><span class=\"selector-pseudo\">:12</span><span class=\"selector-pseudo\">:100</span><span class=\"selector-pseudo\">:games</span>:/<span class=\"selector-tag\">usr</span>/<span class=\"selector-tag\">games</span>:/<span class=\"selector-tag\">sbin</span>/<span class=\"selector-tag\">nologin</span></div><div class=\"line\"><span class=\"selector-id\">#gopher</span><span class=\"selector-pseudo\">:x</span><span class=\"selector-pseudo\">:13</span><span class=\"selector-pseudo\">:30</span><span class=\"selector-pseudo\">:gopher</span>:/<span class=\"selector-tag\">var</span>/<span class=\"selector-tag\">gopher</span>:/<span class=\"selector-tag\">sbin</span>/<span class=\"selector-tag\">nologin</span></div><div class=\"line\"><span class=\"selector-id\">#ftp</span><span class=\"selector-pseudo\">:x</span><span class=\"selector-pseudo\">:14</span><span class=\"selector-pseudo\">:50</span><span class=\"selector-pseudo\">:FTP</span> <span class=\"selector-tag\">User</span>:/<span class=\"selector-tag\">var</span>/<span class=\"selector-tag\">ftp</span>:/<span class=\"selector-tag\">sbin</span>/<span class=\"selector-tag\">nologin</span>    #注释掉<span class=\"selector-tag\">ftp</span>匿名账号</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-tag\">cp</span> /<span class=\"selector-tag\">etc</span>/<span class=\"selector-tag\">group</span>   /<span class=\"selector-tag\">etc</span>/<span class=\"selector-tag\">groupbak</span>   #修改之前先备份</div><div class=\"line\"><span class=\"selector-tag\">vi</span> /<span class=\"selector-tag\">etc</span>/<span class=\"selector-tag\">group</span>  #编辑用户组，在前面加上#注释掉此行</div><div class=\"line\"><span class=\"selector-id\">#adm</span><span class=\"selector-pseudo\">:x</span><span class=\"selector-pseudo\">:4</span><span class=\"selector-pseudo\">:root</span>,<span class=\"selector-tag\">adm</span>,<span class=\"selector-tag\">daemon</span></div><div class=\"line\"><span class=\"selector-id\">#lp</span><span class=\"selector-pseudo\">:x</span><span class=\"selector-pseudo\">:7</span><span class=\"selector-pseudo\">:daemon</span>,<span class=\"selector-tag\">lp</span></div><div class=\"line\"><span class=\"selector-id\">#uucp</span><span class=\"selector-pseudo\">:x</span><span class=\"selector-pseudo\">:14</span><span class=\"selector-pseudo\">:uucp</span></div><div class=\"line\"><span class=\"selector-id\">#games</span><span class=\"selector-pseudo\">:x</span><span class=\"selector-pseudo\">:20</span>:</div><div class=\"line\"><span class=\"selector-id\">#dip</span><span class=\"selector-pseudo\">:x</span><span class=\"selector-pseudo\">:40</span>:</div></pre></td></tr></table></figure>\n<h1 id=\"二、关闭系统不需要的服务\"><a href=\"#二、关闭系统不需要的服务\" class=\"headerlink\" title=\"二、关闭系统不需要的服务\"></a>二、关闭系统不需要的服务</h1><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">service acpid stop  chkconfig acpid off   #停止服务，取消开机启动  #电源进阶设定，常用在 Laptop 上<span class=\"built_in\"></span></div><div class=\"line\">service autofs stop  chkconfig autofs off  #停用自动挂载档桉系统与週边装置<span class=\"built_in\"></span></div><div class=\"line\">service bluetooth stop  chkconfig  bluetooth  off   #停用Bluetooth蓝芽<span class=\"built_in\"></span></div><div class=\"line\">service cpuspeed stop  chkconfig  cpuspeed  off   #停用控制CPU速度主要用来省电<span class=\"built_in\"></span></div><div class=\"line\">service cups stop   chkconfig cups off    #停用 Common UNIX Printing<span class=\"built_in\"> System </span>使系统支援印表机<span class=\"built_in\"></span></div><div class=\"line\">service ip6tables stop  chkconfig ip6tables off   #禁止IPv6</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">如果要恢复某一个服务，可以执行下面操作<span class=\"built_in\"></span></div><div class=\"line\">service acpid start  </div><div class=\"line\">chkconfig acpid on</div></pre></td></tr></table></figure>\n<h1 id=\"三、禁止非root用户执行-etc-rc-d-init-d-下的系统命令\"><a href=\"#三、禁止非root用户执行-etc-rc-d-init-d-下的系统命令\" class=\"headerlink\" title=\"三、禁止非root用户执行/etc/rc.d/init.d/下的系统命令\"></a>三、禁止非root用户执行/etc/rc.d/init.d/下的系统命令</h1><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">chmod -R <span class=\"number\">700</span> <span class=\"regexp\">/etc/</span>rc.d<span class=\"regexp\">/init.d/</span>*</div><div class=\"line\">chmod -R <span class=\"number\">777</span> <span class=\"regexp\">/etc/</span>rc.d<span class=\"regexp\">/init.d/</span>*    <span class=\"comment\">#恢复默认设置</span></div></pre></td></tr></table></figure>\n<h1 id=\"四、给下面的文件加上不可更改属性，从而防止非授权用户获得权限\"><a href=\"#四、给下面的文件加上不可更改属性，从而防止非授权用户获得权限\" class=\"headerlink\" title=\"四、给下面的文件加上不可更改属性，从而防止非授权用户获得权限\"></a>四、给下面的文件加上不可更改属性，从而防止非授权用户获得权限</h1><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">chattr +i /etc/passwd</div><div class=\"line\">chattr +i /etc/shadow</div><div class=\"line\">chattr +i /etc<span class=\"built_in\">/group</span></div><div class=\"line\">chattr +i /etc/gshadow</div><div class=\"line\">chattr +i /etc/services    #给系统服务端口列表文件加锁,防止未经许可的删除或添加服务</div><div class=\"line\">lsattr  /etc/passwd   /etc/shadow  /etc<span class=\"built_in\">/group </span> /etc/gshadow   /etc/services   #显示文件的属性</div><div class=\"line\">  注意：执行以上权限修改之后，就无法添加删除用户了。</div><div class=\"line\">如果再要添加删除用户，需要先取消上面的设置，等用户添加删除完成之后，再执行上面的操作</div><div class=\"line\">chattr -i /etc/passwd     #取消权限锁定设置</div><div class=\"line\">  chattr -i /etc/shadow</div><div class=\"line\">  chattr -i /etc<span class=\"built_in\">/group</span></div><div class=\"line\">  chattr -i /etc/gshadow</div><div class=\"line\">  chattr -i /etc/services   #取消系统服务端口列表文件加锁</div><div class=\"line\">现在可以进行添加删除用户了，操作完之后再锁定目录文件</div></pre></td></tr></table></figure>\n<h1 id=\"五、限制不同文件的权限\"><a href=\"#五、限制不同文件的权限\" class=\"headerlink\" title=\"五、限制不同文件的权限\"></a>五、限制不同文件的权限</h1><figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">chattr +a .bash_history           #避免删除.bash_history或者重定向到<span class=\"regexp\">/dev/</span><span class=\"keyword\">null</span></div><div class=\"line\">chattr +i .bash_history</div><div class=\"line\">chmod <span class=\"number\">700</span> <span class=\"regexp\">/usr/</span>bin                恢复  chmod <span class=\"number\">555</span> <span class=\"regexp\">/usr/</span>bin</div><div class=\"line\">chmod <span class=\"number\">700</span> <span class=\"regexp\">/bin/</span>ping              恢复  chmod <span class=\"number\">4755</span> <span class=\"regexp\">/bin/</span>ping</div><div class=\"line\">chmod <span class=\"number\">700</span> <span class=\"regexp\">/usr/</span>bin<span class=\"regexp\">/vim         恢复  chmod 755 /u</span>sr<span class=\"regexp\">/bin/</span>vim</div><div class=\"line\">chmod <span class=\"number\">700</span> <span class=\"regexp\">/bin/</span>netstat          恢复  chmod <span class=\"number\">755</span> <span class=\"regexp\">/bin/</span>netstat</div><div class=\"line\">chmod <span class=\"number\">700</span> <span class=\"regexp\">/usr/</span>bin<span class=\"regexp\">/tail          恢复  chmod 755 /u</span>sr<span class=\"regexp\">/bin/</span>tail</div><div class=\"line\">chmod <span class=\"number\">700</span> <span class=\"regexp\">/usr/</span>bin<span class=\"regexp\">/less         恢复  chmod 755 /u</span>sr<span class=\"regexp\">/bin/</span>less</div><div class=\"line\">chmod <span class=\"number\">700</span> <span class=\"regexp\">/usr/</span>bin<span class=\"regexp\">/head       恢复  chmod 755 /u</span>sr<span class=\"regexp\">/bin/</span>head</div><div class=\"line\">chmod <span class=\"number\">700</span> <span class=\"regexp\">/bin/</span>cat                恢复  chmod <span class=\"number\">755</span> <span class=\"regexp\">/bin/</span>cat</div><div class=\"line\">chmod <span class=\"number\">700</span> <span class=\"regexp\">/bin/u</span>name          恢复  chmod <span class=\"number\">755</span> <span class=\"regexp\">/bin/u</span>name</div><div class=\"line\">chmod <span class=\"number\">500</span> <span class=\"regexp\">/bin/</span>ps                 恢复  chmod <span class=\"number\">755</span> <span class=\"regexp\">/bin/</span>ps</div></pre></td></tr></table></figure>\n<h1 id=\"六、禁止使用Ctrl-Alt-Del快捷键重启服务器\"><a href=\"#六、禁止使用Ctrl-Alt-Del快捷键重启服务器\" class=\"headerlink\" title=\"六、禁止使用Ctrl+Alt+Del快捷键重启服务器\"></a>六、禁止使用Ctrl+Alt+Del快捷键重启服务器</h1><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">cp <span class=\"regexp\">/etc/i</span>nittab  <span class=\"regexp\">/etc/i</span>nittabbak</div><div class=\"line\">vi <span class=\"regexp\">/etc/i</span>nittab   </div><div class=\"line\"><span class=\"comment\">#ca::ctrlaltdel:/sbin/shutdown -t3 -r now  #注释掉此行</span></div></pre></td></tr></table></figure>\n<h1 id=\"七、使用yum-update更新系统时不升级内核，只更新软件包\"><a href=\"#七、使用yum-update更新系统时不升级内核，只更新软件包\" class=\"headerlink\" title=\"七、使用yum update更新系统时不升级内核，只更新软件包\"></a>七、使用yum update更新系统时不升级内核，只更新软件包</h1><figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">由于系统与硬件的兼容性问题，有可能升级内核后导致服务器不能正常启动，这是非常可怕的，没有特别的需要，建议不要随意升级内核。</div><div class=\"line\">cp <span class=\"regexp\">/etc/yum</span>.conf    <span class=\"regexp\">/etc/yum</span>.confbak</div><div class=\"line\"><span class=\"number\">1</span>、修改yum的配置文件 vi <span class=\"regexp\">/etc/yum</span>.conf  在[main]的最后添加 <span class=\"keyword\">exclude</span>=kernel*</div><div class=\"line\"><span class=\"number\">2</span>、直接在yum的命令后面加上如下的参数：</div><div class=\"line\">yum --<span class=\"keyword\">exclude</span>=kernel* update</div><div class=\"line\">查看系统版本  cat <span class=\"regexp\">/etc/i</span>ssue</div><div class=\"line\">查看内核版本  uname -a</div></pre></td></tr></table></figure>\n<h1 id=\"八、关闭Centos自动更新\"><a href=\"#八、关闭Centos自动更新\" class=\"headerlink\" title=\"八、关闭Centos自动更新\"></a>八、关闭Centos自动更新</h1><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">chkconfig --list yum-updatesd  #显示当前系统状态</div><div class=\"line\">yum-updatesd    0:关闭  1:关闭  2:启用  3:启用  4:启用  5:启用  6:关闭<span class=\"built_in\"></span></div><div class=\"line\">service yum-updatesd stop      #关闭  开启参数为start</div><div class=\"line\">停止 yum-updatesd：                                        [确定]<span class=\"built_in\"></span></div><div class=\"line\">service yum-updatesd status   #查看是否关闭</div><div class=\"line\">yum-updatesd 已停</div><div class=\"line\">chkconfig --level 35 yum-updatesd off  #禁止开启启动（系统模式为3、5）</div><div class=\"line\">chkconfig yum-updatesd off  #禁止开启启动（所有启动模式全部禁止）</div><div class=\"line\">chkconfig --list yum-updatesd  #显示当前系统状态</div><div class=\"line\">yum-updatesd    0:关闭  1:关闭  2:启用  3:关闭  4:启用  5:关闭  6:关闭</div></pre></td></tr></table></figure>\n<h1 id=\"九、关闭多余的虚拟控制台\"><a href=\"#九、关闭多余的虚拟控制台\" class=\"headerlink\" title=\"九、关闭多余的虚拟控制台\"></a>九、关闭多余的虚拟控制台</h1><blockquote>\n<p>我们知道从控制台切换到 X 窗口，一般采用 Alt-F7 ，为什么呢？因为系统默认定义了 6 个虚拟控制台，所以 X 就成了第7个。实际上，很多人一般不会需要这么多虚拟控制台的，修改/etc/inittab ，注释掉那些你不需要的。</p>\n</blockquote>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">cp</span>  /<span class=\"selector-tag\">etc</span>/<span class=\"selector-tag\">inittab</span>  /<span class=\"selector-tag\">etc</span>/<span class=\"selector-tag\">inittabbak</span></div><div class=\"line\"><span class=\"selector-tag\">vi</span> /<span class=\"selector-tag\">etc</span>/<span class=\"selector-tag\">inittab</span></div><div class=\"line\"># <span class=\"selector-tag\">Run</span> <span class=\"selector-tag\">gettys</span> <span class=\"selector-tag\">in</span> <span class=\"selector-tag\">standard</span> <span class=\"selector-tag\">runlevels</span></div><div class=\"line\"><span class=\"selector-tag\">1</span><span class=\"selector-pseudo\">:2345</span><span class=\"selector-pseudo\">:respawn</span>:/<span class=\"selector-tag\">sbin</span>/<span class=\"selector-tag\">mingetty</span> <span class=\"selector-tag\">tty1</span></div><div class=\"line\"><span class=\"selector-id\">#2</span><span class=\"selector-pseudo\">:2345</span><span class=\"selector-pseudo\">:respawn</span>:/<span class=\"selector-tag\">sbin</span>/<span class=\"selector-tag\">mingetty</span> <span class=\"selector-tag\">tty2</span></div><div class=\"line\"><span class=\"selector-id\">#3</span><span class=\"selector-pseudo\">:2345</span><span class=\"selector-pseudo\">:respawn</span>:/<span class=\"selector-tag\">sbin</span>/<span class=\"selector-tag\">mingetty</span> <span class=\"selector-tag\">tty3</span></div><div class=\"line\"><span class=\"selector-id\">#4</span><span class=\"selector-pseudo\">:2345</span><span class=\"selector-pseudo\">:respawn</span>:/<span class=\"selector-tag\">sbin</span>/<span class=\"selector-tag\">mingetty</span> <span class=\"selector-tag\">tty4</span></div><div class=\"line\"><span class=\"selector-id\">#5</span><span class=\"selector-pseudo\">:2345</span><span class=\"selector-pseudo\">:respawn</span>:/<span class=\"selector-tag\">sbin</span>/<span class=\"selector-tag\">mingetty</span> <span class=\"selector-tag\">tty5</span></div><div class=\"line\"><span class=\"selector-id\">#6</span><span class=\"selector-pseudo\">:2345</span><span class=\"selector-pseudo\">:respawn</span>:/<span class=\"selector-tag\">sbin</span>/<span class=\"selector-tag\">mingetty</span> <span class=\"selector-tag\">tty6</span></div></pre></td></tr></table></figure>\n<h1 id=\"十、删除MySQL历史记录\"><a href=\"#十、删除MySQL历史记录\" class=\"headerlink\" title=\"十、删除MySQL历史记录\"></a>十、删除MySQL历史记录</h1><blockquote>\n<p>用户登陆数据库后执行的SQL命令也会被MySQL记录在用户目录的.mysql_history文件里。<br>如果数据库用户用SQL语句修改了数据库密码，也会因.mysql_history文件而泄漏。<br>所以我们在shell登陆及备份的时候不要在-p后直接加密码，而是在提示后再输入数据库密码。<br>另外这两个文件我们也应该不让它记录我们的操作，以防万一。</p>\n</blockquote>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd</div><div class=\"line\">cp <span class=\"selector-class\">.bash_history</span>  <span class=\"selector-class\">.bash_historybak</span>  #备份</div><div class=\"line\">cp <span class=\"selector-class\">.mysql_history</span> <span class=\"selector-class\">.mysql_historybak</span></div><div class=\"line\">rm <span class=\"selector-class\">.bash_history</span> <span class=\"selector-class\">.mysql_history</span></div><div class=\"line\">ln -s /dev/null <span class=\"selector-class\">.bash_history</span></div><div class=\"line\">ln -s /dev/null .mysql_history</div></pre></td></tr></table></figure>\n<h1 id=\"十一、修改history命令记录\"><a href=\"#十一、修改history命令记录\" class=\"headerlink\" title=\"十一、修改history命令记录\"></a>十一、修改history命令记录</h1><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">cp /etc<span class=\"built_in\">/profile </span>  /etc/profilebak</div><div class=\"line\">vi /etc<span class=\"built_in\">/profile</span></div><div class=\"line\">找到 <span class=\"attribute\">HISTSIZE</span>=1000 改为 <span class=\"attribute\">HISTSIZE</span>=50</div></pre></td></tr></table></figure>\n<h1 id=\"十二、隐藏服务器系统信息\"><a href=\"#十二、隐藏服务器系统信息\" class=\"headerlink\" title=\"十二、隐藏服务器系统信息\"></a>十二、隐藏服务器系统信息</h1><blockquote>\n<p>在缺省情况下，当你登陆到linux系统，它会告诉你该linux发行版的名称、版本、内核版本、服务器的名称。<br>为了不让这些默认的信息泄露出来，我们要进行下面的操作，让它只显示一个”login:”提示符。<br>删除/etc/issue和/etc/issue.net这两个文件，或者把这2个文件改名，效果是一样的。</p>\n</blockquote>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">mv  <span class=\"regexp\">/etc/i</span>ssue <span class=\"regexp\">/etc/i</span>ssuebak</div><div class=\"line\">mv  <span class=\"regexp\">/etc/i</span>ssue.net   <span class=\"regexp\">/etc/i</span>ssue.netbak</div></pre></td></tr></table></figure>\n<h1 id=\"十三、优化Linux内核参数\"><a href=\"#十三、优化Linux内核参数\" class=\"headerlink\" title=\"十三、优化Linux内核参数\"></a>十三、优化Linux内核参数</h1><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div></pre></td><td class=\"code\"><pre><div class=\"line\">cp /etc/sysctl<span class=\"selector-class\">.conf</span>  /etc/sysctl<span class=\"selector-class\">.confbak</span></div><div class=\"line\">vi /etc/sysctl<span class=\"selector-class\">.conf</span>    #在文件末尾添加以下内容</div><div class=\"line\"></div><div class=\"line\">net<span class=\"selector-class\">.ipv4</span><span class=\"selector-class\">.ip_forward</span> = <span class=\"number\">1</span> #修改为<span class=\"number\">1</span></div><div class=\"line\">net<span class=\"selector-class\">.core</span><span class=\"selector-class\">.somaxconn</span> = <span class=\"number\">262144</span></div><div class=\"line\">net<span class=\"selector-class\">.core</span><span class=\"selector-class\">.netdev_max_backlog</span> = <span class=\"number\">262144</span></div><div class=\"line\">net<span class=\"selector-class\">.core</span><span class=\"selector-class\">.wmem_default</span> = <span class=\"number\">8388608</span></div><div class=\"line\">net<span class=\"selector-class\">.core</span><span class=\"selector-class\">.rmem_default</span> = <span class=\"number\">8388608</span></div><div class=\"line\">net<span class=\"selector-class\">.core</span><span class=\"selector-class\">.rmem_max</span> = <span class=\"number\">16777216</span></div><div class=\"line\">net<span class=\"selector-class\">.core</span><span class=\"selector-class\">.wmem_max</span> = <span class=\"number\">16777216</span></div><div class=\"line\">net<span class=\"selector-class\">.ipv4</span><span class=\"selector-class\">.netfilter</span><span class=\"selector-class\">.ip_conntrack_max</span> = <span class=\"number\">131072</span></div><div class=\"line\">net<span class=\"selector-class\">.ipv4</span><span class=\"selector-class\">.netfilter</span><span class=\"selector-class\">.ip_conntrack_tcp_timeout_established</span> = <span class=\"number\">180</span></div><div class=\"line\">net<span class=\"selector-class\">.ipv4</span><span class=\"selector-class\">.route</span><span class=\"selector-class\">.gc_timeout</span> = <span class=\"number\">20</span></div><div class=\"line\">net<span class=\"selector-class\">.ipv4</span><span class=\"selector-class\">.ip_conntrack_max</span> = <span class=\"number\">819200</span></div><div class=\"line\">net<span class=\"selector-class\">.ipv4</span><span class=\"selector-class\">.ip_local_port_range</span> = <span class=\"number\">10024</span>  <span class=\"number\">65535</span></div><div class=\"line\">net<span class=\"selector-class\">.ipv4</span><span class=\"selector-class\">.tcp_retries2</span> = <span class=\"number\">5</span></div><div class=\"line\">net<span class=\"selector-class\">.ipv4</span><span class=\"selector-class\">.tcp_fin_timeout</span> = <span class=\"number\">30</span></div><div class=\"line\">net<span class=\"selector-class\">.ipv4</span><span class=\"selector-class\">.tcp_syn_retries</span> = <span class=\"number\">1</span></div><div class=\"line\">net<span class=\"selector-class\">.ipv4</span><span class=\"selector-class\">.tcp_synack_retries</span> = <span class=\"number\">1</span></div><div class=\"line\">net<span class=\"selector-class\">.ipv4</span><span class=\"selector-class\">.tcp_timestamps</span> = <span class=\"number\">0</span></div><div class=\"line\">net<span class=\"selector-class\">.ipv4</span><span class=\"selector-class\">.tcp_tw_recycle</span> = <span class=\"number\">1</span></div><div class=\"line\">net<span class=\"selector-class\">.ipv4</span><span class=\"selector-class\">.tcp_tw_len</span> = <span class=\"number\">1</span></div><div class=\"line\">net<span class=\"selector-class\">.ipv4</span><span class=\"selector-class\">.tcp_tw_reuse</span> = <span class=\"number\">1</span></div><div class=\"line\">net<span class=\"selector-class\">.ipv4</span><span class=\"selector-class\">.tcp_keepalive_time</span> = <span class=\"number\">120</span></div><div class=\"line\">net<span class=\"selector-class\">.ipv4</span><span class=\"selector-class\">.tcp_keepalive_probes</span> = <span class=\"number\">3</span></div><div class=\"line\">net<span class=\"selector-class\">.ipv4</span><span class=\"selector-class\">.tcp_keepalive_intvl</span> = <span class=\"number\">15</span></div><div class=\"line\">net<span class=\"selector-class\">.ipv4</span><span class=\"selector-class\">.tcp_max_tw_buckets</span> = <span class=\"number\">36000</span></div><div class=\"line\">net<span class=\"selector-class\">.ipv4</span><span class=\"selector-class\">.tcp_max_orphans</span> = <span class=\"number\">3276800</span></div><div class=\"line\">net<span class=\"selector-class\">.ipv4</span><span class=\"selector-class\">.tcp_max_syn_backlog</span> = <span class=\"number\">262144</span></div><div class=\"line\">net<span class=\"selector-class\">.ipv4</span><span class=\"selector-class\">.tcp_wmem</span> = <span class=\"number\">8192</span> <span class=\"number\">131072</span> <span class=\"number\">16777216</span></div><div class=\"line\">net<span class=\"selector-class\">.ipv4</span><span class=\"selector-class\">.tcp_rmem</span> = <span class=\"number\">32768</span> <span class=\"number\">131072</span> <span class=\"number\">16777216</span></div><div class=\"line\">net<span class=\"selector-class\">.ipv4</span><span class=\"selector-class\">.tcp_mem</span> = <span class=\"number\">94500000</span> <span class=\"number\">915000000</span> <span class=\"number\">927000000</span></div><div class=\"line\">/sbin/sysctl -<span class=\"selector-tag\">p</span>   #使配置立即生效</div></pre></td></tr></table></figure>\n<h1 id=\"十四、CentOS-系统优化\"><a href=\"#十四、CentOS-系统优化\" class=\"headerlink\" title=\"十四、CentOS 系统优化\"></a>十四、CentOS 系统优化</h1><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">cp  /etc<span class=\"built_in\">/profile </span> /etc/profilebak2</div><div class=\"line\">vi /etc<span class=\"built_in\">/profile </span>     #在文件末尾添加以下内容</div><div class=\"line\">ulimit -c unlimited</div><div class=\"line\">ulimit -s unlimited</div><div class=\"line\">ulimit -SHn 65535</div><div class=\"line\">ulimit -S -c 0</div><div class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">LC_ALL</span>=C</div><div class=\"line\">source  /etc<span class=\"built_in\">/profile </span>   #使配置立即生效</div><div class=\"line\">ulimit -a    #显示当前的各种用户进程限制</div></pre></td></tr></table></figure>\n<h1 id=\"十五、服务器禁止ping\"><a href=\"#十五、服务器禁止ping\" class=\"headerlink\" title=\"十五、服务器禁止ping\"></a>十五、服务器禁止ping</h1><figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">cp  <span class=\"meta-keyword\">/etc/</span>rc.d/rc.local  <span class=\"meta-keyword\">/etc/</span>rc.d/rc.localbak</div><div class=\"line\">vi  <span class=\"meta-keyword\">/etc/</span>rc.d/rc.local        <span class=\"meta\">#在文件末尾增加下面这一行</span></div><div class=\"line\">echo <span class=\"number\">1</span> &gt; <span class=\"meta-keyword\">/proc/</span>sys<span class=\"meta-keyword\">/net/</span>ipv4/icmp_echo_ignore_all</div><div class=\"line\">参数<span class=\"number\">0</span>表示允许   <span class=\"number\">1</span>表示禁止</div></pre></td></tr></table></figure>\n<p>至此，CentOS Linux服务器安全设置基本完成，以上设置经过笔者实战测试（CentOS-5.5-x86_64）完全可用，更多的安全设置以及服务器优化，还请大家自行测试。</p>"},{"title":"MySQL主从复制及架构介绍","abbrlink":"a996e9ae","date":"2016-07-16T16:00:00.000Z","_content":"\n# 一、MySQL主从基础概念\n\n> MySQL通常是服务系统中最容产生性能瓶颈的组件，对于繁忙的web服务来讲，数据库压力通常是最大的，需要承载大量的读写操作，因而，数据库服务器的性能至关重要，通常数据库服务器的硬件也是服务系统中要求最高的，抛开性能不讲，数据本身就是信息服务的命脉！数据管理，马虎不得。\n> 解决数据库服务器的性能瓶颈，除了纵向扩展（使用更好的硬件）之外，通常是对其做横向扩展，即增加多个服务器，构建DB集群，通常使用主从模式，数据的同步就是本文要学习的内容\n\n<!--more-->\n\n## 复制概述\n> Mysql内建的复制功能是构建大型，高性能应用程序的基础。将Mysql的数据分布到多个系统上去，这种分布的机制，是通过将Mysql的某一台主机的数据复制到其它主机（slaves）上，并重新执行一遍来实现的。复制过程中一个服务器充当主服务器，而一个或多个其它服务器充当从服务器。主服务器将更新写入二进制日志文件，并维护文件的一个索引以跟踪日志循环。这些日志可以记录发送到从服务器的更新。当一个从服务器连接主服务器时，它通知主服务器从服务器在日志中读取的最后一次成功更新的位置。从服务器接收从那时起发生的任何更新，然后封锁并等待主服务器通知新的更新。\n请注意当你进行复制时，所有对复制中的表的更新必须在主服务器上进行。否则，你必须要小心，以避免用户对主服务器上的表进行的更新与对从服务器上的表所进行的更新之间的冲突。\n\n\n** 注：主从复制各节点时间要同步！ **\n\n## 1.1 mysql支持的复制类型：\n1. 基于语句的复制：  在主服务器上执行的SQL语句，在从服务器上执行同样的语句。MySQL默认采用基于语句的复制，效率比较高。  \n > 一旦发现没法精确复制时，   会自动选着基于行的复制。    \n\n2. 基于行的复制：把改变的内容复制过去，而不是把命令在从服务器上执行一遍. 从mysql5.0开始支持\n3. 混合类型的复制: 默认采用基于语句的复制，一旦发现基于语句的无法精确的复制时，就会采用基于行的复制。\n \n## 1.2 复制解决的问题\n MySQL复制技术有以下一些特点：\n (1)数据分布 (Data distribution ):每个节点有相同的的数据集\n (2)负载平衡(load balancing):可由前端读写分离器（调度器）将读请求负载均衡至从节点\n (3)备份(Backups):利用从节点实现数据备份\n (4)高可用性和容错行(High availability and failover):任意单个节点宕机，都可以有其他节点提供服务\n\n## 1.3 复制如何工作 \n> 整体上来说，复制有3个步骤：\n\n```\n(1)master将改变记录到二进制日志(binary log)中（这些记录叫做二进制日志事件，binary log events）；\n(2)slave将master的binary log events拷贝到它的中继日志(relay log)；\n(3)slave重做中继日志中的事件，将改变反映它自己的数据(数据重放)。\n```\n# 复制过程\n主从复制需要启动专门的的线程来执行：\nMaster：主节点\nDump Thread：为每个Slave的I/O Thread启动一个dump线程，用于向其发送binary log \nevent（二进制日志事件）\n\nSlave：从节点\nI/O Thread：到Master请求二进制日志事件，并保存于中继日志中\nSQL Thread：从中继日志读取事件，在本地replay（重放），得到与Master一样的数据\n\n> 主从复制的特点：异步复制，导致延迟，从节点数据落后于主节点\n\n# 主从复制面临的问题\n\n- 主从数据不同步\n> 对于新的“写操作“，若将对新写入数据的“读请求”调度至从服务器，很可能会无法读取到数据；所以，调度器可能需要具备的功能：不将对新写入内容的读请求调度至从服务器，而是直接将读请求调度至主服务器\n\n- 缓存命中率问题\n> 调度器后端有多个从服务器，若对同一内容的读请求，先后调度至不同的从服务器，则缓存无法命中，读性能也就无从提升；所以，主从集群之上应部署第三方的缓存服务器，如memcached或redis，将所有查询结果缓存于memcached或redis中，用户的每次读请求，都将先查询缓存，未命中则再到从服务器中查询\n\n- 从服务器宕机\n> 若后端有多个从节点，读写分离器（调度器）则需要有健康状态检测功能，及时移除宕掉的服务器，又能够让恢复健康的节点重新上线\n\n- 主服务器宕机\n> 若主节点只有一个（假设），则无法再执行写操作，此时需要挑选出从节点中数据较\n新的节点，提升为主节点，若提升的主节点数据未完全与原来的主服务器同步，需要借助GTID（全局事务ID）来完成数据的同步，即对未提交事务进行提交以将数据同步于磁盘中\n\n# 主从复制模型\n- M/S：主从模型，一主可以多从\n- M/M：双主（也叫主主）模型，两个节点互为主从 \n- 环状结构：多个节点互为主从（用之者甚少）\n- 级联复制，从服务器还可以再有从服务器\n\n## 一主多从模型:Master - Slave - Slave\n** 使用场景： **\n> 在实际应用场景中，MySQL复制90%以上都是一个Master复制到一个或者多个Slave的架构模式，主要用于读压力比较大的应用的数据库端廉价扩展解决方案。因为只要Master和Slave的压力不是太大（尤其是Slave端压力）的话，异步复制的延时一般都很少很少。尤其是自从Slave端的复制方式改成两个线程处理之后，更是减小了Slave端的延时问题。而带来的效益是，对于数据实时性要求不是特别Critical的应用，只需要通过廉价的pcserver来扩展Slave的数量，将读压力分散到多台Slave的机器上面，即可通过分散单台数据库服务器的读压力来解决数据库端的读性能瓶颈，毕竟在大多数数据库应用系统中的读压力还是要比写压力大很多。这在很大程度上解决了目前很多中小型网站的数据库压力瓶颈问题，甚至有些大型网站也在使用类似方案解决数据库瓶颈。\n\n## 双主模型：Master - Master\n\n> 两个节点互为主从，每个节点的写操作都需要记录与二进制日志中，并发送给对方，以达到数据同步的目的，其中需要server id发挥作用\nserver id：\nsever_id是记录于二进制日志中的server标识，标明日志事件中的写操作是在哪个server执行的，日志在从节点中重放会保留server id，所以，在双主模型中，若server接收到的日志包含server id为自己时，将不会对日志的事件进行重放\n\n** 场景：**\n> 假设1和2两个节点互为主从，其server_id就是对应的数字，server1写完后，将二进制日志发送给server2一份，server2在本地完成重放之后，其也要将二进制日志发送给server1，server1接收到二进制日志后发现日志包含的server_id是自己，则不会在本地重放，直接忽略\n\n** 提醒：双主模型可能会存在两个节点的数据不一致的问题，其场景是两个节点分别接收了“互斥”的写请求，造成了两个节点的数据不一致 **\n> 虽然可以使用配置auto_increment_increment=2和auto_increment_offset=1可以解决自动插入的问题，允许同时插入数据的话，数据还是会不一致的。\n\n例如：下面的两个命令同时执行：\n```\n第一个主服务器：\nmysql>update tbl set col=col+1;\n第二个主服务器：\nmysql>update tbl set col=col*2;\n```\n结果是什么？一个服务器的值为4，而另外一个为3.并且根本没有replication的错误。\n所以，个人建议主动-被动的双主模式，只让一台服务器写就行了，让它对外服务，\n另外一台作为备用。只接受数据。\n\n** 双主模型的前端调度无需做读写分离，随意调度，双主模型相当于高可用实现，一般用作高容灾方案 **\n\n## 一从多主复制模型 Slaves - Master – Master\n一从多主的复制模型，其限制条件是，从节点仅能从多个主节点中复制不同的数据库内容，即多个主节点中必须不能有相同的数据库（仅在mysql5.6及mariadb10之后的版本可以实现）\n\n### 适合业务场景：\n公司几个主要的业务已经独立，放在不同的数据库服务器上面，但是有一个业务又需要关联多个业务库进行联合查询统计。这时候就需要将不同的业务库数据同步到一台从库进行统计。根据Mysql主从同步原理使用多从一从的方案解决。主库使用innodb引擎，从库开启多实例使用myisam引擎并将多个实例的数据同步到同一个目录\n[详细实现步骤](http://www.tuicool.com/articles/nYBJju7)\n\n## 级联复制模型 Master –Slaves - Slaves\n\n###使用场景\n> 在有些应用场景中，可能读写压力差别比较大，读压力特别的大，一个Master可能需要上10台甚至更多的Slave才能够支撑读的压力。这时候，Master就会比较吃力了，因为仅仅连上来的SlaveIO线程就比较多了，这样写的压力稍微大一点的时候，Master端因为复制就会消耗较多的资源，很容易造成复制的延时。\n\n在主从模型下，从节点还可以再有从节点，即从节点中的某个节点（假设为“Slave_A”）是其他从节点的主节点，为避免过大的压力，Slave_A一般不处理客户端的读请求，仅负责从主节点中复制二进制日志在本地完成重放，但其使用的表类型是black_hold，所以本地并没有保存数据，仅是将重放的写操作记录于二进制日志中，进而，其他从节点可以到Slave_A复制日志文件来同步数据\n[参考](http://www.cnblogs.com/ggjucheng/archive/2012/11/13/2768879.html)\n\n## 半同步复制模型：\n> 主服务器需要等待一个从节点完成数据复制，才能对客户端返回OK，此模型下，主节点和完全同步的从节点一般需要在同一机房内，需要有足够稳定，足够大的带宽支持，其他节点可以跨网络分布\n\n## 复制过滤器：\n> 仅复制部分数据库内容，其实现方案有两种：\n(1)主节点只保存特定数据库的事件到二进制日志文件中，从节点复制重放\n(2)从节点复制所有数据库相关的事件，但在中继日志中过滤事件，选择特定的事件进行重放\n\n# 复制结构中应该注意的问题\n```\n1、限制从服务器为只读\n在从服务器设置read_only=ON,对拥有SUPER权限的用户无效\n\n阻止所有用户：\nmysql> FLUSH TABLES WITH READ LOCK;\n执行后不释放锁，断开与数据库的连接\n\n限制从服务器只读的作用是避免有数据写入导致主从数据不同步\n\n2、保证主从复制的事务安全\n在master节点启用的参数：\nsync_binlog=ON\n当事务提交时，将binlog内存缓冲区中记录的事件刷新到磁盘中\n\nInnoDB引擎需启用的参数：\ninnodb_flush_logs_at_trx_commit=ON \n刷写日志，提交事务时，立即将内存中的事务相关的数据保存到事务日志文件中\ninnodb_suport_xa=ON\n分布式事务，分布式提交事务\n\n在slave节点启用的参数：\nskip_slave_start=ON (需要在配置文件中定义)\n\n取消复制进程随数据库启动而启动，此项很可能会导致主从数据不一致\n\n3、其他需要注意的参数：按需启用\n主节点：\nsync_master_info \n是否立即将主服务器信息同步给从服务器\nslave节点：\nsync_relay_log\n是否立即将中继日志从内存刷写到磁盘中\nsync_relay_log_info\n是否立即将此文件中保存的信息立即从内存刷写到磁盘中\n```\n** 注意：以上一个同步选项开启必然会增大IO压力，具体情况，具体应用 **\n\n","source":"_posts/2016-07-17-MySQL主从复制.md","raw":"---\ntitle: MySQL主从复制及架构介绍\ncategories: 技术与干货\ntag: MySQL\nabbrlink: a996e9ae\ndate: 2016-07-17 00:00:00\n---\n\n# 一、MySQL主从基础概念\n\n> MySQL通常是服务系统中最容产生性能瓶颈的组件，对于繁忙的web服务来讲，数据库压力通常是最大的，需要承载大量的读写操作，因而，数据库服务器的性能至关重要，通常数据库服务器的硬件也是服务系统中要求最高的，抛开性能不讲，数据本身就是信息服务的命脉！数据管理，马虎不得。\n> 解决数据库服务器的性能瓶颈，除了纵向扩展（使用更好的硬件）之外，通常是对其做横向扩展，即增加多个服务器，构建DB集群，通常使用主从模式，数据的同步就是本文要学习的内容\n\n<!--more-->\n\n## 复制概述\n> Mysql内建的复制功能是构建大型，高性能应用程序的基础。将Mysql的数据分布到多个系统上去，这种分布的机制，是通过将Mysql的某一台主机的数据复制到其它主机（slaves）上，并重新执行一遍来实现的。复制过程中一个服务器充当主服务器，而一个或多个其它服务器充当从服务器。主服务器将更新写入二进制日志文件，并维护文件的一个索引以跟踪日志循环。这些日志可以记录发送到从服务器的更新。当一个从服务器连接主服务器时，它通知主服务器从服务器在日志中读取的最后一次成功更新的位置。从服务器接收从那时起发生的任何更新，然后封锁并等待主服务器通知新的更新。\n请注意当你进行复制时，所有对复制中的表的更新必须在主服务器上进行。否则，你必须要小心，以避免用户对主服务器上的表进行的更新与对从服务器上的表所进行的更新之间的冲突。\n\n\n** 注：主从复制各节点时间要同步！ **\n\n## 1.1 mysql支持的复制类型：\n1. 基于语句的复制：  在主服务器上执行的SQL语句，在从服务器上执行同样的语句。MySQL默认采用基于语句的复制，效率比较高。  \n > 一旦发现没法精确复制时，   会自动选着基于行的复制。    \n\n2. 基于行的复制：把改变的内容复制过去，而不是把命令在从服务器上执行一遍. 从mysql5.0开始支持\n3. 混合类型的复制: 默认采用基于语句的复制，一旦发现基于语句的无法精确的复制时，就会采用基于行的复制。\n \n## 1.2 复制解决的问题\n MySQL复制技术有以下一些特点：\n (1)数据分布 (Data distribution ):每个节点有相同的的数据集\n (2)负载平衡(load balancing):可由前端读写分离器（调度器）将读请求负载均衡至从节点\n (3)备份(Backups):利用从节点实现数据备份\n (4)高可用性和容错行(High availability and failover):任意单个节点宕机，都可以有其他节点提供服务\n\n## 1.3 复制如何工作 \n> 整体上来说，复制有3个步骤：\n\n```\n(1)master将改变记录到二进制日志(binary log)中（这些记录叫做二进制日志事件，binary log events）；\n(2)slave将master的binary log events拷贝到它的中继日志(relay log)；\n(3)slave重做中继日志中的事件，将改变反映它自己的数据(数据重放)。\n```\n# 复制过程\n主从复制需要启动专门的的线程来执行：\nMaster：主节点\nDump Thread：为每个Slave的I/O Thread启动一个dump线程，用于向其发送binary log \nevent（二进制日志事件）\n\nSlave：从节点\nI/O Thread：到Master请求二进制日志事件，并保存于中继日志中\nSQL Thread：从中继日志读取事件，在本地replay（重放），得到与Master一样的数据\n\n> 主从复制的特点：异步复制，导致延迟，从节点数据落后于主节点\n\n# 主从复制面临的问题\n\n- 主从数据不同步\n> 对于新的“写操作“，若将对新写入数据的“读请求”调度至从服务器，很可能会无法读取到数据；所以，调度器可能需要具备的功能：不将对新写入内容的读请求调度至从服务器，而是直接将读请求调度至主服务器\n\n- 缓存命中率问题\n> 调度器后端有多个从服务器，若对同一内容的读请求，先后调度至不同的从服务器，则缓存无法命中，读性能也就无从提升；所以，主从集群之上应部署第三方的缓存服务器，如memcached或redis，将所有查询结果缓存于memcached或redis中，用户的每次读请求，都将先查询缓存，未命中则再到从服务器中查询\n\n- 从服务器宕机\n> 若后端有多个从节点，读写分离器（调度器）则需要有健康状态检测功能，及时移除宕掉的服务器，又能够让恢复健康的节点重新上线\n\n- 主服务器宕机\n> 若主节点只有一个（假设），则无法再执行写操作，此时需要挑选出从节点中数据较\n新的节点，提升为主节点，若提升的主节点数据未完全与原来的主服务器同步，需要借助GTID（全局事务ID）来完成数据的同步，即对未提交事务进行提交以将数据同步于磁盘中\n\n# 主从复制模型\n- M/S：主从模型，一主可以多从\n- M/M：双主（也叫主主）模型，两个节点互为主从 \n- 环状结构：多个节点互为主从（用之者甚少）\n- 级联复制，从服务器还可以再有从服务器\n\n## 一主多从模型:Master - Slave - Slave\n** 使用场景： **\n> 在实际应用场景中，MySQL复制90%以上都是一个Master复制到一个或者多个Slave的架构模式，主要用于读压力比较大的应用的数据库端廉价扩展解决方案。因为只要Master和Slave的压力不是太大（尤其是Slave端压力）的话，异步复制的延时一般都很少很少。尤其是自从Slave端的复制方式改成两个线程处理之后，更是减小了Slave端的延时问题。而带来的效益是，对于数据实时性要求不是特别Critical的应用，只需要通过廉价的pcserver来扩展Slave的数量，将读压力分散到多台Slave的机器上面，即可通过分散单台数据库服务器的读压力来解决数据库端的读性能瓶颈，毕竟在大多数数据库应用系统中的读压力还是要比写压力大很多。这在很大程度上解决了目前很多中小型网站的数据库压力瓶颈问题，甚至有些大型网站也在使用类似方案解决数据库瓶颈。\n\n## 双主模型：Master - Master\n\n> 两个节点互为主从，每个节点的写操作都需要记录与二进制日志中，并发送给对方，以达到数据同步的目的，其中需要server id发挥作用\nserver id：\nsever_id是记录于二进制日志中的server标识，标明日志事件中的写操作是在哪个server执行的，日志在从节点中重放会保留server id，所以，在双主模型中，若server接收到的日志包含server id为自己时，将不会对日志的事件进行重放\n\n** 场景：**\n> 假设1和2两个节点互为主从，其server_id就是对应的数字，server1写完后，将二进制日志发送给server2一份，server2在本地完成重放之后，其也要将二进制日志发送给server1，server1接收到二进制日志后发现日志包含的server_id是自己，则不会在本地重放，直接忽略\n\n** 提醒：双主模型可能会存在两个节点的数据不一致的问题，其场景是两个节点分别接收了“互斥”的写请求，造成了两个节点的数据不一致 **\n> 虽然可以使用配置auto_increment_increment=2和auto_increment_offset=1可以解决自动插入的问题，允许同时插入数据的话，数据还是会不一致的。\n\n例如：下面的两个命令同时执行：\n```\n第一个主服务器：\nmysql>update tbl set col=col+1;\n第二个主服务器：\nmysql>update tbl set col=col*2;\n```\n结果是什么？一个服务器的值为4，而另外一个为3.并且根本没有replication的错误。\n所以，个人建议主动-被动的双主模式，只让一台服务器写就行了，让它对外服务，\n另外一台作为备用。只接受数据。\n\n** 双主模型的前端调度无需做读写分离，随意调度，双主模型相当于高可用实现，一般用作高容灾方案 **\n\n## 一从多主复制模型 Slaves - Master – Master\n一从多主的复制模型，其限制条件是，从节点仅能从多个主节点中复制不同的数据库内容，即多个主节点中必须不能有相同的数据库（仅在mysql5.6及mariadb10之后的版本可以实现）\n\n### 适合业务场景：\n公司几个主要的业务已经独立，放在不同的数据库服务器上面，但是有一个业务又需要关联多个业务库进行联合查询统计。这时候就需要将不同的业务库数据同步到一台从库进行统计。根据Mysql主从同步原理使用多从一从的方案解决。主库使用innodb引擎，从库开启多实例使用myisam引擎并将多个实例的数据同步到同一个目录\n[详细实现步骤](http://www.tuicool.com/articles/nYBJju7)\n\n## 级联复制模型 Master –Slaves - Slaves\n\n###使用场景\n> 在有些应用场景中，可能读写压力差别比较大，读压力特别的大，一个Master可能需要上10台甚至更多的Slave才能够支撑读的压力。这时候，Master就会比较吃力了，因为仅仅连上来的SlaveIO线程就比较多了，这样写的压力稍微大一点的时候，Master端因为复制就会消耗较多的资源，很容易造成复制的延时。\n\n在主从模型下，从节点还可以再有从节点，即从节点中的某个节点（假设为“Slave_A”）是其他从节点的主节点，为避免过大的压力，Slave_A一般不处理客户端的读请求，仅负责从主节点中复制二进制日志在本地完成重放，但其使用的表类型是black_hold，所以本地并没有保存数据，仅是将重放的写操作记录于二进制日志中，进而，其他从节点可以到Slave_A复制日志文件来同步数据\n[参考](http://www.cnblogs.com/ggjucheng/archive/2012/11/13/2768879.html)\n\n## 半同步复制模型：\n> 主服务器需要等待一个从节点完成数据复制，才能对客户端返回OK，此模型下，主节点和完全同步的从节点一般需要在同一机房内，需要有足够稳定，足够大的带宽支持，其他节点可以跨网络分布\n\n## 复制过滤器：\n> 仅复制部分数据库内容，其实现方案有两种：\n(1)主节点只保存特定数据库的事件到二进制日志文件中，从节点复制重放\n(2)从节点复制所有数据库相关的事件，但在中继日志中过滤事件，选择特定的事件进行重放\n\n# 复制结构中应该注意的问题\n```\n1、限制从服务器为只读\n在从服务器设置read_only=ON,对拥有SUPER权限的用户无效\n\n阻止所有用户：\nmysql> FLUSH TABLES WITH READ LOCK;\n执行后不释放锁，断开与数据库的连接\n\n限制从服务器只读的作用是避免有数据写入导致主从数据不同步\n\n2、保证主从复制的事务安全\n在master节点启用的参数：\nsync_binlog=ON\n当事务提交时，将binlog内存缓冲区中记录的事件刷新到磁盘中\n\nInnoDB引擎需启用的参数：\ninnodb_flush_logs_at_trx_commit=ON \n刷写日志，提交事务时，立即将内存中的事务相关的数据保存到事务日志文件中\ninnodb_suport_xa=ON\n分布式事务，分布式提交事务\n\n在slave节点启用的参数：\nskip_slave_start=ON (需要在配置文件中定义)\n\n取消复制进程随数据库启动而启动，此项很可能会导致主从数据不一致\n\n3、其他需要注意的参数：按需启用\n主节点：\nsync_master_info \n是否立即将主服务器信息同步给从服务器\nslave节点：\nsync_relay_log\n是否立即将中继日志从内存刷写到磁盘中\nsync_relay_log_info\n是否立即将此文件中保存的信息立即从内存刷写到磁盘中\n```\n** 注意：以上一个同步选项开启必然会增大IO压力，具体情况，具体应用 **\n\n","slug":"2016-07-17-MySQL主从复制","published":1,"updated":"2017-02-14T13:42:45.407Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5mkehrq001iao94kqo6t0ad","content":"<h1 id=\"一、MySQL主从基础概念\"><a href=\"#一、MySQL主从基础概念\" class=\"headerlink\" title=\"一、MySQL主从基础概念\"></a>一、MySQL主从基础概念</h1><blockquote>\n<p>MySQL通常是服务系统中最容产生性能瓶颈的组件，对于繁忙的web服务来讲，数据库压力通常是最大的，需要承载大量的读写操作，因而，数据库服务器的性能至关重要，通常数据库服务器的硬件也是服务系统中要求最高的，抛开性能不讲，数据本身就是信息服务的命脉！数据管理，马虎不得。<br>解决数据库服务器的性能瓶颈，除了纵向扩展（使用更好的硬件）之外，通常是对其做横向扩展，即增加多个服务器，构建DB集群，通常使用主从模式，数据的同步就是本文要学习的内容</p>\n</blockquote>\n<a id=\"more\"></a>\n<h2 id=\"复制概述\"><a href=\"#复制概述\" class=\"headerlink\" title=\"复制概述\"></a>复制概述</h2><blockquote>\n<p>Mysql内建的复制功能是构建大型，高性能应用程序的基础。将Mysql的数据分布到多个系统上去，这种分布的机制，是通过将Mysql的某一台主机的数据复制到其它主机（slaves）上，并重新执行一遍来实现的。复制过程中一个服务器充当主服务器，而一个或多个其它服务器充当从服务器。主服务器将更新写入二进制日志文件，并维护文件的一个索引以跟踪日志循环。这些日志可以记录发送到从服务器的更新。当一个从服务器连接主服务器时，它通知主服务器从服务器在日志中读取的最后一次成功更新的位置。从服务器接收从那时起发生的任何更新，然后封锁并等待主服务器通知新的更新。<br>请注意当你进行复制时，所有对复制中的表的更新必须在主服务器上进行。否则，你必须要小心，以避免用户对主服务器上的表进行的更新与对从服务器上的表所进行的更新之间的冲突。</p>\n</blockquote>\n<p><strong> 注：主从复制各节点时间要同步！ </strong></p>\n<h2 id=\"1-1-mysql支持的复制类型：\"><a href=\"#1-1-mysql支持的复制类型：\" class=\"headerlink\" title=\"1.1 mysql支持的复制类型：\"></a>1.1 mysql支持的复制类型：</h2><ol>\n<li><p>基于语句的复制：  在主服务器上执行的SQL语句，在从服务器上执行同样的语句。MySQL默认采用基于语句的复制，效率比较高。  </p>\n<blockquote>\n<p>一旦发现没法精确复制时，   会自动选着基于行的复制。    </p>\n</blockquote>\n</li>\n<li><p>基于行的复制：把改变的内容复制过去，而不是把命令在从服务器上执行一遍. 从mysql5.0开始支持</p>\n</li>\n<li>混合类型的复制: 默认采用基于语句的复制，一旦发现基于语句的无法精确的复制时，就会采用基于行的复制。</li>\n</ol>\n<h2 id=\"1-2-复制解决的问题\"><a href=\"#1-2-复制解决的问题\" class=\"headerlink\" title=\"1.2 复制解决的问题\"></a>1.2 复制解决的问题</h2><p> MySQL复制技术有以下一些特点：<br> (1)数据分布 (Data distribution ):每个节点有相同的的数据集<br> (2)负载平衡(load balancing):可由前端读写分离器（调度器）将读请求负载均衡至从节点<br> (3)备份(Backups):利用从节点实现数据备份<br> (4)高可用性和容错行(High availability and failover):任意单个节点宕机，都可以有其他节点提供服务</p>\n<h2 id=\"1-3-复制如何工作\"><a href=\"#1-3-复制如何工作\" class=\"headerlink\" title=\"1.3 复制如何工作\"></a>1.3 复制如何工作</h2><blockquote>\n<p>整体上来说，复制有3个步骤：</p>\n</blockquote>\n<figure class=\"highlight autoit\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">(<span class=\"number\">1</span>)master将改变记录到二进制日志(<span class=\"built_in\">binary</span> <span class=\"built_in\">log</span>)中（这些记录叫做二进制日志事件，<span class=\"built_in\">binary</span> <span class=\"built_in\">log</span> events）；</div><div class=\"line\">(<span class=\"number\">2</span>)slave将master的<span class=\"built_in\">binary</span> <span class=\"built_in\">log</span> events拷贝到它的中继日志(relay <span class=\"built_in\">log</span>)；</div><div class=\"line\">(<span class=\"number\">3</span>)slave重做中继日志中的事件，将改变反映它自己的数据(数据重放)。</div></pre></td></tr></table></figure>\n<h1 id=\"复制过程\"><a href=\"#复制过程\" class=\"headerlink\" title=\"复制过程\"></a>复制过程</h1><p>主从复制需要启动专门的的线程来执行：<br>Master：主节点<br>Dump Thread：为每个Slave的I/O Thread启动一个dump线程，用于向其发送binary log<br>event（二进制日志事件）</p>\n<p>Slave：从节点<br>I/O Thread：到Master请求二进制日志事件，并保存于中继日志中<br>SQL Thread：从中继日志读取事件，在本地replay（重放），得到与Master一样的数据</p>\n<blockquote>\n<p>主从复制的特点：异步复制，导致延迟，从节点数据落后于主节点</p>\n</blockquote>\n<h1 id=\"主从复制面临的问题\"><a href=\"#主从复制面临的问题\" class=\"headerlink\" title=\"主从复制面临的问题\"></a>主从复制面临的问题</h1><ul>\n<li><p>主从数据不同步</p>\n<blockquote>\n<p>对于新的“写操作“，若将对新写入数据的“读请求”调度至从服务器，很可能会无法读取到数据；所以，调度器可能需要具备的功能：不将对新写入内容的读请求调度至从服务器，而是直接将读请求调度至主服务器</p>\n</blockquote>\n</li>\n<li><p>缓存命中率问题</p>\n<blockquote>\n<p>调度器后端有多个从服务器，若对同一内容的读请求，先后调度至不同的从服务器，则缓存无法命中，读性能也就无从提升；所以，主从集群之上应部署第三方的缓存服务器，如memcached或redis，将所有查询结果缓存于memcached或redis中，用户的每次读请求，都将先查询缓存，未命中则再到从服务器中查询</p>\n</blockquote>\n</li>\n<li><p>从服务器宕机</p>\n<blockquote>\n<p>若后端有多个从节点，读写分离器（调度器）则需要有健康状态检测功能，及时移除宕掉的服务器，又能够让恢复健康的节点重新上线</p>\n</blockquote>\n</li>\n<li><p>主服务器宕机</p>\n<blockquote>\n<p>若主节点只有一个（假设），则无法再执行写操作，此时需要挑选出从节点中数据较<br>新的节点，提升为主节点，若提升的主节点数据未完全与原来的主服务器同步，需要借助GTID（全局事务ID）来完成数据的同步，即对未提交事务进行提交以将数据同步于磁盘中</p>\n</blockquote>\n</li>\n</ul>\n<h1 id=\"主从复制模型\"><a href=\"#主从复制模型\" class=\"headerlink\" title=\"主从复制模型\"></a>主从复制模型</h1><ul>\n<li>M/S：主从模型，一主可以多从</li>\n<li>M/M：双主（也叫主主）模型，两个节点互为主从 </li>\n<li>环状结构：多个节点互为主从（用之者甚少）</li>\n<li>级联复制，从服务器还可以再有从服务器</li>\n</ul>\n<h2 id=\"一主多从模型-Master-Slave-Slave\"><a href=\"#一主多从模型-Master-Slave-Slave\" class=\"headerlink\" title=\"一主多从模型:Master - Slave - Slave\"></a>一主多从模型:Master - Slave - Slave</h2><p><strong> 使用场景： </strong></p>\n<blockquote>\n<p>在实际应用场景中，MySQL复制90%以上都是一个Master复制到一个或者多个Slave的架构模式，主要用于读压力比较大的应用的数据库端廉价扩展解决方案。因为只要Master和Slave的压力不是太大（尤其是Slave端压力）的话，异步复制的延时一般都很少很少。尤其是自从Slave端的复制方式改成两个线程处理之后，更是减小了Slave端的延时问题。而带来的效益是，对于数据实时性要求不是特别Critical的应用，只需要通过廉价的pcserver来扩展Slave的数量，将读压力分散到多台Slave的机器上面，即可通过分散单台数据库服务器的读压力来解决数据库端的读性能瓶颈，毕竟在大多数数据库应用系统中的读压力还是要比写压力大很多。这在很大程度上解决了目前很多中小型网站的数据库压力瓶颈问题，甚至有些大型网站也在使用类似方案解决数据库瓶颈。</p>\n</blockquote>\n<h2 id=\"双主模型：Master-Master\"><a href=\"#双主模型：Master-Master\" class=\"headerlink\" title=\"双主模型：Master - Master\"></a>双主模型：Master - Master</h2><blockquote>\n<p>两个节点互为主从，每个节点的写操作都需要记录与二进制日志中，并发送给对方，以达到数据同步的目的，其中需要server id发挥作用<br>server id：<br>sever_id是记录于二进制日志中的server标识，标明日志事件中的写操作是在哪个server执行的，日志在从节点中重放会保留server id，所以，在双主模型中，若server接收到的日志包含server id为自己时，将不会对日志的事件进行重放</p>\n</blockquote>\n<p><strong> 场景：</strong></p>\n<blockquote>\n<p>假设1和2两个节点互为主从，其server_id就是对应的数字，server1写完后，将二进制日志发送给server2一份，server2在本地完成重放之后，其也要将二进制日志发送给server1，server1接收到二进制日志后发现日志包含的server_id是自己，则不会在本地重放，直接忽略</p>\n</blockquote>\n<p><strong> 提醒：双主模型可能会存在两个节点的数据不一致的问题，其场景是两个节点分别接收了“互斥”的写请求，造成了两个节点的数据不一致 </strong></p>\n<blockquote>\n<p>虽然可以使用配置auto_increment_increment=2和auto_increment_offset=1可以解决自动插入的问题，允许同时插入数据的话，数据还是会不一致的。</p>\n</blockquote>\n<p>例如：下面的两个命令同时执行：<br><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">第一个主服务器：</div><div class=\"line\">mysql&gt;update tbl <span class=\"builtin-name\">set</span> <span class=\"attribute\">col</span>=col+1;</div><div class=\"line\">第二个主服务器：</div><div class=\"line\">mysql&gt;update tbl <span class=\"builtin-name\">set</span> <span class=\"attribute\">col</span>=col*2;</div></pre></td></tr></table></figure></p>\n<p>结果是什么？一个服务器的值为4，而另外一个为3.并且根本没有replication的错误。<br>所以，个人建议主动-被动的双主模式，只让一台服务器写就行了，让它对外服务，<br>另外一台作为备用。只接受数据。</p>\n<p><strong> 双主模型的前端调度无需做读写分离，随意调度，双主模型相当于高可用实现，一般用作高容灾方案 </strong></p>\n<h2 id=\"一从多主复制模型-Slaves-Master-–-Master\"><a href=\"#一从多主复制模型-Slaves-Master-–-Master\" class=\"headerlink\" title=\"一从多主复制模型 Slaves - Master – Master\"></a>一从多主复制模型 Slaves - Master – Master</h2><p>一从多主的复制模型，其限制条件是，从节点仅能从多个主节点中复制不同的数据库内容，即多个主节点中必须不能有相同的数据库（仅在mysql5.6及mariadb10之后的版本可以实现）</p>\n<h3 id=\"适合业务场景：\"><a href=\"#适合业务场景：\" class=\"headerlink\" title=\"适合业务场景：\"></a>适合业务场景：</h3><p>公司几个主要的业务已经独立，放在不同的数据库服务器上面，但是有一个业务又需要关联多个业务库进行联合查询统计。这时候就需要将不同的业务库数据同步到一台从库进行统计。根据Mysql主从同步原理使用多从一从的方案解决。主库使用innodb引擎，从库开启多实例使用myisam引擎并将多个实例的数据同步到同一个目录<br><a href=\"http://www.tuicool.com/articles/nYBJju7\" target=\"_blank\" rel=\"external\">详细实现步骤</a></p>\n<h2 id=\"级联复制模型-Master-–Slaves-Slaves\"><a href=\"#级联复制模型-Master-–Slaves-Slaves\" class=\"headerlink\" title=\"级联复制模型 Master –Slaves - Slaves\"></a>级联复制模型 Master –Slaves - Slaves</h2><p>###使用场景</p>\n<blockquote>\n<p>在有些应用场景中，可能读写压力差别比较大，读压力特别的大，一个Master可能需要上10台甚至更多的Slave才能够支撑读的压力。这时候，Master就会比较吃力了，因为仅仅连上来的SlaveIO线程就比较多了，这样写的压力稍微大一点的时候，Master端因为复制就会消耗较多的资源，很容易造成复制的延时。</p>\n</blockquote>\n<p>在主从模型下，从节点还可以再有从节点，即从节点中的某个节点（假设为“Slave_A”）是其他从节点的主节点，为避免过大的压力，Slave_A一般不处理客户端的读请求，仅负责从主节点中复制二进制日志在本地完成重放，但其使用的表类型是black_hold，所以本地并没有保存数据，仅是将重放的写操作记录于二进制日志中，进而，其他从节点可以到Slave_A复制日志文件来同步数据<br><a href=\"http://www.cnblogs.com/ggjucheng/archive/2012/11/13/2768879.html\" target=\"_blank\" rel=\"external\">参考</a></p>\n<h2 id=\"半同步复制模型：\"><a href=\"#半同步复制模型：\" class=\"headerlink\" title=\"半同步复制模型：\"></a>半同步复制模型：</h2><blockquote>\n<p>主服务器需要等待一个从节点完成数据复制，才能对客户端返回OK，此模型下，主节点和完全同步的从节点一般需要在同一机房内，需要有足够稳定，足够大的带宽支持，其他节点可以跨网络分布</p>\n</blockquote>\n<h2 id=\"复制过滤器：\"><a href=\"#复制过滤器：\" class=\"headerlink\" title=\"复制过滤器：\"></a>复制过滤器：</h2><blockquote>\n<p>仅复制部分数据库内容，其实现方案有两种：<br>(1)主节点只保存特定数据库的事件到二进制日志文件中，从节点复制重放<br>(2)从节点复制所有数据库相关的事件，但在中继日志中过滤事件，选择特定的事件进行重放</p>\n</blockquote>\n<h1 id=\"复制结构中应该注意的问题\"><a href=\"#复制结构中应该注意的问题\" class=\"headerlink\" title=\"复制结构中应该注意的问题\"></a>复制结构中应该注意的问题</h1><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div></pre></td><td class=\"code\"><pre><div class=\"line\">1、限制从服务器为只读</div><div class=\"line\">在从服务器设置<span class=\"attribute\">read_only</span>=ON,对拥有SUPER权限的用户无效</div><div class=\"line\"></div><div class=\"line\">阻止所有用户：</div><div class=\"line\">mysql&gt; FLUSH TABLES WITH READ LOCK;</div><div class=\"line\">执行后不释放锁，断开与数据库的连接</div><div class=\"line\"></div><div class=\"line\">限制从服务器只读的作用是避免有数据写入导致主从数据不同步</div><div class=\"line\"></div><div class=\"line\">2、保证主从复制的事务安全</div><div class=\"line\">在master节点启用的参数：</div><div class=\"line\"><span class=\"attribute\">sync_binlog</span>=ON</div><div class=\"line\">当事务提交时，将binlog内存缓冲区中记录的事件刷新到磁盘中</div><div class=\"line\"></div><div class=\"line\">InnoDB引擎需启用的参数：</div><div class=\"line\"><span class=\"attribute\">innodb_flush_logs_at_trx_commit</span>=ON </div><div class=\"line\">刷写日志，提交事务时，立即将内存中的事务相关的数据保存到事务日志文件中</div><div class=\"line\"><span class=\"attribute\">innodb_suport_xa</span>=ON</div><div class=\"line\">分布式事务，分布式提交事务</div><div class=\"line\"></div><div class=\"line\">在slave节点启用的参数：</div><div class=\"line\"><span class=\"attribute\">skip_slave_start</span>=ON (需要在配置文件中定义)</div><div class=\"line\"></div><div class=\"line\">取消复制进程随数据库启动而启动，此项很可能会导致主从数据不一致</div><div class=\"line\"></div><div class=\"line\">3、其他需要注意的参数：按需启用</div><div class=\"line\">主节点：</div><div class=\"line\">sync_master_info </div><div class=\"line\">是否立即将主服务器信息同步给从服务器</div><div class=\"line\">slave节点：</div><div class=\"line\">sync_relay_log</div><div class=\"line\">是否立即将中继日志从内存刷写到磁盘中</div><div class=\"line\">sync_relay_log_info</div><div class=\"line\">是否立即将此文件中保存的信息立即从内存刷写到磁盘中</div></pre></td></tr></table></figure>\n<p><strong> 注意：以上一个同步选项开启必然会增大IO压力，具体情况，具体应用 </strong></p>\n","site":{"data":{}},"excerpt":"<h1 id=\"一、MySQL主从基础概念\"><a href=\"#一、MySQL主从基础概念\" class=\"headerlink\" title=\"一、MySQL主从基础概念\"></a>一、MySQL主从基础概念</h1><blockquote>\n<p>MySQL通常是服务系统中最容产生性能瓶颈的组件，对于繁忙的web服务来讲，数据库压力通常是最大的，需要承载大量的读写操作，因而，数据库服务器的性能至关重要，通常数据库服务器的硬件也是服务系统中要求最高的，抛开性能不讲，数据本身就是信息服务的命脉！数据管理，马虎不得。<br>解决数据库服务器的性能瓶颈，除了纵向扩展（使用更好的硬件）之外，通常是对其做横向扩展，即增加多个服务器，构建DB集群，通常使用主从模式，数据的同步就是本文要学习的内容</p>\n</blockquote>","more":"<h2 id=\"复制概述\"><a href=\"#复制概述\" class=\"headerlink\" title=\"复制概述\"></a>复制概述</h2><blockquote>\n<p>Mysql内建的复制功能是构建大型，高性能应用程序的基础。将Mysql的数据分布到多个系统上去，这种分布的机制，是通过将Mysql的某一台主机的数据复制到其它主机（slaves）上，并重新执行一遍来实现的。复制过程中一个服务器充当主服务器，而一个或多个其它服务器充当从服务器。主服务器将更新写入二进制日志文件，并维护文件的一个索引以跟踪日志循环。这些日志可以记录发送到从服务器的更新。当一个从服务器连接主服务器时，它通知主服务器从服务器在日志中读取的最后一次成功更新的位置。从服务器接收从那时起发生的任何更新，然后封锁并等待主服务器通知新的更新。<br>请注意当你进行复制时，所有对复制中的表的更新必须在主服务器上进行。否则，你必须要小心，以避免用户对主服务器上的表进行的更新与对从服务器上的表所进行的更新之间的冲突。</p>\n</blockquote>\n<p><strong> 注：主从复制各节点时间要同步！ </strong></p>\n<h2 id=\"1-1-mysql支持的复制类型：\"><a href=\"#1-1-mysql支持的复制类型：\" class=\"headerlink\" title=\"1.1 mysql支持的复制类型：\"></a>1.1 mysql支持的复制类型：</h2><ol>\n<li><p>基于语句的复制：  在主服务器上执行的SQL语句，在从服务器上执行同样的语句。MySQL默认采用基于语句的复制，效率比较高。  </p>\n<blockquote>\n<p>一旦发现没法精确复制时，   会自动选着基于行的复制。    </p>\n</blockquote>\n</li>\n<li><p>基于行的复制：把改变的内容复制过去，而不是把命令在从服务器上执行一遍. 从mysql5.0开始支持</p>\n</li>\n<li>混合类型的复制: 默认采用基于语句的复制，一旦发现基于语句的无法精确的复制时，就会采用基于行的复制。</li>\n</ol>\n<h2 id=\"1-2-复制解决的问题\"><a href=\"#1-2-复制解决的问题\" class=\"headerlink\" title=\"1.2 复制解决的问题\"></a>1.2 复制解决的问题</h2><p> MySQL复制技术有以下一些特点：<br> (1)数据分布 (Data distribution ):每个节点有相同的的数据集<br> (2)负载平衡(load balancing):可由前端读写分离器（调度器）将读请求负载均衡至从节点<br> (3)备份(Backups):利用从节点实现数据备份<br> (4)高可用性和容错行(High availability and failover):任意单个节点宕机，都可以有其他节点提供服务</p>\n<h2 id=\"1-3-复制如何工作\"><a href=\"#1-3-复制如何工作\" class=\"headerlink\" title=\"1.3 复制如何工作\"></a>1.3 复制如何工作</h2><blockquote>\n<p>整体上来说，复制有3个步骤：</p>\n</blockquote>\n<figure class=\"highlight autoit\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">(<span class=\"number\">1</span>)master将改变记录到二进制日志(<span class=\"built_in\">binary</span> <span class=\"built_in\">log</span>)中（这些记录叫做二进制日志事件，<span class=\"built_in\">binary</span> <span class=\"built_in\">log</span> events）；</div><div class=\"line\">(<span class=\"number\">2</span>)slave将master的<span class=\"built_in\">binary</span> <span class=\"built_in\">log</span> events拷贝到它的中继日志(relay <span class=\"built_in\">log</span>)；</div><div class=\"line\">(<span class=\"number\">3</span>)slave重做中继日志中的事件，将改变反映它自己的数据(数据重放)。</div></pre></td></tr></table></figure>\n<h1 id=\"复制过程\"><a href=\"#复制过程\" class=\"headerlink\" title=\"复制过程\"></a>复制过程</h1><p>主从复制需要启动专门的的线程来执行：<br>Master：主节点<br>Dump Thread：为每个Slave的I/O Thread启动一个dump线程，用于向其发送binary log<br>event（二进制日志事件）</p>\n<p>Slave：从节点<br>I/O Thread：到Master请求二进制日志事件，并保存于中继日志中<br>SQL Thread：从中继日志读取事件，在本地replay（重放），得到与Master一样的数据</p>\n<blockquote>\n<p>主从复制的特点：异步复制，导致延迟，从节点数据落后于主节点</p>\n</blockquote>\n<h1 id=\"主从复制面临的问题\"><a href=\"#主从复制面临的问题\" class=\"headerlink\" title=\"主从复制面临的问题\"></a>主从复制面临的问题</h1><ul>\n<li><p>主从数据不同步</p>\n<blockquote>\n<p>对于新的“写操作“，若将对新写入数据的“读请求”调度至从服务器，很可能会无法读取到数据；所以，调度器可能需要具备的功能：不将对新写入内容的读请求调度至从服务器，而是直接将读请求调度至主服务器</p>\n</blockquote>\n</li>\n<li><p>缓存命中率问题</p>\n<blockquote>\n<p>调度器后端有多个从服务器，若对同一内容的读请求，先后调度至不同的从服务器，则缓存无法命中，读性能也就无从提升；所以，主从集群之上应部署第三方的缓存服务器，如memcached或redis，将所有查询结果缓存于memcached或redis中，用户的每次读请求，都将先查询缓存，未命中则再到从服务器中查询</p>\n</blockquote>\n</li>\n<li><p>从服务器宕机</p>\n<blockquote>\n<p>若后端有多个从节点，读写分离器（调度器）则需要有健康状态检测功能，及时移除宕掉的服务器，又能够让恢复健康的节点重新上线</p>\n</blockquote>\n</li>\n<li><p>主服务器宕机</p>\n<blockquote>\n<p>若主节点只有一个（假设），则无法再执行写操作，此时需要挑选出从节点中数据较<br>新的节点，提升为主节点，若提升的主节点数据未完全与原来的主服务器同步，需要借助GTID（全局事务ID）来完成数据的同步，即对未提交事务进行提交以将数据同步于磁盘中</p>\n</blockquote>\n</li>\n</ul>\n<h1 id=\"主从复制模型\"><a href=\"#主从复制模型\" class=\"headerlink\" title=\"主从复制模型\"></a>主从复制模型</h1><ul>\n<li>M/S：主从模型，一主可以多从</li>\n<li>M/M：双主（也叫主主）模型，两个节点互为主从 </li>\n<li>环状结构：多个节点互为主从（用之者甚少）</li>\n<li>级联复制，从服务器还可以再有从服务器</li>\n</ul>\n<h2 id=\"一主多从模型-Master-Slave-Slave\"><a href=\"#一主多从模型-Master-Slave-Slave\" class=\"headerlink\" title=\"一主多从模型:Master - Slave - Slave\"></a>一主多从模型:Master - Slave - Slave</h2><p><strong> 使用场景： </strong></p>\n<blockquote>\n<p>在实际应用场景中，MySQL复制90%以上都是一个Master复制到一个或者多个Slave的架构模式，主要用于读压力比较大的应用的数据库端廉价扩展解决方案。因为只要Master和Slave的压力不是太大（尤其是Slave端压力）的话，异步复制的延时一般都很少很少。尤其是自从Slave端的复制方式改成两个线程处理之后，更是减小了Slave端的延时问题。而带来的效益是，对于数据实时性要求不是特别Critical的应用，只需要通过廉价的pcserver来扩展Slave的数量，将读压力分散到多台Slave的机器上面，即可通过分散单台数据库服务器的读压力来解决数据库端的读性能瓶颈，毕竟在大多数数据库应用系统中的读压力还是要比写压力大很多。这在很大程度上解决了目前很多中小型网站的数据库压力瓶颈问题，甚至有些大型网站也在使用类似方案解决数据库瓶颈。</p>\n</blockquote>\n<h2 id=\"双主模型：Master-Master\"><a href=\"#双主模型：Master-Master\" class=\"headerlink\" title=\"双主模型：Master - Master\"></a>双主模型：Master - Master</h2><blockquote>\n<p>两个节点互为主从，每个节点的写操作都需要记录与二进制日志中，并发送给对方，以达到数据同步的目的，其中需要server id发挥作用<br>server id：<br>sever_id是记录于二进制日志中的server标识，标明日志事件中的写操作是在哪个server执行的，日志在从节点中重放会保留server id，所以，在双主模型中，若server接收到的日志包含server id为自己时，将不会对日志的事件进行重放</p>\n</blockquote>\n<p><strong> 场景：</strong></p>\n<blockquote>\n<p>假设1和2两个节点互为主从，其server_id就是对应的数字，server1写完后，将二进制日志发送给server2一份，server2在本地完成重放之后，其也要将二进制日志发送给server1，server1接收到二进制日志后发现日志包含的server_id是自己，则不会在本地重放，直接忽略</p>\n</blockquote>\n<p><strong> 提醒：双主模型可能会存在两个节点的数据不一致的问题，其场景是两个节点分别接收了“互斥”的写请求，造成了两个节点的数据不一致 </strong></p>\n<blockquote>\n<p>虽然可以使用配置auto_increment_increment=2和auto_increment_offset=1可以解决自动插入的问题，允许同时插入数据的话，数据还是会不一致的。</p>\n</blockquote>\n<p>例如：下面的两个命令同时执行：<br><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">第一个主服务器：</div><div class=\"line\">mysql&gt;update tbl <span class=\"builtin-name\">set</span> <span class=\"attribute\">col</span>=col+1;</div><div class=\"line\">第二个主服务器：</div><div class=\"line\">mysql&gt;update tbl <span class=\"builtin-name\">set</span> <span class=\"attribute\">col</span>=col*2;</div></pre></td></tr></table></figure></p>\n<p>结果是什么？一个服务器的值为4，而另外一个为3.并且根本没有replication的错误。<br>所以，个人建议主动-被动的双主模式，只让一台服务器写就行了，让它对外服务，<br>另外一台作为备用。只接受数据。</p>\n<p><strong> 双主模型的前端调度无需做读写分离，随意调度，双主模型相当于高可用实现，一般用作高容灾方案 </strong></p>\n<h2 id=\"一从多主复制模型-Slaves-Master-–-Master\"><a href=\"#一从多主复制模型-Slaves-Master-–-Master\" class=\"headerlink\" title=\"一从多主复制模型 Slaves - Master – Master\"></a>一从多主复制模型 Slaves - Master – Master</h2><p>一从多主的复制模型，其限制条件是，从节点仅能从多个主节点中复制不同的数据库内容，即多个主节点中必须不能有相同的数据库（仅在mysql5.6及mariadb10之后的版本可以实现）</p>\n<h3 id=\"适合业务场景：\"><a href=\"#适合业务场景：\" class=\"headerlink\" title=\"适合业务场景：\"></a>适合业务场景：</h3><p>公司几个主要的业务已经独立，放在不同的数据库服务器上面，但是有一个业务又需要关联多个业务库进行联合查询统计。这时候就需要将不同的业务库数据同步到一台从库进行统计。根据Mysql主从同步原理使用多从一从的方案解决。主库使用innodb引擎，从库开启多实例使用myisam引擎并将多个实例的数据同步到同一个目录<br><a href=\"http://www.tuicool.com/articles/nYBJju7\" target=\"_blank\" rel=\"external\">详细实现步骤</a></p>\n<h2 id=\"级联复制模型-Master-–Slaves-Slaves\"><a href=\"#级联复制模型-Master-–Slaves-Slaves\" class=\"headerlink\" title=\"级联复制模型 Master –Slaves - Slaves\"></a>级联复制模型 Master –Slaves - Slaves</h2><p>###使用场景</p>\n<blockquote>\n<p>在有些应用场景中，可能读写压力差别比较大，读压力特别的大，一个Master可能需要上10台甚至更多的Slave才能够支撑读的压力。这时候，Master就会比较吃力了，因为仅仅连上来的SlaveIO线程就比较多了，这样写的压力稍微大一点的时候，Master端因为复制就会消耗较多的资源，很容易造成复制的延时。</p>\n</blockquote>\n<p>在主从模型下，从节点还可以再有从节点，即从节点中的某个节点（假设为“Slave_A”）是其他从节点的主节点，为避免过大的压力，Slave_A一般不处理客户端的读请求，仅负责从主节点中复制二进制日志在本地完成重放，但其使用的表类型是black_hold，所以本地并没有保存数据，仅是将重放的写操作记录于二进制日志中，进而，其他从节点可以到Slave_A复制日志文件来同步数据<br><a href=\"http://www.cnblogs.com/ggjucheng/archive/2012/11/13/2768879.html\" target=\"_blank\" rel=\"external\">参考</a></p>\n<h2 id=\"半同步复制模型：\"><a href=\"#半同步复制模型：\" class=\"headerlink\" title=\"半同步复制模型：\"></a>半同步复制模型：</h2><blockquote>\n<p>主服务器需要等待一个从节点完成数据复制，才能对客户端返回OK，此模型下，主节点和完全同步的从节点一般需要在同一机房内，需要有足够稳定，足够大的带宽支持，其他节点可以跨网络分布</p>\n</blockquote>\n<h2 id=\"复制过滤器：\"><a href=\"#复制过滤器：\" class=\"headerlink\" title=\"复制过滤器：\"></a>复制过滤器：</h2><blockquote>\n<p>仅复制部分数据库内容，其实现方案有两种：<br>(1)主节点只保存特定数据库的事件到二进制日志文件中，从节点复制重放<br>(2)从节点复制所有数据库相关的事件，但在中继日志中过滤事件，选择特定的事件进行重放</p>\n</blockquote>\n<h1 id=\"复制结构中应该注意的问题\"><a href=\"#复制结构中应该注意的问题\" class=\"headerlink\" title=\"复制结构中应该注意的问题\"></a>复制结构中应该注意的问题</h1><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div></pre></td><td class=\"code\"><pre><div class=\"line\">1、限制从服务器为只读</div><div class=\"line\">在从服务器设置<span class=\"attribute\">read_only</span>=ON,对拥有SUPER权限的用户无效</div><div class=\"line\"></div><div class=\"line\">阻止所有用户：</div><div class=\"line\">mysql&gt; FLUSH TABLES WITH READ LOCK;</div><div class=\"line\">执行后不释放锁，断开与数据库的连接</div><div class=\"line\"></div><div class=\"line\">限制从服务器只读的作用是避免有数据写入导致主从数据不同步</div><div class=\"line\"></div><div class=\"line\">2、保证主从复制的事务安全</div><div class=\"line\">在master节点启用的参数：</div><div class=\"line\"><span class=\"attribute\">sync_binlog</span>=ON</div><div class=\"line\">当事务提交时，将binlog内存缓冲区中记录的事件刷新到磁盘中</div><div class=\"line\"></div><div class=\"line\">InnoDB引擎需启用的参数：</div><div class=\"line\"><span class=\"attribute\">innodb_flush_logs_at_trx_commit</span>=ON </div><div class=\"line\">刷写日志，提交事务时，立即将内存中的事务相关的数据保存到事务日志文件中</div><div class=\"line\"><span class=\"attribute\">innodb_suport_xa</span>=ON</div><div class=\"line\">分布式事务，分布式提交事务</div><div class=\"line\"></div><div class=\"line\">在slave节点启用的参数：</div><div class=\"line\"><span class=\"attribute\">skip_slave_start</span>=ON (需要在配置文件中定义)</div><div class=\"line\"></div><div class=\"line\">取消复制进程随数据库启动而启动，此项很可能会导致主从数据不一致</div><div class=\"line\"></div><div class=\"line\">3、其他需要注意的参数：按需启用</div><div class=\"line\">主节点：</div><div class=\"line\">sync_master_info </div><div class=\"line\">是否立即将主服务器信息同步给从服务器</div><div class=\"line\">slave节点：</div><div class=\"line\">sync_relay_log</div><div class=\"line\">是否立即将中继日志从内存刷写到磁盘中</div><div class=\"line\">sync_relay_log_info</div><div class=\"line\">是否立即将此文件中保存的信息立即从内存刷写到磁盘中</div></pre></td></tr></table></figure>\n<p><strong> 注意：以上一个同步选项开启必然会增大IO压力，具体情况，具体应用 </strong></p>"},{"title":"MySQL主从复制架构示例演示","abbrlink":"87bc87f4","date":"2016-07-16T16:00:00.000Z","_content":"\n# 示例演示模型：\n\n** 主从、主主、半同步复制、复制过滤器、基于SSL加密复制 **\n\n<!--more-->\n\n## 主从配置过程\n```\n每个mysql配置都应该启用的配置：\nskip_name_resolve=ON\ninnodb_file_per_table=ON\n注意：mysql5.1版本skip_name_resolve不支持加参数写法\n\n主节点：\n编辑my.cnf配置文件\n(1)启动二进制日志\n\nlog-bin=log_name\n(2)为当前节点设置一个全局的ID号\nserver-id=# (配置文件配置)\n\n连接mysql数据库\n(3)创建有复制权限的帐号\nGRANT REPLICATION SLAVE,REPLICATION CLIENT ON *.* TO ‘USER’@’HOST’ \nIDENTIFIED BY ‘PASSWORD’\n\n注意：授权账号也是写操作，所以从服务器在主服务器授权账号之后再定义MASTER\n\n从节点：\n（1）启动中继日志\nrelay-log=log_name\nrelay-log-index=relay-log.index(中继日志索引文件)\n（2）为当前节点配置一个全局唯一的ID号\nsever-id=#\n（3）使用有复制权限的帐号连接至主服务器，并启动复制线程\n授权：\nmysql> CHANGE MASTER TO MASTER_HOST=’IP’,MASTER_USER=’USERNAME’, MASTER_PASSWORD=’PASS’,MASTER_LOG_FILE=’bin-log_file’ MASTER_LOG_POS=#;\n\n注意：最后一项是数值，无需添加引号，初始化的事件应该忽略\n启动复制线程：\nmysql> START SLAVE;\n\n查看从服务器信息：\nSHOW SLAVE STATUS\\G\n\n获取帮助：\nhelp CHANGE MASTER TO;\n```\n** 注意：主从配置的相关参数，在[mysql_safe]配置段是无效的 **\n\n## 主主配置过程：\n** 注意： **\n> 主主模式数据可能会不一致，慎用，由于两各节点都可以执行写操作，一旦发生同时写入\n数据的操作，对于可以自动增长的id字段，必然造成id冲突，导致数据库崩溃\n\n为避免这样自动增长字段id冲突，有以下解决方法\n自动增长字段id需要手动配置（在my.cnf文件配置）\n```\n一个节点使用奇数id\nauto_increment_offset=1\n设置偏移量，即跳到哪各id作为起始id\nauto_increment_increment=2\n设置自动增长的数值\n另一节点使用偶数id\nauto_incremental_offset=2\nauto_incremental_increment=2\n```\n\n### 配置要点\n```\n(1)各节点配置唯一的server id\nserver-id=your_server_id\n(2)都需要启用二进制日志文件和中继日志\nbin-log=log_name\nrelay-log=log_name\nrelay-log-index=log_name.index\n(3)配置自动增长字段id的奇偶：\nauto_incremnt_offset=\nauto_incremnt_increment= \n(4)创建拥有复制权限的用户帐号 \nGRANT RELPICATION SLAVE,REPLICATION CLIENT ON *.* TO ‘USER’@’HOST’ \nIDENTIFIED BY ‘PASSWORD’;\n(5)把对方指定为主节点，并启动复制线程\nCHANGEMASTERTOMASTER_HOST=’HOST’,\nMASTER_USER=’USER’,MASTER_PASSWORD=’PASSWD’,\nMASTER_LOG_FILE=’bin-log’,MASTER_LOG_POS=#; \n```\n\n## 半同步复制配置\n\n> 其他配置同主从配置，重点如下\n\n```\nmaster：\nmysql> INSTALL PLUGIN rpl_semi_sync_master SONAME ‘semisync_master.so’;\nmysql> SET GLOBAL rpl_semi_sync_master_enabled=1; \n\nslave:\nmysql> INSTALL PLUGIN rpl_semi_sync_slave SONAME ‘semisync_slave.so’; \nmysql> SET GLOBAL rpl_semi_sync_slave_enabled=1;\n\n查看相关变量参数：\nSHOW GLOBAL VARIABLES LIKE ‘%semi%’;\nSHOW GLOBAL STATUS LIKE ‘%semi%’;\n```\n\n## 复制过滤器\n> 让从节点仅复制指定的数据库，或者指定数据库的指定表\n\n有两种实现方式：\n### (1)主节点仅向二进制日志中记录特定数据库或特定表的相关事件\n```\n复制数据库白名单：\nbinlog_do_db=”DB1,DB2,..”\n复制数据库黑名单：\nbinlog_ignore_db=”DB1,DB2,..” \n```\n** 注意：不用同时使用以上两个参数  **\n\n### (2)从服务器SQL线程在replay中继日志的事件时，仅读取特定数据库或特定表\n```\nreplicate_do_db= 重放数据库白名单\nreplicate_ignore_db= 重放数据库黑名单\n\n还可以过滤到表级别：（实际应用很少）\nreplicate_do_table=\nreplicate_ignore_table=\n\n使用通配过滤的表：\nreplicate_wild_do_tabl=\nreplicate_wild_ingore_tabl=\n```\n\n\n## 基于SSL证书进行复制\n** 注意：各节点的时间必须同步好，否则证书将无法使用（多个节点可使用同以证书） **\n```\n(1)开启ssl功能：\n主从配置文件都需要连接以下内容\nssl\nssl_ca=/var/lib/mysql/ssl/cacert.pem\nssl_cert=/var/lib/mysql/ssl/cacert.crt\nssl_key=/var/lib/mysql/ssl/cakey.pem\n\n注意：以上配置项是开启ssl连接所必须的\n(2)主服务器授权：\nGRANT REPLICATION SLAVE，REPLICATION CLIENT ON *.* TO ‘USER’@’HOST’ IDENTIFIED BY\n‘PASSWORD’ REQUIRE SSL;\n\n(3)从服务器设置master\nMariaDB [(none)]> CHANGE MASTER TO MASTER_HOST=’172.18.17.179′,MASTER_USER=’backuser’,MASTER_PASSWORD=’backpasswd’,MASTER_LOG_FILE=’bin_log.000009′,MASTER_LOG_POS=436,MASTER_SSL_CA=’/var/lib/mysql/ssl/cacert.pem’,MASTER_SSL_CERT=’/var/lib/mysql/ssl/slave.crt’,MASTER_SSL_KEY=’/var/lib/mysql/ssl/slave.key’,MASTER_SSL=1;\n\n补充：测试是否可以基于ssl远程连接数据库\n# mysql -ubackuser -h172.18.17.179 -pbackpasswd –ssl-ca=/var/lib/mysql/ssl/cacert.pem –ssl-cert=/var/lib/mysql/ssl/slave.crt –ssl-key=/var/lib/mysql/ssl/slave.key\n\n参考：\n  | MASTER_SSL = {0|1}\n  | MASTER_SSL_CA = ‘ca_file_name’\n  | MASTER_SSL_CERT = ‘cert_file_name’\n  | MASTER_SSL_KEY = ‘key_file_name’\n```\n\n## MySQL复制的监控和维护\n\n### 日志清理：\n```\nPURGE BINARY LOGS TO ‘mysql-bin.010’ 表示清理010之前的所有日志（不包含010）\nPURGE BINARY LOGS BEFORE ‘2016-05-15 22:26:27’ 表示清理此时间点之前的所有日志\n```\n** 注意：谨慎清理，除非你知道你在做什么 **\n\n### 复制监控：\n```\nSHOW MASTER STATUS;\nSHOW BINLOG ENVENT;\nSHOW SHOW BINARY LOGS;\n\nSHOW SLAVE STATUS;\nSHOW PROCESSLIST;\n```\n\n```\n查看从服务器是否落后于主服务器：\nSeconds_Behind_Master: 0\n\n如何确定主从节点数据是否一致：\npercona-tools提供的工具\n\n数据不一致如何修复：\n备份主服务器的数据，重新恢复到从服务器\n```\n\n","source":"_posts/2016-07-17-MySQL主从复制架构示例演示.md","raw":"---\ntitle: MySQL主从复制架构示例演示\ncategories: 技术与干货\ntag: MySQL\nabbrlink: 87bc87f4\ndate: 2016-07-17 00:00:00\n---\n\n# 示例演示模型：\n\n** 主从、主主、半同步复制、复制过滤器、基于SSL加密复制 **\n\n<!--more-->\n\n## 主从配置过程\n```\n每个mysql配置都应该启用的配置：\nskip_name_resolve=ON\ninnodb_file_per_table=ON\n注意：mysql5.1版本skip_name_resolve不支持加参数写法\n\n主节点：\n编辑my.cnf配置文件\n(1)启动二进制日志\n\nlog-bin=log_name\n(2)为当前节点设置一个全局的ID号\nserver-id=# (配置文件配置)\n\n连接mysql数据库\n(3)创建有复制权限的帐号\nGRANT REPLICATION SLAVE,REPLICATION CLIENT ON *.* TO ‘USER’@’HOST’ \nIDENTIFIED BY ‘PASSWORD’\n\n注意：授权账号也是写操作，所以从服务器在主服务器授权账号之后再定义MASTER\n\n从节点：\n（1）启动中继日志\nrelay-log=log_name\nrelay-log-index=relay-log.index(中继日志索引文件)\n（2）为当前节点配置一个全局唯一的ID号\nsever-id=#\n（3）使用有复制权限的帐号连接至主服务器，并启动复制线程\n授权：\nmysql> CHANGE MASTER TO MASTER_HOST=’IP’,MASTER_USER=’USERNAME’, MASTER_PASSWORD=’PASS’,MASTER_LOG_FILE=’bin-log_file’ MASTER_LOG_POS=#;\n\n注意：最后一项是数值，无需添加引号，初始化的事件应该忽略\n启动复制线程：\nmysql> START SLAVE;\n\n查看从服务器信息：\nSHOW SLAVE STATUS\\G\n\n获取帮助：\nhelp CHANGE MASTER TO;\n```\n** 注意：主从配置的相关参数，在[mysql_safe]配置段是无效的 **\n\n## 主主配置过程：\n** 注意： **\n> 主主模式数据可能会不一致，慎用，由于两各节点都可以执行写操作，一旦发生同时写入\n数据的操作，对于可以自动增长的id字段，必然造成id冲突，导致数据库崩溃\n\n为避免这样自动增长字段id冲突，有以下解决方法\n自动增长字段id需要手动配置（在my.cnf文件配置）\n```\n一个节点使用奇数id\nauto_increment_offset=1\n设置偏移量，即跳到哪各id作为起始id\nauto_increment_increment=2\n设置自动增长的数值\n另一节点使用偶数id\nauto_incremental_offset=2\nauto_incremental_increment=2\n```\n\n### 配置要点\n```\n(1)各节点配置唯一的server id\nserver-id=your_server_id\n(2)都需要启用二进制日志文件和中继日志\nbin-log=log_name\nrelay-log=log_name\nrelay-log-index=log_name.index\n(3)配置自动增长字段id的奇偶：\nauto_incremnt_offset=\nauto_incremnt_increment= \n(4)创建拥有复制权限的用户帐号 \nGRANT RELPICATION SLAVE,REPLICATION CLIENT ON *.* TO ‘USER’@’HOST’ \nIDENTIFIED BY ‘PASSWORD’;\n(5)把对方指定为主节点，并启动复制线程\nCHANGEMASTERTOMASTER_HOST=’HOST’,\nMASTER_USER=’USER’,MASTER_PASSWORD=’PASSWD’,\nMASTER_LOG_FILE=’bin-log’,MASTER_LOG_POS=#; \n```\n\n## 半同步复制配置\n\n> 其他配置同主从配置，重点如下\n\n```\nmaster：\nmysql> INSTALL PLUGIN rpl_semi_sync_master SONAME ‘semisync_master.so’;\nmysql> SET GLOBAL rpl_semi_sync_master_enabled=1; \n\nslave:\nmysql> INSTALL PLUGIN rpl_semi_sync_slave SONAME ‘semisync_slave.so’; \nmysql> SET GLOBAL rpl_semi_sync_slave_enabled=1;\n\n查看相关变量参数：\nSHOW GLOBAL VARIABLES LIKE ‘%semi%’;\nSHOW GLOBAL STATUS LIKE ‘%semi%’;\n```\n\n## 复制过滤器\n> 让从节点仅复制指定的数据库，或者指定数据库的指定表\n\n有两种实现方式：\n### (1)主节点仅向二进制日志中记录特定数据库或特定表的相关事件\n```\n复制数据库白名单：\nbinlog_do_db=”DB1,DB2,..”\n复制数据库黑名单：\nbinlog_ignore_db=”DB1,DB2,..” \n```\n** 注意：不用同时使用以上两个参数  **\n\n### (2)从服务器SQL线程在replay中继日志的事件时，仅读取特定数据库或特定表\n```\nreplicate_do_db= 重放数据库白名单\nreplicate_ignore_db= 重放数据库黑名单\n\n还可以过滤到表级别：（实际应用很少）\nreplicate_do_table=\nreplicate_ignore_table=\n\n使用通配过滤的表：\nreplicate_wild_do_tabl=\nreplicate_wild_ingore_tabl=\n```\n\n\n## 基于SSL证书进行复制\n** 注意：各节点的时间必须同步好，否则证书将无法使用（多个节点可使用同以证书） **\n```\n(1)开启ssl功能：\n主从配置文件都需要连接以下内容\nssl\nssl_ca=/var/lib/mysql/ssl/cacert.pem\nssl_cert=/var/lib/mysql/ssl/cacert.crt\nssl_key=/var/lib/mysql/ssl/cakey.pem\n\n注意：以上配置项是开启ssl连接所必须的\n(2)主服务器授权：\nGRANT REPLICATION SLAVE，REPLICATION CLIENT ON *.* TO ‘USER’@’HOST’ IDENTIFIED BY\n‘PASSWORD’ REQUIRE SSL;\n\n(3)从服务器设置master\nMariaDB [(none)]> CHANGE MASTER TO MASTER_HOST=’172.18.17.179′,MASTER_USER=’backuser’,MASTER_PASSWORD=’backpasswd’,MASTER_LOG_FILE=’bin_log.000009′,MASTER_LOG_POS=436,MASTER_SSL_CA=’/var/lib/mysql/ssl/cacert.pem’,MASTER_SSL_CERT=’/var/lib/mysql/ssl/slave.crt’,MASTER_SSL_KEY=’/var/lib/mysql/ssl/slave.key’,MASTER_SSL=1;\n\n补充：测试是否可以基于ssl远程连接数据库\n# mysql -ubackuser -h172.18.17.179 -pbackpasswd –ssl-ca=/var/lib/mysql/ssl/cacert.pem –ssl-cert=/var/lib/mysql/ssl/slave.crt –ssl-key=/var/lib/mysql/ssl/slave.key\n\n参考：\n  | MASTER_SSL = {0|1}\n  | MASTER_SSL_CA = ‘ca_file_name’\n  | MASTER_SSL_CERT = ‘cert_file_name’\n  | MASTER_SSL_KEY = ‘key_file_name’\n```\n\n## MySQL复制的监控和维护\n\n### 日志清理：\n```\nPURGE BINARY LOGS TO ‘mysql-bin.010’ 表示清理010之前的所有日志（不包含010）\nPURGE BINARY LOGS BEFORE ‘2016-05-15 22:26:27’ 表示清理此时间点之前的所有日志\n```\n** 注意：谨慎清理，除非你知道你在做什么 **\n\n### 复制监控：\n```\nSHOW MASTER STATUS;\nSHOW BINLOG ENVENT;\nSHOW SHOW BINARY LOGS;\n\nSHOW SLAVE STATUS;\nSHOW PROCESSLIST;\n```\n\n```\n查看从服务器是否落后于主服务器：\nSeconds_Behind_Master: 0\n\n如何确定主从节点数据是否一致：\npercona-tools提供的工具\n\n数据不一致如何修复：\n备份主服务器的数据，重新恢复到从服务器\n```\n\n","slug":"2016-07-17-MySQL主从复制架构示例演示","published":1,"updated":"2017-02-14T13:42:45.423Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5mkehrr001lao94lzoe01k3","content":"<h1 id=\"示例演示模型：\"><a href=\"#示例演示模型：\" class=\"headerlink\" title=\"示例演示模型：\"></a>示例演示模型：</h1><p><strong> 主从、主主、半同步复制、复制过滤器、基于SSL加密复制 </strong></p>\n<a id=\"more\"></a>\n<h2 id=\"主从配置过程\"><a href=\"#主从配置过程\" class=\"headerlink\" title=\"主从配置过程\"></a>主从配置过程</h2><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div></pre></td><td class=\"code\"><pre><div class=\"line\">每个mysql配置都应该启用的配置：</div><div class=\"line\"><span class=\"attribute\">skip_name_resolve</span>=ON</div><div class=\"line\"><span class=\"attribute\">innodb_file_per_table</span>=ON</div><div class=\"line\">注意：mysql5.1版本skip_name_resolve不支持加参数写法</div><div class=\"line\"></div><div class=\"line\">主节点：</div><div class=\"line\">编辑my.cnf配置文件</div><div class=\"line\">(1)启动二进制日志</div><div class=\"line\"></div><div class=\"line\"><span class=\"attribute\">log-bin</span>=log_name</div><div class=\"line\">(2)为当前节点设置一个全局的ID号</div><div class=\"line\"><span class=\"attribute\">server-id</span>=# (配置文件配置)</div><div class=\"line\"></div><div class=\"line\">连接mysql数据库</div><div class=\"line\">(3)创建有复制权限的帐号</div><div class=\"line\">GRANT REPLICATION SLAVE,REPLICATION<span class=\"built_in\"> CLIENT </span>ON *.* <span class=\"keyword\">TO</span> ‘USER’@’HOST’ </div><div class=\"line\">IDENTIFIED BY ‘PASSWORD’</div><div class=\"line\"></div><div class=\"line\">注意：授权账号也是写操作，所以从服务器在主服务器授权账号之后再定义MASTER</div><div class=\"line\"></div><div class=\"line\">从节点：</div><div class=\"line\">（1）启动中继日志</div><div class=\"line\"><span class=\"attribute\">relay-log</span>=log_name</div><div class=\"line\"><span class=\"attribute\">relay-log-index</span>=relay-log.index(中继日志索引文件)</div><div class=\"line\">（2）为当前节点配置一个全局唯一的ID号</div><div class=\"line\"><span class=\"attribute\">sever-id</span>=#</div><div class=\"line\">（3）使用有复制权限的帐号连接至主服务器，并启动复制线程</div><div class=\"line\">授权：</div><div class=\"line\">mysql&gt; CHANGE MASTER <span class=\"keyword\">TO</span> <span class=\"attribute\">MASTER_HOST</span>=’IP’,MASTER_USER=’USERNAME’, <span class=\"attribute\">MASTER_PASSWORD</span>=’PASS’,MASTER_LOG_FILE=’bin-log_file’ <span class=\"attribute\">MASTER_LOG_POS</span>=#;</div><div class=\"line\"></div><div class=\"line\">注意：最后一项是数值，无需添加引号，初始化的事件应该忽略</div><div class=\"line\">启动复制线程：</div><div class=\"line\">mysql&gt; START SLAVE;</div><div class=\"line\"></div><div class=\"line\">查看从服务器信息：</div><div class=\"line\">SHOW SLAVE STATUS\\G</div><div class=\"line\"></div><div class=\"line\">获取帮助：</div><div class=\"line\">help CHANGE MASTER <span class=\"keyword\">TO</span>;</div></pre></td></tr></table></figure>\n<p><strong> 注意：主从配置的相关参数，在[mysql_safe]配置段是无效的 </strong></p>\n<h2 id=\"主主配置过程：\"><a href=\"#主主配置过程：\" class=\"headerlink\" title=\"主主配置过程：\"></a>主主配置过程：</h2><p><strong> 注意： </strong></p>\n<blockquote>\n<p>主主模式数据可能会不一致，慎用，由于两各节点都可以执行写操作，一旦发生同时写入<br>数据的操作，对于可以自动增长的id字段，必然造成id冲突，导致数据库崩溃</p>\n</blockquote>\n<p>为避免这样自动增长字段id冲突，有以下解决方法<br>自动增长字段id需要手动配置（在my.cnf文件配置）<br><figure class=\"highlight makefile\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">一个节点使用奇数id</div><div class=\"line\">auto_increment_offset=1</div><div class=\"line\">设置偏移量，即跳到哪各id作为起始id</div><div class=\"line\">auto_increment_increment=2</div><div class=\"line\">设置自动增长的数值</div><div class=\"line\">另一节点使用偶数id</div><div class=\"line\">auto_incremental_offset=2</div><div class=\"line\">auto_incremental_increment=2</div></pre></td></tr></table></figure></p>\n<h3 id=\"配置要点\"><a href=\"#配置要点\" class=\"headerlink\" title=\"配置要点\"></a>配置要点</h3><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">(1)各节点配置唯一的server id</div><div class=\"line\"><span class=\"attribute\">server-id</span>=your_server_id</div><div class=\"line\">(2)都需要启用二进制日志文件和中继日志</div><div class=\"line\"><span class=\"attribute\">bin-log</span>=log_name</div><div class=\"line\"><span class=\"attribute\">relay-log</span>=log_name</div><div class=\"line\"><span class=\"attribute\">relay-log-index</span>=log_name.index</div><div class=\"line\">(3)配置自动增长字段id的奇偶：</div><div class=\"line\">auto_incremnt_offset=</div><div class=\"line\">auto_incremnt_increment= </div><div class=\"line\">(4)创建拥有复制权限的用户帐号 </div><div class=\"line\">GRANT RELPICATION SLAVE,REPLICATION<span class=\"built_in\"> CLIENT </span>ON *.* <span class=\"keyword\">TO</span> ‘USER’@’HOST’ </div><div class=\"line\">IDENTIFIED BY ‘PASSWORD’;</div><div class=\"line\">(5)把对方指定为主节点，并启动复制线程</div><div class=\"line\"><span class=\"attribute\">CHANGEMASTERTOMASTER_HOST</span>=’HOST’,</div><div class=\"line\"><span class=\"attribute\">MASTER_USER</span>=’USER’,MASTER_PASSWORD=’PASSWD’,</div><div class=\"line\"><span class=\"attribute\">MASTER_LOG_FILE</span>=’bin-log’,MASTER_LOG_POS=#;</div></pre></td></tr></table></figure>\n<h2 id=\"半同步复制配置\"><a href=\"#半同步复制配置\" class=\"headerlink\" title=\"半同步复制配置\"></a>半同步复制配置</h2><blockquote>\n<p>其他配置同主从配置，重点如下</p>\n</blockquote>\n<figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">master：</div><div class=\"line\">mysql&gt; <span class=\"keyword\">INSTALL </span>PLUGIN rpl_semi_sync_master SONAME ‘semisync_master.so’<span class=\"comment\">;</span></div><div class=\"line\">mysql&gt; SET GLOBAL rpl_semi_sync_master_enabled=<span class=\"number\">1</span><span class=\"comment\">; </span></div><div class=\"line\"><span class=\"symbol\"></span></div><div class=\"line\">slave:</div><div class=\"line\">mysql&gt; <span class=\"keyword\">INSTALL </span>PLUGIN rpl_semi_sync_slave SONAME ‘semisync_slave.so’<span class=\"comment\">; </span></div><div class=\"line\">mysql&gt; SET GLOBAL rpl_semi_sync_slave_enabled=<span class=\"number\">1</span><span class=\"comment\">;</span></div><div class=\"line\"></div><div class=\"line\">查看相关变量参数：</div><div class=\"line\"><span class=\"keyword\">SHOW </span>GLOBAL VARIABLES LIKE ‘%semi%’<span class=\"comment\">;</span></div><div class=\"line\"><span class=\"keyword\">SHOW </span>GLOBAL STATUS LIKE ‘%semi%’<span class=\"comment\">;</span></div></pre></td></tr></table></figure>\n<h2 id=\"复制过滤器\"><a href=\"#复制过滤器\" class=\"headerlink\" title=\"复制过滤器\"></a>复制过滤器</h2><blockquote>\n<p>让从节点仅复制指定的数据库，或者指定数据库的指定表</p>\n</blockquote>\n<p>有两种实现方式：</p>\n<h3 id=\"1-主节点仅向二进制日志中记录特定数据库或特定表的相关事件\"><a href=\"#1-主节点仅向二进制日志中记录特定数据库或特定表的相关事件\" class=\"headerlink\" title=\"(1)主节点仅向二进制日志中记录特定数据库或特定表的相关事件\"></a>(1)主节点仅向二进制日志中记录特定数据库或特定表的相关事件</h3><figure class=\"highlight makefile\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">复制数据库白名单：</div><div class=\"line\">binlog_do_db=”DB1,DB2,..”</div><div class=\"line\">复制数据库黑名单：</div><div class=\"line\">binlog_ignore_db=”DB1,DB2,..”</div></pre></td></tr></table></figure>\n<p><strong> 注意：不用同时使用以上两个参数  </strong></p>\n<h3 id=\"2-从服务器SQL线程在replay中继日志的事件时，仅读取特定数据库或特定表\"><a href=\"#2-从服务器SQL线程在replay中继日志的事件时，仅读取特定数据库或特定表\" class=\"headerlink\" title=\"(2)从服务器SQL线程在replay中继日志的事件时，仅读取特定数据库或特定表\"></a>(2)从服务器SQL线程在replay中继日志的事件时，仅读取特定数据库或特定表</h3><figure class=\"highlight makefile\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">replicate_do_db= 重放数据库白名单</div><div class=\"line\">replicate_ignore_db= 重放数据库黑名单</div><div class=\"line\"></div><div class=\"line\">还可以过滤到表级别：（实际应用很少）</div><div class=\"line\">replicate_do_table=</div><div class=\"line\">replicate_ignore_table=</div><div class=\"line\"></div><div class=\"line\">使用通配过滤的表：</div><div class=\"line\">replicate_wild_do_tabl=</div><div class=\"line\">replicate_wild_ingore_tabl=</div></pre></td></tr></table></figure>\n<h2 id=\"基于SSL证书进行复制\"><a href=\"#基于SSL证书进行复制\" class=\"headerlink\" title=\"基于SSL证书进行复制\"></a>基于SSL证书进行复制</h2><p><strong> 注意：各节点的时间必须同步好，否则证书将无法使用（多个节点可使用同以证书） </strong><br><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\">(1)开启ssl功能：</div><div class=\"line\">主从配置文件都需要连接以下内容</div><div class=\"line\">ssl</div><div class=\"line\"><span class=\"attribute\">ssl_ca</span>=/var/lib/mysql/ssl/cacert.pem</div><div class=\"line\"><span class=\"attribute\">ssl_cert</span>=/var/lib/mysql/ssl/cacert.crt</div><div class=\"line\"><span class=\"attribute\">ssl_key</span>=/var/lib/mysql/ssl/cakey.pem</div><div class=\"line\"></div><div class=\"line\">注意：以上配置项是开启ssl连接所必须的</div><div class=\"line\">(2)主服务器授权：</div><div class=\"line\">GRANT REPLICATION SLAVE，REPLICATION<span class=\"built_in\"> CLIENT </span>ON *.* <span class=\"keyword\">TO</span> ‘USER’@’HOST’ IDENTIFIED BY</div><div class=\"line\">‘PASSWORD’ REQUIRE SSL;</div><div class=\"line\"></div><div class=\"line\">(3)从服务器设置master</div><div class=\"line\">MariaDB [(none)]&gt; CHANGE MASTER <span class=\"keyword\">TO</span> <span class=\"attribute\">MASTER_HOST</span>=’172.18.17.179′,MASTER_USER=’backuser’,MASTER_PASSWORD=’backpasswd’,MASTER_LOG_FILE=’bin_log.000009′,MASTER_LOG_POS=436,MASTER_SSL_CA=’/var/lib/mysql/ssl/cacert.pem’,MASTER_SSL_CERT=’/var/lib/mysql/ssl/slave.crt’,MASTER_SSL_KEY=’/var/lib/mysql/ssl/slave.key’,MASTER_SSL=1;</div><div class=\"line\"></div><div class=\"line\">补充：测试是否可以基于ssl远程连接数据库</div><div class=\"line\"><span class=\"comment\"># mysql -ubackuser -h172.18.17.179 -pbackpasswd –ssl-ca=/var/lib/mysql/ssl/cacert.pem –ssl-cert=/var/lib/mysql/ssl/slave.crt –ssl-key=/var/lib/mysql/ssl/slave.key</span></div><div class=\"line\"></div><div class=\"line\">参考：</div><div class=\"line\">  | MASTER_SSL = &#123;0|1&#125;</div><div class=\"line\">  | MASTER_SSL_CA = ‘ca_file_name’</div><div class=\"line\">  | MASTER_SSL_CERT = ‘cert_file_name’</div><div class=\"line\">  | MASTER_SSL_KEY = ‘key_file_name’</div></pre></td></tr></table></figure></p>\n<h2 id=\"MySQL复制的监控和维护\"><a href=\"#MySQL复制的监控和维护\" class=\"headerlink\" title=\"MySQL复制的监控和维护\"></a>MySQL复制的监控和维护</h2><h3 id=\"日志清理：\"><a href=\"#日志清理：\" class=\"headerlink\" title=\"日志清理：\"></a>日志清理：</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">PURGE</span> <span class=\"built_in\">BINARY</span> <span class=\"keyword\">LOGS</span> <span class=\"keyword\">TO</span> ‘mysql-<span class=\"keyword\">bin</span><span class=\"number\">.010</span>’ 表示清理<span class=\"number\">010</span>之前的所有日志（不包含<span class=\"number\">010</span>）</div><div class=\"line\"><span class=\"keyword\">PURGE</span> <span class=\"built_in\">BINARY</span> <span class=\"keyword\">LOGS</span> <span class=\"keyword\">BEFORE</span> ‘<span class=\"number\">2016</span><span class=\"number\">-05</span><span class=\"number\">-15</span> <span class=\"number\">22</span>:<span class=\"number\">26</span>:<span class=\"number\">27</span>’ 表示清理此时间点之前的所有日志</div></pre></td></tr></table></figure>\n<p><strong> 注意：谨慎清理，除非你知道你在做什么 </strong></p>\n<h3 id=\"复制监控：\"><a href=\"#复制监控：\" class=\"headerlink\" title=\"复制监控：\"></a>复制监控：</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">SHOW</span> <span class=\"keyword\">MASTER</span> <span class=\"keyword\">STATUS</span>;</div><div class=\"line\"><span class=\"keyword\">SHOW</span> <span class=\"keyword\">BINLOG</span> ENVENT;</div><div class=\"line\"><span class=\"keyword\">SHOW</span> <span class=\"keyword\">SHOW</span> <span class=\"built_in\">BINARY</span> <span class=\"keyword\">LOGS</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">SHOW</span> <span class=\"keyword\">SLAVE</span> <span class=\"keyword\">STATUS</span>;</div><div class=\"line\"><span class=\"keyword\">SHOW</span> <span class=\"keyword\">PROCESSLIST</span>;</div></pre></td></tr></table></figure>\n<figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">查看从服务器是否落后于主服务器：</div><div class=\"line\"><span class=\"symbol\">Seconds_Behind_Master:</span> <span class=\"number\">0</span></div><div class=\"line\"></div><div class=\"line\">如何确定主从节点数据是否一致：</div><div class=\"line\">percona-tools提供的工具</div><div class=\"line\"></div><div class=\"line\">数据不一致如何修复：</div><div class=\"line\">备份主服务器的数据，重新恢复到从服务器</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<h1 id=\"示例演示模型：\"><a href=\"#示例演示模型：\" class=\"headerlink\" title=\"示例演示模型：\"></a>示例演示模型：</h1><p><strong> 主从、主主、半同步复制、复制过滤器、基于SSL加密复制 </strong></p>","more":"<h2 id=\"主从配置过程\"><a href=\"#主从配置过程\" class=\"headerlink\" title=\"主从配置过程\"></a>主从配置过程</h2><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div></pre></td><td class=\"code\"><pre><div class=\"line\">每个mysql配置都应该启用的配置：</div><div class=\"line\"><span class=\"attribute\">skip_name_resolve</span>=ON</div><div class=\"line\"><span class=\"attribute\">innodb_file_per_table</span>=ON</div><div class=\"line\">注意：mysql5.1版本skip_name_resolve不支持加参数写法</div><div class=\"line\"></div><div class=\"line\">主节点：</div><div class=\"line\">编辑my.cnf配置文件</div><div class=\"line\">(1)启动二进制日志</div><div class=\"line\"></div><div class=\"line\"><span class=\"attribute\">log-bin</span>=log_name</div><div class=\"line\">(2)为当前节点设置一个全局的ID号</div><div class=\"line\"><span class=\"attribute\">server-id</span>=# (配置文件配置)</div><div class=\"line\"></div><div class=\"line\">连接mysql数据库</div><div class=\"line\">(3)创建有复制权限的帐号</div><div class=\"line\">GRANT REPLICATION SLAVE,REPLICATION<span class=\"built_in\"> CLIENT </span>ON *.* <span class=\"keyword\">TO</span> ‘USER’@’HOST’ </div><div class=\"line\">IDENTIFIED BY ‘PASSWORD’</div><div class=\"line\"></div><div class=\"line\">注意：授权账号也是写操作，所以从服务器在主服务器授权账号之后再定义MASTER</div><div class=\"line\"></div><div class=\"line\">从节点：</div><div class=\"line\">（1）启动中继日志</div><div class=\"line\"><span class=\"attribute\">relay-log</span>=log_name</div><div class=\"line\"><span class=\"attribute\">relay-log-index</span>=relay-log.index(中继日志索引文件)</div><div class=\"line\">（2）为当前节点配置一个全局唯一的ID号</div><div class=\"line\"><span class=\"attribute\">sever-id</span>=#</div><div class=\"line\">（3）使用有复制权限的帐号连接至主服务器，并启动复制线程</div><div class=\"line\">授权：</div><div class=\"line\">mysql&gt; CHANGE MASTER <span class=\"keyword\">TO</span> <span class=\"attribute\">MASTER_HOST</span>=’IP’,MASTER_USER=’USERNAME’, <span class=\"attribute\">MASTER_PASSWORD</span>=’PASS’,MASTER_LOG_FILE=’bin-log_file’ <span class=\"attribute\">MASTER_LOG_POS</span>=#;</div><div class=\"line\"></div><div class=\"line\">注意：最后一项是数值，无需添加引号，初始化的事件应该忽略</div><div class=\"line\">启动复制线程：</div><div class=\"line\">mysql&gt; START SLAVE;</div><div class=\"line\"></div><div class=\"line\">查看从服务器信息：</div><div class=\"line\">SHOW SLAVE STATUS\\G</div><div class=\"line\"></div><div class=\"line\">获取帮助：</div><div class=\"line\">help CHANGE MASTER <span class=\"keyword\">TO</span>;</div></pre></td></tr></table></figure>\n<p><strong> 注意：主从配置的相关参数，在[mysql_safe]配置段是无效的 </strong></p>\n<h2 id=\"主主配置过程：\"><a href=\"#主主配置过程：\" class=\"headerlink\" title=\"主主配置过程：\"></a>主主配置过程：</h2><p><strong> 注意： </strong></p>\n<blockquote>\n<p>主主模式数据可能会不一致，慎用，由于两各节点都可以执行写操作，一旦发生同时写入<br>数据的操作，对于可以自动增长的id字段，必然造成id冲突，导致数据库崩溃</p>\n</blockquote>\n<p>为避免这样自动增长字段id冲突，有以下解决方法<br>自动增长字段id需要手动配置（在my.cnf文件配置）<br><figure class=\"highlight makefile\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">一个节点使用奇数id</div><div class=\"line\">auto_increment_offset=1</div><div class=\"line\">设置偏移量，即跳到哪各id作为起始id</div><div class=\"line\">auto_increment_increment=2</div><div class=\"line\">设置自动增长的数值</div><div class=\"line\">另一节点使用偶数id</div><div class=\"line\">auto_incremental_offset=2</div><div class=\"line\">auto_incremental_increment=2</div></pre></td></tr></table></figure></p>\n<h3 id=\"配置要点\"><a href=\"#配置要点\" class=\"headerlink\" title=\"配置要点\"></a>配置要点</h3><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">(1)各节点配置唯一的server id</div><div class=\"line\"><span class=\"attribute\">server-id</span>=your_server_id</div><div class=\"line\">(2)都需要启用二进制日志文件和中继日志</div><div class=\"line\"><span class=\"attribute\">bin-log</span>=log_name</div><div class=\"line\"><span class=\"attribute\">relay-log</span>=log_name</div><div class=\"line\"><span class=\"attribute\">relay-log-index</span>=log_name.index</div><div class=\"line\">(3)配置自动增长字段id的奇偶：</div><div class=\"line\">auto_incremnt_offset=</div><div class=\"line\">auto_incremnt_increment= </div><div class=\"line\">(4)创建拥有复制权限的用户帐号 </div><div class=\"line\">GRANT RELPICATION SLAVE,REPLICATION<span class=\"built_in\"> CLIENT </span>ON *.* <span class=\"keyword\">TO</span> ‘USER’@’HOST’ </div><div class=\"line\">IDENTIFIED BY ‘PASSWORD’;</div><div class=\"line\">(5)把对方指定为主节点，并启动复制线程</div><div class=\"line\"><span class=\"attribute\">CHANGEMASTERTOMASTER_HOST</span>=’HOST’,</div><div class=\"line\"><span class=\"attribute\">MASTER_USER</span>=’USER’,MASTER_PASSWORD=’PASSWD’,</div><div class=\"line\"><span class=\"attribute\">MASTER_LOG_FILE</span>=’bin-log’,MASTER_LOG_POS=#;</div></pre></td></tr></table></figure>\n<h2 id=\"半同步复制配置\"><a href=\"#半同步复制配置\" class=\"headerlink\" title=\"半同步复制配置\"></a>半同步复制配置</h2><blockquote>\n<p>其他配置同主从配置，重点如下</p>\n</blockquote>\n<figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">master：</div><div class=\"line\">mysql&gt; <span class=\"keyword\">INSTALL </span>PLUGIN rpl_semi_sync_master SONAME ‘semisync_master.so’<span class=\"comment\">;</span></div><div class=\"line\">mysql&gt; SET GLOBAL rpl_semi_sync_master_enabled=<span class=\"number\">1</span><span class=\"comment\">; </span></div><div class=\"line\"><span class=\"symbol\"></span></div><div class=\"line\">slave:</div><div class=\"line\">mysql&gt; <span class=\"keyword\">INSTALL </span>PLUGIN rpl_semi_sync_slave SONAME ‘semisync_slave.so’<span class=\"comment\">; </span></div><div class=\"line\">mysql&gt; SET GLOBAL rpl_semi_sync_slave_enabled=<span class=\"number\">1</span><span class=\"comment\">;</span></div><div class=\"line\"></div><div class=\"line\">查看相关变量参数：</div><div class=\"line\"><span class=\"keyword\">SHOW </span>GLOBAL VARIABLES LIKE ‘%semi%’<span class=\"comment\">;</span></div><div class=\"line\"><span class=\"keyword\">SHOW </span>GLOBAL STATUS LIKE ‘%semi%’<span class=\"comment\">;</span></div></pre></td></tr></table></figure>\n<h2 id=\"复制过滤器\"><a href=\"#复制过滤器\" class=\"headerlink\" title=\"复制过滤器\"></a>复制过滤器</h2><blockquote>\n<p>让从节点仅复制指定的数据库，或者指定数据库的指定表</p>\n</blockquote>\n<p>有两种实现方式：</p>\n<h3 id=\"1-主节点仅向二进制日志中记录特定数据库或特定表的相关事件\"><a href=\"#1-主节点仅向二进制日志中记录特定数据库或特定表的相关事件\" class=\"headerlink\" title=\"(1)主节点仅向二进制日志中记录特定数据库或特定表的相关事件\"></a>(1)主节点仅向二进制日志中记录特定数据库或特定表的相关事件</h3><figure class=\"highlight makefile\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">复制数据库白名单：</div><div class=\"line\">binlog_do_db=”DB1,DB2,..”</div><div class=\"line\">复制数据库黑名单：</div><div class=\"line\">binlog_ignore_db=”DB1,DB2,..”</div></pre></td></tr></table></figure>\n<p><strong> 注意：不用同时使用以上两个参数  </strong></p>\n<h3 id=\"2-从服务器SQL线程在replay中继日志的事件时，仅读取特定数据库或特定表\"><a href=\"#2-从服务器SQL线程在replay中继日志的事件时，仅读取特定数据库或特定表\" class=\"headerlink\" title=\"(2)从服务器SQL线程在replay中继日志的事件时，仅读取特定数据库或特定表\"></a>(2)从服务器SQL线程在replay中继日志的事件时，仅读取特定数据库或特定表</h3><figure class=\"highlight makefile\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">replicate_do_db= 重放数据库白名单</div><div class=\"line\">replicate_ignore_db= 重放数据库黑名单</div><div class=\"line\"></div><div class=\"line\">还可以过滤到表级别：（实际应用很少）</div><div class=\"line\">replicate_do_table=</div><div class=\"line\">replicate_ignore_table=</div><div class=\"line\"></div><div class=\"line\">使用通配过滤的表：</div><div class=\"line\">replicate_wild_do_tabl=</div><div class=\"line\">replicate_wild_ingore_tabl=</div></pre></td></tr></table></figure>\n<h2 id=\"基于SSL证书进行复制\"><a href=\"#基于SSL证书进行复制\" class=\"headerlink\" title=\"基于SSL证书进行复制\"></a>基于SSL证书进行复制</h2><p><strong> 注意：各节点的时间必须同步好，否则证书将无法使用（多个节点可使用同以证书） </strong><br><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\">(1)开启ssl功能：</div><div class=\"line\">主从配置文件都需要连接以下内容</div><div class=\"line\">ssl</div><div class=\"line\"><span class=\"attribute\">ssl_ca</span>=/var/lib/mysql/ssl/cacert.pem</div><div class=\"line\"><span class=\"attribute\">ssl_cert</span>=/var/lib/mysql/ssl/cacert.crt</div><div class=\"line\"><span class=\"attribute\">ssl_key</span>=/var/lib/mysql/ssl/cakey.pem</div><div class=\"line\"></div><div class=\"line\">注意：以上配置项是开启ssl连接所必须的</div><div class=\"line\">(2)主服务器授权：</div><div class=\"line\">GRANT REPLICATION SLAVE，REPLICATION<span class=\"built_in\"> CLIENT </span>ON *.* <span class=\"keyword\">TO</span> ‘USER’@’HOST’ IDENTIFIED BY</div><div class=\"line\">‘PASSWORD’ REQUIRE SSL;</div><div class=\"line\"></div><div class=\"line\">(3)从服务器设置master</div><div class=\"line\">MariaDB [(none)]&gt; CHANGE MASTER <span class=\"keyword\">TO</span> <span class=\"attribute\">MASTER_HOST</span>=’172.18.17.179′,MASTER_USER=’backuser’,MASTER_PASSWORD=’backpasswd’,MASTER_LOG_FILE=’bin_log.000009′,MASTER_LOG_POS=436,MASTER_SSL_CA=’/var/lib/mysql/ssl/cacert.pem’,MASTER_SSL_CERT=’/var/lib/mysql/ssl/slave.crt’,MASTER_SSL_KEY=’/var/lib/mysql/ssl/slave.key’,MASTER_SSL=1;</div><div class=\"line\"></div><div class=\"line\">补充：测试是否可以基于ssl远程连接数据库</div><div class=\"line\"><span class=\"comment\"># mysql -ubackuser -h172.18.17.179 -pbackpasswd –ssl-ca=/var/lib/mysql/ssl/cacert.pem –ssl-cert=/var/lib/mysql/ssl/slave.crt –ssl-key=/var/lib/mysql/ssl/slave.key</span></div><div class=\"line\"></div><div class=\"line\">参考：</div><div class=\"line\">  | MASTER_SSL = &#123;0|1&#125;</div><div class=\"line\">  | MASTER_SSL_CA = ‘ca_file_name’</div><div class=\"line\">  | MASTER_SSL_CERT = ‘cert_file_name’</div><div class=\"line\">  | MASTER_SSL_KEY = ‘key_file_name’</div></pre></td></tr></table></figure></p>\n<h2 id=\"MySQL复制的监控和维护\"><a href=\"#MySQL复制的监控和维护\" class=\"headerlink\" title=\"MySQL复制的监控和维护\"></a>MySQL复制的监控和维护</h2><h3 id=\"日志清理：\"><a href=\"#日志清理：\" class=\"headerlink\" title=\"日志清理：\"></a>日志清理：</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">PURGE</span> <span class=\"built_in\">BINARY</span> <span class=\"keyword\">LOGS</span> <span class=\"keyword\">TO</span> ‘mysql-<span class=\"keyword\">bin</span><span class=\"number\">.010</span>’ 表示清理<span class=\"number\">010</span>之前的所有日志（不包含<span class=\"number\">010</span>）</div><div class=\"line\"><span class=\"keyword\">PURGE</span> <span class=\"built_in\">BINARY</span> <span class=\"keyword\">LOGS</span> <span class=\"keyword\">BEFORE</span> ‘<span class=\"number\">2016</span><span class=\"number\">-05</span><span class=\"number\">-15</span> <span class=\"number\">22</span>:<span class=\"number\">26</span>:<span class=\"number\">27</span>’ 表示清理此时间点之前的所有日志</div></pre></td></tr></table></figure>\n<p><strong> 注意：谨慎清理，除非你知道你在做什么 </strong></p>\n<h3 id=\"复制监控：\"><a href=\"#复制监控：\" class=\"headerlink\" title=\"复制监控：\"></a>复制监控：</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">SHOW</span> <span class=\"keyword\">MASTER</span> <span class=\"keyword\">STATUS</span>;</div><div class=\"line\"><span class=\"keyword\">SHOW</span> <span class=\"keyword\">BINLOG</span> ENVENT;</div><div class=\"line\"><span class=\"keyword\">SHOW</span> <span class=\"keyword\">SHOW</span> <span class=\"built_in\">BINARY</span> <span class=\"keyword\">LOGS</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">SHOW</span> <span class=\"keyword\">SLAVE</span> <span class=\"keyword\">STATUS</span>;</div><div class=\"line\"><span class=\"keyword\">SHOW</span> <span class=\"keyword\">PROCESSLIST</span>;</div></pre></td></tr></table></figure>\n<figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">查看从服务器是否落后于主服务器：</div><div class=\"line\"><span class=\"symbol\">Seconds_Behind_Master:</span> <span class=\"number\">0</span></div><div class=\"line\"></div><div class=\"line\">如何确定主从节点数据是否一致：</div><div class=\"line\">percona-tools提供的工具</div><div class=\"line\"></div><div class=\"line\">数据不一致如何修复：</div><div class=\"line\">备份主服务器的数据，重新恢复到从服务器</div></pre></td></tr></table></figure>"},{"title":"MySQL备份","abbrlink":"8255276b","date":"2016-07-16T16:00:00.000Z","_content":"\n> 备份的本质就是将数据集另存一个副本，但是原数据会不停的发生变化，所以利用备份只能回复到数据变化之前的数据。那变化之后的呢？所以制定一个好的备份策略很重要\n\n<!--more-->\n\n# 一、备份的目的\n- 做灾难恢复：对损坏的数据进行恢复和还原\n- 需求改变：因需求改变而需要把数据还原到改变以前\n- 测试：测试新功能是否可用\n\n# 二、备份需要考虑的问题\n- 可以容忍丢失多长时间的数据；\n- 恢复数据要在多长时间内完； \n- 恢复的时候是否需要持续提供服务；\n- 恢复的对象，是整个库，多个表，还是单个库，单个表。\n\n# 三、备份的类型\n\n## 1、根据是否需要数据库离线\n- 冷备（cold backup）：需要关mysql服务，读写请求均不允许状态下进行；线上服务读写操作均不可执行\n- 温备（warm backup）： 服务在线，但仅支持读请求，不允许写请求；\n- 热备（hot backup）：备份的同时，业务不受影响。线上服务读写均可执行\n\n>实际上，热备份最复杂，备份难度最大，因为热备份要考虑备份的同时新数据产生的变化导致备份\n数据前后时间戳不一致，这样会导致备份失效，温备份就避免备份时数据会发生改变，因为对数据\n库的所有执行了读锁，不能写入数据，数据也就不会发生变化，但对业务的影响也是很明显的，而\n冷备，在备份时整个业务都需终止，基本是不可取的\n\n\n**注：**\n>- 这种类型的备份，取决于业务的需求，而不是备份工具\n- MyISAM不支持热备，InnoDB支持热备，但是需要专门的工具\n\n## 2、根据要备份的数据集合的范围\n\n- 完全备份：full backup，备份整个数据集\n- 部分备份：只备份数据子集（如数据库的某张表）\n- 增量备份: incremental backup 上次完全备份或增量备份以来改变了的数据，不能单独使用，要借助完全备份，备份的频率取决于数据的更新频率。\n```\n备份模型如下：\n——–>|———>|———->\n完整备份   差异备份1   差异备份2\n还原：先还原完全备份数据，再恢复每一个增量备份的数据\n```\n**增量备份的优点是占用磁盘空间少，但恢复数据比较麻烦**\n- 差异备份：differential backup 上次完全备份以来改变了的数据。\n\n```\n备份模型如下：\n——–> 完全备份\n     \t|——–> 第一次差异备份\n     \t|—————–> 第二次差异备份\n\n还原：先还原完全备份数据，再还原差异备份的数据\n```\n**差异备份占用磁盘空间多，但恢复数据较为方便**\n**建议的恢复策略：**\n>- 完全+增量+二进制日志\n- 完全+差异+二进制日志\n\n## 3、根据备份数据或文件\n### 物理备份：直接备份数据文件\n> 物理备份时文件系统上的数据文件归档复制，简单易用，无需第额外三方工具，备份的数据量较大\n时，建议使用物理，备份而逻辑备份一般需要借助额外的备份工具进行，通过mysql协议连接服务\n器将数据抽取出来\n\n```\n优点：\n\t备份和恢复操作都比较简单，能够跨mysql的版本，\n\t恢复速度快，属于文件系统级别的\n建议：\n\t不要假设备份一定可用，要测试\n\tmysql>check tables；检测表是否可用\n```\n### 逻辑备份: 备份表中的数据和代码\n> 逻辑备份与存储引擎无关\n通过从数据库导出数据进行备份（需要相关备份工具）\n\n```\n优点：\n\t恢复简单、\n\t备份的结果为ASCII文件，可以编辑\n\t与存储引擎无关\n\t可以通过网络备份和恢复\n缺点：\n\t备份或恢复都需要mysql服务器进程参与\n\t备份结果占据更多的空间，\n\t浮点数可能会丢失精度\n\t还原之后，索引需要重建\n```\n#### 备份时需要考虑的因素：\n```\n持锁多久\n– 能够接收业务中断的时间\n备份过程的时长\n– 预计备份所要消耗的时间，是否能在对业务影响最小的时间段内完成备份操作\n备份负载\n– 备份会加大磁盘IO压力，可能会导致业务中断，所以备份尽量避免在服务的高负载的时间段\n恢复过程的时长\n– 当数据损坏时，能够接收多大的恢复时长（分分钟几百万上下），若要尽量缩短数据恢复时间\n应该在平时就需要演练数据恢复的过程，一是确保备份的数据可用，二是熟悉恢复流程，可能需多\n个部门的协调，因为在巨大的压力下（若数据丢失时），人很可能是大脑一片空白，很可能会误操\n作，要是再把备份的数据删掉，那就真的需要跑路了\n```\n# 四、备份的对象\n> 1、 数据；\n2、配置文件；\n3、代码：存储过程、存储函数、触发器、事件调度器\n4、os相关的配置文件\n5、复制相关的配置\n6、二进制日志、innodb事物日志文件\n\n# 五、备份的方案和工具\n\n## 备份方案：\n> 数据集：完全+增量（常用备份方式）\n备份手段：物理，逻辑\n\n** 注意：热备份和冷备份于备份方式（物理，逻辑）是两个话题 **\n\n## 备份工具：\n\n### 逻辑备份工具：mysqldump\n- 适用所有存储引擎\n- 温备份、完全备份、部分备份，对innodb支持热备份\n\n### 物理备份：cp,tar等复制归档工具\n- 适用所有存储引擎\n- 冷备份，完全备份，部分备份\n\nlvm2的快照：几乎热备，需借助cp等文件管理工具进行备份\nmysqlhotcopy: 几乎冷备，仅适用于MyISAM引擎 \nxtrabackup: \n\n# 备份工具的选择：\n\n> mysqldump+复制binlog：\nmysqldump：完全备份；\n复制binlog中指定时间范围的event：增量备份；\n\n> lvm2快照+复制binlog：\nlvm2快照：使用cp或tar等做物理备份；完全备份；\n复制binlog中指定时间范围的event：增量备份；\n\n> xtrabackup：\n由Percona提供的支持对InnoDB做热备(物理备份)的工具；\n完全备份、增量备份；\n\n> 逻辑备份工具：mysqldump, mysqldumper(实现并行逻辑备份), phpmyadmin\n\n> 逻辑备份是将schema和数据存储在一起；是巨大的SQL语句，其将拉取出来的数据定义成INSERT语句，也就是每表要插入的数据；其同时又是一个巨大的备份文件，因为备份的数据都是存储在单个文件中\n\nschema：表结构（表的相关属性定义）\n\n\n## mysqldump使用方法\n```\nmysqldump [options] [db_name [tbl_name …]]\noption:\n-A，–all-databases: 备份所有数据库\n-B，–databases db_name: 备份指定的数据库\n-E: 备份指定数据相关的所有event scheduler\n-R: 备份指定数据相关的所有存储过程和存储函数\n–triggers：备份表相关的触发器\n–master-data=# （#为数字，如下）\n1：记录为CHANGE MASTER TO 语句，此语句不被注释（功用为扮演为从服务器）\n2：基于为注释的CHANGE MASTER TO语句 （建议使用此种方式）\n\n–master-data=2的作用：\n备份时，在导出的数据文件中添加一条注释信息，此注释信息为执行“备份一刻”所使用的\n二进制日志文件及其记录的当前事务起始位置（作用是用于时间点还原，还原日志文件记\n录的事务起始位置之后所发生事件）\n\n提醒：时间点还原使用二进制日志文件可能不止一个\n\n–flush-logs: 锁定表后滚动二进制日志\n– 主要用于表锁定后滚动二进制日志，然后备份二进制日志文件\n\n–lock-all-tables: 锁定所有库的所有表（温备）\n– 用于使用完全备份时施加全局读锁\n\n–lock-tables: 对于每个单独的数据库，在启动备份前锁定其所有表（温备）\n– 用备份单独指定的某个或某些个数据库时执行读锁\n\n–single-transaction：在备份时启动一个事务（热备） \n– 适用于事务型存储引擎的热备份选项（InnoDB适用）\n```\n\n### 主要有三种备份模式：\n \n#### 备份指定数据库或数据库的表（可以是多张表）\n```\nshell> mysqldump [options] db_name [tbl_name ...] \n```\n** 注意：不会自动生成CREATE DATABASE的语句（即导入时需要手动创建数据库） **\n\n\n#### 备份指定的数据库（可以指定多个数据库）\n```\nshell> mysqldump [options] --databases db_name ...\n```\n\n#### 备份所有数据库，全库备份\n```\nshell> mysqldump [options] --all-databases\n```\n\n## 备份示例： \n### 备份指定数据库：\n```\nmysqldump -uroot -hlocalhost -p --databases ops > /root/backup.sql # 备份指定数据库\n```\n\n### 备份指定数据库的某张表\n```\nmysqldump -uroot -hloaclhost -p ops students > /root/backup.sql # 备份指定数据库的某张表\n```\n\n### 备份所有数据库\n```\nmysqldump -uroot -hlocalhost -p --all-databases > /root/backup.sql  # 备份所有数据库\n```\n\n** 注意：二进制日志文件至关重要，建议存储在与存储数据不同的磁盘上，并且要做磁盘冗余，如果\n 条件允许，事物日志也应该放在非数据且有冗余的磁盘上 **\n\n> 备份思路：每周执行一次完整备份，每天执行一次增量备份（备份二进制日志），完整备份和增量备份的频率需依照数据的数据变化速度调整\n\n## 备份恢复示例：\n 完整备份+增量备份（二进制日志）\n\n### (1)完全备份：(温备)\n\n```\nmysqldump --all-databases --lock-all-tables --master-data=2 > /backups/alldb.sql\n```\n\n### (2)数据还原\n\n#### 1、导入备份数据：\n```\n mysql < /root/alldb.sql\n```\n\n#### 2、时间点还原\n查询备份数据获取事件位置，信息如下：\n```\nCHANGE MASTER TO MASTER_LOG_FILE='bin_log.000005', MASTER_LOG_POS=245;\n\n使用mysqlbinlog抽取指定位置之后的事件：\nshell> mysqlbinlog --start-position=254 bin_log.000005> /backups/binlog.sql\n\n```\n** 注意：指定的位置往后所发生的事件记录于二进制文件可能不止一个，多以肯能需要导入多个二进制日志文件进行时间点恢复 **\n\n使用mysqlbinlog抽取指定位置之后的事件：\n```\nshell> mysqlbinlog --start-position=254 bin_log.000005> /backups/binlog.sql\n```\n** 注意：指定的位置往后所发生的事件记录于二进制文件可能不止一个，多以肯能需要导入多个二进制日志文件进行时间点恢复 **\n\n#### 3、导入到数据库中\n```\nshell> mysql < binlog.sql\n```\n\n### 二进制日志备份还原要点：\n> - 前最好先执行FLUSH LOGS滚动日志\n- 使用二进制日志文件还原时，要先禁用二进制日志记录，再执行还原操作，还原后再启用\n\n可以基于脚本实现自动备份\n注意尝试使用mysqldump实现热备份\n\n## 基于lvm2的备份\n\n> 前提，创建好逻辑卷格式化后挂载使用\n\n### (1)请求锁定所有表\n```\nmysql> FLUSH TABLES WITH READ LOCK;\n– 注意：如果有写操作事务在进行，可能需要等待很长时间\n```\n### (2)记录二进制日志文件及事件位置\n滚动日志：（不滚问题也不大）\n```\nmysql> FLUSH LOGS;\nshell> mysql -e \"FLUSH LOGS\" \n```\n导出二进制日志列表\n```\nshell> mysql -e \"SHOW LOGS STATUS\" > PATH\n```\n### (3)创建快照卷\n```\nlvcreate -L SIZE -s -p r -n NAME /YOUR_LV_PATH\n```\n### (4)释放全局锁\n\n```\nmysql> UBLOCK TABLES;\n```\n### (5)挂载快照卷，执行数据备份\nmount && cp\n\n### (6)完成备份，删除快照卷\nrm命令\n\n### (7)制定好策略，通过源卷备份二进制日志\ncp binlog\n\n** 注意：二进制文件备份要在原卷实行，不需要快照，在执行flush logs之后就应该执行备份操作 **\n** 注意：物理物质的文件，回复时要确保属主属组时mysql （cp使用-a选项） **\n\n## xtrabackup备份\n\n> perconna出品,www.perconna.com\ninnobackupex为xtrabackup的前端工具,可理解为简装版的xtrabackup\n提醒：在实际的应用场景中，可能会需要创建授权专门的备份用户\n\n### InnoDB表空间管理简单概念\n> innoDB以表空间管理数据库，其管理方式是将表空间分页管理的，可以理解为block，每个block叫\n做一个innodb页（通常为16k大小），每个innodb页有一个日志序列号，称为LSN，数据页面发生变\n化时，日志序列号将滚动提升\n\n### xtrabackup的备份工作原理或要点\n- xtrabackup的备份基于innoDB页进行，通过识别LSN的变化判断页面数据是否发生改变；\n- 完全备份，就是备份表空间的所有数据块，即innoDB页；\n- 增量备份，仅备份序列号发生改变的数据块；\n- 备份的是数据和事务日志文件\n\n### 备份恢复要点\n\n- 如果只做完全备份的恢复，没有增量备份，恢复数据时，完全备份整合应该将事务日志中尚未提\n交的事务同步到数据中，未提交的事务进行回滚\n\n- 如果是完全备份+增量备份恢复，恢复数据时，完全备份整合应该将事务日志中未提交的事务同\n步至数据中（redo only），切记不可回滚未提交的事务，最后再整合增量备份\n\n- 要做时间点还原，二进制日志必备份恢复不可少\n\n### 完全备份和恢复\n\n> 前提：\n1.确保表示类型是InnoDB，只有innodb支持热备和增量备份\n2.确保inndb_file_per_table = ON (很重要)\n\n#### 完全备份\n```\ninnobackupex --user=DBUSER --password=DBPASSWD /SAVE/TO/SOMEWHERE\n```\n\n#### 完全备份恢复\n** 注意：要在需要恢复数据的服务端执行以下操作 **\n\n##### 整理备份\n```\ninnobackpex –apply-log /BACKUP_PATH\n```\n确保有complete OK信息输出，表示整理备份可用\n\n#### 恢复\n** 注意：不需要启动mysql **\n```\ninnobackupex –copy-back /PATH/TO/BACKUP_DIR\n```\n\n> 通过备份目录下的xtrabackup_checkpoints可查看备份的信息（如备份类型）\n\n## 增量备份和恢复\n```\ninnobackupex –incremental /SAVE_TO_SOMEWHERE –incremental-basedir=BASEDIR\n–incremental-basedir= 基于谁做增量\n```\n> 增量和差异区别只在于: 是始终基于完全备份来备份数据，还是以最近的完全备份或增量备份来\n\n### 整合完全备份\n```\ninnobackupex –apply-log –redo-only BACKUP_PATH（完全备份）\n```\n** 注意：恢复的操作只需要提交，而不要回滚 **\n\n### 整合每一个增量备份：\n```\ninnobackupex –apply-log –redo-only BACKUP_PATH –incremental-\ndir=INCREMENTAL_DIR1 （增量备份1）\n\ninnobackupex –apply-log –redo-only BACKUP_PATH –incremental-\ndir=INCREMENTAL_DIR2（增量备份2）\n```\n** 注意：增量备份整合一定要使用绝对路径 **\n\n### 恢复\n```\ninnobackupex –copy-back /PATH/TO/BACKUP_DIR（完全备份）\n```\n## 导入或导出单张表\n### 1.导出表\n```\ninnobackuppex –apply-log –export /path/to/backup\n# 会在表空间生成一个以.exp结尾的文件，可用于导入到其他服务器\n```\n### 2.导入表（最好是在不同服务上进行）\n#### 先要创建表\n```\nmysql> CREATE TABLE testtable (...) ENGINE=InnoDB;\n```\n#### 再清空表空间\n```\nmysql> ALTER TABLE DATABASE.TABLE DISCARD TABLESPACE;\n```\n#### 导入表\n> 将导出的表的.ibd文件盒.exp文件复制到当前服务器的数据库目录\n确保属主和属组是mysql，然后执行导入命令\n\n\n```\nmysql> ALTER TABLE mydatabase.mytable IMPORT TABLESTACE;\n```","source":"_posts/2016-07-17-MySQL备份.md","raw":"---\ntitle: MySQL备份\ncategories: 技术与干货\ntag: MySQL\nabbrlink: 8255276b\ndate: 2016-07-17 00:00:00\n---\n\n> 备份的本质就是将数据集另存一个副本，但是原数据会不停的发生变化，所以利用备份只能回复到数据变化之前的数据。那变化之后的呢？所以制定一个好的备份策略很重要\n\n<!--more-->\n\n# 一、备份的目的\n- 做灾难恢复：对损坏的数据进行恢复和还原\n- 需求改变：因需求改变而需要把数据还原到改变以前\n- 测试：测试新功能是否可用\n\n# 二、备份需要考虑的问题\n- 可以容忍丢失多长时间的数据；\n- 恢复数据要在多长时间内完； \n- 恢复的时候是否需要持续提供服务；\n- 恢复的对象，是整个库，多个表，还是单个库，单个表。\n\n# 三、备份的类型\n\n## 1、根据是否需要数据库离线\n- 冷备（cold backup）：需要关mysql服务，读写请求均不允许状态下进行；线上服务读写操作均不可执行\n- 温备（warm backup）： 服务在线，但仅支持读请求，不允许写请求；\n- 热备（hot backup）：备份的同时，业务不受影响。线上服务读写均可执行\n\n>实际上，热备份最复杂，备份难度最大，因为热备份要考虑备份的同时新数据产生的变化导致备份\n数据前后时间戳不一致，这样会导致备份失效，温备份就避免备份时数据会发生改变，因为对数据\n库的所有执行了读锁，不能写入数据，数据也就不会发生变化，但对业务的影响也是很明显的，而\n冷备，在备份时整个业务都需终止，基本是不可取的\n\n\n**注：**\n>- 这种类型的备份，取决于业务的需求，而不是备份工具\n- MyISAM不支持热备，InnoDB支持热备，但是需要专门的工具\n\n## 2、根据要备份的数据集合的范围\n\n- 完全备份：full backup，备份整个数据集\n- 部分备份：只备份数据子集（如数据库的某张表）\n- 增量备份: incremental backup 上次完全备份或增量备份以来改变了的数据，不能单独使用，要借助完全备份，备份的频率取决于数据的更新频率。\n```\n备份模型如下：\n——–>|———>|———->\n完整备份   差异备份1   差异备份2\n还原：先还原完全备份数据，再恢复每一个增量备份的数据\n```\n**增量备份的优点是占用磁盘空间少，但恢复数据比较麻烦**\n- 差异备份：differential backup 上次完全备份以来改变了的数据。\n\n```\n备份模型如下：\n——–> 完全备份\n     \t|——–> 第一次差异备份\n     \t|—————–> 第二次差异备份\n\n还原：先还原完全备份数据，再还原差异备份的数据\n```\n**差异备份占用磁盘空间多，但恢复数据较为方便**\n**建议的恢复策略：**\n>- 完全+增量+二进制日志\n- 完全+差异+二进制日志\n\n## 3、根据备份数据或文件\n### 物理备份：直接备份数据文件\n> 物理备份时文件系统上的数据文件归档复制，简单易用，无需第额外三方工具，备份的数据量较大\n时，建议使用物理，备份而逻辑备份一般需要借助额外的备份工具进行，通过mysql协议连接服务\n器将数据抽取出来\n\n```\n优点：\n\t备份和恢复操作都比较简单，能够跨mysql的版本，\n\t恢复速度快，属于文件系统级别的\n建议：\n\t不要假设备份一定可用，要测试\n\tmysql>check tables；检测表是否可用\n```\n### 逻辑备份: 备份表中的数据和代码\n> 逻辑备份与存储引擎无关\n通过从数据库导出数据进行备份（需要相关备份工具）\n\n```\n优点：\n\t恢复简单、\n\t备份的结果为ASCII文件，可以编辑\n\t与存储引擎无关\n\t可以通过网络备份和恢复\n缺点：\n\t备份或恢复都需要mysql服务器进程参与\n\t备份结果占据更多的空间，\n\t浮点数可能会丢失精度\n\t还原之后，索引需要重建\n```\n#### 备份时需要考虑的因素：\n```\n持锁多久\n– 能够接收业务中断的时间\n备份过程的时长\n– 预计备份所要消耗的时间，是否能在对业务影响最小的时间段内完成备份操作\n备份负载\n– 备份会加大磁盘IO压力，可能会导致业务中断，所以备份尽量避免在服务的高负载的时间段\n恢复过程的时长\n– 当数据损坏时，能够接收多大的恢复时长（分分钟几百万上下），若要尽量缩短数据恢复时间\n应该在平时就需要演练数据恢复的过程，一是确保备份的数据可用，二是熟悉恢复流程，可能需多\n个部门的协调，因为在巨大的压力下（若数据丢失时），人很可能是大脑一片空白，很可能会误操\n作，要是再把备份的数据删掉，那就真的需要跑路了\n```\n# 四、备份的对象\n> 1、 数据；\n2、配置文件；\n3、代码：存储过程、存储函数、触发器、事件调度器\n4、os相关的配置文件\n5、复制相关的配置\n6、二进制日志、innodb事物日志文件\n\n# 五、备份的方案和工具\n\n## 备份方案：\n> 数据集：完全+增量（常用备份方式）\n备份手段：物理，逻辑\n\n** 注意：热备份和冷备份于备份方式（物理，逻辑）是两个话题 **\n\n## 备份工具：\n\n### 逻辑备份工具：mysqldump\n- 适用所有存储引擎\n- 温备份、完全备份、部分备份，对innodb支持热备份\n\n### 物理备份：cp,tar等复制归档工具\n- 适用所有存储引擎\n- 冷备份，完全备份，部分备份\n\nlvm2的快照：几乎热备，需借助cp等文件管理工具进行备份\nmysqlhotcopy: 几乎冷备，仅适用于MyISAM引擎 \nxtrabackup: \n\n# 备份工具的选择：\n\n> mysqldump+复制binlog：\nmysqldump：完全备份；\n复制binlog中指定时间范围的event：增量备份；\n\n> lvm2快照+复制binlog：\nlvm2快照：使用cp或tar等做物理备份；完全备份；\n复制binlog中指定时间范围的event：增量备份；\n\n> xtrabackup：\n由Percona提供的支持对InnoDB做热备(物理备份)的工具；\n完全备份、增量备份；\n\n> 逻辑备份工具：mysqldump, mysqldumper(实现并行逻辑备份), phpmyadmin\n\n> 逻辑备份是将schema和数据存储在一起；是巨大的SQL语句，其将拉取出来的数据定义成INSERT语句，也就是每表要插入的数据；其同时又是一个巨大的备份文件，因为备份的数据都是存储在单个文件中\n\nschema：表结构（表的相关属性定义）\n\n\n## mysqldump使用方法\n```\nmysqldump [options] [db_name [tbl_name …]]\noption:\n-A，–all-databases: 备份所有数据库\n-B，–databases db_name: 备份指定的数据库\n-E: 备份指定数据相关的所有event scheduler\n-R: 备份指定数据相关的所有存储过程和存储函数\n–triggers：备份表相关的触发器\n–master-data=# （#为数字，如下）\n1：记录为CHANGE MASTER TO 语句，此语句不被注释（功用为扮演为从服务器）\n2：基于为注释的CHANGE MASTER TO语句 （建议使用此种方式）\n\n–master-data=2的作用：\n备份时，在导出的数据文件中添加一条注释信息，此注释信息为执行“备份一刻”所使用的\n二进制日志文件及其记录的当前事务起始位置（作用是用于时间点还原，还原日志文件记\n录的事务起始位置之后所发生事件）\n\n提醒：时间点还原使用二进制日志文件可能不止一个\n\n–flush-logs: 锁定表后滚动二进制日志\n– 主要用于表锁定后滚动二进制日志，然后备份二进制日志文件\n\n–lock-all-tables: 锁定所有库的所有表（温备）\n– 用于使用完全备份时施加全局读锁\n\n–lock-tables: 对于每个单独的数据库，在启动备份前锁定其所有表（温备）\n– 用备份单独指定的某个或某些个数据库时执行读锁\n\n–single-transaction：在备份时启动一个事务（热备） \n– 适用于事务型存储引擎的热备份选项（InnoDB适用）\n```\n\n### 主要有三种备份模式：\n \n#### 备份指定数据库或数据库的表（可以是多张表）\n```\nshell> mysqldump [options] db_name [tbl_name ...] \n```\n** 注意：不会自动生成CREATE DATABASE的语句（即导入时需要手动创建数据库） **\n\n\n#### 备份指定的数据库（可以指定多个数据库）\n```\nshell> mysqldump [options] --databases db_name ...\n```\n\n#### 备份所有数据库，全库备份\n```\nshell> mysqldump [options] --all-databases\n```\n\n## 备份示例： \n### 备份指定数据库：\n```\nmysqldump -uroot -hlocalhost -p --databases ops > /root/backup.sql # 备份指定数据库\n```\n\n### 备份指定数据库的某张表\n```\nmysqldump -uroot -hloaclhost -p ops students > /root/backup.sql # 备份指定数据库的某张表\n```\n\n### 备份所有数据库\n```\nmysqldump -uroot -hlocalhost -p --all-databases > /root/backup.sql  # 备份所有数据库\n```\n\n** 注意：二进制日志文件至关重要，建议存储在与存储数据不同的磁盘上，并且要做磁盘冗余，如果\n 条件允许，事物日志也应该放在非数据且有冗余的磁盘上 **\n\n> 备份思路：每周执行一次完整备份，每天执行一次增量备份（备份二进制日志），完整备份和增量备份的频率需依照数据的数据变化速度调整\n\n## 备份恢复示例：\n 完整备份+增量备份（二进制日志）\n\n### (1)完全备份：(温备)\n\n```\nmysqldump --all-databases --lock-all-tables --master-data=2 > /backups/alldb.sql\n```\n\n### (2)数据还原\n\n#### 1、导入备份数据：\n```\n mysql < /root/alldb.sql\n```\n\n#### 2、时间点还原\n查询备份数据获取事件位置，信息如下：\n```\nCHANGE MASTER TO MASTER_LOG_FILE='bin_log.000005', MASTER_LOG_POS=245;\n\n使用mysqlbinlog抽取指定位置之后的事件：\nshell> mysqlbinlog --start-position=254 bin_log.000005> /backups/binlog.sql\n\n```\n** 注意：指定的位置往后所发生的事件记录于二进制文件可能不止一个，多以肯能需要导入多个二进制日志文件进行时间点恢复 **\n\n使用mysqlbinlog抽取指定位置之后的事件：\n```\nshell> mysqlbinlog --start-position=254 bin_log.000005> /backups/binlog.sql\n```\n** 注意：指定的位置往后所发生的事件记录于二进制文件可能不止一个，多以肯能需要导入多个二进制日志文件进行时间点恢复 **\n\n#### 3、导入到数据库中\n```\nshell> mysql < binlog.sql\n```\n\n### 二进制日志备份还原要点：\n> - 前最好先执行FLUSH LOGS滚动日志\n- 使用二进制日志文件还原时，要先禁用二进制日志记录，再执行还原操作，还原后再启用\n\n可以基于脚本实现自动备份\n注意尝试使用mysqldump实现热备份\n\n## 基于lvm2的备份\n\n> 前提，创建好逻辑卷格式化后挂载使用\n\n### (1)请求锁定所有表\n```\nmysql> FLUSH TABLES WITH READ LOCK;\n– 注意：如果有写操作事务在进行，可能需要等待很长时间\n```\n### (2)记录二进制日志文件及事件位置\n滚动日志：（不滚问题也不大）\n```\nmysql> FLUSH LOGS;\nshell> mysql -e \"FLUSH LOGS\" \n```\n导出二进制日志列表\n```\nshell> mysql -e \"SHOW LOGS STATUS\" > PATH\n```\n### (3)创建快照卷\n```\nlvcreate -L SIZE -s -p r -n NAME /YOUR_LV_PATH\n```\n### (4)释放全局锁\n\n```\nmysql> UBLOCK TABLES;\n```\n### (5)挂载快照卷，执行数据备份\nmount && cp\n\n### (6)完成备份，删除快照卷\nrm命令\n\n### (7)制定好策略，通过源卷备份二进制日志\ncp binlog\n\n** 注意：二进制文件备份要在原卷实行，不需要快照，在执行flush logs之后就应该执行备份操作 **\n** 注意：物理物质的文件，回复时要确保属主属组时mysql （cp使用-a选项） **\n\n## xtrabackup备份\n\n> perconna出品,www.perconna.com\ninnobackupex为xtrabackup的前端工具,可理解为简装版的xtrabackup\n提醒：在实际的应用场景中，可能会需要创建授权专门的备份用户\n\n### InnoDB表空间管理简单概念\n> innoDB以表空间管理数据库，其管理方式是将表空间分页管理的，可以理解为block，每个block叫\n做一个innodb页（通常为16k大小），每个innodb页有一个日志序列号，称为LSN，数据页面发生变\n化时，日志序列号将滚动提升\n\n### xtrabackup的备份工作原理或要点\n- xtrabackup的备份基于innoDB页进行，通过识别LSN的变化判断页面数据是否发生改变；\n- 完全备份，就是备份表空间的所有数据块，即innoDB页；\n- 增量备份，仅备份序列号发生改变的数据块；\n- 备份的是数据和事务日志文件\n\n### 备份恢复要点\n\n- 如果只做完全备份的恢复，没有增量备份，恢复数据时，完全备份整合应该将事务日志中尚未提\n交的事务同步到数据中，未提交的事务进行回滚\n\n- 如果是完全备份+增量备份恢复，恢复数据时，完全备份整合应该将事务日志中未提交的事务同\n步至数据中（redo only），切记不可回滚未提交的事务，最后再整合增量备份\n\n- 要做时间点还原，二进制日志必备份恢复不可少\n\n### 完全备份和恢复\n\n> 前提：\n1.确保表示类型是InnoDB，只有innodb支持热备和增量备份\n2.确保inndb_file_per_table = ON (很重要)\n\n#### 完全备份\n```\ninnobackupex --user=DBUSER --password=DBPASSWD /SAVE/TO/SOMEWHERE\n```\n\n#### 完全备份恢复\n** 注意：要在需要恢复数据的服务端执行以下操作 **\n\n##### 整理备份\n```\ninnobackpex –apply-log /BACKUP_PATH\n```\n确保有complete OK信息输出，表示整理备份可用\n\n#### 恢复\n** 注意：不需要启动mysql **\n```\ninnobackupex –copy-back /PATH/TO/BACKUP_DIR\n```\n\n> 通过备份目录下的xtrabackup_checkpoints可查看备份的信息（如备份类型）\n\n## 增量备份和恢复\n```\ninnobackupex –incremental /SAVE_TO_SOMEWHERE –incremental-basedir=BASEDIR\n–incremental-basedir= 基于谁做增量\n```\n> 增量和差异区别只在于: 是始终基于完全备份来备份数据，还是以最近的完全备份或增量备份来\n\n### 整合完全备份\n```\ninnobackupex –apply-log –redo-only BACKUP_PATH（完全备份）\n```\n** 注意：恢复的操作只需要提交，而不要回滚 **\n\n### 整合每一个增量备份：\n```\ninnobackupex –apply-log –redo-only BACKUP_PATH –incremental-\ndir=INCREMENTAL_DIR1 （增量备份1）\n\ninnobackupex –apply-log –redo-only BACKUP_PATH –incremental-\ndir=INCREMENTAL_DIR2（增量备份2）\n```\n** 注意：增量备份整合一定要使用绝对路径 **\n\n### 恢复\n```\ninnobackupex –copy-back /PATH/TO/BACKUP_DIR（完全备份）\n```\n## 导入或导出单张表\n### 1.导出表\n```\ninnobackuppex –apply-log –export /path/to/backup\n# 会在表空间生成一个以.exp结尾的文件，可用于导入到其他服务器\n```\n### 2.导入表（最好是在不同服务上进行）\n#### 先要创建表\n```\nmysql> CREATE TABLE testtable (...) ENGINE=InnoDB;\n```\n#### 再清空表空间\n```\nmysql> ALTER TABLE DATABASE.TABLE DISCARD TABLESPACE;\n```\n#### 导入表\n> 将导出的表的.ibd文件盒.exp文件复制到当前服务器的数据库目录\n确保属主和属组是mysql，然后执行导入命令\n\n\n```\nmysql> ALTER TABLE mydatabase.mytable IMPORT TABLESTACE;\n```","slug":"2016-07-17-MySQL备份","published":1,"updated":"2017-02-14T13:42:45.410Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5mkehrt001oao94k8mkl9q0","content":"<blockquote>\n<p>备份的本质就是将数据集另存一个副本，但是原数据会不停的发生变化，所以利用备份只能回复到数据变化之前的数据。那变化之后的呢？所以制定一个好的备份策略很重要</p>\n</blockquote>\n<a id=\"more\"></a>\n<h1 id=\"一、备份的目的\"><a href=\"#一、备份的目的\" class=\"headerlink\" title=\"一、备份的目的\"></a>一、备份的目的</h1><ul>\n<li>做灾难恢复：对损坏的数据进行恢复和还原</li>\n<li>需求改变：因需求改变而需要把数据还原到改变以前</li>\n<li>测试：测试新功能是否可用</li>\n</ul>\n<h1 id=\"二、备份需要考虑的问题\"><a href=\"#二、备份需要考虑的问题\" class=\"headerlink\" title=\"二、备份需要考虑的问题\"></a>二、备份需要考虑的问题</h1><ul>\n<li>可以容忍丢失多长时间的数据；</li>\n<li>恢复数据要在多长时间内完； </li>\n<li>恢复的时候是否需要持续提供服务；</li>\n<li>恢复的对象，是整个库，多个表，还是单个库，单个表。</li>\n</ul>\n<h1 id=\"三、备份的类型\"><a href=\"#三、备份的类型\" class=\"headerlink\" title=\"三、备份的类型\"></a>三、备份的类型</h1><h2 id=\"1、根据是否需要数据库离线\"><a href=\"#1、根据是否需要数据库离线\" class=\"headerlink\" title=\"1、根据是否需要数据库离线\"></a>1、根据是否需要数据库离线</h2><ul>\n<li>冷备（cold backup）：需要关mysql服务，读写请求均不允许状态下进行；线上服务读写操作均不可执行</li>\n<li>温备（warm backup）： 服务在线，但仅支持读请求，不允许写请求；</li>\n<li>热备（hot backup）：备份的同时，业务不受影响。线上服务读写均可执行</li>\n</ul>\n<blockquote>\n<p>实际上，热备份最复杂，备份难度最大，因为热备份要考虑备份的同时新数据产生的变化导致备份<br>数据前后时间戳不一致，这样会导致备份失效，温备份就避免备份时数据会发生改变，因为对数据<br>库的所有执行了读锁，不能写入数据，数据也就不会发生变化，但对业务的影响也是很明显的，而<br>冷备，在备份时整个业务都需终止，基本是不可取的</p>\n</blockquote>\n<p><strong>注：</strong></p>\n<blockquote>\n<ul>\n<li>这种类型的备份，取决于业务的需求，而不是备份工具</li>\n<li>MyISAM不支持热备，InnoDB支持热备，但是需要专门的工具</li>\n</ul>\n</blockquote>\n<h2 id=\"2、根据要备份的数据集合的范围\"><a href=\"#2、根据要备份的数据集合的范围\" class=\"headerlink\" title=\"2、根据要备份的数据集合的范围\"></a>2、根据要备份的数据集合的范围</h2><ul>\n<li>完全备份：full backup，备份整个数据集</li>\n<li>部分备份：只备份数据子集（如数据库的某张表）</li>\n<li>增量备份: incremental backup 上次完全备份或增量备份以来改变了的数据，不能单独使用，要借助完全备份，备份的频率取决于数据的更新频率。<figure class=\"highlight gherkin\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">备份模型如下：</div><div class=\"line\">——–&gt;|<span class=\"string\">———&gt;</span>|<span class=\"string\">———-&gt;</span></div><div class=\"line\">完整备份   差异备份1   差异备份2</div><div class=\"line\">还原：先还原完全备份数据，再恢复每一个增量备份的数据</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><strong>增量备份的优点是占用磁盘空间少，但恢复数据比较麻烦</strong></p>\n<ul>\n<li>差异备份：differential backup 上次完全备份以来改变了的数据。</li>\n</ul>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">备份模型如下：</div><div class=\"line\">——–&gt; 完全备份</div><div class=\"line\">     \t<span class=\"string\">|——–&gt; 第一次差异备份</span></div><div class=\"line\">     \t<span class=\"string\">|—————–&gt; 第二次差异备份</span></div><div class=\"line\"></div><div class=\"line\">还原：先还原完全备份数据，再还原差异备份的数据</div></pre></td></tr></table></figure>\n<p><strong>差异备份占用磁盘空间多，但恢复数据较为方便</strong><br><strong>建议的恢复策略：</strong></p>\n<blockquote>\n<ul>\n<li>完全+增量+二进制日志</li>\n<li>完全+差异+二进制日志</li>\n</ul>\n</blockquote>\n<h2 id=\"3、根据备份数据或文件\"><a href=\"#3、根据备份数据或文件\" class=\"headerlink\" title=\"3、根据备份数据或文件\"></a>3、根据备份数据或文件</h2><h3 id=\"物理备份：直接备份数据文件\"><a href=\"#物理备份：直接备份数据文件\" class=\"headerlink\" title=\"物理备份：直接备份数据文件\"></a>物理备份：直接备份数据文件</h3><blockquote>\n<p>物理备份时文件系统上的数据文件归档复制，简单易用，无需第额外三方工具，备份的数据量较大<br>时，建议使用物理，备份而逻辑备份一般需要借助额外的备份工具进行，通过mysql协议连接服务<br>器将数据抽取出来</p>\n</blockquote>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">优点：</div><div class=\"line\">\t备份和恢复操作都比较简单，能够跨mysql的版本，</div><div class=\"line\">\t恢复速度快，属于文件系统级别的</div><div class=\"line\">建议：</div><div class=\"line\">\t不要假设备份一定可用，要测试</div><div class=\"line\"><span class=\"meta\">\tmysql&gt;</span><span class=\"bash\">check tables；检测表是否可用</span></div></pre></td></tr></table></figure>\n<h3 id=\"逻辑备份-备份表中的数据和代码\"><a href=\"#逻辑备份-备份表中的数据和代码\" class=\"headerlink\" title=\"逻辑备份: 备份表中的数据和代码\"></a>逻辑备份: 备份表中的数据和代码</h3><blockquote>\n<p>逻辑备份与存储引擎无关<br>通过从数据库导出数据进行备份（需要相关备份工具）</p>\n</blockquote>\n<figure class=\"highlight cos\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">优点：</div><div class=\"line\">\t恢复简单、</div><div class=\"line\">\t备份的结果为<span class=\"keyword\">ASCII</span>文件，可以编辑</div><div class=\"line\">\t与存储引擎无关</div><div class=\"line\">\t可以通过网络备份和恢复</div><div class=\"line\">缺点：</div><div class=\"line\">\t备份或恢复都需要mysql服务器进程参与</div><div class=\"line\">\t备份结果占据更多的空间，</div><div class=\"line\">\t浮点数可能会丢失精度</div><div class=\"line\">\t还原之后，索引需要重建</div></pre></td></tr></table></figure>\n<h4 id=\"备份时需要考虑的因素：\"><a href=\"#备份时需要考虑的因素：\" class=\"headerlink\" title=\"备份时需要考虑的因素：\"></a>备份时需要考虑的因素：</h4><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">持锁多久</div><div class=\"line\">– 能够接收业务中断的时间</div><div class=\"line\">备份过程的时长</div><div class=\"line\">– 预计备份所要消耗的时间，是否能在对业务影响最小的时间段内完成备份操作</div><div class=\"line\">备份负载</div><div class=\"line\">– 备份会加大磁盘IO压力，可能会导致业务中断，所以备份尽量避免在服务的高负载的时间段</div><div class=\"line\">恢复过程的时长</div><div class=\"line\">– 当数据损坏时，能够接收多大的恢复时长（分分钟几百万上下），若要尽量缩短数据恢复时间</div><div class=\"line\">应该在平时就需要演练数据恢复的过程，一是确保备份的数据可用，二是熟悉恢复流程，可能需多</div><div class=\"line\">个部门的协调，因为在巨大的压力下（若数据丢失时），人很可能是大脑一片空白，很可能会误操</div><div class=\"line\">作，要是再把备份的数据删掉，那就真的需要跑路了</div></pre></td></tr></table></figure>\n<h1 id=\"四、备份的对象\"><a href=\"#四、备份的对象\" class=\"headerlink\" title=\"四、备份的对象\"></a>四、备份的对象</h1><blockquote>\n<p>1、 数据；<br>2、配置文件；<br>3、代码：存储过程、存储函数、触发器、事件调度器<br>4、os相关的配置文件<br>5、复制相关的配置<br>6、二进制日志、innodb事物日志文件</p>\n</blockquote>\n<h1 id=\"五、备份的方案和工具\"><a href=\"#五、备份的方案和工具\" class=\"headerlink\" title=\"五、备份的方案和工具\"></a>五、备份的方案和工具</h1><h2 id=\"备份方案：\"><a href=\"#备份方案：\" class=\"headerlink\" title=\"备份方案：\"></a>备份方案：</h2><blockquote>\n<p>数据集：完全+增量（常用备份方式）<br>备份手段：物理，逻辑</p>\n</blockquote>\n<p><strong> 注意：热备份和冷备份于备份方式（物理，逻辑）是两个话题 </strong></p>\n<h2 id=\"备份工具：\"><a href=\"#备份工具：\" class=\"headerlink\" title=\"备份工具：\"></a>备份工具：</h2><h3 id=\"逻辑备份工具：mysqldump\"><a href=\"#逻辑备份工具：mysqldump\" class=\"headerlink\" title=\"逻辑备份工具：mysqldump\"></a>逻辑备份工具：mysqldump</h3><ul>\n<li>适用所有存储引擎</li>\n<li>温备份、完全备份、部分备份，对innodb支持热备份</li>\n</ul>\n<h3 id=\"物理备份：cp-tar等复制归档工具\"><a href=\"#物理备份：cp-tar等复制归档工具\" class=\"headerlink\" title=\"物理备份：cp,tar等复制归档工具\"></a>物理备份：cp,tar等复制归档工具</h3><ul>\n<li>适用所有存储引擎</li>\n<li>冷备份，完全备份，部分备份</li>\n</ul>\n<p>lvm2的快照：几乎热备，需借助cp等文件管理工具进行备份<br>mysqlhotcopy: 几乎冷备，仅适用于MyISAM引擎<br>xtrabackup: </p>\n<h1 id=\"备份工具的选择：\"><a href=\"#备份工具的选择：\" class=\"headerlink\" title=\"备份工具的选择：\"></a>备份工具的选择：</h1><blockquote>\n<p>mysqldump+复制binlog：<br>mysqldump：完全备份；<br>复制binlog中指定时间范围的event：增量备份；</p>\n<p>lvm2快照+复制binlog：<br>lvm2快照：使用cp或tar等做物理备份；完全备份；<br>复制binlog中指定时间范围的event：增量备份；</p>\n<p>xtrabackup：<br>由Percona提供的支持对InnoDB做热备(物理备份)的工具；<br>完全备份、增量备份；</p>\n<p>逻辑备份工具：mysqldump, mysqldumper(实现并行逻辑备份), phpmyadmin</p>\n<p>逻辑备份是将schema和数据存储在一起；是巨大的SQL语句，其将拉取出来的数据定义成INSERT语句，也就是每表要插入的数据；其同时又是一个巨大的备份文件，因为备份的数据都是存储在单个文件中</p>\n</blockquote>\n<p>schema：表结构（表的相关属性定义）</p>\n<h2 id=\"mysqldump使用方法\"><a href=\"#mysqldump使用方法\" class=\"headerlink\" title=\"mysqldump使用方法\"></a>mysqldump使用方法</h2><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div></pre></td><td class=\"code\"><pre><div class=\"line\">mysqldump [options] [db_name [tbl_name …]]</div><div class=\"line\">option:</div><div class=\"line\">-A，–all-databases: 备份所有数据库</div><div class=\"line\">-B，–databases db_name: 备份指定的数据库</div><div class=\"line\">-E: 备份指定数据相关的所有event<span class=\"built_in\"> scheduler</span></div><div class=\"line\">-R: 备份指定数据相关的所有存储过程和存储函数</div><div class=\"line\">–triggers：备份表相关的触发器</div><div class=\"line\">–<span class=\"attribute\">master-data</span>=# （#为数字，如下）</div><div class=\"line\">1：记录为CHANGE MASTER <span class=\"keyword\">TO</span> 语句，此语句不被注释（功用为扮演为从服务器）</div><div class=\"line\">2：基于为注释的CHANGE MASTER <span class=\"keyword\">TO</span>语句 （建议使用此种方式）</div><div class=\"line\"></div><div class=\"line\">–<span class=\"attribute\">master-data</span>=2的作用：</div><div class=\"line\">备份时，在导出的数据文件中添加一条注释信息，此注释信息为执行“备份一刻”所使用的</div><div class=\"line\">二进制日志文件及其记录的当前事务起始位置（作用是用于时间点还原，还原日志文件记</div><div class=\"line\">录的事务起始位置之后所发生事件）</div><div class=\"line\"></div><div class=\"line\">提醒：时间点还原使用二进制日志文件可能不止一个</div><div class=\"line\"></div><div class=\"line\">–flush-logs: 锁定表后滚动二进制日志</div><div class=\"line\">– 主要用于表锁定后滚动二进制日志，然后备份二进制日志文件</div><div class=\"line\"></div><div class=\"line\">–lock-all-tables: 锁定所有库的所有表（温备）</div><div class=\"line\">– 用于使用完全备份时施加全局读锁</div><div class=\"line\"></div><div class=\"line\">–lock-tables: 对于每个单独的数据库，在启动备份前锁定其所有表（温备）</div><div class=\"line\">– 用备份单独指定的某个或某些个数据库时执行读锁</div><div class=\"line\"></div><div class=\"line\">–single-transaction：在备份时启动一个事务（热备） </div><div class=\"line\">– 适用于事务型存储引擎的热备份选项（InnoDB适用）</div></pre></td></tr></table></figure>\n<h3 id=\"主要有三种备份模式：\"><a href=\"#主要有三种备份模式：\" class=\"headerlink\" title=\"主要有三种备份模式：\"></a>主要有三种备份模式：</h3><h4 id=\"备份指定数据库或数据库的表（可以是多张表）\"><a href=\"#备份指定数据库或数据库的表（可以是多张表）\" class=\"headerlink\" title=\"备份指定数据库或数据库的表（可以是多张表）\"></a>备份指定数据库或数据库的表（可以是多张表）</h4><figure class=\"highlight accesslog\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">shell&gt; mysqldump <span class=\"string\">[options]</span> db_name <span class=\"string\">[tbl_name ...]</span></div></pre></td></tr></table></figure>\n<p><strong> 注意：不会自动生成CREATE DATABASE的语句（即导入时需要手动创建数据库） </strong></p>\n<h4 id=\"备份指定的数据库（可以指定多个数据库）\"><a href=\"#备份指定的数据库（可以指定多个数据库）\" class=\"headerlink\" title=\"备份指定的数据库（可以指定多个数据库）\"></a>备份指定的数据库（可以指定多个数据库）</h4><figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">shell</span><span class=\"bash\">&gt; mysqldump [options] --databases db_name ...</span></div></pre></td></tr></table></figure>\n<h4 id=\"备份所有数据库，全库备份\"><a href=\"#备份所有数据库，全库备份\" class=\"headerlink\" title=\"备份所有数据库，全库备份\"></a>备份所有数据库，全库备份</h4><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">shell</span>&gt; mysqldump [<span class=\"keyword\">options</span>] --<span class=\"keyword\">all</span>-databases</div></pre></td></tr></table></figure>\n<h2 id=\"备份示例：\"><a href=\"#备份示例：\" class=\"headerlink\" title=\"备份示例：\"></a>备份示例：</h2><h3 id=\"备份指定数据库：\"><a href=\"#备份指定数据库：\" class=\"headerlink\" title=\"备份指定数据库：\"></a>备份指定数据库：</h3><figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mysqldump -uroot -hlocalhost -p <span class=\"params\">--databases</span> ops &gt; <span class=\"string\">/root/backup.sql</span> <span class=\"comment\"># 备份指定数据库</span></div></pre></td></tr></table></figure>\n<h3 id=\"备份指定数据库的某张表\"><a href=\"#备份指定数据库的某张表\" class=\"headerlink\" title=\"备份指定数据库的某张表\"></a>备份指定数据库的某张表</h3><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mysqldump -uroot -hloaclhost -p ops students &gt; <span class=\"regexp\">/root/</span>backup.sql <span class=\"comment\"># 备份指定数据库的某张表</span></div></pre></td></tr></table></figure>\n<h3 id=\"备份所有数据库\"><a href=\"#备份所有数据库\" class=\"headerlink\" title=\"备份所有数据库\"></a>备份所有数据库</h3><figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mysqldump -uroot -hlocalhost -p <span class=\"params\">--all-databases</span> &gt; <span class=\"string\">/root/backup.sql</span>  <span class=\"comment\"># 备份所有数据库</span></div></pre></td></tr></table></figure>\n<p><strong> 注意：二进制日志文件至关重要，建议存储在与存储数据不同的磁盘上，并且要做磁盘冗余，如果<br> 条件允许，事物日志也应该放在非数据且有冗余的磁盘上 </strong></p>\n<blockquote>\n<p>备份思路：每周执行一次完整备份，每天执行一次增量备份（备份二进制日志），完整备份和增量备份的频率需依照数据的数据变化速度调整</p>\n</blockquote>\n<h2 id=\"备份恢复示例：\"><a href=\"#备份恢复示例：\" class=\"headerlink\" title=\"备份恢复示例：\"></a>备份恢复示例：</h2><p> 完整备份+增量备份（二进制日志）</p>\n<h3 id=\"1-完全备份：-温备\"><a href=\"#1-完全备份：-温备\" class=\"headerlink\" title=\"(1)完全备份：(温备)\"></a>(1)完全备份：(温备)</h3><figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mysqldump <span class=\"params\">--all-databases</span> <span class=\"params\">--lock-all-tables</span> <span class=\"params\">--master-data=2</span> &gt; <span class=\"string\">/backups/alldb.sql</span></div></pre></td></tr></table></figure>\n<h3 id=\"2-数据还原\"><a href=\"#2-数据还原\" class=\"headerlink\" title=\"(2)数据还原\"></a>(2)数据还原</h3><h4 id=\"1、导入备份数据：\"><a href=\"#1、导入备份数据：\" class=\"headerlink\" title=\"1、导入备份数据：\"></a>1、导入备份数据：</h4><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mysql &lt; <span class=\"regexp\">/root/</span>alldb.sql</div></pre></td></tr></table></figure>\n<h4 id=\"2、时间点还原\"><a href=\"#2、时间点还原\" class=\"headerlink\" title=\"2、时间点还原\"></a>2、时间点还原</h4><p>查询备份数据获取事件位置，信息如下：<br><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">CHANGE MASTER <span class=\"keyword\">TO</span> <span class=\"attribute\">MASTER_LOG_FILE</span>=<span class=\"string\">'bin_log.000005'</span>, <span class=\"attribute\">MASTER_LOG_POS</span>=245;</div><div class=\"line\"></div><div class=\"line\">使用mysqlbinlog抽取指定位置之后的事件：</div><div class=\"line\">shell&gt; mysqlbinlog <span class=\"attribute\">--start-position</span>=254 bin_log.000005&gt; /backups/binlog.sql</div></pre></td></tr></table></figure></p>\n<p><strong> 注意：指定的位置往后所发生的事件记录于二进制文件可能不止一个，多以肯能需要导入多个二进制日志文件进行时间点恢复 </strong></p>\n<p>使用mysqlbinlog抽取指定位置之后的事件：<br><figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">shell</span><span class=\"bash\">&gt; mysqlbinlog --start-position=254 bin_log.000005&gt; /backups/binlog.sql</span></div></pre></td></tr></table></figure></p>\n<p><strong> 注意：指定的位置往后所发生的事件记录于二进制文件可能不止一个，多以肯能需要导入多个二进制日志文件进行时间点恢复 </strong></p>\n<h4 id=\"3、导入到数据库中\"><a href=\"#3、导入到数据库中\" class=\"headerlink\" title=\"3、导入到数据库中\"></a>3、导入到数据库中</h4><figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">shell</span><span class=\"bash\">&gt; mysql &lt; binlog.sql</span></div></pre></td></tr></table></figure>\n<h3 id=\"二进制日志备份还原要点：\"><a href=\"#二进制日志备份还原要点：\" class=\"headerlink\" title=\"二进制日志备份还原要点：\"></a>二进制日志备份还原要点：</h3><blockquote>\n<ul>\n<li>前最好先执行FLUSH LOGS滚动日志</li>\n<li>使用二进制日志文件还原时，要先禁用二进制日志记录，再执行还原操作，还原后再启用</li>\n</ul>\n</blockquote>\n<p>可以基于脚本实现自动备份<br>注意尝试使用mysqldump实现热备份</p>\n<h2 id=\"基于lvm2的备份\"><a href=\"#基于lvm2的备份\" class=\"headerlink\" title=\"基于lvm2的备份\"></a>基于lvm2的备份</h2><blockquote>\n<p>前提，创建好逻辑卷格式化后挂载使用</p>\n</blockquote>\n<h3 id=\"1-请求锁定所有表\"><a href=\"#1-请求锁定所有表\" class=\"headerlink\" title=\"(1)请求锁定所有表\"></a>(1)请求锁定所有表</h3><figure class=\"highlight cos\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">mysql&gt; FLUSH TABLES WITH <span class=\"keyword\">READ</span> <span class=\"keyword\">LOCK</span><span class=\"comment\">;</span></div><div class=\"line\">– 注意：如果有写操作事务在进行，可能需要等待很长时间</div></pre></td></tr></table></figure>\n<h3 id=\"2-记录二进制日志文件及事件位置\"><a href=\"#2-记录二进制日志文件及事件位置\" class=\"headerlink\" title=\"(2)记录二进制日志文件及事件位置\"></a>(2)记录二进制日志文件及事件位置</h3><p>滚动日志：（不滚问题也不大）<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">mysql&gt;</span><span class=\"bash\"> FLUSH LOGS;</span></div><div class=\"line\"><span class=\"meta\">shell&gt;</span><span class=\"bash\"> mysql -e <span class=\"string\">\"FLUSH LOGS\"</span></span></div></pre></td></tr></table></figure></p>\n<p>导出二进制日志列表<br><figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">shell</span><span class=\"bash\">&gt; mysql -e <span class=\"string\">\"SHOW LOGS STATUS\"</span> &gt; PATH</span></div></pre></td></tr></table></figure></p>\n<h3 id=\"3-创建快照卷\"><a href=\"#3-创建快照卷\" class=\"headerlink\" title=\"(3)创建快照卷\"></a>(3)创建快照卷</h3><figure class=\"highlight fortran\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">lvcreate -L <span class=\"built_in\">SIZE</span> -s -p r -n <span class=\"keyword\">NAME</span> /YOUR_LV_PATH</div></pre></td></tr></table></figure>\n<h3 id=\"4-释放全局锁\"><a href=\"#4-释放全局锁\" class=\"headerlink\" title=\"(4)释放全局锁\"></a>(4)释放全局锁</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">mysql&gt;</span><span class=\"bash\"> UBLOCK TABLES;</span></div></pre></td></tr></table></figure>\n<h3 id=\"5-挂载快照卷，执行数据备份\"><a href=\"#5-挂载快照卷，执行数据备份\" class=\"headerlink\" title=\"(5)挂载快照卷，执行数据备份\"></a>(5)挂载快照卷，执行数据备份</h3><p>mount &amp;&amp; cp</p>\n<h3 id=\"6-完成备份，删除快照卷\"><a href=\"#6-完成备份，删除快照卷\" class=\"headerlink\" title=\"(6)完成备份，删除快照卷\"></a>(6)完成备份，删除快照卷</h3><p>rm命令</p>\n<h3 id=\"7-制定好策略，通过源卷备份二进制日志\"><a href=\"#7-制定好策略，通过源卷备份二进制日志\" class=\"headerlink\" title=\"(7)制定好策略，通过源卷备份二进制日志\"></a>(7)制定好策略，通过源卷备份二进制日志</h3><p>cp binlog</p>\n<p><strong> 注意：二进制文件备份要在原卷实行，不需要快照，在执行flush logs之后就应该执行备份操作 </strong><br><strong> 注意：物理物质的文件，回复时要确保属主属组时mysql （cp使用-a选项） </strong></p>\n<h2 id=\"xtrabackup备份\"><a href=\"#xtrabackup备份\" class=\"headerlink\" title=\"xtrabackup备份\"></a>xtrabackup备份</h2><blockquote>\n<p>perconna出品,www.perconna.com<br>innobackupex为xtrabackup的前端工具,可理解为简装版的xtrabackup<br>提醒：在实际的应用场景中，可能会需要创建授权专门的备份用户</p>\n</blockquote>\n<h3 id=\"InnoDB表空间管理简单概念\"><a href=\"#InnoDB表空间管理简单概念\" class=\"headerlink\" title=\"InnoDB表空间管理简单概念\"></a>InnoDB表空间管理简单概念</h3><blockquote>\n<p>innoDB以表空间管理数据库，其管理方式是将表空间分页管理的，可以理解为block，每个block叫<br>做一个innodb页（通常为16k大小），每个innodb页有一个日志序列号，称为LSN，数据页面发生变<br>化时，日志序列号将滚动提升</p>\n</blockquote>\n<h3 id=\"xtrabackup的备份工作原理或要点\"><a href=\"#xtrabackup的备份工作原理或要点\" class=\"headerlink\" title=\"xtrabackup的备份工作原理或要点\"></a>xtrabackup的备份工作原理或要点</h3><ul>\n<li>xtrabackup的备份基于innoDB页进行，通过识别LSN的变化判断页面数据是否发生改变；</li>\n<li>完全备份，就是备份表空间的所有数据块，即innoDB页；</li>\n<li>增量备份，仅备份序列号发生改变的数据块；</li>\n<li>备份的是数据和事务日志文件</li>\n</ul>\n<h3 id=\"备份恢复要点\"><a href=\"#备份恢复要点\" class=\"headerlink\" title=\"备份恢复要点\"></a>备份恢复要点</h3><ul>\n<li><p>如果只做完全备份的恢复，没有增量备份，恢复数据时，完全备份整合应该将事务日志中尚未提<br>交的事务同步到数据中，未提交的事务进行回滚</p>\n</li>\n<li><p>如果是完全备份+增量备份恢复，恢复数据时，完全备份整合应该将事务日志中未提交的事务同<br>步至数据中（redo only），切记不可回滚未提交的事务，最后再整合增量备份</p>\n</li>\n<li><p>要做时间点还原，二进制日志必备份恢复不可少</p>\n</li>\n</ul>\n<h3 id=\"完全备份和恢复\"><a href=\"#完全备份和恢复\" class=\"headerlink\" title=\"完全备份和恢复\"></a>完全备份和恢复</h3><blockquote>\n<p>前提：<br>1.确保表示类型是InnoDB，只有innodb支持热备和增量备份<br>2.确保inndb_file_per_table = ON (很重要)</p>\n</blockquote>\n<h4 id=\"完全备份\"><a href=\"#完全备份\" class=\"headerlink\" title=\"完全备份\"></a>完全备份</h4><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">innobackupex <span class=\"attribute\">--user</span>=DBUSER <span class=\"attribute\">--password</span>=DBPASSWD /SAVE/<span class=\"keyword\">TO</span>/SOMEWHERE</div></pre></td></tr></table></figure>\n<h4 id=\"完全备份恢复\"><a href=\"#完全备份恢复\" class=\"headerlink\" title=\"完全备份恢复\"></a>完全备份恢复</h4><p><strong> 注意：要在需要恢复数据的服务端执行以下操作 </strong></p>\n<h5 id=\"整理备份\"><a href=\"#整理备份\" class=\"headerlink\" title=\"整理备份\"></a>整理备份</h5><figure class=\"highlight maxima\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">innobackpex –<span class=\"built_in\">apply</span>-<span class=\"built_in\">log</span> /BACKUP_PATH</div></pre></td></tr></table></figure>\n<p>确保有complete OK信息输出，表示整理备份可用</p>\n<h4 id=\"恢复\"><a href=\"#恢复\" class=\"headerlink\" title=\"恢复\"></a>恢复</h4><p><strong> 注意：不需要启动mysql </strong><br><figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">innobackupex –<span class=\"keyword\">copy</span>-<span class=\"keyword\">back</span> /PATH/TO/BACKUP_DIR</div></pre></td></tr></table></figure></p>\n<blockquote>\n<p>通过备份目录下的xtrabackup_checkpoints可查看备份的信息（如备份类型）</p>\n</blockquote>\n<h2 id=\"增量备份和恢复\"><a href=\"#增量备份和恢复\" class=\"headerlink\" title=\"增量备份和恢复\"></a>增量备份和恢复</h2><figure class=\"highlight armasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"symbol\">innobackupex</span> –incremental /SAVE_TO_SOMEWHERE –incremental-<span class=\"keyword\">basedir=BASEDIR</span></div><div class=\"line\">–incremental-<span class=\"keyword\">basedir= </span>基于谁做增量</div></pre></td></tr></table></figure>\n<blockquote>\n<p>增量和差异区别只在于: 是始终基于完全备份来备份数据，还是以最近的完全备份或增量备份来</p>\n</blockquote>\n<h3 id=\"整合完全备份\"><a href=\"#整合完全备份\" class=\"headerlink\" title=\"整合完全备份\"></a>整合完全备份</h3><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">innobackupex –apply-<span class=\"built_in\">log</span> –<span class=\"keyword\">redo</span>-<span class=\"keyword\">only</span> BACKUP_PATH（完全备份）</div></pre></td></tr></table></figure>\n<p><strong> 注意：恢复的操作只需要提交，而不要回滚 </strong></p>\n<h3 id=\"整合每一个增量备份：\"><a href=\"#整合每一个增量备份：\" class=\"headerlink\" title=\"整合每一个增量备份：\"></a>整合每一个增量备份：</h3><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">innobackupex –apply-<span class=\"built_in\">log</span> –<span class=\"keyword\">redo</span>-<span class=\"keyword\">only</span> BACKUP_PATH –incremental-</div><div class=\"line\">dir=INCREMENTAL_DIR1 （增量备份<span class=\"number\">1</span>）</div><div class=\"line\"></div><div class=\"line\">innobackupex –apply-<span class=\"built_in\">log</span> –<span class=\"keyword\">redo</span>-<span class=\"keyword\">only</span> BACKUP_PATH –incremental-</div><div class=\"line\">dir=INCREMENTAL_DIR2（增量备份<span class=\"number\">2</span>）</div></pre></td></tr></table></figure>\n<p><strong> 注意：增量备份整合一定要使用绝对路径 </strong></p>\n<h3 id=\"恢复-1\"><a href=\"#恢复-1\" class=\"headerlink\" title=\"恢复\"></a>恢复</h3><figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">innobackupex –<span class=\"keyword\">copy</span>-<span class=\"keyword\">back</span> /PATH/TO/BACKUP_DIR（完全备份）</div></pre></td></tr></table></figure>\n<h2 id=\"导入或导出单张表\"><a href=\"#导入或导出单张表\" class=\"headerlink\" title=\"导入或导出单张表\"></a>导入或导出单张表</h2><h3 id=\"1-导出表\"><a href=\"#1-导出表\" class=\"headerlink\" title=\"1.导出表\"></a>1.导出表</h3><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">innobackuppex –apply-log –<span class=\"builtin-name\">export</span> /path/<span class=\"keyword\">to</span>/backup</div><div class=\"line\"><span class=\"comment\"># 会在表空间生成一个以.exp结尾的文件，可用于导入到其他服务器</span></div></pre></td></tr></table></figure>\n<h3 id=\"2-导入表（最好是在不同服务上进行）\"><a href=\"#2-导入表（最好是在不同服务上进行）\" class=\"headerlink\" title=\"2.导入表（最好是在不同服务上进行）\"></a>2.导入表（最好是在不同服务上进行）</h3><h4 id=\"先要创建表\"><a href=\"#先要创建表\" class=\"headerlink\" title=\"先要创建表\"></a>先要创建表</h4><figure class=\"highlight gams\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mysql&gt; CREATE <span class=\"keyword\">TABLE</span> testtable <span class=\"comment\">(...) ENGINE=InnoDB</span>;</div></pre></td></tr></table></figure>\n<h4 id=\"再清空表空间\"><a href=\"#再清空表空间\" class=\"headerlink\" title=\"再清空表空间\"></a>再清空表空间</h4><figure class=\"highlight gams\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mysql&gt; ALTER <span class=\"keyword\">TABLE</span> DATABASE.<span class=\"keyword\">TABLE</span> <span class=\"comment\">DISCARD TABLESPACE</span>;</div></pre></td></tr></table></figure>\n<h4 id=\"导入表\"><a href=\"#导入表\" class=\"headerlink\" title=\"导入表\"></a>导入表</h4><blockquote>\n<p>将导出的表的.ibd文件盒.exp文件复制到当前服务器的数据库目录<br>确保属主和属组是mysql，然后执行导入命令</p>\n</blockquote>\n<figure class=\"highlight gams\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mysql&gt; ALTER <span class=\"keyword\">TABLE</span> mydatabase.mytable <span class=\"comment\">IMPORT TABLESTACE</span>;</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<blockquote>\n<p>备份的本质就是将数据集另存一个副本，但是原数据会不停的发生变化，所以利用备份只能回复到数据变化之前的数据。那变化之后的呢？所以制定一个好的备份策略很重要</p>\n</blockquote>","more":"<h1 id=\"一、备份的目的\"><a href=\"#一、备份的目的\" class=\"headerlink\" title=\"一、备份的目的\"></a>一、备份的目的</h1><ul>\n<li>做灾难恢复：对损坏的数据进行恢复和还原</li>\n<li>需求改变：因需求改变而需要把数据还原到改变以前</li>\n<li>测试：测试新功能是否可用</li>\n</ul>\n<h1 id=\"二、备份需要考虑的问题\"><a href=\"#二、备份需要考虑的问题\" class=\"headerlink\" title=\"二、备份需要考虑的问题\"></a>二、备份需要考虑的问题</h1><ul>\n<li>可以容忍丢失多长时间的数据；</li>\n<li>恢复数据要在多长时间内完； </li>\n<li>恢复的时候是否需要持续提供服务；</li>\n<li>恢复的对象，是整个库，多个表，还是单个库，单个表。</li>\n</ul>\n<h1 id=\"三、备份的类型\"><a href=\"#三、备份的类型\" class=\"headerlink\" title=\"三、备份的类型\"></a>三、备份的类型</h1><h2 id=\"1、根据是否需要数据库离线\"><a href=\"#1、根据是否需要数据库离线\" class=\"headerlink\" title=\"1、根据是否需要数据库离线\"></a>1、根据是否需要数据库离线</h2><ul>\n<li>冷备（cold backup）：需要关mysql服务，读写请求均不允许状态下进行；线上服务读写操作均不可执行</li>\n<li>温备（warm backup）： 服务在线，但仅支持读请求，不允许写请求；</li>\n<li>热备（hot backup）：备份的同时，业务不受影响。线上服务读写均可执行</li>\n</ul>\n<blockquote>\n<p>实际上，热备份最复杂，备份难度最大，因为热备份要考虑备份的同时新数据产生的变化导致备份<br>数据前后时间戳不一致，这样会导致备份失效，温备份就避免备份时数据会发生改变，因为对数据<br>库的所有执行了读锁，不能写入数据，数据也就不会发生变化，但对业务的影响也是很明显的，而<br>冷备，在备份时整个业务都需终止，基本是不可取的</p>\n</blockquote>\n<p><strong>注：</strong></p>\n<blockquote>\n<ul>\n<li>这种类型的备份，取决于业务的需求，而不是备份工具</li>\n<li>MyISAM不支持热备，InnoDB支持热备，但是需要专门的工具</li>\n</ul>\n</blockquote>\n<h2 id=\"2、根据要备份的数据集合的范围\"><a href=\"#2、根据要备份的数据集合的范围\" class=\"headerlink\" title=\"2、根据要备份的数据集合的范围\"></a>2、根据要备份的数据集合的范围</h2><ul>\n<li>完全备份：full backup，备份整个数据集</li>\n<li>部分备份：只备份数据子集（如数据库的某张表）</li>\n<li>增量备份: incremental backup 上次完全备份或增量备份以来改变了的数据，不能单独使用，要借助完全备份，备份的频率取决于数据的更新频率。<figure class=\"highlight gherkin\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">备份模型如下：</div><div class=\"line\">——–&gt;|<span class=\"string\">———&gt;</span>|<span class=\"string\">———-&gt;</span></div><div class=\"line\">完整备份   差异备份1   差异备份2</div><div class=\"line\">还原：先还原完全备份数据，再恢复每一个增量备份的数据</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><strong>增量备份的优点是占用磁盘空间少，但恢复数据比较麻烦</strong></p>\n<ul>\n<li>差异备份：differential backup 上次完全备份以来改变了的数据。</li>\n</ul>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">备份模型如下：</div><div class=\"line\">——–&gt; 完全备份</div><div class=\"line\">     \t<span class=\"string\">|——–&gt; 第一次差异备份</span></div><div class=\"line\">     \t<span class=\"string\">|—————–&gt; 第二次差异备份</span></div><div class=\"line\"></div><div class=\"line\">还原：先还原完全备份数据，再还原差异备份的数据</div></pre></td></tr></table></figure>\n<p><strong>差异备份占用磁盘空间多，但恢复数据较为方便</strong><br><strong>建议的恢复策略：</strong></p>\n<blockquote>\n<ul>\n<li>完全+增量+二进制日志</li>\n<li>完全+差异+二进制日志</li>\n</ul>\n</blockquote>\n<h2 id=\"3、根据备份数据或文件\"><a href=\"#3、根据备份数据或文件\" class=\"headerlink\" title=\"3、根据备份数据或文件\"></a>3、根据备份数据或文件</h2><h3 id=\"物理备份：直接备份数据文件\"><a href=\"#物理备份：直接备份数据文件\" class=\"headerlink\" title=\"物理备份：直接备份数据文件\"></a>物理备份：直接备份数据文件</h3><blockquote>\n<p>物理备份时文件系统上的数据文件归档复制，简单易用，无需第额外三方工具，备份的数据量较大<br>时，建议使用物理，备份而逻辑备份一般需要借助额外的备份工具进行，通过mysql协议连接服务<br>器将数据抽取出来</p>\n</blockquote>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">优点：</div><div class=\"line\">\t备份和恢复操作都比较简单，能够跨mysql的版本，</div><div class=\"line\">\t恢复速度快，属于文件系统级别的</div><div class=\"line\">建议：</div><div class=\"line\">\t不要假设备份一定可用，要测试</div><div class=\"line\"><span class=\"meta\">\tmysql&gt;</span><span class=\"bash\">check tables；检测表是否可用</span></div></pre></td></tr></table></figure>\n<h3 id=\"逻辑备份-备份表中的数据和代码\"><a href=\"#逻辑备份-备份表中的数据和代码\" class=\"headerlink\" title=\"逻辑备份: 备份表中的数据和代码\"></a>逻辑备份: 备份表中的数据和代码</h3><blockquote>\n<p>逻辑备份与存储引擎无关<br>通过从数据库导出数据进行备份（需要相关备份工具）</p>\n</blockquote>\n<figure class=\"highlight cos\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">优点：</div><div class=\"line\">\t恢复简单、</div><div class=\"line\">\t备份的结果为<span class=\"keyword\">ASCII</span>文件，可以编辑</div><div class=\"line\">\t与存储引擎无关</div><div class=\"line\">\t可以通过网络备份和恢复</div><div class=\"line\">缺点：</div><div class=\"line\">\t备份或恢复都需要mysql服务器进程参与</div><div class=\"line\">\t备份结果占据更多的空间，</div><div class=\"line\">\t浮点数可能会丢失精度</div><div class=\"line\">\t还原之后，索引需要重建</div></pre></td></tr></table></figure>\n<h4 id=\"备份时需要考虑的因素：\"><a href=\"#备份时需要考虑的因素：\" class=\"headerlink\" title=\"备份时需要考虑的因素：\"></a>备份时需要考虑的因素：</h4><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">持锁多久</div><div class=\"line\">– 能够接收业务中断的时间</div><div class=\"line\">备份过程的时长</div><div class=\"line\">– 预计备份所要消耗的时间，是否能在对业务影响最小的时间段内完成备份操作</div><div class=\"line\">备份负载</div><div class=\"line\">– 备份会加大磁盘IO压力，可能会导致业务中断，所以备份尽量避免在服务的高负载的时间段</div><div class=\"line\">恢复过程的时长</div><div class=\"line\">– 当数据损坏时，能够接收多大的恢复时长（分分钟几百万上下），若要尽量缩短数据恢复时间</div><div class=\"line\">应该在平时就需要演练数据恢复的过程，一是确保备份的数据可用，二是熟悉恢复流程，可能需多</div><div class=\"line\">个部门的协调，因为在巨大的压力下（若数据丢失时），人很可能是大脑一片空白，很可能会误操</div><div class=\"line\">作，要是再把备份的数据删掉，那就真的需要跑路了</div></pre></td></tr></table></figure>\n<h1 id=\"四、备份的对象\"><a href=\"#四、备份的对象\" class=\"headerlink\" title=\"四、备份的对象\"></a>四、备份的对象</h1><blockquote>\n<p>1、 数据；<br>2、配置文件；<br>3、代码：存储过程、存储函数、触发器、事件调度器<br>4、os相关的配置文件<br>5、复制相关的配置<br>6、二进制日志、innodb事物日志文件</p>\n</blockquote>\n<h1 id=\"五、备份的方案和工具\"><a href=\"#五、备份的方案和工具\" class=\"headerlink\" title=\"五、备份的方案和工具\"></a>五、备份的方案和工具</h1><h2 id=\"备份方案：\"><a href=\"#备份方案：\" class=\"headerlink\" title=\"备份方案：\"></a>备份方案：</h2><blockquote>\n<p>数据集：完全+增量（常用备份方式）<br>备份手段：物理，逻辑</p>\n</blockquote>\n<p><strong> 注意：热备份和冷备份于备份方式（物理，逻辑）是两个话题 </strong></p>\n<h2 id=\"备份工具：\"><a href=\"#备份工具：\" class=\"headerlink\" title=\"备份工具：\"></a>备份工具：</h2><h3 id=\"逻辑备份工具：mysqldump\"><a href=\"#逻辑备份工具：mysqldump\" class=\"headerlink\" title=\"逻辑备份工具：mysqldump\"></a>逻辑备份工具：mysqldump</h3><ul>\n<li>适用所有存储引擎</li>\n<li>温备份、完全备份、部分备份，对innodb支持热备份</li>\n</ul>\n<h3 id=\"物理备份：cp-tar等复制归档工具\"><a href=\"#物理备份：cp-tar等复制归档工具\" class=\"headerlink\" title=\"物理备份：cp,tar等复制归档工具\"></a>物理备份：cp,tar等复制归档工具</h3><ul>\n<li>适用所有存储引擎</li>\n<li>冷备份，完全备份，部分备份</li>\n</ul>\n<p>lvm2的快照：几乎热备，需借助cp等文件管理工具进行备份<br>mysqlhotcopy: 几乎冷备，仅适用于MyISAM引擎<br>xtrabackup: </p>\n<h1 id=\"备份工具的选择：\"><a href=\"#备份工具的选择：\" class=\"headerlink\" title=\"备份工具的选择：\"></a>备份工具的选择：</h1><blockquote>\n<p>mysqldump+复制binlog：<br>mysqldump：完全备份；<br>复制binlog中指定时间范围的event：增量备份；</p>\n<p>lvm2快照+复制binlog：<br>lvm2快照：使用cp或tar等做物理备份；完全备份；<br>复制binlog中指定时间范围的event：增量备份；</p>\n<p>xtrabackup：<br>由Percona提供的支持对InnoDB做热备(物理备份)的工具；<br>完全备份、增量备份；</p>\n<p>逻辑备份工具：mysqldump, mysqldumper(实现并行逻辑备份), phpmyadmin</p>\n<p>逻辑备份是将schema和数据存储在一起；是巨大的SQL语句，其将拉取出来的数据定义成INSERT语句，也就是每表要插入的数据；其同时又是一个巨大的备份文件，因为备份的数据都是存储在单个文件中</p>\n</blockquote>\n<p>schema：表结构（表的相关属性定义）</p>\n<h2 id=\"mysqldump使用方法\"><a href=\"#mysqldump使用方法\" class=\"headerlink\" title=\"mysqldump使用方法\"></a>mysqldump使用方法</h2><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div></pre></td><td class=\"code\"><pre><div class=\"line\">mysqldump [options] [db_name [tbl_name …]]</div><div class=\"line\">option:</div><div class=\"line\">-A，–all-databases: 备份所有数据库</div><div class=\"line\">-B，–databases db_name: 备份指定的数据库</div><div class=\"line\">-E: 备份指定数据相关的所有event<span class=\"built_in\"> scheduler</span></div><div class=\"line\">-R: 备份指定数据相关的所有存储过程和存储函数</div><div class=\"line\">–triggers：备份表相关的触发器</div><div class=\"line\">–<span class=\"attribute\">master-data</span>=# （#为数字，如下）</div><div class=\"line\">1：记录为CHANGE MASTER <span class=\"keyword\">TO</span> 语句，此语句不被注释（功用为扮演为从服务器）</div><div class=\"line\">2：基于为注释的CHANGE MASTER <span class=\"keyword\">TO</span>语句 （建议使用此种方式）</div><div class=\"line\"></div><div class=\"line\">–<span class=\"attribute\">master-data</span>=2的作用：</div><div class=\"line\">备份时，在导出的数据文件中添加一条注释信息，此注释信息为执行“备份一刻”所使用的</div><div class=\"line\">二进制日志文件及其记录的当前事务起始位置（作用是用于时间点还原，还原日志文件记</div><div class=\"line\">录的事务起始位置之后所发生事件）</div><div class=\"line\"></div><div class=\"line\">提醒：时间点还原使用二进制日志文件可能不止一个</div><div class=\"line\"></div><div class=\"line\">–flush-logs: 锁定表后滚动二进制日志</div><div class=\"line\">– 主要用于表锁定后滚动二进制日志，然后备份二进制日志文件</div><div class=\"line\"></div><div class=\"line\">–lock-all-tables: 锁定所有库的所有表（温备）</div><div class=\"line\">– 用于使用完全备份时施加全局读锁</div><div class=\"line\"></div><div class=\"line\">–lock-tables: 对于每个单独的数据库，在启动备份前锁定其所有表（温备）</div><div class=\"line\">– 用备份单独指定的某个或某些个数据库时执行读锁</div><div class=\"line\"></div><div class=\"line\">–single-transaction：在备份时启动一个事务（热备） </div><div class=\"line\">– 适用于事务型存储引擎的热备份选项（InnoDB适用）</div></pre></td></tr></table></figure>\n<h3 id=\"主要有三种备份模式：\"><a href=\"#主要有三种备份模式：\" class=\"headerlink\" title=\"主要有三种备份模式：\"></a>主要有三种备份模式：</h3><h4 id=\"备份指定数据库或数据库的表（可以是多张表）\"><a href=\"#备份指定数据库或数据库的表（可以是多张表）\" class=\"headerlink\" title=\"备份指定数据库或数据库的表（可以是多张表）\"></a>备份指定数据库或数据库的表（可以是多张表）</h4><figure class=\"highlight accesslog\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">shell&gt; mysqldump <span class=\"string\">[options]</span> db_name <span class=\"string\">[tbl_name ...]</span></div></pre></td></tr></table></figure>\n<p><strong> 注意：不会自动生成CREATE DATABASE的语句（即导入时需要手动创建数据库） </strong></p>\n<h4 id=\"备份指定的数据库（可以指定多个数据库）\"><a href=\"#备份指定的数据库（可以指定多个数据库）\" class=\"headerlink\" title=\"备份指定的数据库（可以指定多个数据库）\"></a>备份指定的数据库（可以指定多个数据库）</h4><figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">shell</span><span class=\"bash\">&gt; mysqldump [options] --databases db_name ...</span></div></pre></td></tr></table></figure>\n<h4 id=\"备份所有数据库，全库备份\"><a href=\"#备份所有数据库，全库备份\" class=\"headerlink\" title=\"备份所有数据库，全库备份\"></a>备份所有数据库，全库备份</h4><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">shell</span>&gt; mysqldump [<span class=\"keyword\">options</span>] --<span class=\"keyword\">all</span>-databases</div></pre></td></tr></table></figure>\n<h2 id=\"备份示例：\"><a href=\"#备份示例：\" class=\"headerlink\" title=\"备份示例：\"></a>备份示例：</h2><h3 id=\"备份指定数据库：\"><a href=\"#备份指定数据库：\" class=\"headerlink\" title=\"备份指定数据库：\"></a>备份指定数据库：</h3><figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mysqldump -uroot -hlocalhost -p <span class=\"params\">--databases</span> ops &gt; <span class=\"string\">/root/backup.sql</span> <span class=\"comment\"># 备份指定数据库</span></div></pre></td></tr></table></figure>\n<h3 id=\"备份指定数据库的某张表\"><a href=\"#备份指定数据库的某张表\" class=\"headerlink\" title=\"备份指定数据库的某张表\"></a>备份指定数据库的某张表</h3><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mysqldump -uroot -hloaclhost -p ops students &gt; <span class=\"regexp\">/root/</span>backup.sql <span class=\"comment\"># 备份指定数据库的某张表</span></div></pre></td></tr></table></figure>\n<h3 id=\"备份所有数据库\"><a href=\"#备份所有数据库\" class=\"headerlink\" title=\"备份所有数据库\"></a>备份所有数据库</h3><figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mysqldump -uroot -hlocalhost -p <span class=\"params\">--all-databases</span> &gt; <span class=\"string\">/root/backup.sql</span>  <span class=\"comment\"># 备份所有数据库</span></div></pre></td></tr></table></figure>\n<p><strong> 注意：二进制日志文件至关重要，建议存储在与存储数据不同的磁盘上，并且要做磁盘冗余，如果<br> 条件允许，事物日志也应该放在非数据且有冗余的磁盘上 </strong></p>\n<blockquote>\n<p>备份思路：每周执行一次完整备份，每天执行一次增量备份（备份二进制日志），完整备份和增量备份的频率需依照数据的数据变化速度调整</p>\n</blockquote>\n<h2 id=\"备份恢复示例：\"><a href=\"#备份恢复示例：\" class=\"headerlink\" title=\"备份恢复示例：\"></a>备份恢复示例：</h2><p> 完整备份+增量备份（二进制日志）</p>\n<h3 id=\"1-完全备份：-温备\"><a href=\"#1-完全备份：-温备\" class=\"headerlink\" title=\"(1)完全备份：(温备)\"></a>(1)完全备份：(温备)</h3><figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mysqldump <span class=\"params\">--all-databases</span> <span class=\"params\">--lock-all-tables</span> <span class=\"params\">--master-data=2</span> &gt; <span class=\"string\">/backups/alldb.sql</span></div></pre></td></tr></table></figure>\n<h3 id=\"2-数据还原\"><a href=\"#2-数据还原\" class=\"headerlink\" title=\"(2)数据还原\"></a>(2)数据还原</h3><h4 id=\"1、导入备份数据：\"><a href=\"#1、导入备份数据：\" class=\"headerlink\" title=\"1、导入备份数据：\"></a>1、导入备份数据：</h4><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mysql &lt; <span class=\"regexp\">/root/</span>alldb.sql</div></pre></td></tr></table></figure>\n<h4 id=\"2、时间点还原\"><a href=\"#2、时间点还原\" class=\"headerlink\" title=\"2、时间点还原\"></a>2、时间点还原</h4><p>查询备份数据获取事件位置，信息如下：<br><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">CHANGE MASTER <span class=\"keyword\">TO</span> <span class=\"attribute\">MASTER_LOG_FILE</span>=<span class=\"string\">'bin_log.000005'</span>, <span class=\"attribute\">MASTER_LOG_POS</span>=245;</div><div class=\"line\"></div><div class=\"line\">使用mysqlbinlog抽取指定位置之后的事件：</div><div class=\"line\">shell&gt; mysqlbinlog <span class=\"attribute\">--start-position</span>=254 bin_log.000005&gt; /backups/binlog.sql</div></pre></td></tr></table></figure></p>\n<p><strong> 注意：指定的位置往后所发生的事件记录于二进制文件可能不止一个，多以肯能需要导入多个二进制日志文件进行时间点恢复 </strong></p>\n<p>使用mysqlbinlog抽取指定位置之后的事件：<br><figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">shell</span><span class=\"bash\">&gt; mysqlbinlog --start-position=254 bin_log.000005&gt; /backups/binlog.sql</span></div></pre></td></tr></table></figure></p>\n<p><strong> 注意：指定的位置往后所发生的事件记录于二进制文件可能不止一个，多以肯能需要导入多个二进制日志文件进行时间点恢复 </strong></p>\n<h4 id=\"3、导入到数据库中\"><a href=\"#3、导入到数据库中\" class=\"headerlink\" title=\"3、导入到数据库中\"></a>3、导入到数据库中</h4><figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">shell</span><span class=\"bash\">&gt; mysql &lt; binlog.sql</span></div></pre></td></tr></table></figure>\n<h3 id=\"二进制日志备份还原要点：\"><a href=\"#二进制日志备份还原要点：\" class=\"headerlink\" title=\"二进制日志备份还原要点：\"></a>二进制日志备份还原要点：</h3><blockquote>\n<ul>\n<li>前最好先执行FLUSH LOGS滚动日志</li>\n<li>使用二进制日志文件还原时，要先禁用二进制日志记录，再执行还原操作，还原后再启用</li>\n</ul>\n</blockquote>\n<p>可以基于脚本实现自动备份<br>注意尝试使用mysqldump实现热备份</p>\n<h2 id=\"基于lvm2的备份\"><a href=\"#基于lvm2的备份\" class=\"headerlink\" title=\"基于lvm2的备份\"></a>基于lvm2的备份</h2><blockquote>\n<p>前提，创建好逻辑卷格式化后挂载使用</p>\n</blockquote>\n<h3 id=\"1-请求锁定所有表\"><a href=\"#1-请求锁定所有表\" class=\"headerlink\" title=\"(1)请求锁定所有表\"></a>(1)请求锁定所有表</h3><figure class=\"highlight cos\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">mysql&gt; FLUSH TABLES WITH <span class=\"keyword\">READ</span> <span class=\"keyword\">LOCK</span><span class=\"comment\">;</span></div><div class=\"line\">– 注意：如果有写操作事务在进行，可能需要等待很长时间</div></pre></td></tr></table></figure>\n<h3 id=\"2-记录二进制日志文件及事件位置\"><a href=\"#2-记录二进制日志文件及事件位置\" class=\"headerlink\" title=\"(2)记录二进制日志文件及事件位置\"></a>(2)记录二进制日志文件及事件位置</h3><p>滚动日志：（不滚问题也不大）<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">mysql&gt;</span><span class=\"bash\"> FLUSH LOGS;</span></div><div class=\"line\"><span class=\"meta\">shell&gt;</span><span class=\"bash\"> mysql -e <span class=\"string\">\"FLUSH LOGS\"</span></span></div></pre></td></tr></table></figure></p>\n<p>导出二进制日志列表<br><figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">shell</span><span class=\"bash\">&gt; mysql -e <span class=\"string\">\"SHOW LOGS STATUS\"</span> &gt; PATH</span></div></pre></td></tr></table></figure></p>\n<h3 id=\"3-创建快照卷\"><a href=\"#3-创建快照卷\" class=\"headerlink\" title=\"(3)创建快照卷\"></a>(3)创建快照卷</h3><figure class=\"highlight fortran\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">lvcreate -L <span class=\"built_in\">SIZE</span> -s -p r -n <span class=\"keyword\">NAME</span> /YOUR_LV_PATH</div></pre></td></tr></table></figure>\n<h3 id=\"4-释放全局锁\"><a href=\"#4-释放全局锁\" class=\"headerlink\" title=\"(4)释放全局锁\"></a>(4)释放全局锁</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">mysql&gt;</span><span class=\"bash\"> UBLOCK TABLES;</span></div></pre></td></tr></table></figure>\n<h3 id=\"5-挂载快照卷，执行数据备份\"><a href=\"#5-挂载快照卷，执行数据备份\" class=\"headerlink\" title=\"(5)挂载快照卷，执行数据备份\"></a>(5)挂载快照卷，执行数据备份</h3><p>mount &amp;&amp; cp</p>\n<h3 id=\"6-完成备份，删除快照卷\"><a href=\"#6-完成备份，删除快照卷\" class=\"headerlink\" title=\"(6)完成备份，删除快照卷\"></a>(6)完成备份，删除快照卷</h3><p>rm命令</p>\n<h3 id=\"7-制定好策略，通过源卷备份二进制日志\"><a href=\"#7-制定好策略，通过源卷备份二进制日志\" class=\"headerlink\" title=\"(7)制定好策略，通过源卷备份二进制日志\"></a>(7)制定好策略，通过源卷备份二进制日志</h3><p>cp binlog</p>\n<p><strong> 注意：二进制文件备份要在原卷实行，不需要快照，在执行flush logs之后就应该执行备份操作 </strong><br><strong> 注意：物理物质的文件，回复时要确保属主属组时mysql （cp使用-a选项） </strong></p>\n<h2 id=\"xtrabackup备份\"><a href=\"#xtrabackup备份\" class=\"headerlink\" title=\"xtrabackup备份\"></a>xtrabackup备份</h2><blockquote>\n<p>perconna出品,www.perconna.com<br>innobackupex为xtrabackup的前端工具,可理解为简装版的xtrabackup<br>提醒：在实际的应用场景中，可能会需要创建授权专门的备份用户</p>\n</blockquote>\n<h3 id=\"InnoDB表空间管理简单概念\"><a href=\"#InnoDB表空间管理简单概念\" class=\"headerlink\" title=\"InnoDB表空间管理简单概念\"></a>InnoDB表空间管理简单概念</h3><blockquote>\n<p>innoDB以表空间管理数据库，其管理方式是将表空间分页管理的，可以理解为block，每个block叫<br>做一个innodb页（通常为16k大小），每个innodb页有一个日志序列号，称为LSN，数据页面发生变<br>化时，日志序列号将滚动提升</p>\n</blockquote>\n<h3 id=\"xtrabackup的备份工作原理或要点\"><a href=\"#xtrabackup的备份工作原理或要点\" class=\"headerlink\" title=\"xtrabackup的备份工作原理或要点\"></a>xtrabackup的备份工作原理或要点</h3><ul>\n<li>xtrabackup的备份基于innoDB页进行，通过识别LSN的变化判断页面数据是否发生改变；</li>\n<li>完全备份，就是备份表空间的所有数据块，即innoDB页；</li>\n<li>增量备份，仅备份序列号发生改变的数据块；</li>\n<li>备份的是数据和事务日志文件</li>\n</ul>\n<h3 id=\"备份恢复要点\"><a href=\"#备份恢复要点\" class=\"headerlink\" title=\"备份恢复要点\"></a>备份恢复要点</h3><ul>\n<li><p>如果只做完全备份的恢复，没有增量备份，恢复数据时，完全备份整合应该将事务日志中尚未提<br>交的事务同步到数据中，未提交的事务进行回滚</p>\n</li>\n<li><p>如果是完全备份+增量备份恢复，恢复数据时，完全备份整合应该将事务日志中未提交的事务同<br>步至数据中（redo only），切记不可回滚未提交的事务，最后再整合增量备份</p>\n</li>\n<li><p>要做时间点还原，二进制日志必备份恢复不可少</p>\n</li>\n</ul>\n<h3 id=\"完全备份和恢复\"><a href=\"#完全备份和恢复\" class=\"headerlink\" title=\"完全备份和恢复\"></a>完全备份和恢复</h3><blockquote>\n<p>前提：<br>1.确保表示类型是InnoDB，只有innodb支持热备和增量备份<br>2.确保inndb_file_per_table = ON (很重要)</p>\n</blockquote>\n<h4 id=\"完全备份\"><a href=\"#完全备份\" class=\"headerlink\" title=\"完全备份\"></a>完全备份</h4><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">innobackupex <span class=\"attribute\">--user</span>=DBUSER <span class=\"attribute\">--password</span>=DBPASSWD /SAVE/<span class=\"keyword\">TO</span>/SOMEWHERE</div></pre></td></tr></table></figure>\n<h4 id=\"完全备份恢复\"><a href=\"#完全备份恢复\" class=\"headerlink\" title=\"完全备份恢复\"></a>完全备份恢复</h4><p><strong> 注意：要在需要恢复数据的服务端执行以下操作 </strong></p>\n<h5 id=\"整理备份\"><a href=\"#整理备份\" class=\"headerlink\" title=\"整理备份\"></a>整理备份</h5><figure class=\"highlight maxima\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">innobackpex –<span class=\"built_in\">apply</span>-<span class=\"built_in\">log</span> /BACKUP_PATH</div></pre></td></tr></table></figure>\n<p>确保有complete OK信息输出，表示整理备份可用</p>\n<h4 id=\"恢复\"><a href=\"#恢复\" class=\"headerlink\" title=\"恢复\"></a>恢复</h4><p><strong> 注意：不需要启动mysql </strong><br><figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">innobackupex –<span class=\"keyword\">copy</span>-<span class=\"keyword\">back</span> /PATH/TO/BACKUP_DIR</div></pre></td></tr></table></figure></p>\n<blockquote>\n<p>通过备份目录下的xtrabackup_checkpoints可查看备份的信息（如备份类型）</p>\n</blockquote>\n<h2 id=\"增量备份和恢复\"><a href=\"#增量备份和恢复\" class=\"headerlink\" title=\"增量备份和恢复\"></a>增量备份和恢复</h2><figure class=\"highlight armasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"symbol\">innobackupex</span> –incremental /SAVE_TO_SOMEWHERE –incremental-<span class=\"keyword\">basedir=BASEDIR</span></div><div class=\"line\">–incremental-<span class=\"keyword\">basedir= </span>基于谁做增量</div></pre></td></tr></table></figure>\n<blockquote>\n<p>增量和差异区别只在于: 是始终基于完全备份来备份数据，还是以最近的完全备份或增量备份来</p>\n</blockquote>\n<h3 id=\"整合完全备份\"><a href=\"#整合完全备份\" class=\"headerlink\" title=\"整合完全备份\"></a>整合完全备份</h3><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">innobackupex –apply-<span class=\"built_in\">log</span> –<span class=\"keyword\">redo</span>-<span class=\"keyword\">only</span> BACKUP_PATH（完全备份）</div></pre></td></tr></table></figure>\n<p><strong> 注意：恢复的操作只需要提交，而不要回滚 </strong></p>\n<h3 id=\"整合每一个增量备份：\"><a href=\"#整合每一个增量备份：\" class=\"headerlink\" title=\"整合每一个增量备份：\"></a>整合每一个增量备份：</h3><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">innobackupex –apply-<span class=\"built_in\">log</span> –<span class=\"keyword\">redo</span>-<span class=\"keyword\">only</span> BACKUP_PATH –incremental-</div><div class=\"line\">dir=INCREMENTAL_DIR1 （增量备份<span class=\"number\">1</span>）</div><div class=\"line\"></div><div class=\"line\">innobackupex –apply-<span class=\"built_in\">log</span> –<span class=\"keyword\">redo</span>-<span class=\"keyword\">only</span> BACKUP_PATH –incremental-</div><div class=\"line\">dir=INCREMENTAL_DIR2（增量备份<span class=\"number\">2</span>）</div></pre></td></tr></table></figure>\n<p><strong> 注意：增量备份整合一定要使用绝对路径 </strong></p>\n<h3 id=\"恢复-1\"><a href=\"#恢复-1\" class=\"headerlink\" title=\"恢复\"></a>恢复</h3><figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">innobackupex –<span class=\"keyword\">copy</span>-<span class=\"keyword\">back</span> /PATH/TO/BACKUP_DIR（完全备份）</div></pre></td></tr></table></figure>\n<h2 id=\"导入或导出单张表\"><a href=\"#导入或导出单张表\" class=\"headerlink\" title=\"导入或导出单张表\"></a>导入或导出单张表</h2><h3 id=\"1-导出表\"><a href=\"#1-导出表\" class=\"headerlink\" title=\"1.导出表\"></a>1.导出表</h3><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">innobackuppex –apply-log –<span class=\"builtin-name\">export</span> /path/<span class=\"keyword\">to</span>/backup</div><div class=\"line\"><span class=\"comment\"># 会在表空间生成一个以.exp结尾的文件，可用于导入到其他服务器</span></div></pre></td></tr></table></figure>\n<h3 id=\"2-导入表（最好是在不同服务上进行）\"><a href=\"#2-导入表（最好是在不同服务上进行）\" class=\"headerlink\" title=\"2.导入表（最好是在不同服务上进行）\"></a>2.导入表（最好是在不同服务上进行）</h3><h4 id=\"先要创建表\"><a href=\"#先要创建表\" class=\"headerlink\" title=\"先要创建表\"></a>先要创建表</h4><figure class=\"highlight gams\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mysql&gt; CREATE <span class=\"keyword\">TABLE</span> testtable <span class=\"comment\">(...) ENGINE=InnoDB</span>;</div></pre></td></tr></table></figure>\n<h4 id=\"再清空表空间\"><a href=\"#再清空表空间\" class=\"headerlink\" title=\"再清空表空间\"></a>再清空表空间</h4><figure class=\"highlight gams\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mysql&gt; ALTER <span class=\"keyword\">TABLE</span> DATABASE.<span class=\"keyword\">TABLE</span> <span class=\"comment\">DISCARD TABLESPACE</span>;</div></pre></td></tr></table></figure>\n<h4 id=\"导入表\"><a href=\"#导入表\" class=\"headerlink\" title=\"导入表\"></a>导入表</h4><blockquote>\n<p>将导出的表的.ibd文件盒.exp文件复制到当前服务器的数据库目录<br>确保属主和属组是mysql，然后执行导入命令</p>\n</blockquote>\n<figure class=\"highlight gams\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mysql&gt; ALTER <span class=\"keyword\">TABLE</span> mydatabase.mytable <span class=\"comment\">IMPORT TABLESTACE</span>;</div></pre></td></tr></table></figure>"},{"title":"二十款免费渗透测试工具","abbrlink":"7ab97256","date":"2016-08-20T08:12:23.000Z","_content":"\n> 对于企业的IT经理和网络管理员来说，保护相对脆弱的WiFi网络的最佳办法就拿黑客圈最流行的，“火力”最猛的工具入侵你自己的无线网络，从中找出网络安全漏洞并有针对性地补强。\n\n根据最新的安全情报，提炼出20款免费工具推荐如下：\n<!-- more -->\n\n## 1、Aircrack\nAircrack是目前最流行的WiFi密码破解工具。市面上能破解 WiFi加密的工具有很多，不外乎利用WEP安全漏洞或者暴力字典攻击的方式破解WPA/WPA2 PSK密码。WPA2 AES/CCMP加密依然是相对安全的选择。如果采用WPA2 PSK模式，那么你的密码长度最好是13位以上混合字符。在你的Wi-Fi网络被入侵或者“蹭网”之前，最好先用破解工具自我攻击一下。 Aircrack是一个开源的WEP/WPA/WPA2 PSK破解工具，可以运行在windows、Mac OS X、Linux和OpenBSD上。可以下载到Vmware镜像文件或Live CD文件。\n\n下载链接: http://www.aircrack-ng.org/\n\n\n## 2、AirSnort\nAirSnort是另外一款流行的WLAN密码破解工具，可以破解WEP秘钥。\n\n下载链接: http://sourceforge.net/projects/airsnort/\n\n\n## 3、Kismet\nKismet是一个开源的WiFi扫描器，包嗅探器和入侵政策系统，可以在windows、Mac OSX、Linux和BSD上运行。Kismet能显示AP详细信息，包括隐藏的SSID，还能捕获原始无线数据包，还可以将数据导入 Wireshark、TCPdump等工具进行分析。在windows环境，受驱动程序限制，Kismet只能与 CACE AirPcap无线网卡配合工作。但在Mac OSX和Linux上，Kismet可以兼容很多无线网卡。\n\n下载链接: http://www.kismetwireless.net/download.shtml\n\n\n## 4、Cain & Able\nCain和Abel是windows上的密码恢复、破解和嗅探工具，可被用于展示如何从网络中嗅探明文密码。\n\n下载链接: http://www.oxid.it/cain.html\n\n\n## 5、WireShark\n\nWireShark是当下非常流行的网络协议分析工具，关于最新的WireShark2.0版本的新功能的信息在这里。\n\n下载链接: https://www.wireshark.org/\n\n## 6、Fern WiFi Wireless Cracker\nFern是一款优秀的网络漏洞扫描和WLAN破解工具，可以破解获取WEP/WPA/WPS秘钥。Fren的开发工作从未停顿，而且专业版还提供更多强大功能。\n\n下载链接: http://www.fern-pro.com/downloads.php\n\n\n## 7、CoWPAtty\nCoWPAtty也是一款无线密码破解工具，新版预置了包含上千个流行SSID的17万个字典文件，大大提高了破解速度，类似国内的各种WiFi钥匙应用。\n\n下载链接: http://sourceforge.net/projects/cowpatty/\n\n\n## 8、Airjack\nAirjack是802.11包注入工具，过去曾被用来发起DOS或中间人攻击。\n\n下载链接: http://sourceforge.net/projects/airjack/\n\n\n## 9、WepAttack\n\n顾名思义，WepAttack也是一个802.11WEP秘钥破解工具，同时也是一个开源的Linux工具。\n\n下载链接: http://wepattack.sourceforge.net/\n\n## 10、NetStumbler\nNetStumbler是一个运行于Windows平台的无线密码破解工具。该工具已经很久未更新，无法兼容64位Windows版本，而且会被大多数无线入侵侦测工具发现，因此适合在家练手使用。\n\n下载链接: http://www.stumbler.net/\n\n## 11、inSSIDer\ninSSIDer是Windows和Mac平台上最流行的WiFi扫描工具，曾荣获最佳开源网络软件称号，不过目前已经转为收费版本（19.99美元）\n\n下载链接: http://www.inssider.com/\n\n## 12、Wifiphisher\n开源无线安全工具Wifiphisher能够对WPA加密的AP无线热点实施自动化钓鱼攻击，获取密码账户。由于利用了社工原理实施中间人攻击，Wifiphisher在实施攻击时无需进行暴力破解。\nWiFiphiser是基于MIT许可模式的开源软件，运行于Kali Linux之上。\n\n下载链接：https://github.com/sophron/wifiphisher\n\n\n## 13、KisMac\n一个类似Kismet的工具，面向Mac平台。\n\n下载链接:http://kismac-ng.org/\n\n## 14、Reaver\n如果你使用的是无线路由器，那么你需要注意去年底发现的一个安全漏洞：很多路由器厂商提供的WPS（一键认证模式，方便用户完成路由器设备连接认证）的 PIN码可以在数小时内被破解。Reaver就是这样一个工具，Reaver是一个Linux程序，能在4-10小时内暴力破解无线路由器的WPS PIN码和WPA/WPA2 PSK密码。Reaver还提供一个方便使用的专用硬件方案：Reaver Pro，有图形web操作界面。\n\n下载链接:https://code.google.com/p/reaver-wps/downloads/list\n\n\n## 15、Wifite\nWifite是一个很不错的无线密码破解工具，支持通过Reaver破解WPS秘钥，运行于Linux平台。\n\n下载链接: https://github.com/derv82/wifite\n\n## 16、WepDecrypt\nWepDecrypt是一款适合初学者的无线密码字典攻击工具，用C语言写成，但很久没有更新了。\n下载链接:http://wepdecrypt.sourceforge.net/wepdecrypt-manual.html\n\n\n## 17、OmniPeek\nOmniPeek是一款网络包嗅探分析工具，属于Windows平台“独占”工具。需要使用者对网络协议和数据包有较深入的了解。\n\n下载地址：http://www.wildpackets.com/products/distributed_network_analysis/omnipeek_network_analyzer\n\n## 18、CloudCracker\n顾名思义，CloudCracker是一款云端WiFi密码破解工具。\n\n下载地址: https://www.cloudcracker.com/\n\n \n\n## 19、CommonView for Wi-Fi\nCommonView是一款流行的额网络监控和包分析工具，最大特点是拥有GUI图形界面。\n\n下载地址：http://www.tamos.com/products/commwifi/\n\n## 20、Pyrit\nPyrit也是一款优秀的WiFi密码暴力破解工具（WPA/WPA2-PSK）。运行于FreeBSD、MacOS和Linux平台。","source":"_posts/2016-08-20-二十款免费WiFi渗透测试工具.md","raw":"---\ntitle: 二十款免费渗透测试工具\ncategories: 技术与干货\ntag: 安全\nabbrlink: 7ab97256\ndate: 2016-08-20 16:12:23\n---\n\n> 对于企业的IT经理和网络管理员来说，保护相对脆弱的WiFi网络的最佳办法就拿黑客圈最流行的，“火力”最猛的工具入侵你自己的无线网络，从中找出网络安全漏洞并有针对性地补强。\n\n根据最新的安全情报，提炼出20款免费工具推荐如下：\n<!-- more -->\n\n## 1、Aircrack\nAircrack是目前最流行的WiFi密码破解工具。市面上能破解 WiFi加密的工具有很多，不外乎利用WEP安全漏洞或者暴力字典攻击的方式破解WPA/WPA2 PSK密码。WPA2 AES/CCMP加密依然是相对安全的选择。如果采用WPA2 PSK模式，那么你的密码长度最好是13位以上混合字符。在你的Wi-Fi网络被入侵或者“蹭网”之前，最好先用破解工具自我攻击一下。 Aircrack是一个开源的WEP/WPA/WPA2 PSK破解工具，可以运行在windows、Mac OS X、Linux和OpenBSD上。可以下载到Vmware镜像文件或Live CD文件。\n\n下载链接: http://www.aircrack-ng.org/\n\n\n## 2、AirSnort\nAirSnort是另外一款流行的WLAN密码破解工具，可以破解WEP秘钥。\n\n下载链接: http://sourceforge.net/projects/airsnort/\n\n\n## 3、Kismet\nKismet是一个开源的WiFi扫描器，包嗅探器和入侵政策系统，可以在windows、Mac OSX、Linux和BSD上运行。Kismet能显示AP详细信息，包括隐藏的SSID，还能捕获原始无线数据包，还可以将数据导入 Wireshark、TCPdump等工具进行分析。在windows环境，受驱动程序限制，Kismet只能与 CACE AirPcap无线网卡配合工作。但在Mac OSX和Linux上，Kismet可以兼容很多无线网卡。\n\n下载链接: http://www.kismetwireless.net/download.shtml\n\n\n## 4、Cain & Able\nCain和Abel是windows上的密码恢复、破解和嗅探工具，可被用于展示如何从网络中嗅探明文密码。\n\n下载链接: http://www.oxid.it/cain.html\n\n\n## 5、WireShark\n\nWireShark是当下非常流行的网络协议分析工具，关于最新的WireShark2.0版本的新功能的信息在这里。\n\n下载链接: https://www.wireshark.org/\n\n## 6、Fern WiFi Wireless Cracker\nFern是一款优秀的网络漏洞扫描和WLAN破解工具，可以破解获取WEP/WPA/WPS秘钥。Fren的开发工作从未停顿，而且专业版还提供更多强大功能。\n\n下载链接: http://www.fern-pro.com/downloads.php\n\n\n## 7、CoWPAtty\nCoWPAtty也是一款无线密码破解工具，新版预置了包含上千个流行SSID的17万个字典文件，大大提高了破解速度，类似国内的各种WiFi钥匙应用。\n\n下载链接: http://sourceforge.net/projects/cowpatty/\n\n\n## 8、Airjack\nAirjack是802.11包注入工具，过去曾被用来发起DOS或中间人攻击。\n\n下载链接: http://sourceforge.net/projects/airjack/\n\n\n## 9、WepAttack\n\n顾名思义，WepAttack也是一个802.11WEP秘钥破解工具，同时也是一个开源的Linux工具。\n\n下载链接: http://wepattack.sourceforge.net/\n\n## 10、NetStumbler\nNetStumbler是一个运行于Windows平台的无线密码破解工具。该工具已经很久未更新，无法兼容64位Windows版本，而且会被大多数无线入侵侦测工具发现，因此适合在家练手使用。\n\n下载链接: http://www.stumbler.net/\n\n## 11、inSSIDer\ninSSIDer是Windows和Mac平台上最流行的WiFi扫描工具，曾荣获最佳开源网络软件称号，不过目前已经转为收费版本（19.99美元）\n\n下载链接: http://www.inssider.com/\n\n## 12、Wifiphisher\n开源无线安全工具Wifiphisher能够对WPA加密的AP无线热点实施自动化钓鱼攻击，获取密码账户。由于利用了社工原理实施中间人攻击，Wifiphisher在实施攻击时无需进行暴力破解。\nWiFiphiser是基于MIT许可模式的开源软件，运行于Kali Linux之上。\n\n下载链接：https://github.com/sophron/wifiphisher\n\n\n## 13、KisMac\n一个类似Kismet的工具，面向Mac平台。\n\n下载链接:http://kismac-ng.org/\n\n## 14、Reaver\n如果你使用的是无线路由器，那么你需要注意去年底发现的一个安全漏洞：很多路由器厂商提供的WPS（一键认证模式，方便用户完成路由器设备连接认证）的 PIN码可以在数小时内被破解。Reaver就是这样一个工具，Reaver是一个Linux程序，能在4-10小时内暴力破解无线路由器的WPS PIN码和WPA/WPA2 PSK密码。Reaver还提供一个方便使用的专用硬件方案：Reaver Pro，有图形web操作界面。\n\n下载链接:https://code.google.com/p/reaver-wps/downloads/list\n\n\n## 15、Wifite\nWifite是一个很不错的无线密码破解工具，支持通过Reaver破解WPS秘钥，运行于Linux平台。\n\n下载链接: https://github.com/derv82/wifite\n\n## 16、WepDecrypt\nWepDecrypt是一款适合初学者的无线密码字典攻击工具，用C语言写成，但很久没有更新了。\n下载链接:http://wepdecrypt.sourceforge.net/wepdecrypt-manual.html\n\n\n## 17、OmniPeek\nOmniPeek是一款网络包嗅探分析工具，属于Windows平台“独占”工具。需要使用者对网络协议和数据包有较深入的了解。\n\n下载地址：http://www.wildpackets.com/products/distributed_network_analysis/omnipeek_network_analyzer\n\n## 18、CloudCracker\n顾名思义，CloudCracker是一款云端WiFi密码破解工具。\n\n下载地址: https://www.cloudcracker.com/\n\n \n\n## 19、CommonView for Wi-Fi\nCommonView是一款流行的额网络监控和包分析工具，最大特点是拥有GUI图形界面。\n\n下载地址：http://www.tamos.com/products/commwifi/\n\n## 20、Pyrit\nPyrit也是一款优秀的WiFi密码暴力破解工具（WPA/WPA2-PSK）。运行于FreeBSD、MacOS和Linux平台。","slug":"2016-08-20-二十款免费WiFi渗透测试工具","published":1,"updated":"2017-02-14T13:42:45.409Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5mkehrv001sao94jfyioxto","content":"<blockquote>\n<p>对于企业的IT经理和网络管理员来说，保护相对脆弱的WiFi网络的最佳办法就拿黑客圈最流行的，“火力”最猛的工具入侵你自己的无线网络，从中找出网络安全漏洞并有针对性地补强。</p>\n</blockquote>\n<p>根据最新的安全情报，提炼出20款免费工具推荐如下：<br><a id=\"more\"></a></p>\n<h2 id=\"1、Aircrack\"><a href=\"#1、Aircrack\" class=\"headerlink\" title=\"1、Aircrack\"></a>1、Aircrack</h2><p>Aircrack是目前最流行的WiFi密码破解工具。市面上能破解 WiFi加密的工具有很多，不外乎利用WEP安全漏洞或者暴力字典攻击的方式破解WPA/WPA2 PSK密码。WPA2 AES/CCMP加密依然是相对安全的选择。如果采用WPA2 PSK模式，那么你的密码长度最好是13位以上混合字符。在你的Wi-Fi网络被入侵或者“蹭网”之前，最好先用破解工具自我攻击一下。 Aircrack是一个开源的WEP/WPA/WPA2 PSK破解工具，可以运行在windows、Mac OS X、Linux和OpenBSD上。可以下载到Vmware镜像文件或Live CD文件。</p>\n<p>下载链接: <a href=\"http://www.aircrack-ng.org/\" target=\"_blank\" rel=\"external\">http://www.aircrack-ng.org/</a></p>\n<h2 id=\"2、AirSnort\"><a href=\"#2、AirSnort\" class=\"headerlink\" title=\"2、AirSnort\"></a>2、AirSnort</h2><p>AirSnort是另外一款流行的WLAN密码破解工具，可以破解WEP秘钥。</p>\n<p>下载链接: <a href=\"http://sourceforge.net/projects/airsnort/\" target=\"_blank\" rel=\"external\">http://sourceforge.net/projects/airsnort/</a></p>\n<h2 id=\"3、Kismet\"><a href=\"#3、Kismet\" class=\"headerlink\" title=\"3、Kismet\"></a>3、Kismet</h2><p>Kismet是一个开源的WiFi扫描器，包嗅探器和入侵政策系统，可以在windows、Mac OSX、Linux和BSD上运行。Kismet能显示AP详细信息，包括隐藏的SSID，还能捕获原始无线数据包，还可以将数据导入 Wireshark、TCPdump等工具进行分析。在windows环境，受驱动程序限制，Kismet只能与 CACE AirPcap无线网卡配合工作。但在Mac OSX和Linux上，Kismet可以兼容很多无线网卡。</p>\n<p>下载链接: <a href=\"http://www.kismetwireless.net/download.shtml\" target=\"_blank\" rel=\"external\">http://www.kismetwireless.net/download.shtml</a></p>\n<h2 id=\"4、Cain-amp-Able\"><a href=\"#4、Cain-amp-Able\" class=\"headerlink\" title=\"4、Cain &amp; Able\"></a>4、Cain &amp; Able</h2><p>Cain和Abel是windows上的密码恢复、破解和嗅探工具，可被用于展示如何从网络中嗅探明文密码。</p>\n<p>下载链接: <a href=\"http://www.oxid.it/cain.html\" target=\"_blank\" rel=\"external\">http://www.oxid.it/cain.html</a></p>\n<h2 id=\"5、WireShark\"><a href=\"#5、WireShark\" class=\"headerlink\" title=\"5、WireShark\"></a>5、WireShark</h2><p>WireShark是当下非常流行的网络协议分析工具，关于最新的WireShark2.0版本的新功能的信息在这里。</p>\n<p>下载链接: <a href=\"https://www.wireshark.org/\" target=\"_blank\" rel=\"external\">https://www.wireshark.org/</a></p>\n<h2 id=\"6、Fern-WiFi-Wireless-Cracker\"><a href=\"#6、Fern-WiFi-Wireless-Cracker\" class=\"headerlink\" title=\"6、Fern WiFi Wireless Cracker\"></a>6、Fern WiFi Wireless Cracker</h2><p>Fern是一款优秀的网络漏洞扫描和WLAN破解工具，可以破解获取WEP/WPA/WPS秘钥。Fren的开发工作从未停顿，而且专业版还提供更多强大功能。</p>\n<p>下载链接: <a href=\"http://www.fern-pro.com/downloads.php\" target=\"_blank\" rel=\"external\">http://www.fern-pro.com/downloads.php</a></p>\n<h2 id=\"7、CoWPAtty\"><a href=\"#7、CoWPAtty\" class=\"headerlink\" title=\"7、CoWPAtty\"></a>7、CoWPAtty</h2><p>CoWPAtty也是一款无线密码破解工具，新版预置了包含上千个流行SSID的17万个字典文件，大大提高了破解速度，类似国内的各种WiFi钥匙应用。</p>\n<p>下载链接: <a href=\"http://sourceforge.net/projects/cowpatty/\" target=\"_blank\" rel=\"external\">http://sourceforge.net/projects/cowpatty/</a></p>\n<h2 id=\"8、Airjack\"><a href=\"#8、Airjack\" class=\"headerlink\" title=\"8、Airjack\"></a>8、Airjack</h2><p>Airjack是802.11包注入工具，过去曾被用来发起DOS或中间人攻击。</p>\n<p>下载链接: <a href=\"http://sourceforge.net/projects/airjack/\" target=\"_blank\" rel=\"external\">http://sourceforge.net/projects/airjack/</a></p>\n<h2 id=\"9、WepAttack\"><a href=\"#9、WepAttack\" class=\"headerlink\" title=\"9、WepAttack\"></a>9、WepAttack</h2><p>顾名思义，WepAttack也是一个802.11WEP秘钥破解工具，同时也是一个开源的Linux工具。</p>\n<p>下载链接: <a href=\"http://wepattack.sourceforge.net/\" target=\"_blank\" rel=\"external\">http://wepattack.sourceforge.net/</a></p>\n<h2 id=\"10、NetStumbler\"><a href=\"#10、NetStumbler\" class=\"headerlink\" title=\"10、NetStumbler\"></a>10、NetStumbler</h2><p>NetStumbler是一个运行于Windows平台的无线密码破解工具。该工具已经很久未更新，无法兼容64位Windows版本，而且会被大多数无线入侵侦测工具发现，因此适合在家练手使用。</p>\n<p>下载链接: <a href=\"http://www.stumbler.net/\" target=\"_blank\" rel=\"external\">http://www.stumbler.net/</a></p>\n<h2 id=\"11、inSSIDer\"><a href=\"#11、inSSIDer\" class=\"headerlink\" title=\"11、inSSIDer\"></a>11、inSSIDer</h2><p>inSSIDer是Windows和Mac平台上最流行的WiFi扫描工具，曾荣获最佳开源网络软件称号，不过目前已经转为收费版本（19.99美元）</p>\n<p>下载链接: <a href=\"http://www.inssider.com/\" target=\"_blank\" rel=\"external\">http://www.inssider.com/</a></p>\n<h2 id=\"12、Wifiphisher\"><a href=\"#12、Wifiphisher\" class=\"headerlink\" title=\"12、Wifiphisher\"></a>12、Wifiphisher</h2><p>开源无线安全工具Wifiphisher能够对WPA加密的AP无线热点实施自动化钓鱼攻击，获取密码账户。由于利用了社工原理实施中间人攻击，Wifiphisher在实施攻击时无需进行暴力破解。<br>WiFiphiser是基于MIT许可模式的开源软件，运行于Kali Linux之上。</p>\n<p>下载链接：<a href=\"https://github.com/sophron/wifiphisher\" target=\"_blank\" rel=\"external\">https://github.com/sophron/wifiphisher</a></p>\n<h2 id=\"13、KisMac\"><a href=\"#13、KisMac\" class=\"headerlink\" title=\"13、KisMac\"></a>13、KisMac</h2><p>一个类似Kismet的工具，面向Mac平台。</p>\n<p>下载链接:<a href=\"http://kismac-ng.org/\" target=\"_blank\" rel=\"external\">http://kismac-ng.org/</a></p>\n<h2 id=\"14、Reaver\"><a href=\"#14、Reaver\" class=\"headerlink\" title=\"14、Reaver\"></a>14、Reaver</h2><p>如果你使用的是无线路由器，那么你需要注意去年底发现的一个安全漏洞：很多路由器厂商提供的WPS（一键认证模式，方便用户完成路由器设备连接认证）的 PIN码可以在数小时内被破解。Reaver就是这样一个工具，Reaver是一个Linux程序，能在4-10小时内暴力破解无线路由器的WPS PIN码和WPA/WPA2 PSK密码。Reaver还提供一个方便使用的专用硬件方案：Reaver Pro，有图形web操作界面。</p>\n<p>下载链接:<a href=\"https://code.google.com/p/reaver-wps/downloads/list\" target=\"_blank\" rel=\"external\">https://code.google.com/p/reaver-wps/downloads/list</a></p>\n<h2 id=\"15、Wifite\"><a href=\"#15、Wifite\" class=\"headerlink\" title=\"15、Wifite\"></a>15、Wifite</h2><p>Wifite是一个很不错的无线密码破解工具，支持通过Reaver破解WPS秘钥，运行于Linux平台。</p>\n<p>下载链接: <a href=\"https://github.com/derv82/wifite\" target=\"_blank\" rel=\"external\">https://github.com/derv82/wifite</a></p>\n<h2 id=\"16、WepDecrypt\"><a href=\"#16、WepDecrypt\" class=\"headerlink\" title=\"16、WepDecrypt\"></a>16、WepDecrypt</h2><p>WepDecrypt是一款适合初学者的无线密码字典攻击工具，用C语言写成，但很久没有更新了。<br>下载链接:<a href=\"http://wepdecrypt.sourceforge.net/wepdecrypt-manual.html\" target=\"_blank\" rel=\"external\">http://wepdecrypt.sourceforge.net/wepdecrypt-manual.html</a></p>\n<h2 id=\"17、OmniPeek\"><a href=\"#17、OmniPeek\" class=\"headerlink\" title=\"17、OmniPeek\"></a>17、OmniPeek</h2><p>OmniPeek是一款网络包嗅探分析工具，属于Windows平台“独占”工具。需要使用者对网络协议和数据包有较深入的了解。</p>\n<p>下载地址：<a href=\"http://www.wildpackets.com/products/distributed_network_analysis/omnipeek_network_analyzer\" target=\"_blank\" rel=\"external\">http://www.wildpackets.com/products/distributed_network_analysis/omnipeek_network_analyzer</a></p>\n<h2 id=\"18、CloudCracker\"><a href=\"#18、CloudCracker\" class=\"headerlink\" title=\"18、CloudCracker\"></a>18、CloudCracker</h2><p>顾名思义，CloudCracker是一款云端WiFi密码破解工具。</p>\n<p>下载地址: <a href=\"https://www.cloudcracker.com/\" target=\"_blank\" rel=\"external\">https://www.cloudcracker.com/</a></p>\n<h2 id=\"19、CommonView-for-Wi-Fi\"><a href=\"#19、CommonView-for-Wi-Fi\" class=\"headerlink\" title=\"19、CommonView for Wi-Fi\"></a>19、CommonView for Wi-Fi</h2><p>CommonView是一款流行的额网络监控和包分析工具，最大特点是拥有GUI图形界面。</p>\n<p>下载地址：<a href=\"http://www.tamos.com/products/commwifi/\" target=\"_blank\" rel=\"external\">http://www.tamos.com/products/commwifi/</a></p>\n<h2 id=\"20、Pyrit\"><a href=\"#20、Pyrit\" class=\"headerlink\" title=\"20、Pyrit\"></a>20、Pyrit</h2><p>Pyrit也是一款优秀的WiFi密码暴力破解工具（WPA/WPA2-PSK）。运行于FreeBSD、MacOS和Linux平台。</p>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>对于企业的IT经理和网络管理员来说，保护相对脆弱的WiFi网络的最佳办法就拿黑客圈最流行的，“火力”最猛的工具入侵你自己的无线网络，从中找出网络安全漏洞并有针对性地补强。</p>\n</blockquote>\n<p>根据最新的安全情报，提炼出20款免费工具推荐如下：<br>","more":"</p>\n<h2 id=\"1、Aircrack\"><a href=\"#1、Aircrack\" class=\"headerlink\" title=\"1、Aircrack\"></a>1、Aircrack</h2><p>Aircrack是目前最流行的WiFi密码破解工具。市面上能破解 WiFi加密的工具有很多，不外乎利用WEP安全漏洞或者暴力字典攻击的方式破解WPA/WPA2 PSK密码。WPA2 AES/CCMP加密依然是相对安全的选择。如果采用WPA2 PSK模式，那么你的密码长度最好是13位以上混合字符。在你的Wi-Fi网络被入侵或者“蹭网”之前，最好先用破解工具自我攻击一下。 Aircrack是一个开源的WEP/WPA/WPA2 PSK破解工具，可以运行在windows、Mac OS X、Linux和OpenBSD上。可以下载到Vmware镜像文件或Live CD文件。</p>\n<p>下载链接: <a href=\"http://www.aircrack-ng.org/\" target=\"_blank\" rel=\"external\">http://www.aircrack-ng.org/</a></p>\n<h2 id=\"2、AirSnort\"><a href=\"#2、AirSnort\" class=\"headerlink\" title=\"2、AirSnort\"></a>2、AirSnort</h2><p>AirSnort是另外一款流行的WLAN密码破解工具，可以破解WEP秘钥。</p>\n<p>下载链接: <a href=\"http://sourceforge.net/projects/airsnort/\" target=\"_blank\" rel=\"external\">http://sourceforge.net/projects/airsnort/</a></p>\n<h2 id=\"3、Kismet\"><a href=\"#3、Kismet\" class=\"headerlink\" title=\"3、Kismet\"></a>3、Kismet</h2><p>Kismet是一个开源的WiFi扫描器，包嗅探器和入侵政策系统，可以在windows、Mac OSX、Linux和BSD上运行。Kismet能显示AP详细信息，包括隐藏的SSID，还能捕获原始无线数据包，还可以将数据导入 Wireshark、TCPdump等工具进行分析。在windows环境，受驱动程序限制，Kismet只能与 CACE AirPcap无线网卡配合工作。但在Mac OSX和Linux上，Kismet可以兼容很多无线网卡。</p>\n<p>下载链接: <a href=\"http://www.kismetwireless.net/download.shtml\" target=\"_blank\" rel=\"external\">http://www.kismetwireless.net/download.shtml</a></p>\n<h2 id=\"4、Cain-amp-Able\"><a href=\"#4、Cain-amp-Able\" class=\"headerlink\" title=\"4、Cain &amp; Able\"></a>4、Cain &amp; Able</h2><p>Cain和Abel是windows上的密码恢复、破解和嗅探工具，可被用于展示如何从网络中嗅探明文密码。</p>\n<p>下载链接: <a href=\"http://www.oxid.it/cain.html\" target=\"_blank\" rel=\"external\">http://www.oxid.it/cain.html</a></p>\n<h2 id=\"5、WireShark\"><a href=\"#5、WireShark\" class=\"headerlink\" title=\"5、WireShark\"></a>5、WireShark</h2><p>WireShark是当下非常流行的网络协议分析工具，关于最新的WireShark2.0版本的新功能的信息在这里。</p>\n<p>下载链接: <a href=\"https://www.wireshark.org/\" target=\"_blank\" rel=\"external\">https://www.wireshark.org/</a></p>\n<h2 id=\"6、Fern-WiFi-Wireless-Cracker\"><a href=\"#6、Fern-WiFi-Wireless-Cracker\" class=\"headerlink\" title=\"6、Fern WiFi Wireless Cracker\"></a>6、Fern WiFi Wireless Cracker</h2><p>Fern是一款优秀的网络漏洞扫描和WLAN破解工具，可以破解获取WEP/WPA/WPS秘钥。Fren的开发工作从未停顿，而且专业版还提供更多强大功能。</p>\n<p>下载链接: <a href=\"http://www.fern-pro.com/downloads.php\" target=\"_blank\" rel=\"external\">http://www.fern-pro.com/downloads.php</a></p>\n<h2 id=\"7、CoWPAtty\"><a href=\"#7、CoWPAtty\" class=\"headerlink\" title=\"7、CoWPAtty\"></a>7、CoWPAtty</h2><p>CoWPAtty也是一款无线密码破解工具，新版预置了包含上千个流行SSID的17万个字典文件，大大提高了破解速度，类似国内的各种WiFi钥匙应用。</p>\n<p>下载链接: <a href=\"http://sourceforge.net/projects/cowpatty/\" target=\"_blank\" rel=\"external\">http://sourceforge.net/projects/cowpatty/</a></p>\n<h2 id=\"8、Airjack\"><a href=\"#8、Airjack\" class=\"headerlink\" title=\"8、Airjack\"></a>8、Airjack</h2><p>Airjack是802.11包注入工具，过去曾被用来发起DOS或中间人攻击。</p>\n<p>下载链接: <a href=\"http://sourceforge.net/projects/airjack/\" target=\"_blank\" rel=\"external\">http://sourceforge.net/projects/airjack/</a></p>\n<h2 id=\"9、WepAttack\"><a href=\"#9、WepAttack\" class=\"headerlink\" title=\"9、WepAttack\"></a>9、WepAttack</h2><p>顾名思义，WepAttack也是一个802.11WEP秘钥破解工具，同时也是一个开源的Linux工具。</p>\n<p>下载链接: <a href=\"http://wepattack.sourceforge.net/\" target=\"_blank\" rel=\"external\">http://wepattack.sourceforge.net/</a></p>\n<h2 id=\"10、NetStumbler\"><a href=\"#10、NetStumbler\" class=\"headerlink\" title=\"10、NetStumbler\"></a>10、NetStumbler</h2><p>NetStumbler是一个运行于Windows平台的无线密码破解工具。该工具已经很久未更新，无法兼容64位Windows版本，而且会被大多数无线入侵侦测工具发现，因此适合在家练手使用。</p>\n<p>下载链接: <a href=\"http://www.stumbler.net/\" target=\"_blank\" rel=\"external\">http://www.stumbler.net/</a></p>\n<h2 id=\"11、inSSIDer\"><a href=\"#11、inSSIDer\" class=\"headerlink\" title=\"11、inSSIDer\"></a>11、inSSIDer</h2><p>inSSIDer是Windows和Mac平台上最流行的WiFi扫描工具，曾荣获最佳开源网络软件称号，不过目前已经转为收费版本（19.99美元）</p>\n<p>下载链接: <a href=\"http://www.inssider.com/\" target=\"_blank\" rel=\"external\">http://www.inssider.com/</a></p>\n<h2 id=\"12、Wifiphisher\"><a href=\"#12、Wifiphisher\" class=\"headerlink\" title=\"12、Wifiphisher\"></a>12、Wifiphisher</h2><p>开源无线安全工具Wifiphisher能够对WPA加密的AP无线热点实施自动化钓鱼攻击，获取密码账户。由于利用了社工原理实施中间人攻击，Wifiphisher在实施攻击时无需进行暴力破解。<br>WiFiphiser是基于MIT许可模式的开源软件，运行于Kali Linux之上。</p>\n<p>下载链接：<a href=\"https://github.com/sophron/wifiphisher\" target=\"_blank\" rel=\"external\">https://github.com/sophron/wifiphisher</a></p>\n<h2 id=\"13、KisMac\"><a href=\"#13、KisMac\" class=\"headerlink\" title=\"13、KisMac\"></a>13、KisMac</h2><p>一个类似Kismet的工具，面向Mac平台。</p>\n<p>下载链接:<a href=\"http://kismac-ng.org/\" target=\"_blank\" rel=\"external\">http://kismac-ng.org/</a></p>\n<h2 id=\"14、Reaver\"><a href=\"#14、Reaver\" class=\"headerlink\" title=\"14、Reaver\"></a>14、Reaver</h2><p>如果你使用的是无线路由器，那么你需要注意去年底发现的一个安全漏洞：很多路由器厂商提供的WPS（一键认证模式，方便用户完成路由器设备连接认证）的 PIN码可以在数小时内被破解。Reaver就是这样一个工具，Reaver是一个Linux程序，能在4-10小时内暴力破解无线路由器的WPS PIN码和WPA/WPA2 PSK密码。Reaver还提供一个方便使用的专用硬件方案：Reaver Pro，有图形web操作界面。</p>\n<p>下载链接:<a href=\"https://code.google.com/p/reaver-wps/downloads/list\" target=\"_blank\" rel=\"external\">https://code.google.com/p/reaver-wps/downloads/list</a></p>\n<h2 id=\"15、Wifite\"><a href=\"#15、Wifite\" class=\"headerlink\" title=\"15、Wifite\"></a>15、Wifite</h2><p>Wifite是一个很不错的无线密码破解工具，支持通过Reaver破解WPS秘钥，运行于Linux平台。</p>\n<p>下载链接: <a href=\"https://github.com/derv82/wifite\" target=\"_blank\" rel=\"external\">https://github.com/derv82/wifite</a></p>\n<h2 id=\"16、WepDecrypt\"><a href=\"#16、WepDecrypt\" class=\"headerlink\" title=\"16、WepDecrypt\"></a>16、WepDecrypt</h2><p>WepDecrypt是一款适合初学者的无线密码字典攻击工具，用C语言写成，但很久没有更新了。<br>下载链接:<a href=\"http://wepdecrypt.sourceforge.net/wepdecrypt-manual.html\" target=\"_blank\" rel=\"external\">http://wepdecrypt.sourceforge.net/wepdecrypt-manual.html</a></p>\n<h2 id=\"17、OmniPeek\"><a href=\"#17、OmniPeek\" class=\"headerlink\" title=\"17、OmniPeek\"></a>17、OmniPeek</h2><p>OmniPeek是一款网络包嗅探分析工具，属于Windows平台“独占”工具。需要使用者对网络协议和数据包有较深入的了解。</p>\n<p>下载地址：<a href=\"http://www.wildpackets.com/products/distributed_network_analysis/omnipeek_network_analyzer\" target=\"_blank\" rel=\"external\">http://www.wildpackets.com/products/distributed_network_analysis/omnipeek_network_analyzer</a></p>\n<h2 id=\"18、CloudCracker\"><a href=\"#18、CloudCracker\" class=\"headerlink\" title=\"18、CloudCracker\"></a>18、CloudCracker</h2><p>顾名思义，CloudCracker是一款云端WiFi密码破解工具。</p>\n<p>下载地址: <a href=\"https://www.cloudcracker.com/\" target=\"_blank\" rel=\"external\">https://www.cloudcracker.com/</a></p>\n<h2 id=\"19、CommonView-for-Wi-Fi\"><a href=\"#19、CommonView-for-Wi-Fi\" class=\"headerlink\" title=\"19、CommonView for Wi-Fi\"></a>19、CommonView for Wi-Fi</h2><p>CommonView是一款流行的额网络监控和包分析工具，最大特点是拥有GUI图形界面。</p>\n<p>下载地址：<a href=\"http://www.tamos.com/products/commwifi/\" target=\"_blank\" rel=\"external\">http://www.tamos.com/products/commwifi/</a></p>\n<h2 id=\"20、Pyrit\"><a href=\"#20、Pyrit\" class=\"headerlink\" title=\"20、Pyrit\"></a>20、Pyrit</h2><p>Pyrit也是一款优秀的WiFi密码暴力破解工具（WPA/WPA2-PSK）。运行于FreeBSD、MacOS和Linux平台。</p>"},{"title":"MySQL高可用之MHA的搭建","abbrlink":"d872247d","date":"2016-07-24T16:00:00.000Z","_content":"# MHA简介\n> MHA（Master High Availability）目前在MySQL高可用方面是一个相对成熟的解决方案，它由日本DeNA公司youshimaton（现就职于Facebook公司）开发，是一套优秀的作为MySQL高可用性环境下故障切换和主从提升的高可用软件。在MySQL故障切换过程中，MHA能做到在0~30秒之内自动完成数据库的故障切换操作，并且在进行故障切换的过程中，MHA能在最大程度上保证数据的一致性，以达到真正意义上的高可用。\n\n<!--more-->\n\n> 该软件由两部分组成：MHA Manager（管理节点）和MHA Node（数据节点）。MHA Manager可以单独部署在一台独立的机器上管理多个master-slave集群，也可以部署在一台slave节点上。MHA Node运行在每台MySQL服务器上，MHA Manager会定时探测集群中的master节点，当master出现故障时，它可以自动将最新数据的slave提升为新的master，然后将所有其他的slave重新指向新的master。整个故障转移过程对应用程序完全透明。\n\n> 在MHA自动故障切换过程中，MHA试图从宕机的主服务器上保存二进制日志，最大程度的保证数据的不丢失，但这并不总是可行的。例如，如果主服务器硬件故障或无法通过ssh访问，MHA没法保存二进制日志，只进行故障转移而丢失了最新的数据。使用MySQL 5.5的半同步复制，可以大大降低数据丢失的风险。MHA可以与半同步复制结合起来。如果只有一个slave已经收到了最新的二进制日志，MHA可以将最新的二进制日志应用于其他所有的slave服务器上，因此可以保证所有节点的数据一致性。\n\n** 目前MHA主要支持一主多从的架构，要搭建MHA,要求一个复制集群中必须最少有三台数据库服务器，一主二从，即一台充当master，一台充当备用master，另外一台充当从库，因此至少需要三台服务器。 **\n\n# MHA工作原理总结为以下几条\n\n1. 从宕机崩溃的master保存二进制日志事件（binlog events）;\n2. 识别含有最新更新的slave;\n3. 应用差异的中继日志(relay log) 到其他slave;\n4. 应用从master保存的二进制日志事件(binlog events);\n5. 提升一个slave为新master;\n6. 使用其他的slave连接新的master进行复制。\n\n# 准备工作\n> 准备四台虚拟机, 均为CentOS-7-x86_64最小化安装, iptables与SELinux均处于关闭状态, 配置好yum源(base和epel). 做好快照, 以便每次实验后快速恢复.\n- 确保各节点时间保持一致\n- 各节点需开启二进制日志和中继日志\n- 各节点彼此可通过主机名进行通信\n- 各节点彼此间无密钥进行通信\n\n```\nHostA(Master)\nOS: CentOS-7-x86_64\nhostname: 80e54d87.twoyang.com\neno16777736: 172.18.71.101/16\ngateway: 172.18.0.1\n\nHostB(Slave)\nOS: CentOS-7-x86_64\nhostname: b9cf468b.twoyang.com\neno16777736: 172.18.71.102/16\ngateway: 172.18.0.1\n\nHostC(Slave)\nOS: CentOS-7-x86_64\nhostname: 1f5fafa6.twoyang.com\neno16777736: 172.18.71.103/16\ngateway: 172.18.0.1\n\nHostD(MHA Manager)\nOS: CentOS-7-x86_64\nhostname: 1478a474.twoyang.com\neno16777736: 172.18.71.130/16\ngateway: 172.18.0.1\n```\n** 先不管MHA, 按照主从复制模型搭建好集群. **\n\n# 主从复制\n## HostA(Master)\n```\n[root@80e54d87 ~]# yum install -y mariadb-server\n\nsed -i '/\\[server\\]/a\\character-set-server=utf8' /etc/my.cnf.d/server.cnf\nsed -i '/\\[server\\]/a\\collation-server=utf8_general_ci' /etc/my.cnf.d/server.cnf\nsed -i '/\\[server\\]/a\\default-storage-engine=InnoDB' /etc/my.cnf.d/server.cnf\nsed -i '/\\[server\\]/a\\innodb-file-per-table=TRUE' /etc/my.cnf.d/server.cnf\nsed -i '/\\[server\\]/a\\skip-name-resolve=TRUE' /etc/my.cnf.d/server.cnf\nsed -i '/\\[server\\]/a\\log_bin=master-binlog' /etc/my.cnf.d/server.cnf\n# 注意server_id为集群内的唯一标识.\nsed -i '/\\[server\\]/a\\server_id=1' /etc/my.cnf.d/server.cnf\n\n[root@80e54d87 ~]# systemctl start mariadb.service\n[root@80e54d87 ~]# mysql\n...\n# 创建用户前记录下二进制日志文件位置, 一会儿让从节点从此处开始复制, 就会自动创建此用户了.\n# 因为主节点宕机时, 从节点有可能会被MHA管理节点提升为主节点供其它从节点复制.\nMariaDB [(none)]> SHOW MASTER STATUS;\n+----------------------+----------+--------------+------------------+\n| File                 | Position | Binlog_Do_DB | Binlog_Ignore_DB |\n+----------------------+----------+--------------+------------------+\n| master-binlog.000003 |      245 |              |                  |\n+----------------------+----------+--------------+------------------+\n1 row in set (0.00 sec)\n# 授权用户'repl'@'172.18.71.%'可以复制数据\nMariaDB [(none)]> GRANT REPLICATION SLAVE, REPLICATION CLIENT ON *.* TO 'repl'@'172.18.71.%' IDENTIFIED BY 'magedu';\nQuery OK, 0 rows affected (0.00 sec)\n# 另外还得创建一个SUPER权限的用户用于MHA管理节点来控制.\nMariaDB [(none)]> GRANT ALL PRIVILEGES ON *.* TO 'mha'@'%' IDENTIFIED BY 'magedu';\nQuery OK, 0 rows affected (0.00 sec)\nMariaDB [(none)]> FLUSH PRIVILEGES;\nQuery OK, 0 rows affected (0.00 sec)\n```\n\n## HostB(Slave)\n```\n[root@b9cf468b ~]# yum install -y mariadb-server\n\nsed -i '/\\[server\\]/a\\character-set-server=utf8' /etc/my.cnf.d/server.cnf\nsed -i '/\\[server\\]/a\\collation-server=utf8_general_ci' /etc/my.cnf.d/server.cnf\nsed -i '/\\[server\\]/a\\default-storage-engine=InnoDB' /etc/my.cnf.d/server.cnf\nsed -i '/\\[server\\]/a\\innodb-file-per-table=TRUE' /etc/my.cnf.d/server.cnf\nsed -i '/\\[server\\]/a\\skip-name-resolve=TRUE' /etc/my.cnf.d/server.cnf\n# 从节点也要开启二进制日志, 因为可能会被提升为主节点.\nsed -i '/\\[server\\]/a\\log_bin=master-binlog' /etc/my.cnf.d/server.cnf\nsed -i '/\\[server\\]/a\\relay_log=relaylog' /etc/my.cnf.d/server.cnf\n# 对于某些滞后从库的恢复依赖于其他从库的relay_log，因此采取禁用自动删除功能以及定期清理的办法.\nsed -i '/\\[server\\]/a\\relay_log_purge=OFF' /etc/my.cnf.d/server.cnf\nsed -i '/\\[server\\]/a\\read-only=ON' /etc/my.cnf.d/server.cnf\n# 注意server_id为集群内的唯一标识.\nsed -i '/\\[server\\]/a\\server_id=5' /etc/my.cnf.d/server.cnf\n\n[root@b9cf468b ~]# systemctl start mariadb.service\n[root@b9cf468b ~]# mysql\n...\n# 指向HostA将其作为主节点\nMariaDB [(none)]> CHANGE MASTER TO MASTER_HOST='172.18.71.101', MASTER_USER='repl', MASTER_PASSWORD='magedu', MASTER_LOG_FILE='master-binlog.000003', MASTER_LOG_POS=245;\nQuery OK, 0 rows affected (0.00 sec)\n\n# 启动从节点, 即启动IO_thread和SQL_thread进程, 开始复制.\nMariaDB [(none)]> START SLAVE;\nQuery OK, 0 rows affected (0.00 sec)\n\nMariaDB [(none)]> SHOW SLAVE STATUS\\G\n*************************** 1. row ***************************\n               Slave_IO_State: Waiting for master to send event\n                  Master_Host: 172.18.71.101\n                  Master_User: repl\n                  Master_Port: 3306\n                Connect_Retry: 60\n              Master_Log_File: master-binlog.000003\n          Read_Master_Log_Pos: 555\n               Relay_Log_File: relaylog.000002\n                Relay_Log_Pos: 843\n        Relay_Master_Log_File: master-binlog.000003\n             Slave_IO_Running: Yes\n            Slave_SQL_Running: Yes\n......\n1 row in set (0.00 sec)\n```\n\n## HostC(Slave)\n** HostC与HostB做相同配置, 仅server_id必须不同. **\n\n# MHA\n## 集群初始化\n\n> 建立主机信任, 时间同步, 统一增加yum源. 这一步其实在哪个节点上做都可以, 我这里选择HostA.\n\n```\n# 写了个脚本来做这个事情\n[root@80e54d87 ~]# wget https://raw.githubusercontent.com/twoyang0917/LearnInMagedu/master/shell/sshtrust.sh\n# 有效代码是这个样子的\n[root@80e54d87 ~]# cat sshtrust.sh\n...\nHOSTS=(\"172.18.71.101\" \"172.18.71.102\")\n\nif ! [ $# -eq 1 ]; then\n   echo \"$0 --key\"\n   echo \"$0 \\\"COMMAND\\\"\"\n   exit 1\nfi \n\nif [ \"$1\" = \"--key\" ]; then\n    [ -f ~/.ssh/id_rsa ] || ssh-keygen -t rsa -f ~/.ssh/id_rsa -N ''\n    [ -f ~/.ssh/id_rsa.pub ] && cat ~/.ssh/id_rsa.pub > ~/.ssh/authorized_keys && chmod 600 ~/.ssh/authorized_keys\n    for host in ${HOSTS[*]}; do\n        # 因为其它节点上都没有~/.ssh这么一个目录, 还得远程创建, 这导致分发密钥时要输两次密码还挺烦的.\n        ssh root@$host \"[ -d ~/.ssh ] || mkdir ~/.ssh\"\n        scp -p ~/.ssh/{id_rsa,authorized_keys} root@$host:~/.ssh/\n    done\nelse\n    for host in ${HOSTS[*]}; do\n        ssh root@$host $1\n    done\nfi\n# 将集群中所有节点IP地址(包括本机)都加入这个主机列表数组\n[root@80e54d87 ~]# vim sshtrust.sh\nHOSTS=(\"172.18.71.101\" \"172.18.71.102\" \"172.18.71.103\" \"172.18.71.130\")\n# 分发密钥, 两两节点间均建立主机信任.\n[root@80e54d87 ~]# bash sshtrust.sh --key\nGenerating public/private rsa key pair.\nCreated directory '/root/.ssh'.\nYour identification has been saved in /root/.ssh/id_rsa.\nYour public key has been saved in /root/.ssh/id_rsa.pub.\nThe key fingerprint is:\n02:de:f2:86:5b:4b:3d:2b:70:cc:1c:c9:d2:65:5d:0b root@80e54d87.twoyang.com\nThe key's randomart image is:\n+--[ RSA 2048]----+\n|         .E..    |\n|        o .. .   |\n|    .o +    .    |\n|   ..o=          |\n|    o=o.S        |\n|    .+=o         |\n|    .o= o        |\n|     =.. o       |\n|    . ...        |\n+-----------------+\nThe authenticity of host '172.18.71.101 (172.18.71.101)' can't be established.\nECDSA key fingerprint is 2d:37:94:8b:81:ea:57:bc:93:18:44:d6:f6:97:6c:5b.\nAre you sure you want to continue connecting (yes/no)? yes\nWarning: Permanently added '172.18.71.101' (ECDSA) to the list of known hosts.\nThe authenticity of host '172.18.71.102 (172.18.71.102)' can't be established.\nECDSA key fingerprint is 07:d0:4c:77:32:95:bc:df:8b:c1:b0:41:d6:af:66:59.\nAre you sure you want to continue connecting (yes/no)? yes\nWarning: Permanently added '172.18.71.102' (ECDSA) to the list of known hosts.\nroot@172.18.71.102's password: \nroot@172.18.71.102's password: \nid_rsa                                                                        100% 1679     1.6KB/s   00:00    \nauthorized_keys                                                               100%  407     0.4KB/s   00:00    \nThe authenticity of host '172.18.71.103 (172.18.71.103)' can't be established.\nECDSA key fingerprint is e5:49:95:0f:18:ac:e8:e3:22:6a:7e:09:ae:f9:61:55.\nAre you sure you want to continue connecting (yes/no)? yes\nWarning: Permanently added '172.18.71.103' (ECDSA) to the list of known hosts.\nroot@172.18.71.103's password: \nroot@172.18.71.103's password: \nid_rsa                                                                        100% 1679     1.6KB/s   00:00    \nauthorized_keys                                                               100%  407     0.4KB/s   00:00    \nThe authenticity of host '172.18.71.130 (172.18.71.130)' can't be established.\nECDSA key fingerprint is 6d:01:30:42:82:4a:ae:5a:ec:7e:62:7c:7e:31:64:b9.\nAre you sure you want to continue connecting (yes/no)? yes\nWarning: Permanently added '172.18.71.130' (ECDSA) to the list of known hosts.\nroot@172.18.71.130's password: \nroot@172.18.71.130's password: \nid_rsa                                                                        100% 1679     1.6KB/s   00:00    \nauthorized_keys                                                               100%  407     \n0.4KB/s   00:00\n# 同步时间\n[root@80e54d87 ~]# bash sshtrust.sh \"ntpdate 172.18.0.1\"\n 6 Jun 20:55:36 ntpdate[3354]: step time server 172.18.0.1 offset 2644756.261973 sec\n 6 Jun 20:53:30 ntpdate[11248]: step time server 172.18.0.1 offset 2640569.256399 sec\n 6 Jun 20:53:36 ntpdate[40408]: step time server 172.18.0.1 offset -2.854146 sec\n 6 Jun 20:53:42 ntpdate[3457]: step time server 172.18.0.1 offset 3975759.234646 sec\n[root@80e54d87 ~]# bash sshtrust.sh \"hwclock --systohc\"\n[root@80e54d87 ~]# bash sshtrust.sh date\nMon Jun  6 20:56:25 CST 2016\nMon Jun  6 20:56:25 CST 2016\nMon Jun  6 20:56:25 CST 2016\nMon Jun  6 20:56:25 CST 2016\n# 因为MHA在cenots官方yum源中没有提供, 所以从Google Driver上下载下来做成了yum源.\n[root@80e54d87 ~]# bash sshtrust.sh \"yum-config-manager --add-repo=http://172.18.71.254/templates/twoyang-c7.repo\"\nLoaded plugins: fastestmirror, langpacks\nadding repo from: http://172.18.71.254/templates/twoyang-c7.repo\ngrabbing file http://172.18.71.254/templates/twoyang-c7.repo to /etc/yum.repos.d/twoyang-c7.repo\nrepo saved to /etc/yum.repos.d/twoyang-c7.repo\nLoaded plugins: fastestmirror, langpacks\nadding repo from: http://172.18.71.254/templates/twoyang-c7.repo\ngrabbing file http://172.18.71.254/templates/twoyang-c7.repo to /etc/yum.repos.d/twoyang-c7.repo\nrepo saved to /etc/yum.repos.d/twoyang-c7.repo\nLoaded plugins: fastestmirror, langpacks\nadding repo from: http://172.18.71.254/templates/twoyang-c7.repo\ngrabbing file http://172.18.71.254/templates/twoyang-c7.repo to /etc/yum.repos.d/twoyang-c7.repo\nrepo saved to /etc/yum.repos.d/twoyang-c7.repo\nLoaded plugins: fastestmirror, langpacks\nadding repo from: http://172.18.71.254/templates/twoyang-c7.repo\ngrabbing file http://172.18.71.254/templates/twoyang-c7.repo to /etc/yum.repos.d/twoyang-c7.repo\nrepo saved to /etc/yum.repos.d/twoyang-c7.repo\n```\n\n# 安装配置MHA\n```\n# 集群内所有节点(包括管理节点)需要安装Node包\n[root@80e54d87 ~]# bash sshtrust.sh \"yum install -y mha4mysql-node.noarch\"\n\n# HostD作为MHA管理节点需要安装Manager包\n[root@1478a474 ~]# yum install -y mha4mysql-manager.noarch\n\n# 默认是没有配置文件, 自己建立目录和配置文件.\n[root@1478a474 ~]# mkdir /etc/masterha\n[root@1478a474 ~]# vim /etc/masterha/app1.cnf\n[server default]\nuser=mha\t#  被控节点授权给管理节点SUPER权限的用户\npassword=magedu\t#  被控节点授权给管理节点SUPER权限用户的口令\nmanager_workdir=/data/masterha/app1\t# 管理节点的工作目录, 会自动建立.\nmanager_log=/data/masterha/app1/manager.log\t# 管理节点的日志\nremote_workdir=/data/masterha/app1 # 被控节点的工作目录, 会自动建立.\nssh_user=root\t# 被控节点的ssh用户\nrepl_user=repl\t# 用于数据库复制的用户\nrepl_password=magedu # 用于数据库复制的用户的口令\nping_interval=1 # 被控节点的健康检查时间间隔\n\n[server1]\nhostname=172.18.71.101\ncandidate_master=1\t# 作为主节点候选\n\n[server2]\nhostname=172.18.71.102\ncandidate_master=1\n\n[server3]\nhostname=172.18.71.103\nno_master=1\t# 永远不作为主节点\n\n# 用mha提供的脚本做主机信任检查.\n[root@1478a474 ~]# masterha_check_ssh --conf=/etc/masterha/app1.cnf\nMon Jun  6 22:12:23 2016 - [warning] Global configuration file /etc/masterha_default.cnf not found. Skipping.\nMon Jun  6 22:12:23 2016 - [info] Reading application default configuration from /etc/masterha/app1.cnf..\nMon Jun  6 22:12:23 2016 - [info] Reading server configuration from /etc/masterha/app1.cnf..\nMon Jun  6 22:12:23 2016 - [info] Starting SSH connection tests..\nMon Jun  6 22:12:24 2016 - [debug] \nMon Jun  6 22:12:24 2016 - [info] All SSH connection tests passed successfully.\n\n# 用mha提供的脚本做数据库复制检查.\n[root@1478a474 ~]# masterha_check_repl --conf=/etc/masterha/app1.cnf\nMon Jun  6 22:19:40 2016 - [warning] Global configuration file /etc/masterha_default.cnf not found. Skipping.\nMon Jun  6 22:19:40 2016 - [info] Reading application default configuration from /etc/masterha/app1.cnf..\nMon Jun  6 22:19:40 2016 - [info] Reading server configuration from /etc/masterha/app1.cnf..\nMon Jun  6 22:19:40 2016 - [info] MHA::MasterMonitor version 0.57.\nMon Jun  6 22:19:40 2016 - [info] GTID failover mode = 0\nMon Jun  6 22:19:40 2016 - [info] Dead Servers:\nMon Jun  6 22:19:40 2016 - [info] Alive Servers:\nMon Jun  6 22:19:40 2016 - [info]   172.18.71.101(172.18.71.101:3306)\nMon Jun  6 22:19:40 2016 - [info]   172.18.71.102(172.18.71.102:3306)\nMon Jun  6 22:19:40 2016 - [info]   172.18.71.103(172.18.71.103:3306)\nMon Jun  6 22:19:40 2016 - [info] Alive Slaves:\nMon Jun  6 22:19:40 2016 - [info]   172.18.71.102(172.18.71.102:3306)  Version=5.5.44-MariaDB-log (oldest major version between slaves) log-bin:enabled\nMon Jun  6 22:19:40 2016 - [info]     Replicating from 172.18.71.101(172.18.71.101:3306)\nMon Jun  6 22:19:40 2016 - [info]     Primary candidate for the new Master (candidate_master is set)\nMon Jun  6 22:19:40 2016 - [info]   172.18.71.103(172.18.71.103:3306)  Version=5.5.44-MariaDB-log (oldest major version between slaves) log-bin:enabled\nMon Jun  6 22:19:40 2016 - [info]     Replicating from 172.18.71.101(172.18.71.101:3306)\nMon Jun  6 22:19:40 2016 - [info]     Not candidate for the new Master (no_master is set)\nMon Jun  6 22:19:40 2016 - [info] Current Alive Master: 172.18.71.101(172.18.71.101:3306)\nMon Jun  6 22:19:40 2016 - [info] Checking slave configurations..\nMon Jun  6 22:19:40 2016 - [info] Checking replication filtering settings..\nMon Jun  6 22:19:40 2016 - [info]  binlog_do_db= , binlog_ignore_db= \nMon Jun  6 22:19:40 2016 - [info]  Replication filtering check ok.\nMon Jun  6 22:19:40 2016 - [info] GTID (with auto-pos) is not supported\nMon Jun  6 22:19:40 2016 - [info] Starting SSH connection tests..\nMon Jun  6 22:19:42 2016 - [info] All SSH connection tests passed successfully.\nMon Jun  6 22:19:42 2016 - [info] Checking MHA Node version..\nMon Jun  6 22:19:42 2016 - [info]  Version check ok.\nMon Jun  6 22:19:42 2016 - [info] Checking SSH publickey authentication settings on the current master..\nMon Jun  6 22:19:43 2016 - [info] HealthCheck: SSH to 172.18.71.101 is reachable.\nMon Jun  6 22:19:43 2016 - [info] Master MHA Node version is 0.57.\nMon Jun  6 22:19:43 2016 - [info] Checking recovery script configurations on 172.18.71.101(172.18.71.101:3306)..\nMon Jun  6 22:19:43 2016 - [info]   Executing command: save_binary_logs --command=test --start_pos=4 --binlog_dir=/var/lib/mysql,/var/log/mysql --output_file=/data/masterha/app1/save_binary_logs_test --manager_version=0.57 --start_file=master-binlog.000003 \nMon Jun  6 22:19:43 2016 - [info]   Connecting to root@172.18.71.101(172.18.71.101:22).. \n  Creating /data/masterha/app1 if not exists.. Creating directory /data/masterha/app1.. done.\n   ok.\n  Checking output directory is accessible or not..\n   ok.\n  Binlog found at /var/lib/mysql, up to master-binlog.000003\nMon Jun  6 22:19:43 2016 - [info] Binlog setting check done.\nMon Jun  6 22:19:43 2016 - [info] Checking SSH publickey authentication and checking recovery script configurations on all alive slave servers..\nMon Jun  6 22:19:43 2016 - [info]   Executing command : apply_diff_relay_logs --command=test --slave_user='mha' --slave_host=172.18.71.102 --slave_ip=172.18.71.102 --slave_port=3306 --workdir=/data/masterha/app1 --target_version=5.5.44-MariaDB-log --manager_version=0.57 --relay_log_info=/var/lib/mysql/relay-log.info  --relay_dir=/var/lib/mysql/  --slave_pass=xxx\nMon Jun  6 22:19:43 2016 - [info]   Connecting to root@172.18.71.102(172.18.71.102:22).. \nCreating directory /data/masterha/app1.. done.\n  Checking slave recovery environment settings..\n    Opening /var/lib/mysql/relay-log.info ... ok.\n    Relay log found at /var/lib/mysql, up to relaylog.000006\n    Temporary relay log file is /var/lib/mysql/relaylog.000006\n    Testing mysql connection and privileges.. done.\n    Testing mysqlbinlog output.. done.\n    Cleaning up test file(s).. done.\nMon Jun  6 22:19:43 2016 - [info]   Executing command : apply_diff_relay_logs --command=test --slave_user='mha' --slave_host=172.18.71.103 --slave_ip=172.18.71.103 --slave_port=3306 --workdir=/data/masterha/app1 --target_version=5.5.44-MariaDB-log --manager_version=0.57 --relay_log_info=/var/lib/mysql/relay-log.info  --relay_dir=/var/lib/mysql/  --slave_pass=xxx\nMon Jun  6 22:19:43 2016 - [info]   Connecting to root@172.18.71.103(172.18.71.103:22).. \nCreating directory /data/masterha/app1.. done.\n  Checking slave recovery environment settings..\n    Opening /var/lib/mysql/relay-log.info ... ok.\n    Relay log found at /var/lib/mysql, up to relaylog.000004\n    Temporary relay log file is /var/lib/mysql/relaylog.000004\n    Testing mysql connection and privileges.. done.\n    Testing mysqlbinlog output.. done.\n    Cleaning up test file(s).. done.\nMon Jun  6 22:19:43 2016 - [info] Slaves settings check done.\nMon Jun  6 22:19:43 2016 - [info] \n172.18.71.101(172.18.71.101:3306) (current master)\n +--172.18.71.102(172.18.71.102:3306)\n +--172.18.71.103(172.18.71.103:3306)\n\nMon Jun  6 22:19:43 2016 - [info] Checking replication health on 172.18.71.102..\nMon Jun  6 22:19:43 2016 - [info]  ok.\nMon Jun  6 22:19:43 2016 - [info] Checking replication health on 172.18.71.103..\nMon Jun  6 22:19:43 2016 - [info]  ok.\n# 这里已经提示了没有定义主节点故障VIP如何漂移的脚本.\nMon Jun  6 22:19:43 2016 - [warning] master_ip_failover_script is not defined.\n# 也没有定义STONITH脚本, 以防止集群脑裂.\nMon Jun  6 22:19:43 2016 - [warning] shutdown_script is not defined.\nMon Jun  6 22:19:43 2016 - [info] Got exit code 0 (Not master dead).\n\nMySQL Replication Health is OK.\n\n# 测试通过就可以启动MHA了\n[root@1478a474 ~]# nohup masterha_manager --conf=/etc/masterha/app1.cnf &> /data/masterha/app1/manager.log &\n\n# 查看状态\n[root@1478a474 ~]# masterha_check_status --conf=/etc/masterha/app1.cnf\napp1 (pid:30255) is running(0:PING_OK), master:172.18.71.101\n\n# 如需停止MHA, 执行以下命令.\n[root@1478a474 ~]# masterha_stop --conf=/etc/masterha/app1.cnf\nStopped app1 successfully.\n[1]+  Exit 1                  nohup masterha_manager --conf=/etc/masterha/app1.cnf &>/data/masterha/app1/manager.log\n\n```\n\n# 测试验证\n关闭HostA(Master)的mariadb服务, 期望MHA能够检测到HostA故障, 将HostB提升为Master.\n\n```\n# 杀死HostA上的mysqld和mysqld_safe进程\n[root@80e54d87 ~]# killall -9 mysqld mysqld_safe\n\n# 查看MHA的日志, 可以看到故障转移报告.\n[root@1478a474 ~]# less /data/masterha/app1/manager.log\n...\n----- Failover Report -----\n\napp1: MySQL Master failover 172.18.71.101(172.18.71.101:3306) to 172.18.71.102(172.18.71.102:3306) succeeded\n\nMaster 172.18.71.101(172.18.71.101:3306) is down!\n\nCheck MHA Manager logs at 1478a474.twoyang.com:/data/masterha/app1/manager.log for details.\n\nStarted automated(non-interactive) failover.\nThe latest slave 172.18.71.102(172.18.71.102:3306) has all relay logs for recovery.\nSelected 172.18.71.102(172.18.71.102:3306) as a new master.\n172.18.71.102(172.18.71.102:3306): OK: Applying all logs succeeded.\n172.18.71.103(172.18.71.103:3306): This host has the latest relay log events.\nGenerating relay diff files from the latest slave succeeded.\n172.18.71.103(172.18.71.103:3306): OK: Applying all logs succeeded. Slave started, replicating from 172.18.71.102(172.18.71.102:3306)\n172.18.71.102(172.18.71.102:3306): Resetting slave info succeeded.\nMaster failover to 172.18.71.102(172.18.71.102:3306) completed successfully.\n\n# 再看另一个从节点HostC上, MHA已经将其主节点由HostA修改为了HostB了.\nMariaDB [(none)]> SHOW SLAVE STATUS\\G\n*************************** 1. row ***************************\n               Slave_IO_State: Waiting for master to send event\n                  Master_Host: 172.18.71.102\n                  Master_User: repl\n                  Master_Port: 3306\n                Connect_Retry: 60\n              Master_Log_File: master-binlog.000001\n          Read_Master_Log_Pos: 245\n               Relay_Log_File: relaylog.000002\n                Relay_Log_Pos: 533\n        Relay_Master_Log_File: master-binlog.000001\n             Slave_IO_Running: Yes\n            Slave_SQL_Running: Yes\n......\n1 row in set (0.00 sec)\n\n# 注意: 故障转移完成后, MHA将会自动停止进程.\n[root@1478a474 ~]# masterha_check_status --conf=/etc/masterha/app1.cnf\napp1 is stopped(2:NOT_RUNNING).\n```\n\n# 最后\n还有几个问题需要说明一下:\n- 因为主从异步复制时难免会出现从节点落后主节点的情况, 这样主机点宕机就会出现丢失数据的情况. 所以如果是做半同步复制情况就会好很多.\n- 这里没有考虑VIP和STONITH的问题, 其实前面用MHA做复制检查时已经警告过我们了. VIP地址漂移的问题可以通过脚本来实现, 也可以通过keepalived来实现. 而STONITH也可以通过脚本来实现, 不过既然是脑裂基本上就是联系不上对方, 那通过脚本来STONITH也就不太靠谱; 想靠谱基本上只有上硬件, 那可就贵了.\n原文地址：[点我](http://twoyang.net/2016/06/06/mariadb%20MHA/)","source":"_posts/2016-07-25-MySQL高可用之MHA的搭建.md","raw":"---\ntitle: MySQL高可用之MHA的搭建\ncategories: 技术与干货\ntag: MySQL\nabbrlink: d872247d\ndate: 2016-07-25 00:00:00\n---\n# MHA简介\n> MHA（Master High Availability）目前在MySQL高可用方面是一个相对成熟的解决方案，它由日本DeNA公司youshimaton（现就职于Facebook公司）开发，是一套优秀的作为MySQL高可用性环境下故障切换和主从提升的高可用软件。在MySQL故障切换过程中，MHA能做到在0~30秒之内自动完成数据库的故障切换操作，并且在进行故障切换的过程中，MHA能在最大程度上保证数据的一致性，以达到真正意义上的高可用。\n\n<!--more-->\n\n> 该软件由两部分组成：MHA Manager（管理节点）和MHA Node（数据节点）。MHA Manager可以单独部署在一台独立的机器上管理多个master-slave集群，也可以部署在一台slave节点上。MHA Node运行在每台MySQL服务器上，MHA Manager会定时探测集群中的master节点，当master出现故障时，它可以自动将最新数据的slave提升为新的master，然后将所有其他的slave重新指向新的master。整个故障转移过程对应用程序完全透明。\n\n> 在MHA自动故障切换过程中，MHA试图从宕机的主服务器上保存二进制日志，最大程度的保证数据的不丢失，但这并不总是可行的。例如，如果主服务器硬件故障或无法通过ssh访问，MHA没法保存二进制日志，只进行故障转移而丢失了最新的数据。使用MySQL 5.5的半同步复制，可以大大降低数据丢失的风险。MHA可以与半同步复制结合起来。如果只有一个slave已经收到了最新的二进制日志，MHA可以将最新的二进制日志应用于其他所有的slave服务器上，因此可以保证所有节点的数据一致性。\n\n** 目前MHA主要支持一主多从的架构，要搭建MHA,要求一个复制集群中必须最少有三台数据库服务器，一主二从，即一台充当master，一台充当备用master，另外一台充当从库，因此至少需要三台服务器。 **\n\n# MHA工作原理总结为以下几条\n\n1. 从宕机崩溃的master保存二进制日志事件（binlog events）;\n2. 识别含有最新更新的slave;\n3. 应用差异的中继日志(relay log) 到其他slave;\n4. 应用从master保存的二进制日志事件(binlog events);\n5. 提升一个slave为新master;\n6. 使用其他的slave连接新的master进行复制。\n\n# 准备工作\n> 准备四台虚拟机, 均为CentOS-7-x86_64最小化安装, iptables与SELinux均处于关闭状态, 配置好yum源(base和epel). 做好快照, 以便每次实验后快速恢复.\n- 确保各节点时间保持一致\n- 各节点需开启二进制日志和中继日志\n- 各节点彼此可通过主机名进行通信\n- 各节点彼此间无密钥进行通信\n\n```\nHostA(Master)\nOS: CentOS-7-x86_64\nhostname: 80e54d87.twoyang.com\neno16777736: 172.18.71.101/16\ngateway: 172.18.0.1\n\nHostB(Slave)\nOS: CentOS-7-x86_64\nhostname: b9cf468b.twoyang.com\neno16777736: 172.18.71.102/16\ngateway: 172.18.0.1\n\nHostC(Slave)\nOS: CentOS-7-x86_64\nhostname: 1f5fafa6.twoyang.com\neno16777736: 172.18.71.103/16\ngateway: 172.18.0.1\n\nHostD(MHA Manager)\nOS: CentOS-7-x86_64\nhostname: 1478a474.twoyang.com\neno16777736: 172.18.71.130/16\ngateway: 172.18.0.1\n```\n** 先不管MHA, 按照主从复制模型搭建好集群. **\n\n# 主从复制\n## HostA(Master)\n```\n[root@80e54d87 ~]# yum install -y mariadb-server\n\nsed -i '/\\[server\\]/a\\character-set-server=utf8' /etc/my.cnf.d/server.cnf\nsed -i '/\\[server\\]/a\\collation-server=utf8_general_ci' /etc/my.cnf.d/server.cnf\nsed -i '/\\[server\\]/a\\default-storage-engine=InnoDB' /etc/my.cnf.d/server.cnf\nsed -i '/\\[server\\]/a\\innodb-file-per-table=TRUE' /etc/my.cnf.d/server.cnf\nsed -i '/\\[server\\]/a\\skip-name-resolve=TRUE' /etc/my.cnf.d/server.cnf\nsed -i '/\\[server\\]/a\\log_bin=master-binlog' /etc/my.cnf.d/server.cnf\n# 注意server_id为集群内的唯一标识.\nsed -i '/\\[server\\]/a\\server_id=1' /etc/my.cnf.d/server.cnf\n\n[root@80e54d87 ~]# systemctl start mariadb.service\n[root@80e54d87 ~]# mysql\n...\n# 创建用户前记录下二进制日志文件位置, 一会儿让从节点从此处开始复制, 就会自动创建此用户了.\n# 因为主节点宕机时, 从节点有可能会被MHA管理节点提升为主节点供其它从节点复制.\nMariaDB [(none)]> SHOW MASTER STATUS;\n+----------------------+----------+--------------+------------------+\n| File                 | Position | Binlog_Do_DB | Binlog_Ignore_DB |\n+----------------------+----------+--------------+------------------+\n| master-binlog.000003 |      245 |              |                  |\n+----------------------+----------+--------------+------------------+\n1 row in set (0.00 sec)\n# 授权用户'repl'@'172.18.71.%'可以复制数据\nMariaDB [(none)]> GRANT REPLICATION SLAVE, REPLICATION CLIENT ON *.* TO 'repl'@'172.18.71.%' IDENTIFIED BY 'magedu';\nQuery OK, 0 rows affected (0.00 sec)\n# 另外还得创建一个SUPER权限的用户用于MHA管理节点来控制.\nMariaDB [(none)]> GRANT ALL PRIVILEGES ON *.* TO 'mha'@'%' IDENTIFIED BY 'magedu';\nQuery OK, 0 rows affected (0.00 sec)\nMariaDB [(none)]> FLUSH PRIVILEGES;\nQuery OK, 0 rows affected (0.00 sec)\n```\n\n## HostB(Slave)\n```\n[root@b9cf468b ~]# yum install -y mariadb-server\n\nsed -i '/\\[server\\]/a\\character-set-server=utf8' /etc/my.cnf.d/server.cnf\nsed -i '/\\[server\\]/a\\collation-server=utf8_general_ci' /etc/my.cnf.d/server.cnf\nsed -i '/\\[server\\]/a\\default-storage-engine=InnoDB' /etc/my.cnf.d/server.cnf\nsed -i '/\\[server\\]/a\\innodb-file-per-table=TRUE' /etc/my.cnf.d/server.cnf\nsed -i '/\\[server\\]/a\\skip-name-resolve=TRUE' /etc/my.cnf.d/server.cnf\n# 从节点也要开启二进制日志, 因为可能会被提升为主节点.\nsed -i '/\\[server\\]/a\\log_bin=master-binlog' /etc/my.cnf.d/server.cnf\nsed -i '/\\[server\\]/a\\relay_log=relaylog' /etc/my.cnf.d/server.cnf\n# 对于某些滞后从库的恢复依赖于其他从库的relay_log，因此采取禁用自动删除功能以及定期清理的办法.\nsed -i '/\\[server\\]/a\\relay_log_purge=OFF' /etc/my.cnf.d/server.cnf\nsed -i '/\\[server\\]/a\\read-only=ON' /etc/my.cnf.d/server.cnf\n# 注意server_id为集群内的唯一标识.\nsed -i '/\\[server\\]/a\\server_id=5' /etc/my.cnf.d/server.cnf\n\n[root@b9cf468b ~]# systemctl start mariadb.service\n[root@b9cf468b ~]# mysql\n...\n# 指向HostA将其作为主节点\nMariaDB [(none)]> CHANGE MASTER TO MASTER_HOST='172.18.71.101', MASTER_USER='repl', MASTER_PASSWORD='magedu', MASTER_LOG_FILE='master-binlog.000003', MASTER_LOG_POS=245;\nQuery OK, 0 rows affected (0.00 sec)\n\n# 启动从节点, 即启动IO_thread和SQL_thread进程, 开始复制.\nMariaDB [(none)]> START SLAVE;\nQuery OK, 0 rows affected (0.00 sec)\n\nMariaDB [(none)]> SHOW SLAVE STATUS\\G\n*************************** 1. row ***************************\n               Slave_IO_State: Waiting for master to send event\n                  Master_Host: 172.18.71.101\n                  Master_User: repl\n                  Master_Port: 3306\n                Connect_Retry: 60\n              Master_Log_File: master-binlog.000003\n          Read_Master_Log_Pos: 555\n               Relay_Log_File: relaylog.000002\n                Relay_Log_Pos: 843\n        Relay_Master_Log_File: master-binlog.000003\n             Slave_IO_Running: Yes\n            Slave_SQL_Running: Yes\n......\n1 row in set (0.00 sec)\n```\n\n## HostC(Slave)\n** HostC与HostB做相同配置, 仅server_id必须不同. **\n\n# MHA\n## 集群初始化\n\n> 建立主机信任, 时间同步, 统一增加yum源. 这一步其实在哪个节点上做都可以, 我这里选择HostA.\n\n```\n# 写了个脚本来做这个事情\n[root@80e54d87 ~]# wget https://raw.githubusercontent.com/twoyang0917/LearnInMagedu/master/shell/sshtrust.sh\n# 有效代码是这个样子的\n[root@80e54d87 ~]# cat sshtrust.sh\n...\nHOSTS=(\"172.18.71.101\" \"172.18.71.102\")\n\nif ! [ $# -eq 1 ]; then\n   echo \"$0 --key\"\n   echo \"$0 \\\"COMMAND\\\"\"\n   exit 1\nfi \n\nif [ \"$1\" = \"--key\" ]; then\n    [ -f ~/.ssh/id_rsa ] || ssh-keygen -t rsa -f ~/.ssh/id_rsa -N ''\n    [ -f ~/.ssh/id_rsa.pub ] && cat ~/.ssh/id_rsa.pub > ~/.ssh/authorized_keys && chmod 600 ~/.ssh/authorized_keys\n    for host in ${HOSTS[*]}; do\n        # 因为其它节点上都没有~/.ssh这么一个目录, 还得远程创建, 这导致分发密钥时要输两次密码还挺烦的.\n        ssh root@$host \"[ -d ~/.ssh ] || mkdir ~/.ssh\"\n        scp -p ~/.ssh/{id_rsa,authorized_keys} root@$host:~/.ssh/\n    done\nelse\n    for host in ${HOSTS[*]}; do\n        ssh root@$host $1\n    done\nfi\n# 将集群中所有节点IP地址(包括本机)都加入这个主机列表数组\n[root@80e54d87 ~]# vim sshtrust.sh\nHOSTS=(\"172.18.71.101\" \"172.18.71.102\" \"172.18.71.103\" \"172.18.71.130\")\n# 分发密钥, 两两节点间均建立主机信任.\n[root@80e54d87 ~]# bash sshtrust.sh --key\nGenerating public/private rsa key pair.\nCreated directory '/root/.ssh'.\nYour identification has been saved in /root/.ssh/id_rsa.\nYour public key has been saved in /root/.ssh/id_rsa.pub.\nThe key fingerprint is:\n02:de:f2:86:5b:4b:3d:2b:70:cc:1c:c9:d2:65:5d:0b root@80e54d87.twoyang.com\nThe key's randomart image is:\n+--[ RSA 2048]----+\n|         .E..    |\n|        o .. .   |\n|    .o +    .    |\n|   ..o=          |\n|    o=o.S        |\n|    .+=o         |\n|    .o= o        |\n|     =.. o       |\n|    . ...        |\n+-----------------+\nThe authenticity of host '172.18.71.101 (172.18.71.101)' can't be established.\nECDSA key fingerprint is 2d:37:94:8b:81:ea:57:bc:93:18:44:d6:f6:97:6c:5b.\nAre you sure you want to continue connecting (yes/no)? yes\nWarning: Permanently added '172.18.71.101' (ECDSA) to the list of known hosts.\nThe authenticity of host '172.18.71.102 (172.18.71.102)' can't be established.\nECDSA key fingerprint is 07:d0:4c:77:32:95:bc:df:8b:c1:b0:41:d6:af:66:59.\nAre you sure you want to continue connecting (yes/no)? yes\nWarning: Permanently added '172.18.71.102' (ECDSA) to the list of known hosts.\nroot@172.18.71.102's password: \nroot@172.18.71.102's password: \nid_rsa                                                                        100% 1679     1.6KB/s   00:00    \nauthorized_keys                                                               100%  407     0.4KB/s   00:00    \nThe authenticity of host '172.18.71.103 (172.18.71.103)' can't be established.\nECDSA key fingerprint is e5:49:95:0f:18:ac:e8:e3:22:6a:7e:09:ae:f9:61:55.\nAre you sure you want to continue connecting (yes/no)? yes\nWarning: Permanently added '172.18.71.103' (ECDSA) to the list of known hosts.\nroot@172.18.71.103's password: \nroot@172.18.71.103's password: \nid_rsa                                                                        100% 1679     1.6KB/s   00:00    \nauthorized_keys                                                               100%  407     0.4KB/s   00:00    \nThe authenticity of host '172.18.71.130 (172.18.71.130)' can't be established.\nECDSA key fingerprint is 6d:01:30:42:82:4a:ae:5a:ec:7e:62:7c:7e:31:64:b9.\nAre you sure you want to continue connecting (yes/no)? yes\nWarning: Permanently added '172.18.71.130' (ECDSA) to the list of known hosts.\nroot@172.18.71.130's password: \nroot@172.18.71.130's password: \nid_rsa                                                                        100% 1679     1.6KB/s   00:00    \nauthorized_keys                                                               100%  407     \n0.4KB/s   00:00\n# 同步时间\n[root@80e54d87 ~]# bash sshtrust.sh \"ntpdate 172.18.0.1\"\n 6 Jun 20:55:36 ntpdate[3354]: step time server 172.18.0.1 offset 2644756.261973 sec\n 6 Jun 20:53:30 ntpdate[11248]: step time server 172.18.0.1 offset 2640569.256399 sec\n 6 Jun 20:53:36 ntpdate[40408]: step time server 172.18.0.1 offset -2.854146 sec\n 6 Jun 20:53:42 ntpdate[3457]: step time server 172.18.0.1 offset 3975759.234646 sec\n[root@80e54d87 ~]# bash sshtrust.sh \"hwclock --systohc\"\n[root@80e54d87 ~]# bash sshtrust.sh date\nMon Jun  6 20:56:25 CST 2016\nMon Jun  6 20:56:25 CST 2016\nMon Jun  6 20:56:25 CST 2016\nMon Jun  6 20:56:25 CST 2016\n# 因为MHA在cenots官方yum源中没有提供, 所以从Google Driver上下载下来做成了yum源.\n[root@80e54d87 ~]# bash sshtrust.sh \"yum-config-manager --add-repo=http://172.18.71.254/templates/twoyang-c7.repo\"\nLoaded plugins: fastestmirror, langpacks\nadding repo from: http://172.18.71.254/templates/twoyang-c7.repo\ngrabbing file http://172.18.71.254/templates/twoyang-c7.repo to /etc/yum.repos.d/twoyang-c7.repo\nrepo saved to /etc/yum.repos.d/twoyang-c7.repo\nLoaded plugins: fastestmirror, langpacks\nadding repo from: http://172.18.71.254/templates/twoyang-c7.repo\ngrabbing file http://172.18.71.254/templates/twoyang-c7.repo to /etc/yum.repos.d/twoyang-c7.repo\nrepo saved to /etc/yum.repos.d/twoyang-c7.repo\nLoaded plugins: fastestmirror, langpacks\nadding repo from: http://172.18.71.254/templates/twoyang-c7.repo\ngrabbing file http://172.18.71.254/templates/twoyang-c7.repo to /etc/yum.repos.d/twoyang-c7.repo\nrepo saved to /etc/yum.repos.d/twoyang-c7.repo\nLoaded plugins: fastestmirror, langpacks\nadding repo from: http://172.18.71.254/templates/twoyang-c7.repo\ngrabbing file http://172.18.71.254/templates/twoyang-c7.repo to /etc/yum.repos.d/twoyang-c7.repo\nrepo saved to /etc/yum.repos.d/twoyang-c7.repo\n```\n\n# 安装配置MHA\n```\n# 集群内所有节点(包括管理节点)需要安装Node包\n[root@80e54d87 ~]# bash sshtrust.sh \"yum install -y mha4mysql-node.noarch\"\n\n# HostD作为MHA管理节点需要安装Manager包\n[root@1478a474 ~]# yum install -y mha4mysql-manager.noarch\n\n# 默认是没有配置文件, 自己建立目录和配置文件.\n[root@1478a474 ~]# mkdir /etc/masterha\n[root@1478a474 ~]# vim /etc/masterha/app1.cnf\n[server default]\nuser=mha\t#  被控节点授权给管理节点SUPER权限的用户\npassword=magedu\t#  被控节点授权给管理节点SUPER权限用户的口令\nmanager_workdir=/data/masterha/app1\t# 管理节点的工作目录, 会自动建立.\nmanager_log=/data/masterha/app1/manager.log\t# 管理节点的日志\nremote_workdir=/data/masterha/app1 # 被控节点的工作目录, 会自动建立.\nssh_user=root\t# 被控节点的ssh用户\nrepl_user=repl\t# 用于数据库复制的用户\nrepl_password=magedu # 用于数据库复制的用户的口令\nping_interval=1 # 被控节点的健康检查时间间隔\n\n[server1]\nhostname=172.18.71.101\ncandidate_master=1\t# 作为主节点候选\n\n[server2]\nhostname=172.18.71.102\ncandidate_master=1\n\n[server3]\nhostname=172.18.71.103\nno_master=1\t# 永远不作为主节点\n\n# 用mha提供的脚本做主机信任检查.\n[root@1478a474 ~]# masterha_check_ssh --conf=/etc/masterha/app1.cnf\nMon Jun  6 22:12:23 2016 - [warning] Global configuration file /etc/masterha_default.cnf not found. Skipping.\nMon Jun  6 22:12:23 2016 - [info] Reading application default configuration from /etc/masterha/app1.cnf..\nMon Jun  6 22:12:23 2016 - [info] Reading server configuration from /etc/masterha/app1.cnf..\nMon Jun  6 22:12:23 2016 - [info] Starting SSH connection tests..\nMon Jun  6 22:12:24 2016 - [debug] \nMon Jun  6 22:12:24 2016 - [info] All SSH connection tests passed successfully.\n\n# 用mha提供的脚本做数据库复制检查.\n[root@1478a474 ~]# masterha_check_repl --conf=/etc/masterha/app1.cnf\nMon Jun  6 22:19:40 2016 - [warning] Global configuration file /etc/masterha_default.cnf not found. Skipping.\nMon Jun  6 22:19:40 2016 - [info] Reading application default configuration from /etc/masterha/app1.cnf..\nMon Jun  6 22:19:40 2016 - [info] Reading server configuration from /etc/masterha/app1.cnf..\nMon Jun  6 22:19:40 2016 - [info] MHA::MasterMonitor version 0.57.\nMon Jun  6 22:19:40 2016 - [info] GTID failover mode = 0\nMon Jun  6 22:19:40 2016 - [info] Dead Servers:\nMon Jun  6 22:19:40 2016 - [info] Alive Servers:\nMon Jun  6 22:19:40 2016 - [info]   172.18.71.101(172.18.71.101:3306)\nMon Jun  6 22:19:40 2016 - [info]   172.18.71.102(172.18.71.102:3306)\nMon Jun  6 22:19:40 2016 - [info]   172.18.71.103(172.18.71.103:3306)\nMon Jun  6 22:19:40 2016 - [info] Alive Slaves:\nMon Jun  6 22:19:40 2016 - [info]   172.18.71.102(172.18.71.102:3306)  Version=5.5.44-MariaDB-log (oldest major version between slaves) log-bin:enabled\nMon Jun  6 22:19:40 2016 - [info]     Replicating from 172.18.71.101(172.18.71.101:3306)\nMon Jun  6 22:19:40 2016 - [info]     Primary candidate for the new Master (candidate_master is set)\nMon Jun  6 22:19:40 2016 - [info]   172.18.71.103(172.18.71.103:3306)  Version=5.5.44-MariaDB-log (oldest major version between slaves) log-bin:enabled\nMon Jun  6 22:19:40 2016 - [info]     Replicating from 172.18.71.101(172.18.71.101:3306)\nMon Jun  6 22:19:40 2016 - [info]     Not candidate for the new Master (no_master is set)\nMon Jun  6 22:19:40 2016 - [info] Current Alive Master: 172.18.71.101(172.18.71.101:3306)\nMon Jun  6 22:19:40 2016 - [info] Checking slave configurations..\nMon Jun  6 22:19:40 2016 - [info] Checking replication filtering settings..\nMon Jun  6 22:19:40 2016 - [info]  binlog_do_db= , binlog_ignore_db= \nMon Jun  6 22:19:40 2016 - [info]  Replication filtering check ok.\nMon Jun  6 22:19:40 2016 - [info] GTID (with auto-pos) is not supported\nMon Jun  6 22:19:40 2016 - [info] Starting SSH connection tests..\nMon Jun  6 22:19:42 2016 - [info] All SSH connection tests passed successfully.\nMon Jun  6 22:19:42 2016 - [info] Checking MHA Node version..\nMon Jun  6 22:19:42 2016 - [info]  Version check ok.\nMon Jun  6 22:19:42 2016 - [info] Checking SSH publickey authentication settings on the current master..\nMon Jun  6 22:19:43 2016 - [info] HealthCheck: SSH to 172.18.71.101 is reachable.\nMon Jun  6 22:19:43 2016 - [info] Master MHA Node version is 0.57.\nMon Jun  6 22:19:43 2016 - [info] Checking recovery script configurations on 172.18.71.101(172.18.71.101:3306)..\nMon Jun  6 22:19:43 2016 - [info]   Executing command: save_binary_logs --command=test --start_pos=4 --binlog_dir=/var/lib/mysql,/var/log/mysql --output_file=/data/masterha/app1/save_binary_logs_test --manager_version=0.57 --start_file=master-binlog.000003 \nMon Jun  6 22:19:43 2016 - [info]   Connecting to root@172.18.71.101(172.18.71.101:22).. \n  Creating /data/masterha/app1 if not exists.. Creating directory /data/masterha/app1.. done.\n   ok.\n  Checking output directory is accessible or not..\n   ok.\n  Binlog found at /var/lib/mysql, up to master-binlog.000003\nMon Jun  6 22:19:43 2016 - [info] Binlog setting check done.\nMon Jun  6 22:19:43 2016 - [info] Checking SSH publickey authentication and checking recovery script configurations on all alive slave servers..\nMon Jun  6 22:19:43 2016 - [info]   Executing command : apply_diff_relay_logs --command=test --slave_user='mha' --slave_host=172.18.71.102 --slave_ip=172.18.71.102 --slave_port=3306 --workdir=/data/masterha/app1 --target_version=5.5.44-MariaDB-log --manager_version=0.57 --relay_log_info=/var/lib/mysql/relay-log.info  --relay_dir=/var/lib/mysql/  --slave_pass=xxx\nMon Jun  6 22:19:43 2016 - [info]   Connecting to root@172.18.71.102(172.18.71.102:22).. \nCreating directory /data/masterha/app1.. done.\n  Checking slave recovery environment settings..\n    Opening /var/lib/mysql/relay-log.info ... ok.\n    Relay log found at /var/lib/mysql, up to relaylog.000006\n    Temporary relay log file is /var/lib/mysql/relaylog.000006\n    Testing mysql connection and privileges.. done.\n    Testing mysqlbinlog output.. done.\n    Cleaning up test file(s).. done.\nMon Jun  6 22:19:43 2016 - [info]   Executing command : apply_diff_relay_logs --command=test --slave_user='mha' --slave_host=172.18.71.103 --slave_ip=172.18.71.103 --slave_port=3306 --workdir=/data/masterha/app1 --target_version=5.5.44-MariaDB-log --manager_version=0.57 --relay_log_info=/var/lib/mysql/relay-log.info  --relay_dir=/var/lib/mysql/  --slave_pass=xxx\nMon Jun  6 22:19:43 2016 - [info]   Connecting to root@172.18.71.103(172.18.71.103:22).. \nCreating directory /data/masterha/app1.. done.\n  Checking slave recovery environment settings..\n    Opening /var/lib/mysql/relay-log.info ... ok.\n    Relay log found at /var/lib/mysql, up to relaylog.000004\n    Temporary relay log file is /var/lib/mysql/relaylog.000004\n    Testing mysql connection and privileges.. done.\n    Testing mysqlbinlog output.. done.\n    Cleaning up test file(s).. done.\nMon Jun  6 22:19:43 2016 - [info] Slaves settings check done.\nMon Jun  6 22:19:43 2016 - [info] \n172.18.71.101(172.18.71.101:3306) (current master)\n +--172.18.71.102(172.18.71.102:3306)\n +--172.18.71.103(172.18.71.103:3306)\n\nMon Jun  6 22:19:43 2016 - [info] Checking replication health on 172.18.71.102..\nMon Jun  6 22:19:43 2016 - [info]  ok.\nMon Jun  6 22:19:43 2016 - [info] Checking replication health on 172.18.71.103..\nMon Jun  6 22:19:43 2016 - [info]  ok.\n# 这里已经提示了没有定义主节点故障VIP如何漂移的脚本.\nMon Jun  6 22:19:43 2016 - [warning] master_ip_failover_script is not defined.\n# 也没有定义STONITH脚本, 以防止集群脑裂.\nMon Jun  6 22:19:43 2016 - [warning] shutdown_script is not defined.\nMon Jun  6 22:19:43 2016 - [info] Got exit code 0 (Not master dead).\n\nMySQL Replication Health is OK.\n\n# 测试通过就可以启动MHA了\n[root@1478a474 ~]# nohup masterha_manager --conf=/etc/masterha/app1.cnf &> /data/masterha/app1/manager.log &\n\n# 查看状态\n[root@1478a474 ~]# masterha_check_status --conf=/etc/masterha/app1.cnf\napp1 (pid:30255) is running(0:PING_OK), master:172.18.71.101\n\n# 如需停止MHA, 执行以下命令.\n[root@1478a474 ~]# masterha_stop --conf=/etc/masterha/app1.cnf\nStopped app1 successfully.\n[1]+  Exit 1                  nohup masterha_manager --conf=/etc/masterha/app1.cnf &>/data/masterha/app1/manager.log\n\n```\n\n# 测试验证\n关闭HostA(Master)的mariadb服务, 期望MHA能够检测到HostA故障, 将HostB提升为Master.\n\n```\n# 杀死HostA上的mysqld和mysqld_safe进程\n[root@80e54d87 ~]# killall -9 mysqld mysqld_safe\n\n# 查看MHA的日志, 可以看到故障转移报告.\n[root@1478a474 ~]# less /data/masterha/app1/manager.log\n...\n----- Failover Report -----\n\napp1: MySQL Master failover 172.18.71.101(172.18.71.101:3306) to 172.18.71.102(172.18.71.102:3306) succeeded\n\nMaster 172.18.71.101(172.18.71.101:3306) is down!\n\nCheck MHA Manager logs at 1478a474.twoyang.com:/data/masterha/app1/manager.log for details.\n\nStarted automated(non-interactive) failover.\nThe latest slave 172.18.71.102(172.18.71.102:3306) has all relay logs for recovery.\nSelected 172.18.71.102(172.18.71.102:3306) as a new master.\n172.18.71.102(172.18.71.102:3306): OK: Applying all logs succeeded.\n172.18.71.103(172.18.71.103:3306): This host has the latest relay log events.\nGenerating relay diff files from the latest slave succeeded.\n172.18.71.103(172.18.71.103:3306): OK: Applying all logs succeeded. Slave started, replicating from 172.18.71.102(172.18.71.102:3306)\n172.18.71.102(172.18.71.102:3306): Resetting slave info succeeded.\nMaster failover to 172.18.71.102(172.18.71.102:3306) completed successfully.\n\n# 再看另一个从节点HostC上, MHA已经将其主节点由HostA修改为了HostB了.\nMariaDB [(none)]> SHOW SLAVE STATUS\\G\n*************************** 1. row ***************************\n               Slave_IO_State: Waiting for master to send event\n                  Master_Host: 172.18.71.102\n                  Master_User: repl\n                  Master_Port: 3306\n                Connect_Retry: 60\n              Master_Log_File: master-binlog.000001\n          Read_Master_Log_Pos: 245\n               Relay_Log_File: relaylog.000002\n                Relay_Log_Pos: 533\n        Relay_Master_Log_File: master-binlog.000001\n             Slave_IO_Running: Yes\n            Slave_SQL_Running: Yes\n......\n1 row in set (0.00 sec)\n\n# 注意: 故障转移完成后, MHA将会自动停止进程.\n[root@1478a474 ~]# masterha_check_status --conf=/etc/masterha/app1.cnf\napp1 is stopped(2:NOT_RUNNING).\n```\n\n# 最后\n还有几个问题需要说明一下:\n- 因为主从异步复制时难免会出现从节点落后主节点的情况, 这样主机点宕机就会出现丢失数据的情况. 所以如果是做半同步复制情况就会好很多.\n- 这里没有考虑VIP和STONITH的问题, 其实前面用MHA做复制检查时已经警告过我们了. VIP地址漂移的问题可以通过脚本来实现, 也可以通过keepalived来实现. 而STONITH也可以通过脚本来实现, 不过既然是脑裂基本上就是联系不上对方, 那通过脚本来STONITH也就不太靠谱; 想靠谱基本上只有上硬件, 那可就贵了.\n原文地址：[点我](http://twoyang.net/2016/06/06/mariadb%20MHA/)","slug":"2016-07-25-MySQL高可用之MHA的搭建","published":1,"updated":"2017-02-14T13:42:45.410Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5mkehrx001uao94do769tti","content":"<h1 id=\"MHA简介\"><a href=\"#MHA简介\" class=\"headerlink\" title=\"MHA简介\"></a>MHA简介</h1><blockquote>\n<p>MHA（Master High Availability）目前在MySQL高可用方面是一个相对成熟的解决方案，它由日本DeNA公司youshimaton（现就职于Facebook公司）开发，是一套优秀的作为MySQL高可用性环境下故障切换和主从提升的高可用软件。在MySQL故障切换过程中，MHA能做到在0~30秒之内自动完成数据库的故障切换操作，并且在进行故障切换的过程中，MHA能在最大程度上保证数据的一致性，以达到真正意义上的高可用。</p>\n</blockquote>\n<a id=\"more\"></a>\n<blockquote>\n<p>该软件由两部分组成：MHA Manager（管理节点）和MHA Node（数据节点）。MHA Manager可以单独部署在一台独立的机器上管理多个master-slave集群，也可以部署在一台slave节点上。MHA Node运行在每台MySQL服务器上，MHA Manager会定时探测集群中的master节点，当master出现故障时，它可以自动将最新数据的slave提升为新的master，然后将所有其他的slave重新指向新的master。整个故障转移过程对应用程序完全透明。</p>\n<p>在MHA自动故障切换过程中，MHA试图从宕机的主服务器上保存二进制日志，最大程度的保证数据的不丢失，但这并不总是可行的。例如，如果主服务器硬件故障或无法通过ssh访问，MHA没法保存二进制日志，只进行故障转移而丢失了最新的数据。使用MySQL 5.5的半同步复制，可以大大降低数据丢失的风险。MHA可以与半同步复制结合起来。如果只有一个slave已经收到了最新的二进制日志，MHA可以将最新的二进制日志应用于其他所有的slave服务器上，因此可以保证所有节点的数据一致性。</p>\n</blockquote>\n<p><strong> 目前MHA主要支持一主多从的架构，要搭建MHA,要求一个复制集群中必须最少有三台数据库服务器，一主二从，即一台充当master，一台充当备用master，另外一台充当从库，因此至少需要三台服务器。 </strong></p>\n<h1 id=\"MHA工作原理总结为以下几条\"><a href=\"#MHA工作原理总结为以下几条\" class=\"headerlink\" title=\"MHA工作原理总结为以下几条\"></a>MHA工作原理总结为以下几条</h1><ol>\n<li>从宕机崩溃的master保存二进制日志事件（binlog events）;</li>\n<li>识别含有最新更新的slave;</li>\n<li>应用差异的中继日志(relay log) 到其他slave;</li>\n<li>应用从master保存的二进制日志事件(binlog events);</li>\n<li>提升一个slave为新master;</li>\n<li>使用其他的slave连接新的master进行复制。</li>\n</ol>\n<h1 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h1><blockquote>\n<p>准备四台虚拟机, 均为CentOS-7-x86_64最小化安装, iptables与SELinux均处于关闭状态, 配置好yum源(base和epel). 做好快照, 以便每次实验后快速恢复.</p>\n<ul>\n<li>确保各节点时间保持一致</li>\n<li>各节点需开启二进制日志和中继日志</li>\n<li>各节点彼此可通过主机名进行通信</li>\n<li>各节点彼此间无密钥进行通信</li>\n</ul>\n</blockquote>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"title\">HostA</span><span class=\"params\">(Master)</span></span></div><div class=\"line\">OS: CentOS-<span class=\"number\">7</span>-x86_64</div><div class=\"line\">hostname: <span class=\"number\">80</span>e54d87<span class=\"selector-class\">.twoyang</span><span class=\"selector-class\">.com</span></div><div class=\"line\">eno16777736: <span class=\"number\">172.18</span>.<span class=\"number\">71.101</span>/<span class=\"number\">16</span></div><div class=\"line\">gateway: <span class=\"number\">172.18</span>.<span class=\"number\">0.1</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"title\">HostB</span><span class=\"params\">(Slave)</span></span></div><div class=\"line\">OS: CentOS-<span class=\"number\">7</span>-x86_64</div><div class=\"line\">hostname: b9cf468b<span class=\"selector-class\">.twoyang</span><span class=\"selector-class\">.com</span></div><div class=\"line\">eno16777736: <span class=\"number\">172.18</span>.<span class=\"number\">71.102</span>/<span class=\"number\">16</span></div><div class=\"line\">gateway: <span class=\"number\">172.18</span>.<span class=\"number\">0.1</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"title\">HostC</span><span class=\"params\">(Slave)</span></span></div><div class=\"line\">OS: CentOS-<span class=\"number\">7</span>-x86_64</div><div class=\"line\">hostname: <span class=\"number\">1</span>f5fafa6<span class=\"selector-class\">.twoyang</span><span class=\"selector-class\">.com</span></div><div class=\"line\">eno16777736: <span class=\"number\">172.18</span>.<span class=\"number\">71.103</span>/<span class=\"number\">16</span></div><div class=\"line\">gateway: <span class=\"number\">172.18</span>.<span class=\"number\">0.1</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"title\">HostD</span><span class=\"params\">(MHA Manager)</span></span></div><div class=\"line\">OS: CentOS-<span class=\"number\">7</span>-x86_64</div><div class=\"line\">hostname: <span class=\"number\">1478</span>a474<span class=\"selector-class\">.twoyang</span><span class=\"selector-class\">.com</span></div><div class=\"line\">eno16777736: <span class=\"number\">172.18</span>.<span class=\"number\">71.130</span>/<span class=\"number\">16</span></div><div class=\"line\">gateway: <span class=\"number\">172.18</span>.<span class=\"number\">0.1</span></div></pre></td></tr></table></figure>\n<p><strong> 先不管MHA, 按照主从复制模型搭建好集群. </strong></p>\n<h1 id=\"主从复制\"><a href=\"#主从复制\" class=\"headerlink\" title=\"主从复制\"></a>主从复制</h1><h2 id=\"HostA-Master\"><a href=\"#HostA-Master\" class=\"headerlink\" title=\"HostA(Master)\"></a>HostA(Master)</h2><figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@80e54d87 ~]<span class=\"comment\"># yum install -y mariadb-server</span></div><div class=\"line\"></div><div class=\"line\">sed -i '/\\[server\\]<span class=\"string\">/a</span>\\character-set-server=utf8' <span class=\"string\">/etc/my.cnf.d/server.cnf</span></div><div class=\"line\">sed -i '/\\[server\\]<span class=\"string\">/a</span>\\collation-server=utf8_general_ci' <span class=\"string\">/etc/my.cnf.d/server.cnf</span></div><div class=\"line\">sed -i '/\\[server\\]<span class=\"string\">/a</span>\\default-storage-engine=InnoDB' <span class=\"string\">/etc/my.cnf.d/server.cnf</span></div><div class=\"line\">sed -i '/\\[server\\]<span class=\"string\">/a</span>\\innodb-file-per-table=TRUE' <span class=\"string\">/etc/my.cnf.d/server.cnf</span></div><div class=\"line\">sed -i '/\\[server\\]<span class=\"string\">/a</span>\\skip-name-resolve=TRUE' <span class=\"string\">/etc/my.cnf.d/server.cnf</span></div><div class=\"line\">sed -i '/\\[server\\]<span class=\"string\">/a</span>\\log_bin=master-binlog' <span class=\"string\">/etc/my.cnf.d/server.cnf</span></div><div class=\"line\"><span class=\"comment\"># 注意server_id为集群内的唯一标识.</span></div><div class=\"line\">sed -i '/\\[server\\]<span class=\"string\">/a</span>\\server_id=1' <span class=\"string\">/etc/my.cnf.d/server.cnf</span></div><div class=\"line\"></div><div class=\"line\">[root@80e54d87 ~]<span class=\"comment\"># systemctl start mariadb.service</span></div><div class=\"line\">[root@80e54d87 ~]<span class=\"comment\"># mysql</span></div><div class=\"line\"><span class=\"string\">...</span></div><div class=\"line\"><span class=\"comment\"># 创建用户前记录下二进制日志文件位置, 一会儿让从节点从此处开始复制, 就会自动创建此用户了.</span></div><div class=\"line\"><span class=\"comment\"># 因为主节点宕机时, 从节点有可能会被MHA管理节点提升为主节点供其它从节点复制.</span></div><div class=\"line\">MariaDB [<span class=\"params\">(none)</span>]&gt; SHOW MASTER STATUS;</div><div class=\"line\">+<span class=\"params\">----------------------</span>+<span class=\"params\">----------</span>+<span class=\"params\">--------------</span>+<span class=\"params\">------------------</span>+</div><div class=\"line\">| File                 | Position | Binlog_Do_DB | Binlog_Ignore_DB |</div><div class=\"line\">+<span class=\"params\">----------------------</span>+<span class=\"params\">----------</span>+<span class=\"params\">--------------</span>+<span class=\"params\">------------------</span>+</div><div class=\"line\">| master-binlog.000003 |      245 |              |                  |</div><div class=\"line\">+<span class=\"params\">----------------------</span>+<span class=\"params\">----------</span>+<span class=\"params\">--------------</span>+<span class=\"params\">------------------</span>+</div><div class=\"line\">1 row in <span class=\"keyword\">set</span> <span class=\"params\">(0.00 sec)</span></div><div class=\"line\"><span class=\"comment\"># 授权用户'repl'@'172.18.71.%'可以复制数据</span></div><div class=\"line\">MariaDB [<span class=\"params\">(none)</span>]&gt; GRANT REPLICATION SLAVE, REPLICATION CLIENT ON *.* TO 'repl'@'172.18.71.%' IDENTIFIED BY 'magedu';</div><div class=\"line\">Query OK, 0 rows affected <span class=\"params\">(0.00 sec)</span></div><div class=\"line\"><span class=\"comment\"># 另外还得创建一个SUPER权限的用户用于MHA管理节点来控制.</span></div><div class=\"line\">MariaDB [<span class=\"params\">(none)</span>]&gt; GRANT ALL PRIVILEGES ON *.* TO 'mha'@'%' IDENTIFIED BY 'magedu';</div><div class=\"line\">Query OK, 0 rows affected <span class=\"params\">(0.00 sec)</span></div><div class=\"line\">MariaDB [<span class=\"params\">(none)</span>]&gt; FLUSH PRIVILEGES;</div><div class=\"line\">Query OK, 0 rows affected <span class=\"params\">(0.00 sec)</span></div></pre></td></tr></table></figure>\n<h2 id=\"HostB-Slave\"><a href=\"#HostB-Slave\" class=\"headerlink\" title=\"HostB(Slave)\"></a>HostB(Slave)</h2><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@b9cf468b ~]<span class=\"meta\"># yum install -y mariadb-server</span></div><div class=\"line\"></div><div class=\"line\">sed -i <span class=\"comment\">'/\\[server\\]/a\\character-set-server=utf8' /etc/my.cnf.d/server.cnf</span></div><div class=\"line\">sed -i <span class=\"comment\">'/\\[server\\]/a\\collation-server=utf8_general_ci' /etc/my.cnf.d/server.cnf</span></div><div class=\"line\">sed -i <span class=\"comment\">'/\\[server\\]/a\\default-storage-engine=InnoDB' /etc/my.cnf.d/server.cnf</span></div><div class=\"line\">sed -i <span class=\"comment\">'/\\[server\\]/a\\innodb-file-per-table=TRUE' /etc/my.cnf.d/server.cnf</span></div><div class=\"line\">sed -i <span class=\"comment\">'/\\[server\\]/a\\skip-name-resolve=TRUE' /etc/my.cnf.d/server.cnf</span></div><div class=\"line\"><span class=\"meta\"># 从节点也要开启二进制日志, 因为可能会被提升为主节点.</span></div><div class=\"line\">sed -i <span class=\"comment\">'/\\[server\\]/a\\log_bin=master-binlog' /etc/my.cnf.d/server.cnf</span></div><div class=\"line\">sed -i <span class=\"comment\">'/\\[server\\]/a\\relay_log=relaylog' /etc/my.cnf.d/server.cnf</span></div><div class=\"line\"><span class=\"meta\"># 对于某些滞后从库的恢复依赖于其他从库的relay_log，因此采取禁用自动删除功能以及定期清理的办法.</span></div><div class=\"line\">sed -i <span class=\"comment\">'/\\[server\\]/a\\relay_log_purge=OFF' /etc/my.cnf.d/server.cnf</span></div><div class=\"line\">sed -i <span class=\"comment\">'/\\[server\\]/a\\read-only=ON' /etc/my.cnf.d/server.cnf</span></div><div class=\"line\"><span class=\"meta\"># 注意server_id为集群内的唯一标识.</span></div><div class=\"line\">sed -i <span class=\"comment\">'/\\[server\\]/a\\server_id=5' /etc/my.cnf.d/server.cnf</span></div><div class=\"line\"></div><div class=\"line\">[root@b9cf468b ~]<span class=\"meta\"># systemctl start mariadb.service</span></div><div class=\"line\">[root@b9cf468b ~]<span class=\"meta\"># mysql</span></div><div class=\"line\">...</div><div class=\"line\"><span class=\"meta\"># 指向HostA将其作为主节点</span></div><div class=\"line\">MariaDB [(none)]&gt; CHANGE MASTER <span class=\"keyword\">TO</span> MASTER_HOST=<span class=\"comment\">'172.18.71.101', MASTER_USER='repl', MASTER_PASSWORD='magedu', MASTER_LOG_FILE='master-binlog.000003', MASTER_LOG_POS=245;</span></div><div class=\"line\">Query OK, <span class=\"number\">0</span> rows affected (<span class=\"number\">0.00</span> sec)</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\"># 启动从节点, 即启动IO_thread和SQL_thread进程, 开始复制.</span></div><div class=\"line\">MariaDB [(none)]&gt; START SLAVE;</div><div class=\"line\">Query OK, <span class=\"number\">0</span> rows affected (<span class=\"number\">0.00</span> sec)</div><div class=\"line\"></div><div class=\"line\">MariaDB [(none)]&gt; SHOW SLAVE STATUS\\G</div><div class=\"line\">*************************** <span class=\"number\">1.</span> row ***************************</div><div class=\"line\">               Slave_IO_State: Waiting <span class=\"keyword\">for</span> master <span class=\"keyword\">to</span> send <span class=\"keyword\">event</span></div><div class=\"line\">                  Master_Host: <span class=\"number\">172.18</span><span class=\"number\">.71</span><span class=\"number\">.101</span></div><div class=\"line\">                  Master_User: repl</div><div class=\"line\">                  Master_Port: <span class=\"number\">3306</span></div><div class=\"line\">                Connect_Retry: <span class=\"number\">60</span></div><div class=\"line\">              Master_Log_File: master-binlog<span class=\"number\">.000003</span></div><div class=\"line\">          Read_Master_Log_Pos: <span class=\"number\">555</span></div><div class=\"line\">               Relay_Log_File: relaylog<span class=\"number\">.000002</span></div><div class=\"line\">                Relay_Log_Pos: <span class=\"number\">843</span></div><div class=\"line\">        Relay_Master_Log_File: master-binlog<span class=\"number\">.000003</span></div><div class=\"line\">             Slave_IO_Running: Yes</div><div class=\"line\">            Slave_SQL_Running: Yes</div><div class=\"line\">......</div><div class=\"line\"><span class=\"number\">1</span> row <span class=\"keyword\">in</span> <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</div></pre></td></tr></table></figure>\n<h2 id=\"HostC-Slave\"><a href=\"#HostC-Slave\" class=\"headerlink\" title=\"HostC(Slave)\"></a>HostC(Slave)</h2><p><strong> HostC与HostB做相同配置, 仅server_id必须不同. </strong></p>\n<h1 id=\"MHA\"><a href=\"#MHA\" class=\"headerlink\" title=\"MHA\"></a>MHA</h1><h2 id=\"集群初始化\"><a href=\"#集群初始化\" class=\"headerlink\" title=\"集群初始化\"></a>集群初始化</h2><blockquote>\n<p>建立主机信任, 时间同步, 统一增加yum源. 这一步其实在哪个节点上做都可以, 我这里选择HostA.</p>\n</blockquote>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># 写了个脚本来做这个事情</span></div><div class=\"line\">[root@80e54d87 ~]<span class=\"comment\"># wget https://raw.githubusercontent.com/twoyang0917/LearnInMagedu/master/shell/sshtrust.sh</span></div><div class=\"line\"><span class=\"comment\"># 有效代码是这个样子的</span></div><div class=\"line\">[root@80e54d87 ~]<span class=\"comment\"># cat sshtrust.sh</span></div><div class=\"line\">...</div><div class=\"line\">HOSTS=(<span class=\"string\">\"172.18.71.101\"</span> <span class=\"string\">\"172.18.71.102\"</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">if</span> ! [ $# -eq <span class=\"number\">1</span> ]; <span class=\"keyword\">then</span></div><div class=\"line\">   echo <span class=\"string\">\"$0 --key\"</span></div><div class=\"line\">   echo <span class=\"string\">\"$0 \\\"COMMAND\\\"\"</span></div><div class=\"line\">   exit <span class=\"number\">1</span></div><div class=\"line\">fi </div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"string\">\"$1\"</span> = <span class=\"string\">\"--key\"</span> ]; <span class=\"keyword\">then</span></div><div class=\"line\">    [ -f ~<span class=\"regexp\">/.ssh/id</span>_rsa ] <span class=\"params\">||</span> ssh-keygen -t rsa -f ~<span class=\"regexp\">/.ssh/id</span>_rsa -N <span class=\"string\">''</span></div><div class=\"line\">    [ -f ~<span class=\"regexp\">/.ssh/id</span>_rsa.pub ] &amp;&amp; cat ~<span class=\"regexp\">/.ssh/id</span>_rsa.pub &gt; ~<span class=\"regexp\">/.ssh/authorized</span>_keys &amp;&amp; chmod <span class=\"number\">600</span> ~<span class=\"regexp\">/.ssh/authorized</span>_keys</div><div class=\"line\">    <span class=\"keyword\">for</span> host <span class=\"keyword\">in</span> $&#123;HOSTS[*]&#125;; <span class=\"keyword\">do</span></div><div class=\"line\">        <span class=\"comment\"># 因为其它节点上都没有~/.ssh这么一个目录, 还得远程创建, 这导致分发密钥时要输两次密码还挺烦的.</span></div><div class=\"line\">        ssh root@$host <span class=\"string\">\"[ -d ~/.ssh ] || mkdir ~/.ssh\"</span></div><div class=\"line\">        scp -p ~<span class=\"regexp\">/.ssh/</span>&#123;id_rsa,authorized_keys&#125; root@$host<span class=\"symbol\">:~/</span>.ssh/</div><div class=\"line\">    done</div><div class=\"line\"><span class=\"keyword\">else</span></div><div class=\"line\">    <span class=\"keyword\">for</span> host <span class=\"keyword\">in</span> $&#123;HOSTS[*]&#125;; <span class=\"keyword\">do</span></div><div class=\"line\">        ssh root@$host $1</div><div class=\"line\">    done</div><div class=\"line\">fi</div><div class=\"line\"><span class=\"comment\"># 将集群中所有节点IP地址(包括本机)都加入这个主机列表数组</span></div><div class=\"line\">[root@80e54d87 ~]<span class=\"comment\"># vim sshtrust.sh</span></div><div class=\"line\">HOSTS=(<span class=\"string\">\"172.18.71.101\"</span> <span class=\"string\">\"172.18.71.102\"</span> <span class=\"string\">\"172.18.71.103\"</span> <span class=\"string\">\"172.18.71.130\"</span>)</div><div class=\"line\"><span class=\"comment\"># 分发密钥, 两两节点间均建立主机信任.</span></div><div class=\"line\">[root@80e54d87 ~]<span class=\"comment\"># bash sshtrust.sh --key</span></div><div class=\"line\">Generating public/private rsa key pair.</div><div class=\"line\">Created directory <span class=\"string\">'/root/.ssh'</span>.</div><div class=\"line\">Your identification has been saved <span class=\"keyword\">in</span> /root/.ssh/id_rsa.</div><div class=\"line\">Your public key has been saved <span class=\"keyword\">in</span> /root/.ssh/id_rsa.pub.</div><div class=\"line\">The key fingerprint <span class=\"symbol\">is:</span></div><div class=\"line\"><span class=\"number\">02</span><span class=\"symbol\">:de</span><span class=\"symbol\">:f2</span><span class=\"symbol\">:</span><span class=\"number\">86</span><span class=\"symbol\">:</span><span class=\"number\">5</span><span class=\"symbol\">b:</span><span class=\"number\">4</span><span class=\"symbol\">b:</span><span class=\"number\">3</span><span class=\"symbol\">d:</span><span class=\"number\">2</span><span class=\"symbol\">b:</span><span class=\"number\">70</span><span class=\"symbol\">:cc</span><span class=\"symbol\">:</span><span class=\"number\">1</span><span class=\"symbol\">c:</span><span class=\"symbol\">c9:</span><span class=\"symbol\">d2:</span><span class=\"number\">65</span><span class=\"symbol\">:</span><span class=\"number\">5</span><span class=\"symbol\">d:</span>0b root@80e54d87.twoyang.com</div><div class=\"line\">The key<span class=\"string\">'s randomart image is:</span></div><div class=\"line\">+--[ RSA 2048]----+</div><div class=\"line\">|         .E..    |</div><div class=\"line\">|        o .. .   |</div><div class=\"line\">|    .o +    .    |</div><div class=\"line\">|   ..o=          |</div><div class=\"line\">|    o=o.S        |</div><div class=\"line\">|    .+=o         |</div><div class=\"line\">|    .o= o        |</div><div class=\"line\">|     =.. o       |</div><div class=\"line\">|    . ...        |</div><div class=\"line\">+-----------------+</div><div class=\"line\">The authenticity of host '<span class=\"number\">172.18</span>.<span class=\"number\">71.101</span> (<span class=\"number\">172.18</span>.<span class=\"number\">71.101</span>)<span class=\"string\">' can'</span>t be established.</div><div class=\"line\">ECDSA key fingerprint is <span class=\"number\">2</span><span class=\"symbol\">d:</span><span class=\"number\">37</span><span class=\"symbol\">:</span><span class=\"number\">94</span><span class=\"symbol\">:</span><span class=\"number\">8</span><span class=\"symbol\">b:</span><span class=\"number\">81</span><span class=\"symbol\">:ea</span><span class=\"symbol\">:</span><span class=\"number\">57</span><span class=\"symbol\">:bc</span><span class=\"symbol\">:</span><span class=\"number\">93</span><span class=\"symbol\">:</span><span class=\"number\">18</span><span class=\"symbol\">:</span><span class=\"number\">44</span><span class=\"symbol\">:d6</span><span class=\"symbol\">:f6</span><span class=\"symbol\">:</span><span class=\"number\">97</span><span class=\"symbol\">:</span><span class=\"number\">6</span><span class=\"symbol\">c:</span><span class=\"number\">5</span>b.</div><div class=\"line\">Are you sure you want to continue connecting (yes/no)? yes</div><div class=\"line\"><span class=\"symbol\">Warning:</span> Permanently added <span class=\"string\">'172.18.71.101'</span> (ECDSA) to the list of known hosts.</div><div class=\"line\">The authenticity of host <span class=\"string\">'172.18.71.102 (172.18.71.102)'</span> can<span class=\"string\">'t be established.</span></div><div class=\"line\">ECDSA key fingerprint is 07:d0:4c:77:32:95:bc:df:8b:c1:b0:41:d6:af:66:59.</div><div class=\"line\">Are you sure you want to continue connecting (yes/no)? yes</div><div class=\"line\">Warning: Permanently added '<span class=\"number\">172.18</span>.<span class=\"number\">71.102</span><span class=\"string\">' (ECDSA) to the list of known hosts.</span></div><div class=\"line\">root@172.18.71.102's <span class=\"symbol\">password:</span> </div><div class=\"line\">root@172.<span class=\"number\">18.71</span>.<span class=\"number\">102</span><span class=\"string\">'s password: </span></div><div class=\"line\">id_rsa                                                                        100% 1679     1.6KB/s   00:00    </div><div class=\"line\">authorized_keys                                                               100%  407     0.4KB/s   00:00    </div><div class=\"line\">The authenticity of host '<span class=\"number\">172.18</span>.<span class=\"number\">71.103</span> (<span class=\"number\">172.18</span>.<span class=\"number\">71.103</span>)<span class=\"string\">' can'</span>t be established.</div><div class=\"line\">ECDSA key fingerprint is <span class=\"symbol\">e5:</span><span class=\"number\">49</span><span class=\"symbol\">:</span><span class=\"number\">95</span><span class=\"symbol\">:</span>0<span class=\"symbol\">f:</span><span class=\"number\">18</span><span class=\"symbol\">:ac</span><span class=\"symbol\">:e8</span><span class=\"symbol\">:e3</span><span class=\"symbol\">:</span><span class=\"number\">22</span><span class=\"symbol\">:</span><span class=\"number\">6</span><span class=\"symbol\">a:</span><span class=\"number\">7</span><span class=\"symbol\">e:</span>09<span class=\"symbol\">:ae</span><span class=\"symbol\">:f9</span><span class=\"symbol\">:</span><span class=\"number\">61</span><span class=\"symbol\">:</span><span class=\"number\">55</span>.</div><div class=\"line\">Are you sure you want to continue connecting (yes/no)? yes</div><div class=\"line\"><span class=\"symbol\">Warning:</span> Permanently added <span class=\"string\">'172.18.71.103'</span> (ECDSA) to the list of known hosts.</div><div class=\"line\">root@172.<span class=\"number\">18.71</span>.<span class=\"number\">103</span><span class=\"string\">'s password: </span></div><div class=\"line\">root@172.18.71.103's <span class=\"symbol\">password:</span> </div><div class=\"line\">id_rsa                                                                        <span class=\"number\">100</span>% <span class=\"number\">1679</span>     <span class=\"number\">1.6</span>KB/s   <span class=\"number\">00</span><span class=\"symbol\">:</span><span class=\"number\">00</span>    </div><div class=\"line\">authorized_keys                                                               <span class=\"number\">100</span>%  <span class=\"number\">407</span>     <span class=\"number\">0</span>.<span class=\"number\">4</span>KB/s   <span class=\"number\">00</span><span class=\"symbol\">:</span><span class=\"number\">00</span>    </div><div class=\"line\">The authenticity of host <span class=\"string\">'172.18.71.130 (172.18.71.130)'</span> can<span class=\"string\">'t be established.</span></div><div class=\"line\">ECDSA key fingerprint is 6d:01:30:42:82:4a:ae:5a:ec:7e:62:7c:7e:31:64:b9.</div><div class=\"line\">Are you sure you want to continue connecting (yes/no)? yes</div><div class=\"line\">Warning: Permanently added '<span class=\"number\">172.18</span>.<span class=\"number\">71.130</span><span class=\"string\">' (ECDSA) to the list of known hosts.</span></div><div class=\"line\">root@172.18.71.130's <span class=\"symbol\">password:</span> </div><div class=\"line\">root@172.<span class=\"number\">18.71</span>.<span class=\"number\">130</span><span class=\"string\">'s password: </span></div><div class=\"line\">id_rsa                                                                        100% 1679     1.6KB/s   00:00    </div><div class=\"line\">authorized_keys                                                               100%  407     </div><div class=\"line\">0.4KB/s   00:00</div><div class=\"line\"># 同步时间</div><div class=\"line\">[root@80e54d87 ~]# bash sshtrust.sh \"ntpdate 172.18.0.1\"</div><div class=\"line\"> 6 Jun 20:55:36 ntpdate[3354]: step time server 172.18.0.1 offset 2644756.261973 sec</div><div class=\"line\"> 6 Jun 20:53:30 ntpdate[11248]: step time server 172.18.0.1 offset 2640569.256399 sec</div><div class=\"line\"> 6 Jun 20:53:36 ntpdate[40408]: step time server 172.18.0.1 offset -2.854146 sec</div><div class=\"line\"> 6 Jun 20:53:42 ntpdate[3457]: step time server 172.18.0.1 offset 3975759.234646 sec</div><div class=\"line\">[root@80e54d87 ~]# bash sshtrust.sh \"hwclock --systohc\"</div><div class=\"line\">[root@80e54d87 ~]# bash sshtrust.sh date</div><div class=\"line\">Mon Jun  6 20:56:25 CST 2016</div><div class=\"line\">Mon Jun  6 20:56:25 CST 2016</div><div class=\"line\">Mon Jun  6 20:56:25 CST 2016</div><div class=\"line\">Mon Jun  6 20:56:25 CST 2016</div><div class=\"line\"># 因为MHA在cenots官方yum源中没有提供, 所以从Google Driver上下载下来做成了yum源.</div><div class=\"line\">[root@80e54d87 ~]# bash sshtrust.sh \"yum-config-manager --add-repo=http://172.18.71.254/templates/twoyang-c7.repo\"</div><div class=\"line\">Loaded plugins: fastestmirror, langpacks</div><div class=\"line\">adding repo from: http://172.18.71.254/templates/twoyang-c7.repo</div><div class=\"line\">grabbing file http://172.18.71.254/templates/twoyang-c7.repo to /etc/yum.repos.d/twoyang-c7.repo</div><div class=\"line\">repo saved to /etc/yum.repos.d/twoyang-c7.repo</div><div class=\"line\">Loaded plugins: fastestmirror, langpacks</div><div class=\"line\">adding repo from: http://172.18.71.254/templates/twoyang-c7.repo</div><div class=\"line\">grabbing file http://172.18.71.254/templates/twoyang-c7.repo to /etc/yum.repos.d/twoyang-c7.repo</div><div class=\"line\">repo saved to /etc/yum.repos.d/twoyang-c7.repo</div><div class=\"line\">Loaded plugins: fastestmirror, langpacks</div><div class=\"line\">adding repo from: http://172.18.71.254/templates/twoyang-c7.repo</div><div class=\"line\">grabbing file http://172.18.71.254/templates/twoyang-c7.repo to /etc/yum.repos.d/twoyang-c7.repo</div><div class=\"line\">repo saved to /etc/yum.repos.d/twoyang-c7.repo</div><div class=\"line\">Loaded plugins: fastestmirror, langpacks</div><div class=\"line\">adding repo from: http://172.18.71.254/templates/twoyang-c7.repo</div><div class=\"line\">grabbing file http://172.18.71.254/templates/twoyang-c7.repo to /etc/yum.repos.d/twoyang-c7.repo</div><div class=\"line\">repo saved to /etc/yum.repos.d/twoyang-c7.repo</div></pre></td></tr></table></figure>\n<h1 id=\"安装配置MHA\"><a href=\"#安装配置MHA\" class=\"headerlink\" title=\"安装配置MHA\"></a>安装配置MHA</h1><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># 集群内所有节点(包括管理节点)需要安装Node包</span></div><div class=\"line\">[root@80e54d87 ~]# bash sshtrust.sh <span class=\"string\">\"yum install -y mha4mysql-node.noarch\"</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># HostD作为MHA管理节点需要安装Manager包</span></div><div class=\"line\">[root@1478a474 ~]# yum install -y mha4mysql-manager.noarch</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 默认是没有配置文件, 自己建立目录和配置文件.</span></div><div class=\"line\">[root@1478a474 ~]# mkdir /etc/masterha</div><div class=\"line\">[root@1478a474 ~]# vim /etc/masterha/app1.cnf</div><div class=\"line\">[server default]</div><div class=\"line\"><span class=\"attribute\">user</span>=mha\t#  被控节点授权给管理节点SUPER权限的用户</div><div class=\"line\"><span class=\"attribute\">password</span>=magedu\t#  被控节点授权给管理节点SUPER权限用户的口令</div><div class=\"line\"><span class=\"attribute\">manager_workdir</span>=/data/masterha/app1\t# 管理节点的工作目录, 会自动建立.</div><div class=\"line\"><span class=\"attribute\">manager_log</span>=/data/masterha/app1/manager.log\t# 管理节点的日志</div><div class=\"line\"><span class=\"attribute\">remote_workdir</span>=/data/masterha/app1 # 被控节点的工作目录, 会自动建立.</div><div class=\"line\"><span class=\"attribute\">ssh_user</span>=root\t# 被控节点的ssh用户</div><div class=\"line\"><span class=\"attribute\">repl_user</span>=repl\t# 用于数据库复制的用户</div><div class=\"line\"><span class=\"attribute\">repl_password</span>=magedu # 用于数据库复制的用户的口令</div><div class=\"line\"><span class=\"attribute\">ping_interval</span>=1 # 被控节点的健康检查时间间隔</div><div class=\"line\"></div><div class=\"line\">[server1]</div><div class=\"line\"><span class=\"attribute\">hostname</span>=172.18.71.101</div><div class=\"line\"><span class=\"attribute\">candidate_master</span>=1\t# 作为主节点候选</div><div class=\"line\"></div><div class=\"line\">[server2]</div><div class=\"line\"><span class=\"attribute\">hostname</span>=172.18.71.102</div><div class=\"line\"><span class=\"attribute\">candidate_master</span>=1</div><div class=\"line\"></div><div class=\"line\">[server3]</div><div class=\"line\"><span class=\"attribute\">hostname</span>=172.18.71.103</div><div class=\"line\"><span class=\"attribute\">no_master</span>=1\t# 永远不作为主节点</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 用mha提供的脚本做主机信任检查.</span></div><div class=\"line\">[root@1478a474 ~]# masterha_check_ssh <span class=\"attribute\">--conf</span>=/etc/masterha/app1.cnf</div><div class=\"line\">Mon Jun  6 22:12:23 2016 - [<span class=\"builtin-name\">warning</span>] Global configuration file /etc/masterha_default.cnf <span class=\"keyword\">not</span> found. Skipping.</div><div class=\"line\">Mon Jun  6 22:12:23 2016 - [<span class=\"builtin-name\">info</span>] Reading application<span class=\"built_in\"> default </span>configuration <span class=\"keyword\">from</span> /etc/masterha/app1.cnf<span class=\"built_in\">..</span></div><div class=\"line\">Mon Jun  6 22:12:23 2016 - [<span class=\"builtin-name\">info</span>] Reading<span class=\"built_in\"> server </span>configuration <span class=\"keyword\">from</span> /etc/masterha/app1.cnf<span class=\"built_in\">..</span></div><div class=\"line\">Mon Jun  6 22:12:23 2016 - [<span class=\"builtin-name\">info</span>] Starting SSH<span class=\"built_in\"> connection </span>tests<span class=\"built_in\">..</span></div><div class=\"line\">Mon Jun  6 22:12:24 2016 - [<span class=\"builtin-name\">debug</span>] </div><div class=\"line\">Mon Jun  6 22:12:24 2016 - [<span class=\"builtin-name\">info</span>] All SSH<span class=\"built_in\"> connection </span>tests passed successfully.</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 用mha提供的脚本做数据库复制检查.</span></div><div class=\"line\">[root@1478a474 ~]# masterha_check_repl <span class=\"attribute\">--conf</span>=/etc/masterha/app1.cnf</div><div class=\"line\">Mon Jun  6 22:19:40 2016 - [<span class=\"builtin-name\">warning</span>] Global configuration file /etc/masterha_default.cnf <span class=\"keyword\">not</span> found. Skipping.</div><div class=\"line\">Mon Jun  6 22:19:40 2016 - [<span class=\"builtin-name\">info</span>] Reading application<span class=\"built_in\"> default </span>configuration <span class=\"keyword\">from</span> /etc/masterha/app1.cnf<span class=\"built_in\">..</span></div><div class=\"line\">Mon Jun  6 22:19:40 2016 - [<span class=\"builtin-name\">info</span>] Reading<span class=\"built_in\"> server </span>configuration <span class=\"keyword\">from</span> /etc/masterha/app1.cnf<span class=\"built_in\">..</span></div><div class=\"line\">Mon Jun  6 22:19:40 2016 - [<span class=\"builtin-name\">info</span>] MHA::MasterMonitor version 0.57.</div><div class=\"line\">Mon Jun  6 22:19:40 2016 - [<span class=\"builtin-name\">info</span>] GTID failover mode = 0</div><div class=\"line\">Mon Jun  6 22:19:40 2016 - [<span class=\"builtin-name\">info</span>] Dead Servers:</div><div class=\"line\">Mon Jun  6 22:19:40 2016 - [<span class=\"builtin-name\">info</span>] Alive Servers:</div><div class=\"line\">Mon Jun  6 22:19:40 2016 - [<span class=\"builtin-name\">info</span>]   172.18.71.101(172.18.71.101:3306)</div><div class=\"line\">Mon Jun  6 22:19:40 2016 - [<span class=\"builtin-name\">info</span>]   172.18.71.102(172.18.71.102:3306)</div><div class=\"line\">Mon Jun  6 22:19:40 2016 - [<span class=\"builtin-name\">info</span>]   172.18.71.103(172.18.71.103:3306)</div><div class=\"line\">Mon Jun  6 22:19:40 2016 - [<span class=\"builtin-name\">info</span>] Alive Slaves:</div><div class=\"line\">Mon Jun  6 22:19:40 2016 - [<span class=\"builtin-name\">info</span>]   172.18.71.102(172.18.71.102:3306)  <span class=\"attribute\">Version</span>=5.5.44-MariaDB-log (oldest major version between slaves) log-bin:enabled</div><div class=\"line\">Mon Jun  6 22:19:40 2016 - [<span class=\"builtin-name\">info</span>]     Replicating <span class=\"keyword\">from</span> 172.18.71.101(172.18.71.101:3306)</div><div class=\"line\">Mon Jun  6 22:19:40 2016 - [<span class=\"builtin-name\">info</span>]     Primary candidate <span class=\"keyword\">for</span> the new Master (candidate_master is set)</div><div class=\"line\">Mon Jun  6 22:19:40 2016 - [<span class=\"builtin-name\">info</span>]   172.18.71.103(172.18.71.103:3306)  <span class=\"attribute\">Version</span>=5.5.44-MariaDB-log (oldest major version between slaves) log-bin:enabled</div><div class=\"line\">Mon Jun  6 22:19:40 2016 - [<span class=\"builtin-name\">info</span>]     Replicating <span class=\"keyword\">from</span> 172.18.71.101(172.18.71.101:3306)</div><div class=\"line\">Mon Jun  6 22:19:40 2016 - [<span class=\"builtin-name\">info</span>]     <span class=\"keyword\">Not</span> candidate <span class=\"keyword\">for</span> the new Master (no_master is set)</div><div class=\"line\">Mon Jun  6 22:19:40 2016 - [<span class=\"builtin-name\">info</span>] Current Alive Master: 172.18.71.101(172.18.71.101:3306)</div><div class=\"line\">Mon Jun  6 22:19:40 2016 - [<span class=\"builtin-name\">info</span>] Checking slave configurations<span class=\"built_in\">..</span></div><div class=\"line\">Mon Jun  6 22:19:40 2016 - [<span class=\"builtin-name\">info</span>] Checking replication filtering settings<span class=\"built_in\">..</span></div><div class=\"line\">Mon Jun  6 22:19:40 2016 - [<span class=\"builtin-name\">info</span>]  binlog_do_db= , binlog_ignore_db= </div><div class=\"line\">Mon Jun  6 22:19:40 2016 - [<span class=\"builtin-name\">info</span>]  Replication filtering check ok.</div><div class=\"line\">Mon Jun  6 22:19:40 2016 - [<span class=\"builtin-name\">info</span>] GTID (with auto-pos) is <span class=\"keyword\">not</span> supported</div><div class=\"line\">Mon Jun  6 22:19:40 2016 - [<span class=\"builtin-name\">info</span>] Starting SSH<span class=\"built_in\"> connection </span>tests<span class=\"built_in\">..</span></div><div class=\"line\">Mon Jun  6 22:19:42 2016 - [<span class=\"builtin-name\">info</span>] All SSH<span class=\"built_in\"> connection </span>tests passed successfully.</div><div class=\"line\">Mon Jun  6 22:19:42 2016 - [<span class=\"builtin-name\">info</span>] Checking MHA Node version<span class=\"built_in\">..</span></div><div class=\"line\">Mon Jun  6 22:19:42 2016 - [<span class=\"builtin-name\">info</span>]  Version check ok.</div><div class=\"line\">Mon Jun  6 22:19:42 2016 - [<span class=\"builtin-name\">info</span>] Checking SSH publickey authentication<span class=\"built_in\"> settings </span>on the current master<span class=\"built_in\">..</span></div><div class=\"line\">Mon Jun  6 22:19:43 2016 - [<span class=\"builtin-name\">info</span>] HealthCheck: SSH <span class=\"keyword\">to</span> 172.18.71.101 is reachable.</div><div class=\"line\">Mon Jun  6 22:19:43 2016 - [<span class=\"builtin-name\">info</span>] Master MHA Node version is 0.57.</div><div class=\"line\">Mon Jun  6 22:19:43 2016 - [<span class=\"builtin-name\">info</span>] Checking recovery<span class=\"built_in\"> script </span>configurations on 172.18.71.101(172.18.71.101:3306)<span class=\"built_in\">..</span></div><div class=\"line\">Mon Jun  6 22:19:43 2016 - [<span class=\"builtin-name\">info</span>]   Executing command: save_binary_logs <span class=\"attribute\">--command</span>=test <span class=\"attribute\">--start_pos</span>=4 <span class=\"attribute\">--binlog_dir</span>=/var/lib/mysql,/var/log/mysql <span class=\"attribute\">--output_file</span>=/data/masterha/app1/save_binary_logs_test <span class=\"attribute\">--manager_version</span>=0.57 <span class=\"attribute\">--start_file</span>=master-binlog.000003 </div><div class=\"line\">Mon Jun  6 22:19:43 2016 - [<span class=\"builtin-name\">info</span>]   Connecting <span class=\"keyword\">to</span> root@172.18.71.101(172.18.71.101:22)<span class=\"built_in\">..</span> </div><div class=\"line\">  Creating /data/masterha/app1 <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> exists<span class=\"built_in\">..</span> Creating directory /data/masterha/app1<span class=\"built_in\">..</span> done.</div><div class=\"line\">   ok.</div><div class=\"line\">  Checking output directory is accessible <span class=\"keyword\">or</span> <span class=\"keyword\">not</span><span class=\"built_in\">..</span></div><div class=\"line\">   ok.</div><div class=\"line\">  Binlog found at /var/lib/mysql, up <span class=\"keyword\">to</span> master-binlog.000003</div><div class=\"line\">Mon Jun  6 22:19:43 2016 - [<span class=\"builtin-name\">info</span>] Binlog setting check done.</div><div class=\"line\">Mon Jun  6 22:19:43 2016 - [<span class=\"builtin-name\">info</span>] Checking SSH publickey authentication <span class=\"keyword\">and</span> checking recovery<span class=\"built_in\"> script </span>configurations on all alive slave servers<span class=\"built_in\">..</span></div><div class=\"line\">Mon Jun  6 22:19:43 2016 - [<span class=\"builtin-name\">info</span>]   Executing command : apply_diff_relay_logs <span class=\"attribute\">--command</span>=test <span class=\"attribute\">--slave_user</span>=<span class=\"string\">'mha'</span> <span class=\"attribute\">--slave_host</span>=172.18.71.102 <span class=\"attribute\">--slave_ip</span>=172.18.71.102 <span class=\"attribute\">--slave_port</span>=3306 <span class=\"attribute\">--workdir</span>=/data/masterha/app1 <span class=\"attribute\">--target_version</span>=5.5.44-MariaDB-log <span class=\"attribute\">--manager_version</span>=0.57 <span class=\"attribute\">--relay_log_info</span>=/var/lib/mysql/relay-log.info  <span class=\"attribute\">--relay_dir</span>=/var/lib/mysql/  <span class=\"attribute\">--slave_pass</span>=xxx</div><div class=\"line\">Mon Jun  6 22:19:43 2016 - [<span class=\"builtin-name\">info</span>]   Connecting <span class=\"keyword\">to</span> root@172.18.71.102(172.18.71.102:22)<span class=\"built_in\">..</span> </div><div class=\"line\">Creating directory /data/masterha/app1<span class=\"built_in\">..</span> done.</div><div class=\"line\">  Checking slave recovery environment settings<span class=\"built_in\">..</span></div><div class=\"line\">    Opening /var/lib/mysql/relay-log.<span class=\"builtin-name\">info</span> <span class=\"built_in\">..</span>. ok.</div><div class=\"line\">    Relay log found at /var/lib/mysql, up <span class=\"keyword\">to</span> relaylog.000006</div><div class=\"line\">    Temporary relay log file is /var/lib/mysql/relaylog.000006</div><div class=\"line\">    Testing mysql<span class=\"built_in\"> connection </span><span class=\"keyword\">and</span> privileges<span class=\"built_in\">..</span> done.</div><div class=\"line\">    Testing mysqlbinlog output<span class=\"built_in\">..</span> done.</div><div class=\"line\">    Cleaning up test file(s)<span class=\"built_in\">..</span> done.</div><div class=\"line\">Mon Jun  6 22:19:43 2016 - [<span class=\"builtin-name\">info</span>]   Executing command : apply_diff_relay_logs <span class=\"attribute\">--command</span>=test <span class=\"attribute\">--slave_user</span>=<span class=\"string\">'mha'</span> <span class=\"attribute\">--slave_host</span>=172.18.71.103 <span class=\"attribute\">--slave_ip</span>=172.18.71.103 <span class=\"attribute\">--slave_port</span>=3306 <span class=\"attribute\">--workdir</span>=/data/masterha/app1 <span class=\"attribute\">--target_version</span>=5.5.44-MariaDB-log <span class=\"attribute\">--manager_version</span>=0.57 <span class=\"attribute\">--relay_log_info</span>=/var/lib/mysql/relay-log.info  <span class=\"attribute\">--relay_dir</span>=/var/lib/mysql/  <span class=\"attribute\">--slave_pass</span>=xxx</div><div class=\"line\">Mon Jun  6 22:19:43 2016 - [<span class=\"builtin-name\">info</span>]   Connecting <span class=\"keyword\">to</span> root@172.18.71.103(172.18.71.103:22)<span class=\"built_in\">..</span> </div><div class=\"line\">Creating directory /data/masterha/app1<span class=\"built_in\">..</span> done.</div><div class=\"line\">  Checking slave recovery environment settings<span class=\"built_in\">..</span></div><div class=\"line\">    Opening /var/lib/mysql/relay-log.<span class=\"builtin-name\">info</span> <span class=\"built_in\">..</span>. ok.</div><div class=\"line\">    Relay log found at /var/lib/mysql, up <span class=\"keyword\">to</span> relaylog.000004</div><div class=\"line\">    Temporary relay log file is /var/lib/mysql/relaylog.000004</div><div class=\"line\">    Testing mysql<span class=\"built_in\"> connection </span><span class=\"keyword\">and</span> privileges<span class=\"built_in\">..</span> done.</div><div class=\"line\">    Testing mysqlbinlog output<span class=\"built_in\">..</span> done.</div><div class=\"line\">    Cleaning up test file(s)<span class=\"built_in\">..</span> done.</div><div class=\"line\">Mon Jun  6 22:19:43 2016 - [<span class=\"builtin-name\">info</span>] Slaves<span class=\"built_in\"> settings </span>check done.</div><div class=\"line\">Mon Jun  6 22:19:43 2016 - [<span class=\"builtin-name\">info</span>] </div><div class=\"line\">172.18.71.101(172.18.71.101:3306) (current master)</div><div class=\"line\"> +--172.18.71.102(172.18.71.102:3306)</div><div class=\"line\"> +--172.18.71.103(172.18.71.103:3306)</div><div class=\"line\"></div><div class=\"line\">Mon Jun  6 22:19:43 2016 - [<span class=\"builtin-name\">info</span>] Checking replication<span class=\"built_in\"> health </span>on 172.18.71.102<span class=\"built_in\">..</span></div><div class=\"line\">Mon Jun  6 22:19:43 2016 - [<span class=\"builtin-name\">info</span>]  ok.</div><div class=\"line\">Mon Jun  6 22:19:43 2016 - [<span class=\"builtin-name\">info</span>] Checking replication<span class=\"built_in\"> health </span>on 172.18.71.103<span class=\"built_in\">..</span></div><div class=\"line\">Mon Jun  6 22:19:43 2016 - [<span class=\"builtin-name\">info</span>]  ok.</div><div class=\"line\"><span class=\"comment\"># 这里已经提示了没有定义主节点故障VIP如何漂移的脚本.</span></div><div class=\"line\">Mon Jun  6 22:19:43 2016 - [<span class=\"builtin-name\">warning</span>] master_ip_failover_script is <span class=\"keyword\">not</span> defined.</div><div class=\"line\"><span class=\"comment\"># 也没有定义STONITH脚本, 以防止集群脑裂.</span></div><div class=\"line\">Mon Jun  6 22:19:43 2016 - [<span class=\"builtin-name\">warning</span>] shutdown_script is <span class=\"keyword\">not</span> defined.</div><div class=\"line\">Mon Jun  6 22:19:43 2016 - [<span class=\"builtin-name\">info</span>] Got exit code 0 (<span class=\"keyword\">Not</span> master dead).</div><div class=\"line\"></div><div class=\"line\">MySQL Replication<span class=\"built_in\"> Health </span>is OK.</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 测试通过就可以启动MHA了</span></div><div class=\"line\">[root@1478a474 ~]# nohup masterha_manager <span class=\"attribute\">--conf</span>=/etc/masterha/app1.cnf &amp;&gt; /data/masterha/app1/manager.log &amp;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 查看状态</span></div><div class=\"line\">[root@1478a474 ~]# masterha_check_status <span class=\"attribute\">--conf</span>=/etc/masterha/app1.cnf</div><div class=\"line\">app1 (pid:30255) is running(0:PING_OK), master:172.18.71.101</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 如需停止MHA, 执行以下命令.</span></div><div class=\"line\">[root@1478a474 ~]# masterha_stop <span class=\"attribute\">--conf</span>=/etc/masterha/app1.cnf</div><div class=\"line\">Stopped app1 successfully.</div><div class=\"line\">[1]+  Exit 1                  nohup masterha_manager <span class=\"attribute\">--conf</span>=/etc/masterha/app1.cnf &amp;&gt;/data/masterha/app1/manager.log</div></pre></td></tr></table></figure>\n<h1 id=\"测试验证\"><a href=\"#测试验证\" class=\"headerlink\" title=\"测试验证\"></a>测试验证</h1><p>关闭HostA(Master)的mariadb服务, 期望MHA能够检测到HostA故障, 将HostB提升为Master.</p>\n<figure class=\"highlight x86asm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 杀死HostA上的mysqld和mysqld_safe进程</div><div class=\"line\">[root@80e54d87 ~]# killall -<span class=\"number\">9</span> mysqld mysqld_safe</div><div class=\"line\"></div><div class=\"line\"># 查看MHA的日志, 可以看到故障转移报告.</div><div class=\"line\">[root@1478a474 ~]# less /data/masterha/app1/manager.log</div><div class=\"line\">...</div><div class=\"line\">----- Failover Report -----</div><div class=\"line\"><span class=\"symbol\"></span></div><div class=\"line\">app1: MySQL Master failover <span class=\"number\">172.18</span><span class=\"meta\">.71</span><span class=\"meta\">.101</span>(<span class=\"number\">172.18</span><span class=\"meta\">.71</span><span class=\"meta\">.101</span>:<span class=\"number\">3306</span>) to <span class=\"number\">172.18</span><span class=\"meta\">.71</span><span class=\"meta\">.102</span>(<span class=\"number\">172.18</span><span class=\"meta\">.71</span><span class=\"meta\">.102</span>:<span class=\"number\">3306</span>) succeeded</div><div class=\"line\"></div><div class=\"line\">Master <span class=\"number\">172.18</span><span class=\"meta\">.71</span><span class=\"meta\">.101</span>(<span class=\"number\">172.18</span><span class=\"meta\">.71</span><span class=\"meta\">.101</span>:<span class=\"number\">3306</span>) is <span class=\"meta\">down</span>!</div><div class=\"line\"></div><div class=\"line\">Check MHA Manager logs <span class=\"meta\">at</span> 1478a474.twoyang.com:/data/masterha/app1/manager.log for details.</div><div class=\"line\"></div><div class=\"line\">Started automated(non-interactive) failover.</div><div class=\"line\">The latest slave <span class=\"number\">172.18</span><span class=\"meta\">.71</span><span class=\"meta\">.102</span>(<span class=\"number\">172.18</span><span class=\"meta\">.71</span><span class=\"meta\">.102</span>:<span class=\"number\">3306</span>) has all relay logs for recovery.</div><div class=\"line\">Selected <span class=\"number\">172.18</span><span class=\"meta\">.71</span><span class=\"meta\">.102</span>(<span class=\"number\">172.18</span><span class=\"meta\">.71</span><span class=\"meta\">.102</span>:<span class=\"number\">3306</span>) as a new master.</div><div class=\"line\"><span class=\"number\">172.18</span><span class=\"meta\">.71</span><span class=\"meta\">.102</span>(<span class=\"number\">172.18</span><span class=\"meta\">.71</span><span class=\"meta\">.102</span>:<span class=\"number\">3306</span>): OK: Applying all logs succeeded.</div><div class=\"line\"><span class=\"number\">172.18</span><span class=\"meta\">.71</span><span class=\"meta\">.103</span>(<span class=\"number\">172.18</span><span class=\"meta\">.71</span><span class=\"meta\">.103</span>:<span class=\"number\">3306</span>): This host has the latest relay log events.</div><div class=\"line\">Generating relay diff files from the latest slave succeeded.</div><div class=\"line\"><span class=\"number\">172.18</span><span class=\"meta\">.71</span><span class=\"meta\">.103</span>(<span class=\"number\">172.18</span><span class=\"meta\">.71</span><span class=\"meta\">.103</span>:<span class=\"number\">3306</span>): OK: Applying all logs succeeded. Slave started, replicating from <span class=\"number\">172.18</span><span class=\"meta\">.71</span><span class=\"meta\">.102</span>(<span class=\"number\">172.18</span><span class=\"meta\">.71</span><span class=\"meta\">.102</span>:<span class=\"number\">3306</span>)</div><div class=\"line\"><span class=\"number\">172.18</span><span class=\"meta\">.71</span><span class=\"meta\">.102</span>(<span class=\"number\">172.18</span><span class=\"meta\">.71</span><span class=\"meta\">.102</span>:<span class=\"number\">3306</span>): Resetting slave info succeeded.</div><div class=\"line\">Master failover to <span class=\"number\">172.18</span><span class=\"meta\">.71</span><span class=\"meta\">.102</span>(<span class=\"number\">172.18</span><span class=\"meta\">.71</span><span class=\"meta\">.102</span>:<span class=\"number\">3306</span>) completed successfully.</div><div class=\"line\"></div><div class=\"line\"># 再看另一个从节点HostC上, MHA已经将其主节点由HostA修改为了HostB了.</div><div class=\"line\">MariaDB [(none)]&gt; SHOW SLAVE STATUS\\G</div><div class=\"line\">*************************** <span class=\"number\">1</span>. row ***************************</div><div class=\"line\"><span class=\"symbol\">               Slave_IO_State:</span> Waiting for master to send event</div><div class=\"line\"><span class=\"symbol\">                  Master_Host:</span> <span class=\"number\">172.18</span><span class=\"meta\">.71</span><span class=\"meta\">.102</span></div><div class=\"line\"><span class=\"symbol\">                  Master_User:</span> repl</div><div class=\"line\"><span class=\"symbol\">                  Master_Port:</span> <span class=\"number\">3306</span></div><div class=\"line\"><span class=\"symbol\">                Connect_Retry:</span> <span class=\"number\">60</span></div><div class=\"line\"><span class=\"symbol\">              Master_Log_File:</span> master-binlog<span class=\"meta\">.000001</span></div><div class=\"line\"><span class=\"symbol\">          Read_Master_Log_Pos:</span> <span class=\"number\">245</span></div><div class=\"line\"><span class=\"symbol\">               Relay_Log_File:</span> relaylog<span class=\"meta\">.000002</span></div><div class=\"line\"><span class=\"symbol\">                Relay_Log_Pos:</span> <span class=\"number\">533</span></div><div class=\"line\"><span class=\"symbol\">        Relay_Master_Log_File:</span> master-binlog<span class=\"meta\">.000001</span></div><div class=\"line\"><span class=\"symbol\">             Slave_IO_Running:</span> Yes</div><div class=\"line\"><span class=\"symbol\">            Slave_SQL_Running:</span> Yes</div><div class=\"line\">......</div><div class=\"line\"><span class=\"number\">1</span> row <span class=\"keyword\">in</span> set (<span class=\"number\">0.00</span> sec)</div><div class=\"line\"></div><div class=\"line\"># 注意: 故障转移完成后, MHA将会自动停止进程.</div><div class=\"line\">[root@1478a474 ~]# masterha_check_status --conf=/etc/masterha/app1.cnf</div><div class=\"line\">app1 is stopped(<span class=\"number\">2</span>:NOT_RUNNING).</div></pre></td></tr></table></figure>\n<h1 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h1><p>还有几个问题需要说明一下:</p>\n<ul>\n<li>因为主从异步复制时难免会出现从节点落后主节点的情况, 这样主机点宕机就会出现丢失数据的情况. 所以如果是做半同步复制情况就会好很多.</li>\n<li>这里没有考虑VIP和STONITH的问题, 其实前面用MHA做复制检查时已经警告过我们了. VIP地址漂移的问题可以通过脚本来实现, 也可以通过keepalived来实现. 而STONITH也可以通过脚本来实现, 不过既然是脑裂基本上就是联系不上对方, 那通过脚本来STONITH也就不太靠谱; 想靠谱基本上只有上硬件, 那可就贵了.<br>原文地址：<a href=\"http://twoyang.net/2016/06/06/mariadb%20MHA/\" target=\"_blank\" rel=\"external\">点我</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"<h1 id=\"MHA简介\"><a href=\"#MHA简介\" class=\"headerlink\" title=\"MHA简介\"></a>MHA简介</h1><blockquote>\n<p>MHA（Master High Availability）目前在MySQL高可用方面是一个相对成熟的解决方案，它由日本DeNA公司youshimaton（现就职于Facebook公司）开发，是一套优秀的作为MySQL高可用性环境下故障切换和主从提升的高可用软件。在MySQL故障切换过程中，MHA能做到在0~30秒之内自动完成数据库的故障切换操作，并且在进行故障切换的过程中，MHA能在最大程度上保证数据的一致性，以达到真正意义上的高可用。</p>\n</blockquote>","more":"<blockquote>\n<p>该软件由两部分组成：MHA Manager（管理节点）和MHA Node（数据节点）。MHA Manager可以单独部署在一台独立的机器上管理多个master-slave集群，也可以部署在一台slave节点上。MHA Node运行在每台MySQL服务器上，MHA Manager会定时探测集群中的master节点，当master出现故障时，它可以自动将最新数据的slave提升为新的master，然后将所有其他的slave重新指向新的master。整个故障转移过程对应用程序完全透明。</p>\n<p>在MHA自动故障切换过程中，MHA试图从宕机的主服务器上保存二进制日志，最大程度的保证数据的不丢失，但这并不总是可行的。例如，如果主服务器硬件故障或无法通过ssh访问，MHA没法保存二进制日志，只进行故障转移而丢失了最新的数据。使用MySQL 5.5的半同步复制，可以大大降低数据丢失的风险。MHA可以与半同步复制结合起来。如果只有一个slave已经收到了最新的二进制日志，MHA可以将最新的二进制日志应用于其他所有的slave服务器上，因此可以保证所有节点的数据一致性。</p>\n</blockquote>\n<p><strong> 目前MHA主要支持一主多从的架构，要搭建MHA,要求一个复制集群中必须最少有三台数据库服务器，一主二从，即一台充当master，一台充当备用master，另外一台充当从库，因此至少需要三台服务器。 </strong></p>\n<h1 id=\"MHA工作原理总结为以下几条\"><a href=\"#MHA工作原理总结为以下几条\" class=\"headerlink\" title=\"MHA工作原理总结为以下几条\"></a>MHA工作原理总结为以下几条</h1><ol>\n<li>从宕机崩溃的master保存二进制日志事件（binlog events）;</li>\n<li>识别含有最新更新的slave;</li>\n<li>应用差异的中继日志(relay log) 到其他slave;</li>\n<li>应用从master保存的二进制日志事件(binlog events);</li>\n<li>提升一个slave为新master;</li>\n<li>使用其他的slave连接新的master进行复制。</li>\n</ol>\n<h1 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h1><blockquote>\n<p>准备四台虚拟机, 均为CentOS-7-x86_64最小化安装, iptables与SELinux均处于关闭状态, 配置好yum源(base和epel). 做好快照, 以便每次实验后快速恢复.</p>\n<ul>\n<li>确保各节点时间保持一致</li>\n<li>各节点需开启二进制日志和中继日志</li>\n<li>各节点彼此可通过主机名进行通信</li>\n<li>各节点彼此间无密钥进行通信</li>\n</ul>\n</blockquote>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"title\">HostA</span><span class=\"params\">(Master)</span></span></div><div class=\"line\">OS: CentOS-<span class=\"number\">7</span>-x86_64</div><div class=\"line\">hostname: <span class=\"number\">80</span>e54d87<span class=\"selector-class\">.twoyang</span><span class=\"selector-class\">.com</span></div><div class=\"line\">eno16777736: <span class=\"number\">172.18</span>.<span class=\"number\">71.101</span>/<span class=\"number\">16</span></div><div class=\"line\">gateway: <span class=\"number\">172.18</span>.<span class=\"number\">0.1</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"title\">HostB</span><span class=\"params\">(Slave)</span></span></div><div class=\"line\">OS: CentOS-<span class=\"number\">7</span>-x86_64</div><div class=\"line\">hostname: b9cf468b<span class=\"selector-class\">.twoyang</span><span class=\"selector-class\">.com</span></div><div class=\"line\">eno16777736: <span class=\"number\">172.18</span>.<span class=\"number\">71.102</span>/<span class=\"number\">16</span></div><div class=\"line\">gateway: <span class=\"number\">172.18</span>.<span class=\"number\">0.1</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"title\">HostC</span><span class=\"params\">(Slave)</span></span></div><div class=\"line\">OS: CentOS-<span class=\"number\">7</span>-x86_64</div><div class=\"line\">hostname: <span class=\"number\">1</span>f5fafa6<span class=\"selector-class\">.twoyang</span><span class=\"selector-class\">.com</span></div><div class=\"line\">eno16777736: <span class=\"number\">172.18</span>.<span class=\"number\">71.103</span>/<span class=\"number\">16</span></div><div class=\"line\">gateway: <span class=\"number\">172.18</span>.<span class=\"number\">0.1</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"title\">HostD</span><span class=\"params\">(MHA Manager)</span></span></div><div class=\"line\">OS: CentOS-<span class=\"number\">7</span>-x86_64</div><div class=\"line\">hostname: <span class=\"number\">1478</span>a474<span class=\"selector-class\">.twoyang</span><span class=\"selector-class\">.com</span></div><div class=\"line\">eno16777736: <span class=\"number\">172.18</span>.<span class=\"number\">71.130</span>/<span class=\"number\">16</span></div><div class=\"line\">gateway: <span class=\"number\">172.18</span>.<span class=\"number\">0.1</span></div></pre></td></tr></table></figure>\n<p><strong> 先不管MHA, 按照主从复制模型搭建好集群. </strong></p>\n<h1 id=\"主从复制\"><a href=\"#主从复制\" class=\"headerlink\" title=\"主从复制\"></a>主从复制</h1><h2 id=\"HostA-Master\"><a href=\"#HostA-Master\" class=\"headerlink\" title=\"HostA(Master)\"></a>HostA(Master)</h2><figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@80e54d87 ~]<span class=\"comment\"># yum install -y mariadb-server</span></div><div class=\"line\"></div><div class=\"line\">sed -i '/\\[server\\]<span class=\"string\">/a</span>\\character-set-server=utf8' <span class=\"string\">/etc/my.cnf.d/server.cnf</span></div><div class=\"line\">sed -i '/\\[server\\]<span class=\"string\">/a</span>\\collation-server=utf8_general_ci' <span class=\"string\">/etc/my.cnf.d/server.cnf</span></div><div class=\"line\">sed -i '/\\[server\\]<span class=\"string\">/a</span>\\default-storage-engine=InnoDB' <span class=\"string\">/etc/my.cnf.d/server.cnf</span></div><div class=\"line\">sed -i '/\\[server\\]<span class=\"string\">/a</span>\\innodb-file-per-table=TRUE' <span class=\"string\">/etc/my.cnf.d/server.cnf</span></div><div class=\"line\">sed -i '/\\[server\\]<span class=\"string\">/a</span>\\skip-name-resolve=TRUE' <span class=\"string\">/etc/my.cnf.d/server.cnf</span></div><div class=\"line\">sed -i '/\\[server\\]<span class=\"string\">/a</span>\\log_bin=master-binlog' <span class=\"string\">/etc/my.cnf.d/server.cnf</span></div><div class=\"line\"><span class=\"comment\"># 注意server_id为集群内的唯一标识.</span></div><div class=\"line\">sed -i '/\\[server\\]<span class=\"string\">/a</span>\\server_id=1' <span class=\"string\">/etc/my.cnf.d/server.cnf</span></div><div class=\"line\"></div><div class=\"line\">[root@80e54d87 ~]<span class=\"comment\"># systemctl start mariadb.service</span></div><div class=\"line\">[root@80e54d87 ~]<span class=\"comment\"># mysql</span></div><div class=\"line\"><span class=\"string\">...</span></div><div class=\"line\"><span class=\"comment\"># 创建用户前记录下二进制日志文件位置, 一会儿让从节点从此处开始复制, 就会自动创建此用户了.</span></div><div class=\"line\"><span class=\"comment\"># 因为主节点宕机时, 从节点有可能会被MHA管理节点提升为主节点供其它从节点复制.</span></div><div class=\"line\">MariaDB [<span class=\"params\">(none)</span>]&gt; SHOW MASTER STATUS;</div><div class=\"line\">+<span class=\"params\">----------------------</span>+<span class=\"params\">----------</span>+<span class=\"params\">--------------</span>+<span class=\"params\">------------------</span>+</div><div class=\"line\">| File                 | Position | Binlog_Do_DB | Binlog_Ignore_DB |</div><div class=\"line\">+<span class=\"params\">----------------------</span>+<span class=\"params\">----------</span>+<span class=\"params\">--------------</span>+<span class=\"params\">------------------</span>+</div><div class=\"line\">| master-binlog.000003 |      245 |              |                  |</div><div class=\"line\">+<span class=\"params\">----------------------</span>+<span class=\"params\">----------</span>+<span class=\"params\">--------------</span>+<span class=\"params\">------------------</span>+</div><div class=\"line\">1 row in <span class=\"keyword\">set</span> <span class=\"params\">(0.00 sec)</span></div><div class=\"line\"><span class=\"comment\"># 授权用户'repl'@'172.18.71.%'可以复制数据</span></div><div class=\"line\">MariaDB [<span class=\"params\">(none)</span>]&gt; GRANT REPLICATION SLAVE, REPLICATION CLIENT ON *.* TO 'repl'@'172.18.71.%' IDENTIFIED BY 'magedu';</div><div class=\"line\">Query OK, 0 rows affected <span class=\"params\">(0.00 sec)</span></div><div class=\"line\"><span class=\"comment\"># 另外还得创建一个SUPER权限的用户用于MHA管理节点来控制.</span></div><div class=\"line\">MariaDB [<span class=\"params\">(none)</span>]&gt; GRANT ALL PRIVILEGES ON *.* TO 'mha'@'%' IDENTIFIED BY 'magedu';</div><div class=\"line\">Query OK, 0 rows affected <span class=\"params\">(0.00 sec)</span></div><div class=\"line\">MariaDB [<span class=\"params\">(none)</span>]&gt; FLUSH PRIVILEGES;</div><div class=\"line\">Query OK, 0 rows affected <span class=\"params\">(0.00 sec)</span></div></pre></td></tr></table></figure>\n<h2 id=\"HostB-Slave\"><a href=\"#HostB-Slave\" class=\"headerlink\" title=\"HostB(Slave)\"></a>HostB(Slave)</h2><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@b9cf468b ~]<span class=\"meta\"># yum install -y mariadb-server</span></div><div class=\"line\"></div><div class=\"line\">sed -i <span class=\"comment\">'/\\[server\\]/a\\character-set-server=utf8' /etc/my.cnf.d/server.cnf</span></div><div class=\"line\">sed -i <span class=\"comment\">'/\\[server\\]/a\\collation-server=utf8_general_ci' /etc/my.cnf.d/server.cnf</span></div><div class=\"line\">sed -i <span class=\"comment\">'/\\[server\\]/a\\default-storage-engine=InnoDB' /etc/my.cnf.d/server.cnf</span></div><div class=\"line\">sed -i <span class=\"comment\">'/\\[server\\]/a\\innodb-file-per-table=TRUE' /etc/my.cnf.d/server.cnf</span></div><div class=\"line\">sed -i <span class=\"comment\">'/\\[server\\]/a\\skip-name-resolve=TRUE' /etc/my.cnf.d/server.cnf</span></div><div class=\"line\"><span class=\"meta\"># 从节点也要开启二进制日志, 因为可能会被提升为主节点.</span></div><div class=\"line\">sed -i <span class=\"comment\">'/\\[server\\]/a\\log_bin=master-binlog' /etc/my.cnf.d/server.cnf</span></div><div class=\"line\">sed -i <span class=\"comment\">'/\\[server\\]/a\\relay_log=relaylog' /etc/my.cnf.d/server.cnf</span></div><div class=\"line\"><span class=\"meta\"># 对于某些滞后从库的恢复依赖于其他从库的relay_log，因此采取禁用自动删除功能以及定期清理的办法.</span></div><div class=\"line\">sed -i <span class=\"comment\">'/\\[server\\]/a\\relay_log_purge=OFF' /etc/my.cnf.d/server.cnf</span></div><div class=\"line\">sed -i <span class=\"comment\">'/\\[server\\]/a\\read-only=ON' /etc/my.cnf.d/server.cnf</span></div><div class=\"line\"><span class=\"meta\"># 注意server_id为集群内的唯一标识.</span></div><div class=\"line\">sed -i <span class=\"comment\">'/\\[server\\]/a\\server_id=5' /etc/my.cnf.d/server.cnf</span></div><div class=\"line\"></div><div class=\"line\">[root@b9cf468b ~]<span class=\"meta\"># systemctl start mariadb.service</span></div><div class=\"line\">[root@b9cf468b ~]<span class=\"meta\"># mysql</span></div><div class=\"line\">...</div><div class=\"line\"><span class=\"meta\"># 指向HostA将其作为主节点</span></div><div class=\"line\">MariaDB [(none)]&gt; CHANGE MASTER <span class=\"keyword\">TO</span> MASTER_HOST=<span class=\"comment\">'172.18.71.101', MASTER_USER='repl', MASTER_PASSWORD='magedu', MASTER_LOG_FILE='master-binlog.000003', MASTER_LOG_POS=245;</span></div><div class=\"line\">Query OK, <span class=\"number\">0</span> rows affected (<span class=\"number\">0.00</span> sec)</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\"># 启动从节点, 即启动IO_thread和SQL_thread进程, 开始复制.</span></div><div class=\"line\">MariaDB [(none)]&gt; START SLAVE;</div><div class=\"line\">Query OK, <span class=\"number\">0</span> rows affected (<span class=\"number\">0.00</span> sec)</div><div class=\"line\"></div><div class=\"line\">MariaDB [(none)]&gt; SHOW SLAVE STATUS\\G</div><div class=\"line\">*************************** <span class=\"number\">1.</span> row ***************************</div><div class=\"line\">               Slave_IO_State: Waiting <span class=\"keyword\">for</span> master <span class=\"keyword\">to</span> send <span class=\"keyword\">event</span></div><div class=\"line\">                  Master_Host: <span class=\"number\">172.18</span><span class=\"number\">.71</span><span class=\"number\">.101</span></div><div class=\"line\">                  Master_User: repl</div><div class=\"line\">                  Master_Port: <span class=\"number\">3306</span></div><div class=\"line\">                Connect_Retry: <span class=\"number\">60</span></div><div class=\"line\">              Master_Log_File: master-binlog<span class=\"number\">.000003</span></div><div class=\"line\">          Read_Master_Log_Pos: <span class=\"number\">555</span></div><div class=\"line\">               Relay_Log_File: relaylog<span class=\"number\">.000002</span></div><div class=\"line\">                Relay_Log_Pos: <span class=\"number\">843</span></div><div class=\"line\">        Relay_Master_Log_File: master-binlog<span class=\"number\">.000003</span></div><div class=\"line\">             Slave_IO_Running: Yes</div><div class=\"line\">            Slave_SQL_Running: Yes</div><div class=\"line\">......</div><div class=\"line\"><span class=\"number\">1</span> row <span class=\"keyword\">in</span> <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</div></pre></td></tr></table></figure>\n<h2 id=\"HostC-Slave\"><a href=\"#HostC-Slave\" class=\"headerlink\" title=\"HostC(Slave)\"></a>HostC(Slave)</h2><p><strong> HostC与HostB做相同配置, 仅server_id必须不同. </strong></p>\n<h1 id=\"MHA\"><a href=\"#MHA\" class=\"headerlink\" title=\"MHA\"></a>MHA</h1><h2 id=\"集群初始化\"><a href=\"#集群初始化\" class=\"headerlink\" title=\"集群初始化\"></a>集群初始化</h2><blockquote>\n<p>建立主机信任, 时间同步, 统一增加yum源. 这一步其实在哪个节点上做都可以, 我这里选择HostA.</p>\n</blockquote>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># 写了个脚本来做这个事情</span></div><div class=\"line\">[root@80e54d87 ~]<span class=\"comment\"># wget https://raw.githubusercontent.com/twoyang0917/LearnInMagedu/master/shell/sshtrust.sh</span></div><div class=\"line\"><span class=\"comment\"># 有效代码是这个样子的</span></div><div class=\"line\">[root@80e54d87 ~]<span class=\"comment\"># cat sshtrust.sh</span></div><div class=\"line\">...</div><div class=\"line\">HOSTS=(<span class=\"string\">\"172.18.71.101\"</span> <span class=\"string\">\"172.18.71.102\"</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">if</span> ! [ $# -eq <span class=\"number\">1</span> ]; <span class=\"keyword\">then</span></div><div class=\"line\">   echo <span class=\"string\">\"$0 --key\"</span></div><div class=\"line\">   echo <span class=\"string\">\"$0 \\\"COMMAND\\\"\"</span></div><div class=\"line\">   exit <span class=\"number\">1</span></div><div class=\"line\">fi </div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"string\">\"$1\"</span> = <span class=\"string\">\"--key\"</span> ]; <span class=\"keyword\">then</span></div><div class=\"line\">    [ -f ~<span class=\"regexp\">/.ssh/id</span>_rsa ] <span class=\"params\">||</span> ssh-keygen -t rsa -f ~<span class=\"regexp\">/.ssh/id</span>_rsa -N <span class=\"string\">''</span></div><div class=\"line\">    [ -f ~<span class=\"regexp\">/.ssh/id</span>_rsa.pub ] &amp;&amp; cat ~<span class=\"regexp\">/.ssh/id</span>_rsa.pub &gt; ~<span class=\"regexp\">/.ssh/authorized</span>_keys &amp;&amp; chmod <span class=\"number\">600</span> ~<span class=\"regexp\">/.ssh/authorized</span>_keys</div><div class=\"line\">    <span class=\"keyword\">for</span> host <span class=\"keyword\">in</span> $&#123;HOSTS[*]&#125;; <span class=\"keyword\">do</span></div><div class=\"line\">        <span class=\"comment\"># 因为其它节点上都没有~/.ssh这么一个目录, 还得远程创建, 这导致分发密钥时要输两次密码还挺烦的.</span></div><div class=\"line\">        ssh root@$host <span class=\"string\">\"[ -d ~/.ssh ] || mkdir ~/.ssh\"</span></div><div class=\"line\">        scp -p ~<span class=\"regexp\">/.ssh/</span>&#123;id_rsa,authorized_keys&#125; root@$host<span class=\"symbol\">:~/</span>.ssh/</div><div class=\"line\">    done</div><div class=\"line\"><span class=\"keyword\">else</span></div><div class=\"line\">    <span class=\"keyword\">for</span> host <span class=\"keyword\">in</span> $&#123;HOSTS[*]&#125;; <span class=\"keyword\">do</span></div><div class=\"line\">        ssh root@$host $1</div><div class=\"line\">    done</div><div class=\"line\">fi</div><div class=\"line\"><span class=\"comment\"># 将集群中所有节点IP地址(包括本机)都加入这个主机列表数组</span></div><div class=\"line\">[root@80e54d87 ~]<span class=\"comment\"># vim sshtrust.sh</span></div><div class=\"line\">HOSTS=(<span class=\"string\">\"172.18.71.101\"</span> <span class=\"string\">\"172.18.71.102\"</span> <span class=\"string\">\"172.18.71.103\"</span> <span class=\"string\">\"172.18.71.130\"</span>)</div><div class=\"line\"><span class=\"comment\"># 分发密钥, 两两节点间均建立主机信任.</span></div><div class=\"line\">[root@80e54d87 ~]<span class=\"comment\"># bash sshtrust.sh --key</span></div><div class=\"line\">Generating public/private rsa key pair.</div><div class=\"line\">Created directory <span class=\"string\">'/root/.ssh'</span>.</div><div class=\"line\">Your identification has been saved <span class=\"keyword\">in</span> /root/.ssh/id_rsa.</div><div class=\"line\">Your public key has been saved <span class=\"keyword\">in</span> /root/.ssh/id_rsa.pub.</div><div class=\"line\">The key fingerprint <span class=\"symbol\">is:</span></div><div class=\"line\"><span class=\"number\">02</span><span class=\"symbol\">:de</span><span class=\"symbol\">:f2</span><span class=\"symbol\">:</span><span class=\"number\">86</span><span class=\"symbol\">:</span><span class=\"number\">5</span><span class=\"symbol\">b:</span><span class=\"number\">4</span><span class=\"symbol\">b:</span><span class=\"number\">3</span><span class=\"symbol\">d:</span><span class=\"number\">2</span><span class=\"symbol\">b:</span><span class=\"number\">70</span><span class=\"symbol\">:cc</span><span class=\"symbol\">:</span><span class=\"number\">1</span><span class=\"symbol\">c:</span><span class=\"symbol\">c9:</span><span class=\"symbol\">d2:</span><span class=\"number\">65</span><span class=\"symbol\">:</span><span class=\"number\">5</span><span class=\"symbol\">d:</span>0b root@80e54d87.twoyang.com</div><div class=\"line\">The key<span class=\"string\">'s randomart image is:</span></div><div class=\"line\">+--[ RSA 2048]----+</div><div class=\"line\">|         .E..    |</div><div class=\"line\">|        o .. .   |</div><div class=\"line\">|    .o +    .    |</div><div class=\"line\">|   ..o=          |</div><div class=\"line\">|    o=o.S        |</div><div class=\"line\">|    .+=o         |</div><div class=\"line\">|    .o= o        |</div><div class=\"line\">|     =.. o       |</div><div class=\"line\">|    . ...        |</div><div class=\"line\">+-----------------+</div><div class=\"line\">The authenticity of host '<span class=\"number\">172.18</span>.<span class=\"number\">71.101</span> (<span class=\"number\">172.18</span>.<span class=\"number\">71.101</span>)<span class=\"string\">' can'</span>t be established.</div><div class=\"line\">ECDSA key fingerprint is <span class=\"number\">2</span><span class=\"symbol\">d:</span><span class=\"number\">37</span><span class=\"symbol\">:</span><span class=\"number\">94</span><span class=\"symbol\">:</span><span class=\"number\">8</span><span class=\"symbol\">b:</span><span class=\"number\">81</span><span class=\"symbol\">:ea</span><span class=\"symbol\">:</span><span class=\"number\">57</span><span class=\"symbol\">:bc</span><span class=\"symbol\">:</span><span class=\"number\">93</span><span class=\"symbol\">:</span><span class=\"number\">18</span><span class=\"symbol\">:</span><span class=\"number\">44</span><span class=\"symbol\">:d6</span><span class=\"symbol\">:f6</span><span class=\"symbol\">:</span><span class=\"number\">97</span><span class=\"symbol\">:</span><span class=\"number\">6</span><span class=\"symbol\">c:</span><span class=\"number\">5</span>b.</div><div class=\"line\">Are you sure you want to continue connecting (yes/no)? yes</div><div class=\"line\"><span class=\"symbol\">Warning:</span> Permanently added <span class=\"string\">'172.18.71.101'</span> (ECDSA) to the list of known hosts.</div><div class=\"line\">The authenticity of host <span class=\"string\">'172.18.71.102 (172.18.71.102)'</span> can<span class=\"string\">'t be established.</span></div><div class=\"line\">ECDSA key fingerprint is 07:d0:4c:77:32:95:bc:df:8b:c1:b0:41:d6:af:66:59.</div><div class=\"line\">Are you sure you want to continue connecting (yes/no)? yes</div><div class=\"line\">Warning: Permanently added '<span class=\"number\">172.18</span>.<span class=\"number\">71.102</span><span class=\"string\">' (ECDSA) to the list of known hosts.</span></div><div class=\"line\">root@172.18.71.102's <span class=\"symbol\">password:</span> </div><div class=\"line\">root@172.<span class=\"number\">18.71</span>.<span class=\"number\">102</span><span class=\"string\">'s password: </span></div><div class=\"line\">id_rsa                                                                        100% 1679     1.6KB/s   00:00    </div><div class=\"line\">authorized_keys                                                               100%  407     0.4KB/s   00:00    </div><div class=\"line\">The authenticity of host '<span class=\"number\">172.18</span>.<span class=\"number\">71.103</span> (<span class=\"number\">172.18</span>.<span class=\"number\">71.103</span>)<span class=\"string\">' can'</span>t be established.</div><div class=\"line\">ECDSA key fingerprint is <span class=\"symbol\">e5:</span><span class=\"number\">49</span><span class=\"symbol\">:</span><span class=\"number\">95</span><span class=\"symbol\">:</span>0<span class=\"symbol\">f:</span><span class=\"number\">18</span><span class=\"symbol\">:ac</span><span class=\"symbol\">:e8</span><span class=\"symbol\">:e3</span><span class=\"symbol\">:</span><span class=\"number\">22</span><span class=\"symbol\">:</span><span class=\"number\">6</span><span class=\"symbol\">a:</span><span class=\"number\">7</span><span class=\"symbol\">e:</span>09<span class=\"symbol\">:ae</span><span class=\"symbol\">:f9</span><span class=\"symbol\">:</span><span class=\"number\">61</span><span class=\"symbol\">:</span><span class=\"number\">55</span>.</div><div class=\"line\">Are you sure you want to continue connecting (yes/no)? yes</div><div class=\"line\"><span class=\"symbol\">Warning:</span> Permanently added <span class=\"string\">'172.18.71.103'</span> (ECDSA) to the list of known hosts.</div><div class=\"line\">root@172.<span class=\"number\">18.71</span>.<span class=\"number\">103</span><span class=\"string\">'s password: </span></div><div class=\"line\">root@172.18.71.103's <span class=\"symbol\">password:</span> </div><div class=\"line\">id_rsa                                                                        <span class=\"number\">100</span>% <span class=\"number\">1679</span>     <span class=\"number\">1.6</span>KB/s   <span class=\"number\">00</span><span class=\"symbol\">:</span><span class=\"number\">00</span>    </div><div class=\"line\">authorized_keys                                                               <span class=\"number\">100</span>%  <span class=\"number\">407</span>     <span class=\"number\">0</span>.<span class=\"number\">4</span>KB/s   <span class=\"number\">00</span><span class=\"symbol\">:</span><span class=\"number\">00</span>    </div><div class=\"line\">The authenticity of host <span class=\"string\">'172.18.71.130 (172.18.71.130)'</span> can<span class=\"string\">'t be established.</span></div><div class=\"line\">ECDSA key fingerprint is 6d:01:30:42:82:4a:ae:5a:ec:7e:62:7c:7e:31:64:b9.</div><div class=\"line\">Are you sure you want to continue connecting (yes/no)? yes</div><div class=\"line\">Warning: Permanently added '<span class=\"number\">172.18</span>.<span class=\"number\">71.130</span><span class=\"string\">' (ECDSA) to the list of known hosts.</span></div><div class=\"line\">root@172.18.71.130's <span class=\"symbol\">password:</span> </div><div class=\"line\">root@172.<span class=\"number\">18.71</span>.<span class=\"number\">130</span><span class=\"string\">'s password: </span></div><div class=\"line\">id_rsa                                                                        100% 1679     1.6KB/s   00:00    </div><div class=\"line\">authorized_keys                                                               100%  407     </div><div class=\"line\">0.4KB/s   00:00</div><div class=\"line\"># 同步时间</div><div class=\"line\">[root@80e54d87 ~]# bash sshtrust.sh \"ntpdate 172.18.0.1\"</div><div class=\"line\"> 6 Jun 20:55:36 ntpdate[3354]: step time server 172.18.0.1 offset 2644756.261973 sec</div><div class=\"line\"> 6 Jun 20:53:30 ntpdate[11248]: step time server 172.18.0.1 offset 2640569.256399 sec</div><div class=\"line\"> 6 Jun 20:53:36 ntpdate[40408]: step time server 172.18.0.1 offset -2.854146 sec</div><div class=\"line\"> 6 Jun 20:53:42 ntpdate[3457]: step time server 172.18.0.1 offset 3975759.234646 sec</div><div class=\"line\">[root@80e54d87 ~]# bash sshtrust.sh \"hwclock --systohc\"</div><div class=\"line\">[root@80e54d87 ~]# bash sshtrust.sh date</div><div class=\"line\">Mon Jun  6 20:56:25 CST 2016</div><div class=\"line\">Mon Jun  6 20:56:25 CST 2016</div><div class=\"line\">Mon Jun  6 20:56:25 CST 2016</div><div class=\"line\">Mon Jun  6 20:56:25 CST 2016</div><div class=\"line\"># 因为MHA在cenots官方yum源中没有提供, 所以从Google Driver上下载下来做成了yum源.</div><div class=\"line\">[root@80e54d87 ~]# bash sshtrust.sh \"yum-config-manager --add-repo=http://172.18.71.254/templates/twoyang-c7.repo\"</div><div class=\"line\">Loaded plugins: fastestmirror, langpacks</div><div class=\"line\">adding repo from: http://172.18.71.254/templates/twoyang-c7.repo</div><div class=\"line\">grabbing file http://172.18.71.254/templates/twoyang-c7.repo to /etc/yum.repos.d/twoyang-c7.repo</div><div class=\"line\">repo saved to /etc/yum.repos.d/twoyang-c7.repo</div><div class=\"line\">Loaded plugins: fastestmirror, langpacks</div><div class=\"line\">adding repo from: http://172.18.71.254/templates/twoyang-c7.repo</div><div class=\"line\">grabbing file http://172.18.71.254/templates/twoyang-c7.repo to /etc/yum.repos.d/twoyang-c7.repo</div><div class=\"line\">repo saved to /etc/yum.repos.d/twoyang-c7.repo</div><div class=\"line\">Loaded plugins: fastestmirror, langpacks</div><div class=\"line\">adding repo from: http://172.18.71.254/templates/twoyang-c7.repo</div><div class=\"line\">grabbing file http://172.18.71.254/templates/twoyang-c7.repo to /etc/yum.repos.d/twoyang-c7.repo</div><div class=\"line\">repo saved to /etc/yum.repos.d/twoyang-c7.repo</div><div class=\"line\">Loaded plugins: fastestmirror, langpacks</div><div class=\"line\">adding repo from: http://172.18.71.254/templates/twoyang-c7.repo</div><div class=\"line\">grabbing file http://172.18.71.254/templates/twoyang-c7.repo to /etc/yum.repos.d/twoyang-c7.repo</div><div class=\"line\">repo saved to /etc/yum.repos.d/twoyang-c7.repo</div></pre></td></tr></table></figure>\n<h1 id=\"安装配置MHA\"><a href=\"#安装配置MHA\" class=\"headerlink\" title=\"安装配置MHA\"></a>安装配置MHA</h1><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># 集群内所有节点(包括管理节点)需要安装Node包</span></div><div class=\"line\">[root@80e54d87 ~]# bash sshtrust.sh <span class=\"string\">\"yum install -y mha4mysql-node.noarch\"</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># HostD作为MHA管理节点需要安装Manager包</span></div><div class=\"line\">[root@1478a474 ~]# yum install -y mha4mysql-manager.noarch</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 默认是没有配置文件, 自己建立目录和配置文件.</span></div><div class=\"line\">[root@1478a474 ~]# mkdir /etc/masterha</div><div class=\"line\">[root@1478a474 ~]# vim /etc/masterha/app1.cnf</div><div class=\"line\">[server default]</div><div class=\"line\"><span class=\"attribute\">user</span>=mha\t#  被控节点授权给管理节点SUPER权限的用户</div><div class=\"line\"><span class=\"attribute\">password</span>=magedu\t#  被控节点授权给管理节点SUPER权限用户的口令</div><div class=\"line\"><span class=\"attribute\">manager_workdir</span>=/data/masterha/app1\t# 管理节点的工作目录, 会自动建立.</div><div class=\"line\"><span class=\"attribute\">manager_log</span>=/data/masterha/app1/manager.log\t# 管理节点的日志</div><div class=\"line\"><span class=\"attribute\">remote_workdir</span>=/data/masterha/app1 # 被控节点的工作目录, 会自动建立.</div><div class=\"line\"><span class=\"attribute\">ssh_user</span>=root\t# 被控节点的ssh用户</div><div class=\"line\"><span class=\"attribute\">repl_user</span>=repl\t# 用于数据库复制的用户</div><div class=\"line\"><span class=\"attribute\">repl_password</span>=magedu # 用于数据库复制的用户的口令</div><div class=\"line\"><span class=\"attribute\">ping_interval</span>=1 # 被控节点的健康检查时间间隔</div><div class=\"line\"></div><div class=\"line\">[server1]</div><div class=\"line\"><span class=\"attribute\">hostname</span>=172.18.71.101</div><div class=\"line\"><span class=\"attribute\">candidate_master</span>=1\t# 作为主节点候选</div><div class=\"line\"></div><div class=\"line\">[server2]</div><div class=\"line\"><span class=\"attribute\">hostname</span>=172.18.71.102</div><div class=\"line\"><span class=\"attribute\">candidate_master</span>=1</div><div class=\"line\"></div><div class=\"line\">[server3]</div><div class=\"line\"><span class=\"attribute\">hostname</span>=172.18.71.103</div><div class=\"line\"><span class=\"attribute\">no_master</span>=1\t# 永远不作为主节点</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 用mha提供的脚本做主机信任检查.</span></div><div class=\"line\">[root@1478a474 ~]# masterha_check_ssh <span class=\"attribute\">--conf</span>=/etc/masterha/app1.cnf</div><div class=\"line\">Mon Jun  6 22:12:23 2016 - [<span class=\"builtin-name\">warning</span>] Global configuration file /etc/masterha_default.cnf <span class=\"keyword\">not</span> found. Skipping.</div><div class=\"line\">Mon Jun  6 22:12:23 2016 - [<span class=\"builtin-name\">info</span>] Reading application<span class=\"built_in\"> default </span>configuration <span class=\"keyword\">from</span> /etc/masterha/app1.cnf<span class=\"built_in\">..</span></div><div class=\"line\">Mon Jun  6 22:12:23 2016 - [<span class=\"builtin-name\">info</span>] Reading<span class=\"built_in\"> server </span>configuration <span class=\"keyword\">from</span> /etc/masterha/app1.cnf<span class=\"built_in\">..</span></div><div class=\"line\">Mon Jun  6 22:12:23 2016 - [<span class=\"builtin-name\">info</span>] Starting SSH<span class=\"built_in\"> connection </span>tests<span class=\"built_in\">..</span></div><div class=\"line\">Mon Jun  6 22:12:24 2016 - [<span class=\"builtin-name\">debug</span>] </div><div class=\"line\">Mon Jun  6 22:12:24 2016 - [<span class=\"builtin-name\">info</span>] All SSH<span class=\"built_in\"> connection </span>tests passed successfully.</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 用mha提供的脚本做数据库复制检查.</span></div><div class=\"line\">[root@1478a474 ~]# masterha_check_repl <span class=\"attribute\">--conf</span>=/etc/masterha/app1.cnf</div><div class=\"line\">Mon Jun  6 22:19:40 2016 - [<span class=\"builtin-name\">warning</span>] Global configuration file /etc/masterha_default.cnf <span class=\"keyword\">not</span> found. Skipping.</div><div class=\"line\">Mon Jun  6 22:19:40 2016 - [<span class=\"builtin-name\">info</span>] Reading application<span class=\"built_in\"> default </span>configuration <span class=\"keyword\">from</span> /etc/masterha/app1.cnf<span class=\"built_in\">..</span></div><div class=\"line\">Mon Jun  6 22:19:40 2016 - [<span class=\"builtin-name\">info</span>] Reading<span class=\"built_in\"> server </span>configuration <span class=\"keyword\">from</span> /etc/masterha/app1.cnf<span class=\"built_in\">..</span></div><div class=\"line\">Mon Jun  6 22:19:40 2016 - [<span class=\"builtin-name\">info</span>] MHA::MasterMonitor version 0.57.</div><div class=\"line\">Mon Jun  6 22:19:40 2016 - [<span class=\"builtin-name\">info</span>] GTID failover mode = 0</div><div class=\"line\">Mon Jun  6 22:19:40 2016 - [<span class=\"builtin-name\">info</span>] Dead Servers:</div><div class=\"line\">Mon Jun  6 22:19:40 2016 - [<span class=\"builtin-name\">info</span>] Alive Servers:</div><div class=\"line\">Mon Jun  6 22:19:40 2016 - [<span class=\"builtin-name\">info</span>]   172.18.71.101(172.18.71.101:3306)</div><div class=\"line\">Mon Jun  6 22:19:40 2016 - [<span class=\"builtin-name\">info</span>]   172.18.71.102(172.18.71.102:3306)</div><div class=\"line\">Mon Jun  6 22:19:40 2016 - [<span class=\"builtin-name\">info</span>]   172.18.71.103(172.18.71.103:3306)</div><div class=\"line\">Mon Jun  6 22:19:40 2016 - [<span class=\"builtin-name\">info</span>] Alive Slaves:</div><div class=\"line\">Mon Jun  6 22:19:40 2016 - [<span class=\"builtin-name\">info</span>]   172.18.71.102(172.18.71.102:3306)  <span class=\"attribute\">Version</span>=5.5.44-MariaDB-log (oldest major version between slaves) log-bin:enabled</div><div class=\"line\">Mon Jun  6 22:19:40 2016 - [<span class=\"builtin-name\">info</span>]     Replicating <span class=\"keyword\">from</span> 172.18.71.101(172.18.71.101:3306)</div><div class=\"line\">Mon Jun  6 22:19:40 2016 - [<span class=\"builtin-name\">info</span>]     Primary candidate <span class=\"keyword\">for</span> the new Master (candidate_master is set)</div><div class=\"line\">Mon Jun  6 22:19:40 2016 - [<span class=\"builtin-name\">info</span>]   172.18.71.103(172.18.71.103:3306)  <span class=\"attribute\">Version</span>=5.5.44-MariaDB-log (oldest major version between slaves) log-bin:enabled</div><div class=\"line\">Mon Jun  6 22:19:40 2016 - [<span class=\"builtin-name\">info</span>]     Replicating <span class=\"keyword\">from</span> 172.18.71.101(172.18.71.101:3306)</div><div class=\"line\">Mon Jun  6 22:19:40 2016 - [<span class=\"builtin-name\">info</span>]     <span class=\"keyword\">Not</span> candidate <span class=\"keyword\">for</span> the new Master (no_master is set)</div><div class=\"line\">Mon Jun  6 22:19:40 2016 - [<span class=\"builtin-name\">info</span>] Current Alive Master: 172.18.71.101(172.18.71.101:3306)</div><div class=\"line\">Mon Jun  6 22:19:40 2016 - [<span class=\"builtin-name\">info</span>] Checking slave configurations<span class=\"built_in\">..</span></div><div class=\"line\">Mon Jun  6 22:19:40 2016 - [<span class=\"builtin-name\">info</span>] Checking replication filtering settings<span class=\"built_in\">..</span></div><div class=\"line\">Mon Jun  6 22:19:40 2016 - [<span class=\"builtin-name\">info</span>]  binlog_do_db= , binlog_ignore_db= </div><div class=\"line\">Mon Jun  6 22:19:40 2016 - [<span class=\"builtin-name\">info</span>]  Replication filtering check ok.</div><div class=\"line\">Mon Jun  6 22:19:40 2016 - [<span class=\"builtin-name\">info</span>] GTID (with auto-pos) is <span class=\"keyword\">not</span> supported</div><div class=\"line\">Mon Jun  6 22:19:40 2016 - [<span class=\"builtin-name\">info</span>] Starting SSH<span class=\"built_in\"> connection </span>tests<span class=\"built_in\">..</span></div><div class=\"line\">Mon Jun  6 22:19:42 2016 - [<span class=\"builtin-name\">info</span>] All SSH<span class=\"built_in\"> connection </span>tests passed successfully.</div><div class=\"line\">Mon Jun  6 22:19:42 2016 - [<span class=\"builtin-name\">info</span>] Checking MHA Node version<span class=\"built_in\">..</span></div><div class=\"line\">Mon Jun  6 22:19:42 2016 - [<span class=\"builtin-name\">info</span>]  Version check ok.</div><div class=\"line\">Mon Jun  6 22:19:42 2016 - [<span class=\"builtin-name\">info</span>] Checking SSH publickey authentication<span class=\"built_in\"> settings </span>on the current master<span class=\"built_in\">..</span></div><div class=\"line\">Mon Jun  6 22:19:43 2016 - [<span class=\"builtin-name\">info</span>] HealthCheck: SSH <span class=\"keyword\">to</span> 172.18.71.101 is reachable.</div><div class=\"line\">Mon Jun  6 22:19:43 2016 - [<span class=\"builtin-name\">info</span>] Master MHA Node version is 0.57.</div><div class=\"line\">Mon Jun  6 22:19:43 2016 - [<span class=\"builtin-name\">info</span>] Checking recovery<span class=\"built_in\"> script </span>configurations on 172.18.71.101(172.18.71.101:3306)<span class=\"built_in\">..</span></div><div class=\"line\">Mon Jun  6 22:19:43 2016 - [<span class=\"builtin-name\">info</span>]   Executing command: save_binary_logs <span class=\"attribute\">--command</span>=test <span class=\"attribute\">--start_pos</span>=4 <span class=\"attribute\">--binlog_dir</span>=/var/lib/mysql,/var/log/mysql <span class=\"attribute\">--output_file</span>=/data/masterha/app1/save_binary_logs_test <span class=\"attribute\">--manager_version</span>=0.57 <span class=\"attribute\">--start_file</span>=master-binlog.000003 </div><div class=\"line\">Mon Jun  6 22:19:43 2016 - [<span class=\"builtin-name\">info</span>]   Connecting <span class=\"keyword\">to</span> root@172.18.71.101(172.18.71.101:22)<span class=\"built_in\">..</span> </div><div class=\"line\">  Creating /data/masterha/app1 <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> exists<span class=\"built_in\">..</span> Creating directory /data/masterha/app1<span class=\"built_in\">..</span> done.</div><div class=\"line\">   ok.</div><div class=\"line\">  Checking output directory is accessible <span class=\"keyword\">or</span> <span class=\"keyword\">not</span><span class=\"built_in\">..</span></div><div class=\"line\">   ok.</div><div class=\"line\">  Binlog found at /var/lib/mysql, up <span class=\"keyword\">to</span> master-binlog.000003</div><div class=\"line\">Mon Jun  6 22:19:43 2016 - [<span class=\"builtin-name\">info</span>] Binlog setting check done.</div><div class=\"line\">Mon Jun  6 22:19:43 2016 - [<span class=\"builtin-name\">info</span>] Checking SSH publickey authentication <span class=\"keyword\">and</span> checking recovery<span class=\"built_in\"> script </span>configurations on all alive slave servers<span class=\"built_in\">..</span></div><div class=\"line\">Mon Jun  6 22:19:43 2016 - [<span class=\"builtin-name\">info</span>]   Executing command : apply_diff_relay_logs <span class=\"attribute\">--command</span>=test <span class=\"attribute\">--slave_user</span>=<span class=\"string\">'mha'</span> <span class=\"attribute\">--slave_host</span>=172.18.71.102 <span class=\"attribute\">--slave_ip</span>=172.18.71.102 <span class=\"attribute\">--slave_port</span>=3306 <span class=\"attribute\">--workdir</span>=/data/masterha/app1 <span class=\"attribute\">--target_version</span>=5.5.44-MariaDB-log <span class=\"attribute\">--manager_version</span>=0.57 <span class=\"attribute\">--relay_log_info</span>=/var/lib/mysql/relay-log.info  <span class=\"attribute\">--relay_dir</span>=/var/lib/mysql/  <span class=\"attribute\">--slave_pass</span>=xxx</div><div class=\"line\">Mon Jun  6 22:19:43 2016 - [<span class=\"builtin-name\">info</span>]   Connecting <span class=\"keyword\">to</span> root@172.18.71.102(172.18.71.102:22)<span class=\"built_in\">..</span> </div><div class=\"line\">Creating directory /data/masterha/app1<span class=\"built_in\">..</span> done.</div><div class=\"line\">  Checking slave recovery environment settings<span class=\"built_in\">..</span></div><div class=\"line\">    Opening /var/lib/mysql/relay-log.<span class=\"builtin-name\">info</span> <span class=\"built_in\">..</span>. ok.</div><div class=\"line\">    Relay log found at /var/lib/mysql, up <span class=\"keyword\">to</span> relaylog.000006</div><div class=\"line\">    Temporary relay log file is /var/lib/mysql/relaylog.000006</div><div class=\"line\">    Testing mysql<span class=\"built_in\"> connection </span><span class=\"keyword\">and</span> privileges<span class=\"built_in\">..</span> done.</div><div class=\"line\">    Testing mysqlbinlog output<span class=\"built_in\">..</span> done.</div><div class=\"line\">    Cleaning up test file(s)<span class=\"built_in\">..</span> done.</div><div class=\"line\">Mon Jun  6 22:19:43 2016 - [<span class=\"builtin-name\">info</span>]   Executing command : apply_diff_relay_logs <span class=\"attribute\">--command</span>=test <span class=\"attribute\">--slave_user</span>=<span class=\"string\">'mha'</span> <span class=\"attribute\">--slave_host</span>=172.18.71.103 <span class=\"attribute\">--slave_ip</span>=172.18.71.103 <span class=\"attribute\">--slave_port</span>=3306 <span class=\"attribute\">--workdir</span>=/data/masterha/app1 <span class=\"attribute\">--target_version</span>=5.5.44-MariaDB-log <span class=\"attribute\">--manager_version</span>=0.57 <span class=\"attribute\">--relay_log_info</span>=/var/lib/mysql/relay-log.info  <span class=\"attribute\">--relay_dir</span>=/var/lib/mysql/  <span class=\"attribute\">--slave_pass</span>=xxx</div><div class=\"line\">Mon Jun  6 22:19:43 2016 - [<span class=\"builtin-name\">info</span>]   Connecting <span class=\"keyword\">to</span> root@172.18.71.103(172.18.71.103:22)<span class=\"built_in\">..</span> </div><div class=\"line\">Creating directory /data/masterha/app1<span class=\"built_in\">..</span> done.</div><div class=\"line\">  Checking slave recovery environment settings<span class=\"built_in\">..</span></div><div class=\"line\">    Opening /var/lib/mysql/relay-log.<span class=\"builtin-name\">info</span> <span class=\"built_in\">..</span>. ok.</div><div class=\"line\">    Relay log found at /var/lib/mysql, up <span class=\"keyword\">to</span> relaylog.000004</div><div class=\"line\">    Temporary relay log file is /var/lib/mysql/relaylog.000004</div><div class=\"line\">    Testing mysql<span class=\"built_in\"> connection </span><span class=\"keyword\">and</span> privileges<span class=\"built_in\">..</span> done.</div><div class=\"line\">    Testing mysqlbinlog output<span class=\"built_in\">..</span> done.</div><div class=\"line\">    Cleaning up test file(s)<span class=\"built_in\">..</span> done.</div><div class=\"line\">Mon Jun  6 22:19:43 2016 - [<span class=\"builtin-name\">info</span>] Slaves<span class=\"built_in\"> settings </span>check done.</div><div class=\"line\">Mon Jun  6 22:19:43 2016 - [<span class=\"builtin-name\">info</span>] </div><div class=\"line\">172.18.71.101(172.18.71.101:3306) (current master)</div><div class=\"line\"> +--172.18.71.102(172.18.71.102:3306)</div><div class=\"line\"> +--172.18.71.103(172.18.71.103:3306)</div><div class=\"line\"></div><div class=\"line\">Mon Jun  6 22:19:43 2016 - [<span class=\"builtin-name\">info</span>] Checking replication<span class=\"built_in\"> health </span>on 172.18.71.102<span class=\"built_in\">..</span></div><div class=\"line\">Mon Jun  6 22:19:43 2016 - [<span class=\"builtin-name\">info</span>]  ok.</div><div class=\"line\">Mon Jun  6 22:19:43 2016 - [<span class=\"builtin-name\">info</span>] Checking replication<span class=\"built_in\"> health </span>on 172.18.71.103<span class=\"built_in\">..</span></div><div class=\"line\">Mon Jun  6 22:19:43 2016 - [<span class=\"builtin-name\">info</span>]  ok.</div><div class=\"line\"><span class=\"comment\"># 这里已经提示了没有定义主节点故障VIP如何漂移的脚本.</span></div><div class=\"line\">Mon Jun  6 22:19:43 2016 - [<span class=\"builtin-name\">warning</span>] master_ip_failover_script is <span class=\"keyword\">not</span> defined.</div><div class=\"line\"><span class=\"comment\"># 也没有定义STONITH脚本, 以防止集群脑裂.</span></div><div class=\"line\">Mon Jun  6 22:19:43 2016 - [<span class=\"builtin-name\">warning</span>] shutdown_script is <span class=\"keyword\">not</span> defined.</div><div class=\"line\">Mon Jun  6 22:19:43 2016 - [<span class=\"builtin-name\">info</span>] Got exit code 0 (<span class=\"keyword\">Not</span> master dead).</div><div class=\"line\"></div><div class=\"line\">MySQL Replication<span class=\"built_in\"> Health </span>is OK.</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 测试通过就可以启动MHA了</span></div><div class=\"line\">[root@1478a474 ~]# nohup masterha_manager <span class=\"attribute\">--conf</span>=/etc/masterha/app1.cnf &amp;&gt; /data/masterha/app1/manager.log &amp;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 查看状态</span></div><div class=\"line\">[root@1478a474 ~]# masterha_check_status <span class=\"attribute\">--conf</span>=/etc/masterha/app1.cnf</div><div class=\"line\">app1 (pid:30255) is running(0:PING_OK), master:172.18.71.101</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 如需停止MHA, 执行以下命令.</span></div><div class=\"line\">[root@1478a474 ~]# masterha_stop <span class=\"attribute\">--conf</span>=/etc/masterha/app1.cnf</div><div class=\"line\">Stopped app1 successfully.</div><div class=\"line\">[1]+  Exit 1                  nohup masterha_manager <span class=\"attribute\">--conf</span>=/etc/masterha/app1.cnf &amp;&gt;/data/masterha/app1/manager.log</div></pre></td></tr></table></figure>\n<h1 id=\"测试验证\"><a href=\"#测试验证\" class=\"headerlink\" title=\"测试验证\"></a>测试验证</h1><p>关闭HostA(Master)的mariadb服务, 期望MHA能够检测到HostA故障, 将HostB提升为Master.</p>\n<figure class=\"highlight x86asm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 杀死HostA上的mysqld和mysqld_safe进程</div><div class=\"line\">[root@80e54d87 ~]# killall -<span class=\"number\">9</span> mysqld mysqld_safe</div><div class=\"line\"></div><div class=\"line\"># 查看MHA的日志, 可以看到故障转移报告.</div><div class=\"line\">[root@1478a474 ~]# less /data/masterha/app1/manager.log</div><div class=\"line\">...</div><div class=\"line\">----- Failover Report -----</div><div class=\"line\"><span class=\"symbol\"></span></div><div class=\"line\">app1: MySQL Master failover <span class=\"number\">172.18</span><span class=\"meta\">.71</span><span class=\"meta\">.101</span>(<span class=\"number\">172.18</span><span class=\"meta\">.71</span><span class=\"meta\">.101</span>:<span class=\"number\">3306</span>) to <span class=\"number\">172.18</span><span class=\"meta\">.71</span><span class=\"meta\">.102</span>(<span class=\"number\">172.18</span><span class=\"meta\">.71</span><span class=\"meta\">.102</span>:<span class=\"number\">3306</span>) succeeded</div><div class=\"line\"></div><div class=\"line\">Master <span class=\"number\">172.18</span><span class=\"meta\">.71</span><span class=\"meta\">.101</span>(<span class=\"number\">172.18</span><span class=\"meta\">.71</span><span class=\"meta\">.101</span>:<span class=\"number\">3306</span>) is <span class=\"meta\">down</span>!</div><div class=\"line\"></div><div class=\"line\">Check MHA Manager logs <span class=\"meta\">at</span> 1478a474.twoyang.com:/data/masterha/app1/manager.log for details.</div><div class=\"line\"></div><div class=\"line\">Started automated(non-interactive) failover.</div><div class=\"line\">The latest slave <span class=\"number\">172.18</span><span class=\"meta\">.71</span><span class=\"meta\">.102</span>(<span class=\"number\">172.18</span><span class=\"meta\">.71</span><span class=\"meta\">.102</span>:<span class=\"number\">3306</span>) has all relay logs for recovery.</div><div class=\"line\">Selected <span class=\"number\">172.18</span><span class=\"meta\">.71</span><span class=\"meta\">.102</span>(<span class=\"number\">172.18</span><span class=\"meta\">.71</span><span class=\"meta\">.102</span>:<span class=\"number\">3306</span>) as a new master.</div><div class=\"line\"><span class=\"number\">172.18</span><span class=\"meta\">.71</span><span class=\"meta\">.102</span>(<span class=\"number\">172.18</span><span class=\"meta\">.71</span><span class=\"meta\">.102</span>:<span class=\"number\">3306</span>): OK: Applying all logs succeeded.</div><div class=\"line\"><span class=\"number\">172.18</span><span class=\"meta\">.71</span><span class=\"meta\">.103</span>(<span class=\"number\">172.18</span><span class=\"meta\">.71</span><span class=\"meta\">.103</span>:<span class=\"number\">3306</span>): This host has the latest relay log events.</div><div class=\"line\">Generating relay diff files from the latest slave succeeded.</div><div class=\"line\"><span class=\"number\">172.18</span><span class=\"meta\">.71</span><span class=\"meta\">.103</span>(<span class=\"number\">172.18</span><span class=\"meta\">.71</span><span class=\"meta\">.103</span>:<span class=\"number\">3306</span>): OK: Applying all logs succeeded. Slave started, replicating from <span class=\"number\">172.18</span><span class=\"meta\">.71</span><span class=\"meta\">.102</span>(<span class=\"number\">172.18</span><span class=\"meta\">.71</span><span class=\"meta\">.102</span>:<span class=\"number\">3306</span>)</div><div class=\"line\"><span class=\"number\">172.18</span><span class=\"meta\">.71</span><span class=\"meta\">.102</span>(<span class=\"number\">172.18</span><span class=\"meta\">.71</span><span class=\"meta\">.102</span>:<span class=\"number\">3306</span>): Resetting slave info succeeded.</div><div class=\"line\">Master failover to <span class=\"number\">172.18</span><span class=\"meta\">.71</span><span class=\"meta\">.102</span>(<span class=\"number\">172.18</span><span class=\"meta\">.71</span><span class=\"meta\">.102</span>:<span class=\"number\">3306</span>) completed successfully.</div><div class=\"line\"></div><div class=\"line\"># 再看另一个从节点HostC上, MHA已经将其主节点由HostA修改为了HostB了.</div><div class=\"line\">MariaDB [(none)]&gt; SHOW SLAVE STATUS\\G</div><div class=\"line\">*************************** <span class=\"number\">1</span>. row ***************************</div><div class=\"line\"><span class=\"symbol\">               Slave_IO_State:</span> Waiting for master to send event</div><div class=\"line\"><span class=\"symbol\">                  Master_Host:</span> <span class=\"number\">172.18</span><span class=\"meta\">.71</span><span class=\"meta\">.102</span></div><div class=\"line\"><span class=\"symbol\">                  Master_User:</span> repl</div><div class=\"line\"><span class=\"symbol\">                  Master_Port:</span> <span class=\"number\">3306</span></div><div class=\"line\"><span class=\"symbol\">                Connect_Retry:</span> <span class=\"number\">60</span></div><div class=\"line\"><span class=\"symbol\">              Master_Log_File:</span> master-binlog<span class=\"meta\">.000001</span></div><div class=\"line\"><span class=\"symbol\">          Read_Master_Log_Pos:</span> <span class=\"number\">245</span></div><div class=\"line\"><span class=\"symbol\">               Relay_Log_File:</span> relaylog<span class=\"meta\">.000002</span></div><div class=\"line\"><span class=\"symbol\">                Relay_Log_Pos:</span> <span class=\"number\">533</span></div><div class=\"line\"><span class=\"symbol\">        Relay_Master_Log_File:</span> master-binlog<span class=\"meta\">.000001</span></div><div class=\"line\"><span class=\"symbol\">             Slave_IO_Running:</span> Yes</div><div class=\"line\"><span class=\"symbol\">            Slave_SQL_Running:</span> Yes</div><div class=\"line\">......</div><div class=\"line\"><span class=\"number\">1</span> row <span class=\"keyword\">in</span> set (<span class=\"number\">0.00</span> sec)</div><div class=\"line\"></div><div class=\"line\"># 注意: 故障转移完成后, MHA将会自动停止进程.</div><div class=\"line\">[root@1478a474 ~]# masterha_check_status --conf=/etc/masterha/app1.cnf</div><div class=\"line\">app1 is stopped(<span class=\"number\">2</span>:NOT_RUNNING).</div></pre></td></tr></table></figure>\n<h1 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h1><p>还有几个问题需要说明一下:</p>\n<ul>\n<li>因为主从异步复制时难免会出现从节点落后主节点的情况, 这样主机点宕机就会出现丢失数据的情况. 所以如果是做半同步复制情况就会好很多.</li>\n<li>这里没有考虑VIP和STONITH的问题, 其实前面用MHA做复制检查时已经警告过我们了. VIP地址漂移的问题可以通过脚本来实现, 也可以通过keepalived来实现. 而STONITH也可以通过脚本来实现, 不过既然是脑裂基本上就是联系不上对方, 那通过脚本来STONITH也就不太靠谱; 想靠谱基本上只有上硬件, 那可就贵了.<br>原文地址：<a href=\"http://twoyang.net/2016/06/06/mariadb%20MHA/\" target=\"_blank\" rel=\"external\">点我</a></li>\n</ul>"},{"title":"IT人士必备网站","abbrlink":"a7331ce9","date":"2016-08-21T08:12:23.000Z","_content":"\n> 我觉得，作为程序员，开发者，运维人员，科学上网应该就像人的尊严一样，没有它，你写代码都会浑身不舒服。 \n\n<!-- more -->\n## Google \n> 不管是新手程序员还是老手程序员，工作和学习过程中都会遇到一些问题，那么遇到问题利用Google 搜索估计是最快解决方案。\n而且Google 的结果，让你很容易解决问题。关键是Google 不做恶，没广告。 \n\n## Github \n> 作为全世界最大的同性交流网站（代码托管平台），上面有各种大牛，作为新手的我只能默默地去撸大牛的代码，期待能和大牛的差距一步步减少。除了学习之外，你也可以利用闲暇的时间来来将自己的开源项目放在上面，从侧面也是对自己的宣传，对找工作也有帮助。\n类似的有国外的Bitbucket，gitcafe，coding.net 等等。 \n\n## StackOverflow \n> 最大的技术问答网站，Google 搜索技术问题，结果很大的比例都来自StackOverflow，而且可能我们折腾好久的问题，大牛的一句话都点中要害。 \n\n## HackNews \n> Hacker News 是一家关于计算机黑客和创业公司的社会化新闻网站，你可以讲自己写的博客或者对一些业界新闻拿出来来讨论。就算自己在上面多看看也是很涨见识的。而且我注意到，国外的很多人的博客都不留评论框，一般写完文章，就会放在HackNews 讨论。国内也有类似的网站。Startup News。 \n\n## InfoQ \n> InfoQ 是一个面对开发的服务网站，而他的自我介绍：促进软件开发领域知识与创新的传播。在上面你会看到很多专业人士分享的专业知识，他们分享的东西，可能是一般开发者很难接触到的。由InfoQ 主办的Qcon，ArchSummit 大会，也是非常值得一去的。 \n\n## V2ex \n> 我觉得V2ex 算是一个程序员吐槽，交流的网站。反正上面由好多好多程序员。而且有个专栏叫《酷工作》，反正由好多求职和招聘的。 \n\n## SegmentFault \n> SegmentFault 是一个面向开发者的技术问答社区，你可以在上面问答，写博客，线下交流活动等等。 \n\n\n## 开源中国 \n> 开源中国是目前中国最大的开源技术社区，为IT 开发者提供了一个发现、使用、并交流开源技术的平台。 \n\n## 技术博客 \n> 我们在学习过程中，很多时候都是看别人的技术博客来成长的，当然技术博客网站由很多。比如CSDN，cnBlogs，51CTO，itEyes 等等。 \n\n## Mooc \n> Mooc 翻译为中文叫做在线网络公开课，Mooc　的愿景是让那些没有机会接受正式教育的人能接受教育，主要做技术的Mooc　也有很多。比如像国外的coursera，edx，udacity，国内由像慕课网，极客学院等等。 \n\n## 开发者服务网站 \n> 这个标题可能叫可能叫的不太准确，\n稀土掘金：挖掘最优质的互联网技术。它主要邀请一些业界比较资深的开发者，作为联合编辑来推荐文章，文章质量有了保证。\n开发者头条：程序员的首选阅读分享平台。\n博乐在线：一个专注于IT互联网的聚合分享站点。\n当然其他的也很多啦，比如像ImportNew，酷勤网等等。 \n\n原文地址：http://tikitoo.me/2015/11/02/developer-website/ ","source":"_posts/2016-08-21-IT必备网站.md","raw":"---\ntitle: IT人士必备网站\ncategories: 技术与干货\ntag: 技术与干货\nabbrlink: a7331ce9\ndate: 2016-08-21 16:12:23\n---\n\n> 我觉得，作为程序员，开发者，运维人员，科学上网应该就像人的尊严一样，没有它，你写代码都会浑身不舒服。 \n\n<!-- more -->\n## Google \n> 不管是新手程序员还是老手程序员，工作和学习过程中都会遇到一些问题，那么遇到问题利用Google 搜索估计是最快解决方案。\n而且Google 的结果，让你很容易解决问题。关键是Google 不做恶，没广告。 \n\n## Github \n> 作为全世界最大的同性交流网站（代码托管平台），上面有各种大牛，作为新手的我只能默默地去撸大牛的代码，期待能和大牛的差距一步步减少。除了学习之外，你也可以利用闲暇的时间来来将自己的开源项目放在上面，从侧面也是对自己的宣传，对找工作也有帮助。\n类似的有国外的Bitbucket，gitcafe，coding.net 等等。 \n\n## StackOverflow \n> 最大的技术问答网站，Google 搜索技术问题，结果很大的比例都来自StackOverflow，而且可能我们折腾好久的问题，大牛的一句话都点中要害。 \n\n## HackNews \n> Hacker News 是一家关于计算机黑客和创业公司的社会化新闻网站，你可以讲自己写的博客或者对一些业界新闻拿出来来讨论。就算自己在上面多看看也是很涨见识的。而且我注意到，国外的很多人的博客都不留评论框，一般写完文章，就会放在HackNews 讨论。国内也有类似的网站。Startup News。 \n\n## InfoQ \n> InfoQ 是一个面对开发的服务网站，而他的自我介绍：促进软件开发领域知识与创新的传播。在上面你会看到很多专业人士分享的专业知识，他们分享的东西，可能是一般开发者很难接触到的。由InfoQ 主办的Qcon，ArchSummit 大会，也是非常值得一去的。 \n\n## V2ex \n> 我觉得V2ex 算是一个程序员吐槽，交流的网站。反正上面由好多好多程序员。而且有个专栏叫《酷工作》，反正由好多求职和招聘的。 \n\n## SegmentFault \n> SegmentFault 是一个面向开发者的技术问答社区，你可以在上面问答，写博客，线下交流活动等等。 \n\n\n## 开源中国 \n> 开源中国是目前中国最大的开源技术社区，为IT 开发者提供了一个发现、使用、并交流开源技术的平台。 \n\n## 技术博客 \n> 我们在学习过程中，很多时候都是看别人的技术博客来成长的，当然技术博客网站由很多。比如CSDN，cnBlogs，51CTO，itEyes 等等。 \n\n## Mooc \n> Mooc 翻译为中文叫做在线网络公开课，Mooc　的愿景是让那些没有机会接受正式教育的人能接受教育，主要做技术的Mooc　也有很多。比如像国外的coursera，edx，udacity，国内由像慕课网，极客学院等等。 \n\n## 开发者服务网站 \n> 这个标题可能叫可能叫的不太准确，\n稀土掘金：挖掘最优质的互联网技术。它主要邀请一些业界比较资深的开发者，作为联合编辑来推荐文章，文章质量有了保证。\n开发者头条：程序员的首选阅读分享平台。\n博乐在线：一个专注于IT互联网的聚合分享站点。\n当然其他的也很多啦，比如像ImportNew，酷勤网等等。 \n\n原文地址：http://tikitoo.me/2015/11/02/developer-website/ ","slug":"2016-08-21-IT必备网站","published":1,"updated":"2017-02-14T13:42:45.411Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5mkehs0001xao94zk37tgm5","content":"<blockquote>\n<p>我觉得，作为程序员，开发者，运维人员，科学上网应该就像人的尊严一样，没有它，你写代码都会浑身不舒服。 </p>\n</blockquote>\n<a id=\"more\"></a>\n<h2 id=\"Google\"><a href=\"#Google\" class=\"headerlink\" title=\"Google\"></a>Google</h2><blockquote>\n<p>不管是新手程序员还是老手程序员，工作和学习过程中都会遇到一些问题，那么遇到问题利用Google 搜索估计是最快解决方案。<br>而且Google 的结果，让你很容易解决问题。关键是Google 不做恶，没广告。 </p>\n</blockquote>\n<h2 id=\"Github\"><a href=\"#Github\" class=\"headerlink\" title=\"Github\"></a>Github</h2><blockquote>\n<p>作为全世界最大的同性交流网站（代码托管平台），上面有各种大牛，作为新手的我只能默默地去撸大牛的代码，期待能和大牛的差距一步步减少。除了学习之外，你也可以利用闲暇的时间来来将自己的开源项目放在上面，从侧面也是对自己的宣传，对找工作也有帮助。<br>类似的有国外的Bitbucket，gitcafe，coding.net 等等。 </p>\n</blockquote>\n<h2 id=\"StackOverflow\"><a href=\"#StackOverflow\" class=\"headerlink\" title=\"StackOverflow\"></a>StackOverflow</h2><blockquote>\n<p>最大的技术问答网站，Google 搜索技术问题，结果很大的比例都来自StackOverflow，而且可能我们折腾好久的问题，大牛的一句话都点中要害。 </p>\n</blockquote>\n<h2 id=\"HackNews\"><a href=\"#HackNews\" class=\"headerlink\" title=\"HackNews\"></a>HackNews</h2><blockquote>\n<p>Hacker News 是一家关于计算机黑客和创业公司的社会化新闻网站，你可以讲自己写的博客或者对一些业界新闻拿出来来讨论。就算自己在上面多看看也是很涨见识的。而且我注意到，国外的很多人的博客都不留评论框，一般写完文章，就会放在HackNews 讨论。国内也有类似的网站。Startup News。 </p>\n</blockquote>\n<h2 id=\"InfoQ\"><a href=\"#InfoQ\" class=\"headerlink\" title=\"InfoQ\"></a>InfoQ</h2><blockquote>\n<p>InfoQ 是一个面对开发的服务网站，而他的自我介绍：促进软件开发领域知识与创新的传播。在上面你会看到很多专业人士分享的专业知识，他们分享的东西，可能是一般开发者很难接触到的。由InfoQ 主办的Qcon，ArchSummit 大会，也是非常值得一去的。 </p>\n</blockquote>\n<h2 id=\"V2ex\"><a href=\"#V2ex\" class=\"headerlink\" title=\"V2ex\"></a>V2ex</h2><blockquote>\n<p>我觉得V2ex 算是一个程序员吐槽，交流的网站。反正上面由好多好多程序员。而且有个专栏叫《酷工作》，反正由好多求职和招聘的。 </p>\n</blockquote>\n<h2 id=\"SegmentFault\"><a href=\"#SegmentFault\" class=\"headerlink\" title=\"SegmentFault\"></a>SegmentFault</h2><blockquote>\n<p>SegmentFault 是一个面向开发者的技术问答社区，你可以在上面问答，写博客，线下交流活动等等。 </p>\n</blockquote>\n<h2 id=\"开源中国\"><a href=\"#开源中国\" class=\"headerlink\" title=\"开源中国\"></a>开源中国</h2><blockquote>\n<p>开源中国是目前中国最大的开源技术社区，为IT 开发者提供了一个发现、使用、并交流开源技术的平台。 </p>\n</blockquote>\n<h2 id=\"技术博客\"><a href=\"#技术博客\" class=\"headerlink\" title=\"技术博客\"></a>技术博客</h2><blockquote>\n<p>我们在学习过程中，很多时候都是看别人的技术博客来成长的，当然技术博客网站由很多。比如CSDN，cnBlogs，51CTO，itEyes 等等。 </p>\n</blockquote>\n<h2 id=\"Mooc\"><a href=\"#Mooc\" class=\"headerlink\" title=\"Mooc\"></a>Mooc</h2><blockquote>\n<p>Mooc 翻译为中文叫做在线网络公开课，Mooc　的愿景是让那些没有机会接受正式教育的人能接受教育，主要做技术的Mooc　也有很多。比如像国外的coursera，edx，udacity，国内由像慕课网，极客学院等等。 </p>\n</blockquote>\n<h2 id=\"开发者服务网站\"><a href=\"#开发者服务网站\" class=\"headerlink\" title=\"开发者服务网站\"></a>开发者服务网站</h2><blockquote>\n<p>这个标题可能叫可能叫的不太准确，<br>稀土掘金：挖掘最优质的互联网技术。它主要邀请一些业界比较资深的开发者，作为联合编辑来推荐文章，文章质量有了保证。<br>开发者头条：程序员的首选阅读分享平台。<br>博乐在线：一个专注于IT互联网的聚合分享站点。<br>当然其他的也很多啦，比如像ImportNew，酷勤网等等。 </p>\n</blockquote>\n<p>原文地址：<a href=\"http://tikitoo.me/2015/11/02/developer-website/\" target=\"_blank\" rel=\"external\">http://tikitoo.me/2015/11/02/developer-website/</a> </p>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>我觉得，作为程序员，开发者，运维人员，科学上网应该就像人的尊严一样，没有它，你写代码都会浑身不舒服。 </p>\n</blockquote>","more":"<h2 id=\"Google\"><a href=\"#Google\" class=\"headerlink\" title=\"Google\"></a>Google</h2><blockquote>\n<p>不管是新手程序员还是老手程序员，工作和学习过程中都会遇到一些问题，那么遇到问题利用Google 搜索估计是最快解决方案。<br>而且Google 的结果，让你很容易解决问题。关键是Google 不做恶，没广告。 </p>\n</blockquote>\n<h2 id=\"Github\"><a href=\"#Github\" class=\"headerlink\" title=\"Github\"></a>Github</h2><blockquote>\n<p>作为全世界最大的同性交流网站（代码托管平台），上面有各种大牛，作为新手的我只能默默地去撸大牛的代码，期待能和大牛的差距一步步减少。除了学习之外，你也可以利用闲暇的时间来来将自己的开源项目放在上面，从侧面也是对自己的宣传，对找工作也有帮助。<br>类似的有国外的Bitbucket，gitcafe，coding.net 等等。 </p>\n</blockquote>\n<h2 id=\"StackOverflow\"><a href=\"#StackOverflow\" class=\"headerlink\" title=\"StackOverflow\"></a>StackOverflow</h2><blockquote>\n<p>最大的技术问答网站，Google 搜索技术问题，结果很大的比例都来自StackOverflow，而且可能我们折腾好久的问题，大牛的一句话都点中要害。 </p>\n</blockquote>\n<h2 id=\"HackNews\"><a href=\"#HackNews\" class=\"headerlink\" title=\"HackNews\"></a>HackNews</h2><blockquote>\n<p>Hacker News 是一家关于计算机黑客和创业公司的社会化新闻网站，你可以讲自己写的博客或者对一些业界新闻拿出来来讨论。就算自己在上面多看看也是很涨见识的。而且我注意到，国外的很多人的博客都不留评论框，一般写完文章，就会放在HackNews 讨论。国内也有类似的网站。Startup News。 </p>\n</blockquote>\n<h2 id=\"InfoQ\"><a href=\"#InfoQ\" class=\"headerlink\" title=\"InfoQ\"></a>InfoQ</h2><blockquote>\n<p>InfoQ 是一个面对开发的服务网站，而他的自我介绍：促进软件开发领域知识与创新的传播。在上面你会看到很多专业人士分享的专业知识，他们分享的东西，可能是一般开发者很难接触到的。由InfoQ 主办的Qcon，ArchSummit 大会，也是非常值得一去的。 </p>\n</blockquote>\n<h2 id=\"V2ex\"><a href=\"#V2ex\" class=\"headerlink\" title=\"V2ex\"></a>V2ex</h2><blockquote>\n<p>我觉得V2ex 算是一个程序员吐槽，交流的网站。反正上面由好多好多程序员。而且有个专栏叫《酷工作》，反正由好多求职和招聘的。 </p>\n</blockquote>\n<h2 id=\"SegmentFault\"><a href=\"#SegmentFault\" class=\"headerlink\" title=\"SegmentFault\"></a>SegmentFault</h2><blockquote>\n<p>SegmentFault 是一个面向开发者的技术问答社区，你可以在上面问答，写博客，线下交流活动等等。 </p>\n</blockquote>\n<h2 id=\"开源中国\"><a href=\"#开源中国\" class=\"headerlink\" title=\"开源中国\"></a>开源中国</h2><blockquote>\n<p>开源中国是目前中国最大的开源技术社区，为IT 开发者提供了一个发现、使用、并交流开源技术的平台。 </p>\n</blockquote>\n<h2 id=\"技术博客\"><a href=\"#技术博客\" class=\"headerlink\" title=\"技术博客\"></a>技术博客</h2><blockquote>\n<p>我们在学习过程中，很多时候都是看别人的技术博客来成长的，当然技术博客网站由很多。比如CSDN，cnBlogs，51CTO，itEyes 等等。 </p>\n</blockquote>\n<h2 id=\"Mooc\"><a href=\"#Mooc\" class=\"headerlink\" title=\"Mooc\"></a>Mooc</h2><blockquote>\n<p>Mooc 翻译为中文叫做在线网络公开课，Mooc　的愿景是让那些没有机会接受正式教育的人能接受教育，主要做技术的Mooc　也有很多。比如像国外的coursera，edx，udacity，国内由像慕课网，极客学院等等。 </p>\n</blockquote>\n<h2 id=\"开发者服务网站\"><a href=\"#开发者服务网站\" class=\"headerlink\" title=\"开发者服务网站\"></a>开发者服务网站</h2><blockquote>\n<p>这个标题可能叫可能叫的不太准确，<br>稀土掘金：挖掘最优质的互联网技术。它主要邀请一些业界比较资深的开发者，作为联合编辑来推荐文章，文章质量有了保证。<br>开发者头条：程序员的首选阅读分享平台。<br>博乐在线：一个专注于IT互联网的聚合分享站点。<br>当然其他的也很多啦，比如像ImportNew，酷勤网等等。 </p>\n</blockquote>\n<p>原文地址：<a href=\"http://tikitoo.me/2015/11/02/developer-website/\" target=\"_blank\" rel=\"external\">http://tikitoo.me/2015/11/02/developer-website/</a> </p>"},{"title":"戴尔R730服务器安装系统","abbrlink":"e11fbde0","date":"2016-09-22T16:00:00.000Z","_content":"\n> 总结下使用PowerEdge R730安装windows server 2012 R2遇到的坑。\n> 科普：PowerEdge服务器生命周期控制器：[Lifecycle Controller](http://zh.community.dell.com/techcenter/w/techcenter_wiki/190.poweredgelifecycle-controller)\n\n<!-- more -->\n\n```\n安装准备：\n系统光盘(刻录到U盘好像不能识别)，Dell引导盘(若没有就用系统光盘好像也可以)\n\n正确步骤：\n\n光驱插入Dell引导盘(或系统光盘)\n开机按F10  --> 选择语言(中文)，键盘类型(默认) --> ip地址(默认) -->初始化完成\n\n进入Lifecycle Controller界面 \n\nstep:1\n如果需要做raid，就在这里做。由于机房管理员已经做好了raid5+1，这里就直接选OS部署\n\nstep:2\n启动模式选择uefi，安全引导选已启用\n为什么？windows server 2012 R2是采用和windows8一样的内核，默认采用uefi启动。\n之前这里一直选BIOS，之后重启就会出错。之前还以为是下的镜像有问题，测试了好几次，才发现是引导模式选错。\n\nstep:3\n选手动部署\n\nstep:4\n插入操作系统介质\n确保光驱里是系统光盘\n\n\nstep:5\n重新引导\n\nstep:6\n安装。\n```\nPowerEdge R730安装Xen Serve6.5\n由于有以上经验，这些都不是问题了。\n就是在上面`step2`时，启动模式还是要选择为bios。","source":"_posts/2016-09-23-爬坑之R730服务器安装系统.md","raw":"---\ntitle: 戴尔R730服务器安装系统\ncategories: 实践与总结\ntag: 实践与总结\nabbrlink: e11fbde0\ndate: 2016-09-23 00:00:00\n---\n\n> 总结下使用PowerEdge R730安装windows server 2012 R2遇到的坑。\n> 科普：PowerEdge服务器生命周期控制器：[Lifecycle Controller](http://zh.community.dell.com/techcenter/w/techcenter_wiki/190.poweredgelifecycle-controller)\n\n<!-- more -->\n\n```\n安装准备：\n系统光盘(刻录到U盘好像不能识别)，Dell引导盘(若没有就用系统光盘好像也可以)\n\n正确步骤：\n\n光驱插入Dell引导盘(或系统光盘)\n开机按F10  --> 选择语言(中文)，键盘类型(默认) --> ip地址(默认) -->初始化完成\n\n进入Lifecycle Controller界面 \n\nstep:1\n如果需要做raid，就在这里做。由于机房管理员已经做好了raid5+1，这里就直接选OS部署\n\nstep:2\n启动模式选择uefi，安全引导选已启用\n为什么？windows server 2012 R2是采用和windows8一样的内核，默认采用uefi启动。\n之前这里一直选BIOS，之后重启就会出错。之前还以为是下的镜像有问题，测试了好几次，才发现是引导模式选错。\n\nstep:3\n选手动部署\n\nstep:4\n插入操作系统介质\n确保光驱里是系统光盘\n\n\nstep:5\n重新引导\n\nstep:6\n安装。\n```\nPowerEdge R730安装Xen Serve6.5\n由于有以上经验，这些都不是问题了。\n就是在上面`step2`时，启动模式还是要选择为bios。","slug":"2016-09-23-爬坑之R730服务器安装系统","published":1,"updated":"2017-02-14T13:42:45.412Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5mkehs20020ao94gwq667n4","content":"<blockquote>\n<p>总结下使用PowerEdge R730安装windows server 2012 R2遇到的坑。<br>科普：PowerEdge服务器生命周期控制器：<a href=\"http://zh.community.dell.com/techcenter/w/techcenter_wiki/190.poweredgelifecycle-controller\" target=\"_blank\" rel=\"external\">Lifecycle Controller</a></p>\n</blockquote>\n<a id=\"more\"></a>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div></pre></td><td class=\"code\"><pre><div class=\"line\">安装准备：</div><div class=\"line\">系统光盘(刻录到U盘好像不能识别)，Dell引导盘(若没有就用系统光盘好像也可以)</div><div class=\"line\"></div><div class=\"line\">正确步骤：</div><div class=\"line\"></div><div class=\"line\">光驱插入Dell引导盘(或系统光盘)</div><div class=\"line\">开机按F10  --&gt; 选择语言(中文)，键盘类型(默认) --&gt; ip地址(默认) --&gt;初始化完成</div><div class=\"line\"></div><div class=\"line\">进入Lifecycle Controller界面 </div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">step</span>:1</div><div class=\"line\">如果需要做raid，就在这里做。由于机房管理员已经做好了raid5+1，这里就直接选OS部署</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">step</span>:2</div><div class=\"line\">启动模式选择uefi，安全引导选已启用</div><div class=\"line\">为什么？windows<span class=\"built_in\"> server </span>2012 R2是采用和windows8一样的内核，默认采用uefi启动。</div><div class=\"line\">之前这里一直选BIOS，之后重启就会出错。之前还以为是下的镜像有问题，测试了好几次，才发现是引导模式选错。</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">step</span>:3</div><div class=\"line\">选手动部署</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">step</span>:4</div><div class=\"line\">插入操作系统介质</div><div class=\"line\">确保光驱里是系统光盘</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">step</span>:5</div><div class=\"line\">重新引导</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">step</span>:6</div><div class=\"line\">安装。</div></pre></td></tr></table></figure>\n<p>PowerEdge R730安装Xen Serve6.5<br>由于有以上经验，这些都不是问题了。<br>就是在上面<code>step2</code>时，启动模式还是要选择为bios。</p>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>总结下使用PowerEdge R730安装windows server 2012 R2遇到的坑。<br>科普：PowerEdge服务器生命周期控制器：<a href=\"http://zh.community.dell.com/techcenter/w/techcenter_wiki/190.poweredgelifecycle-controller\" target=\"_blank\" rel=\"external\">Lifecycle Controller</a></p>\n</blockquote>","more":"<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div></pre></td><td class=\"code\"><pre><div class=\"line\">安装准备：</div><div class=\"line\">系统光盘(刻录到U盘好像不能识别)，Dell引导盘(若没有就用系统光盘好像也可以)</div><div class=\"line\"></div><div class=\"line\">正确步骤：</div><div class=\"line\"></div><div class=\"line\">光驱插入Dell引导盘(或系统光盘)</div><div class=\"line\">开机按F10  --&gt; 选择语言(中文)，键盘类型(默认) --&gt; ip地址(默认) --&gt;初始化完成</div><div class=\"line\"></div><div class=\"line\">进入Lifecycle Controller界面 </div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">step</span>:1</div><div class=\"line\">如果需要做raid，就在这里做。由于机房管理员已经做好了raid5+1，这里就直接选OS部署</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">step</span>:2</div><div class=\"line\">启动模式选择uefi，安全引导选已启用</div><div class=\"line\">为什么？windows<span class=\"built_in\"> server </span>2012 R2是采用和windows8一样的内核，默认采用uefi启动。</div><div class=\"line\">之前这里一直选BIOS，之后重启就会出错。之前还以为是下的镜像有问题，测试了好几次，才发现是引导模式选错。</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">step</span>:3</div><div class=\"line\">选手动部署</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">step</span>:4</div><div class=\"line\">插入操作系统介质</div><div class=\"line\">确保光驱里是系统光盘</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">step</span>:5</div><div class=\"line\">重新引导</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">step</span>:6</div><div class=\"line\">安装。</div></pre></td></tr></table></figure>\n<p>PowerEdge R730安装Xen Serve6.5<br>由于有以上经验，这些都不是问题了。<br>就是在上面<code>step2</code>时，启动模式还是要选择为bios。</p>"},{"title":"CentOS搭建KVM虚拟化环境","abbrlink":"d50e1795","date":"2016-09-25T16:00:00.000Z","_content":"\n# kvm虚拟机安装\n\n> R730服务器为CentOS6.7\n关闭iptables、selinux\n在BIOS中开启CPU的虚拟化\n\n<!-- more -->\n## 检查你的系统是否支持虚拟化\n```\n~]# grep -Ei 'vmx|svm' /proc/cpuinfo\n\n如果有输出内容，则支持，其中intel cpu支持会有vmx，amd cpu支持会有svm\n```\n\n## 装载内核\n```\n~]# lsmod | grep kvm #查看是否有内容输出\n\n若无内容，则装载kvm的模块即可\n~]# modprobe kvm\n~]# modprobe kvm_intel\n\n~]# lsmod | grep kvm #再次查看是否有内容输出\n```\n\n## 安装虚拟化软件包组\n```\n~]# yum  groupinstall -y \"Virtualization\" \"Virtualization Platform\" \"Virtualization Client\" \"Virtualization Tools\"\n```\n\n## 修改网络为桥接\n*** 注意：此种方式会造成网络中断，请确保能通过其它方式访问物理机。如：console端口 ***\n\n> 默认为nat方式：虚拟机不可以直接获取到和物理机同一网段的IP地址，必须通过物理机中转\n> 桥接方式：虚拟机可以获取到和物理机同一网段的IP地址\n\n```\n\n~]# cd /etc/sysconfig/network-script/\n~]# cp ifcfg-em1{,.bak}\n~]# cp ifcfg-em1 ifcfg-br0\n\n~]# vim ifcfg-br0\nDEVICE=br0\nTYPE=Bridge\nONBOOT=yes\nNM_CONTROLLED=yes\nBOOTPROTO=none\nIPADDR=10.207.0.112\nPREFIX=16\nGATEWAY=10.207.0.1\nDNS1=223.5.5.5\n\n~]# vim ifcfg-em1\nDEVICE=em1\nBRIDGE=br0\nONBOOT=yes\nBOOTPROTO=none\nTYPE=Ethernet\n\n# 默认的NetworkManager无法管理桥接网络, 所以要关闭NetworkManager服务, 使用network服务\n~]# service NetworkManager stop\n~]# chkconfig NetworkManager off\n```\n### 重启网络服务\n*** 会造成远程连接断开,我这里可通过10.207.22.xxx的远程控制卡方式(console端口)来设置 ***\n```\nservice network restart\n```\n### 管理虚拟机\n```\n~]# virt-manager #可打开一个图形界面，前提是服务端有图形界面\n```\n\n## 错误总结\n### R730开启虚拟化\n```\n开机按F2--> system BIOS --> Processor Settings --> 启用virtualization\n```\n### 重启network失败\n\n```\n前面重启网络服务时报错：\n弹出环回接口：                                             [确定]  \n    弹出界面 eth0： 错误：激活连接失败：Master connection not found or invalid  \n                                                               [失败]  \n    弹出界面 br0： 错误：激活连接失败：Failed to determine connection's virtual interface name  \n                                                               [失败]  \n    RTNETLINK answers: File exists  \n    RTNETLINK answers: File exists  \n    RTNETLINK answers: File exists  \n解决办法\n~]# service NetworkManager stop\n~]# chkconfig NetworkManager off\n#原因：桥接网络NetworkManager无法管理, 关闭NetworkManager服务, 使用network服务\n```\n\n### virt-manager启动失败\n```\n~]# service libvirtd start\n~]# chkconfig libvirtd on\n```","source":"_posts/2016-09-26-基础环境搭建-kvm.md","raw":"---\ntitle: CentOS搭建KVM虚拟化环境\ncategories: 实践与总结\ntag: kvm\nabbrlink: d50e1795\ndate: 2016-09-26 00:00:00\n---\n\n# kvm虚拟机安装\n\n> R730服务器为CentOS6.7\n关闭iptables、selinux\n在BIOS中开启CPU的虚拟化\n\n<!-- more -->\n## 检查你的系统是否支持虚拟化\n```\n~]# grep -Ei 'vmx|svm' /proc/cpuinfo\n\n如果有输出内容，则支持，其中intel cpu支持会有vmx，amd cpu支持会有svm\n```\n\n## 装载内核\n```\n~]# lsmod | grep kvm #查看是否有内容输出\n\n若无内容，则装载kvm的模块即可\n~]# modprobe kvm\n~]# modprobe kvm_intel\n\n~]# lsmod | grep kvm #再次查看是否有内容输出\n```\n\n## 安装虚拟化软件包组\n```\n~]# yum  groupinstall -y \"Virtualization\" \"Virtualization Platform\" \"Virtualization Client\" \"Virtualization Tools\"\n```\n\n## 修改网络为桥接\n*** 注意：此种方式会造成网络中断，请确保能通过其它方式访问物理机。如：console端口 ***\n\n> 默认为nat方式：虚拟机不可以直接获取到和物理机同一网段的IP地址，必须通过物理机中转\n> 桥接方式：虚拟机可以获取到和物理机同一网段的IP地址\n\n```\n\n~]# cd /etc/sysconfig/network-script/\n~]# cp ifcfg-em1{,.bak}\n~]# cp ifcfg-em1 ifcfg-br0\n\n~]# vim ifcfg-br0\nDEVICE=br0\nTYPE=Bridge\nONBOOT=yes\nNM_CONTROLLED=yes\nBOOTPROTO=none\nIPADDR=10.207.0.112\nPREFIX=16\nGATEWAY=10.207.0.1\nDNS1=223.5.5.5\n\n~]# vim ifcfg-em1\nDEVICE=em1\nBRIDGE=br0\nONBOOT=yes\nBOOTPROTO=none\nTYPE=Ethernet\n\n# 默认的NetworkManager无法管理桥接网络, 所以要关闭NetworkManager服务, 使用network服务\n~]# service NetworkManager stop\n~]# chkconfig NetworkManager off\n```\n### 重启网络服务\n*** 会造成远程连接断开,我这里可通过10.207.22.xxx的远程控制卡方式(console端口)来设置 ***\n```\nservice network restart\n```\n### 管理虚拟机\n```\n~]# virt-manager #可打开一个图形界面，前提是服务端有图形界面\n```\n\n## 错误总结\n### R730开启虚拟化\n```\n开机按F2--> system BIOS --> Processor Settings --> 启用virtualization\n```\n### 重启network失败\n\n```\n前面重启网络服务时报错：\n弹出环回接口：                                             [确定]  \n    弹出界面 eth0： 错误：激活连接失败：Master connection not found or invalid  \n                                                               [失败]  \n    弹出界面 br0： 错误：激活连接失败：Failed to determine connection's virtual interface name  \n                                                               [失败]  \n    RTNETLINK answers: File exists  \n    RTNETLINK answers: File exists  \n    RTNETLINK answers: File exists  \n解决办法\n~]# service NetworkManager stop\n~]# chkconfig NetworkManager off\n#原因：桥接网络NetworkManager无法管理, 关闭NetworkManager服务, 使用network服务\n```\n\n### virt-manager启动失败\n```\n~]# service libvirtd start\n~]# chkconfig libvirtd on\n```","slug":"2016-09-26-基础环境搭建-kvm","published":1,"updated":"2017-02-14T13:42:45.412Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5mkehs50024ao94u1g9io6e","content":"<h1 id=\"kvm虚拟机安装\"><a href=\"#kvm虚拟机安装\" class=\"headerlink\" title=\"kvm虚拟机安装\"></a>kvm虚拟机安装</h1><blockquote>\n<p>R730服务器为CentOS6.7<br>关闭iptables、selinux<br>在BIOS中开启CPU的虚拟化</p>\n</blockquote>\n<a id=\"more\"></a>\n<h2 id=\"检查你的系统是否支持虚拟化\"><a href=\"#检查你的系统是否支持虚拟化\" class=\"headerlink\" title=\"检查你的系统是否支持虚拟化\"></a>检查你的系统是否支持虚拟化</h2><figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">~]# <span class=\"keyword\">grep</span> -Ei <span class=\"string\">'vmx|svm'</span> <span class=\"regexp\">/proc/</span>cpuinfo</div><div class=\"line\"></div><div class=\"line\">如果有输出内容，则支持，其中intel cpu支持会有vmx，amd cpu支持会有svm</div></pre></td></tr></table></figure>\n<h2 id=\"装载内核\"><a href=\"#装载内核\" class=\"headerlink\" title=\"装载内核\"></a>装载内核</h2><figure class=\"highlight clean\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">~]# lsmod | grep kvm #查看是否有内容输出</div><div class=\"line\"></div><div class=\"line\">若无内容，则装载kvm的模块即可</div><div class=\"line\">~]# modprobe kvm</div><div class=\"line\">~]# modprobe kvm_intel</div><div class=\"line\"></div><div class=\"line\">~]# lsmod | grep kvm #再次查看是否有内容输出</div></pre></td></tr></table></figure>\n<h2 id=\"安装虚拟化软件包组\"><a href=\"#安装虚拟化软件包组\" class=\"headerlink\" title=\"安装虚拟化软件包组\"></a>安装虚拟化软件包组</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">~]<span class=\"meta\"># yum  groupinstall -y <span class=\"meta-string\">\"Virtualization\"</span> <span class=\"meta-string\">\"Virtualization Platform\"</span> <span class=\"meta-string\">\"Virtualization Client\"</span> <span class=\"meta-string\">\"Virtualization Tools\"</span></span></div></pre></td></tr></table></figure>\n<h2 id=\"修改网络为桥接\"><a href=\"#修改网络为桥接\" class=\"headerlink\" title=\"修改网络为桥接\"></a>修改网络为桥接</h2><p><strong><em> 注意：此种方式会造成网络中断，请确保能通过其它方式访问物理机。如：console端口 </em></strong></p>\n<blockquote>\n<p>默认为nat方式：虚拟机不可以直接获取到和物理机同一网段的IP地址，必须通过物理机中转<br>桥接方式：虚拟机可以获取到和物理机同一网段的IP地址</p>\n</blockquote>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">~]# cd /etc/sysconfig/network-script/</div><div class=\"line\">~]# cp ifcfg-em1&#123;,.bak&#125;</div><div class=\"line\">~]# cp ifcfg-em1 ifcfg-br0</div><div class=\"line\"></div><div class=\"line\">~]# vim ifcfg-br0</div><div class=\"line\"><span class=\"attribute\">DEVICE</span>=br0</div><div class=\"line\"><span class=\"attribute\">TYPE</span>=Bridge</div><div class=\"line\"><span class=\"attribute\">ONBOOT</span>=<span class=\"literal\">yes</span></div><div class=\"line\"><span class=\"attribute\">NM_CONTROLLED</span>=<span class=\"literal\">yes</span></div><div class=\"line\"><span class=\"attribute\">BOOTPROTO</span>=none</div><div class=\"line\"><span class=\"attribute\">IPADDR</span>=10.207.0.112</div><div class=\"line\"><span class=\"attribute\">PREFIX</span>=16</div><div class=\"line\"><span class=\"attribute\">GATEWAY</span>=10.207.0.1</div><div class=\"line\"><span class=\"attribute\">DNS1</span>=223.5.5.5</div><div class=\"line\"></div><div class=\"line\">~]# vim ifcfg-em1</div><div class=\"line\"><span class=\"attribute\">DEVICE</span>=em1</div><div class=\"line\"><span class=\"attribute\">BRIDGE</span>=br0</div><div class=\"line\"><span class=\"attribute\">ONBOOT</span>=<span class=\"literal\">yes</span></div><div class=\"line\"><span class=\"attribute\">BOOTPROTO</span>=none</div><div class=\"line\"><span class=\"attribute\">TYPE</span>=Ethernet</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 默认的NetworkManager无法管理桥接网络, 所以要关闭NetworkManager服务, 使用network服务</span></div><div class=\"line\">~]#<span class=\"built_in\"> service </span>NetworkManager stop</div><div class=\"line\">~]# chkconfig NetworkManager off</div></pre></td></tr></table></figure>\n<h3 id=\"重启网络服务\"><a href=\"#重启网络服务\" class=\"headerlink\" title=\"重启网络服务\"></a>重启网络服务</h3><p><strong><em> 会造成远程连接断开,我这里可通过10.207.22.xxx的远程控制卡方式(console端口)来设置 </em></strong><br><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">service<span class=\"built_in\"> network </span>restart</div></pre></td></tr></table></figure></p>\n<h3 id=\"管理虚拟机\"><a href=\"#管理虚拟机\" class=\"headerlink\" title=\"管理虚拟机\"></a>管理虚拟机</h3><figure class=\"highlight clean\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">~]# virt-manager #可打开一个图形界面，前提是服务端有图形界面</div></pre></td></tr></table></figure>\n<h2 id=\"错误总结\"><a href=\"#错误总结\" class=\"headerlink\" title=\"错误总结\"></a>错误总结</h2><h3 id=\"R730开启虚拟化\"><a href=\"#R730开启虚拟化\" class=\"headerlink\" title=\"R730开启虚拟化\"></a>R730开启虚拟化</h3><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">开机按F2--&gt;<span class=\"built_in\"> system </span>BIOS --&gt; Processor<span class=\"built_in\"> Settings </span>--&gt; 启用virtualization</div></pre></td></tr></table></figure>\n<h3 id=\"重启network失败\"><a href=\"#重启network失败\" class=\"headerlink\" title=\"重启network失败\"></a>重启network失败</h3><figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">前面重启网络服务时报错：</div><div class=\"line\">弹出环回接口：                                             [确定]  </div><div class=\"line\">    弹出界面 eth0： 错误：激活连接失败：Master connection <span class=\"keyword\">not</span> found <span class=\"keyword\">or</span> invalid  </div><div class=\"line\">                                                               [失败]  </div><div class=\"line\">    弹出界面 br0： 错误：激活连接失败：Failed <span class=\"keyword\">to</span> determine connection's virtual interface <span class=\"built_in\">name</span>  </div><div class=\"line\">                                                               [失败]  </div><div class=\"line\">    RTNETLINK answers: File exists  </div><div class=\"line\">    RTNETLINK answers: File exists  </div><div class=\"line\">    RTNETLINK answers: File exists  </div><div class=\"line\">解决办法</div><div class=\"line\">~]<span class=\"comment\"># service NetworkManager stop</span></div><div class=\"line\">~]<span class=\"comment\"># chkconfig NetworkManager off</span></div><div class=\"line\"><span class=\"comment\">#原因：桥接网络NetworkManager无法管理, 关闭NetworkManager服务, 使用network服务</span></div></pre></td></tr></table></figure>\n<h3 id=\"virt-manager启动失败\"><a href=\"#virt-manager启动失败\" class=\"headerlink\" title=\"virt-manager启动失败\"></a>virt-manager启动失败</h3><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">~]#<span class=\"built_in\"> service </span>libvirtd start</div><div class=\"line\">~]# chkconfig libvirtd on</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h1 id=\"kvm虚拟机安装\"><a href=\"#kvm虚拟机安装\" class=\"headerlink\" title=\"kvm虚拟机安装\"></a>kvm虚拟机安装</h1><blockquote>\n<p>R730服务器为CentOS6.7<br>关闭iptables、selinux<br>在BIOS中开启CPU的虚拟化</p>\n</blockquote>","more":"<h2 id=\"检查你的系统是否支持虚拟化\"><a href=\"#检查你的系统是否支持虚拟化\" class=\"headerlink\" title=\"检查你的系统是否支持虚拟化\"></a>检查你的系统是否支持虚拟化</h2><figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">~]# <span class=\"keyword\">grep</span> -Ei <span class=\"string\">'vmx|svm'</span> <span class=\"regexp\">/proc/</span>cpuinfo</div><div class=\"line\"></div><div class=\"line\">如果有输出内容，则支持，其中intel cpu支持会有vmx，amd cpu支持会有svm</div></pre></td></tr></table></figure>\n<h2 id=\"装载内核\"><a href=\"#装载内核\" class=\"headerlink\" title=\"装载内核\"></a>装载内核</h2><figure class=\"highlight clean\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">~]# lsmod | grep kvm #查看是否有内容输出</div><div class=\"line\"></div><div class=\"line\">若无内容，则装载kvm的模块即可</div><div class=\"line\">~]# modprobe kvm</div><div class=\"line\">~]# modprobe kvm_intel</div><div class=\"line\"></div><div class=\"line\">~]# lsmod | grep kvm #再次查看是否有内容输出</div></pre></td></tr></table></figure>\n<h2 id=\"安装虚拟化软件包组\"><a href=\"#安装虚拟化软件包组\" class=\"headerlink\" title=\"安装虚拟化软件包组\"></a>安装虚拟化软件包组</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">~]<span class=\"meta\"># yum  groupinstall -y <span class=\"meta-string\">\"Virtualization\"</span> <span class=\"meta-string\">\"Virtualization Platform\"</span> <span class=\"meta-string\">\"Virtualization Client\"</span> <span class=\"meta-string\">\"Virtualization Tools\"</span></span></div></pre></td></tr></table></figure>\n<h2 id=\"修改网络为桥接\"><a href=\"#修改网络为桥接\" class=\"headerlink\" title=\"修改网络为桥接\"></a>修改网络为桥接</h2><p><strong><em> 注意：此种方式会造成网络中断，请确保能通过其它方式访问物理机。如：console端口 </em></strong></p>\n<blockquote>\n<p>默认为nat方式：虚拟机不可以直接获取到和物理机同一网段的IP地址，必须通过物理机中转<br>桥接方式：虚拟机可以获取到和物理机同一网段的IP地址</p>\n</blockquote>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">~]# cd /etc/sysconfig/network-script/</div><div class=\"line\">~]# cp ifcfg-em1&#123;,.bak&#125;</div><div class=\"line\">~]# cp ifcfg-em1 ifcfg-br0</div><div class=\"line\"></div><div class=\"line\">~]# vim ifcfg-br0</div><div class=\"line\"><span class=\"attribute\">DEVICE</span>=br0</div><div class=\"line\"><span class=\"attribute\">TYPE</span>=Bridge</div><div class=\"line\"><span class=\"attribute\">ONBOOT</span>=<span class=\"literal\">yes</span></div><div class=\"line\"><span class=\"attribute\">NM_CONTROLLED</span>=<span class=\"literal\">yes</span></div><div class=\"line\"><span class=\"attribute\">BOOTPROTO</span>=none</div><div class=\"line\"><span class=\"attribute\">IPADDR</span>=10.207.0.112</div><div class=\"line\"><span class=\"attribute\">PREFIX</span>=16</div><div class=\"line\"><span class=\"attribute\">GATEWAY</span>=10.207.0.1</div><div class=\"line\"><span class=\"attribute\">DNS1</span>=223.5.5.5</div><div class=\"line\"></div><div class=\"line\">~]# vim ifcfg-em1</div><div class=\"line\"><span class=\"attribute\">DEVICE</span>=em1</div><div class=\"line\"><span class=\"attribute\">BRIDGE</span>=br0</div><div class=\"line\"><span class=\"attribute\">ONBOOT</span>=<span class=\"literal\">yes</span></div><div class=\"line\"><span class=\"attribute\">BOOTPROTO</span>=none</div><div class=\"line\"><span class=\"attribute\">TYPE</span>=Ethernet</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 默认的NetworkManager无法管理桥接网络, 所以要关闭NetworkManager服务, 使用network服务</span></div><div class=\"line\">~]#<span class=\"built_in\"> service </span>NetworkManager stop</div><div class=\"line\">~]# chkconfig NetworkManager off</div></pre></td></tr></table></figure>\n<h3 id=\"重启网络服务\"><a href=\"#重启网络服务\" class=\"headerlink\" title=\"重启网络服务\"></a>重启网络服务</h3><p><strong><em> 会造成远程连接断开,我这里可通过10.207.22.xxx的远程控制卡方式(console端口)来设置 </em></strong><br><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">service<span class=\"built_in\"> network </span>restart</div></pre></td></tr></table></figure></p>\n<h3 id=\"管理虚拟机\"><a href=\"#管理虚拟机\" class=\"headerlink\" title=\"管理虚拟机\"></a>管理虚拟机</h3><figure class=\"highlight clean\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">~]# virt-manager #可打开一个图形界面，前提是服务端有图形界面</div></pre></td></tr></table></figure>\n<h2 id=\"错误总结\"><a href=\"#错误总结\" class=\"headerlink\" title=\"错误总结\"></a>错误总结</h2><h3 id=\"R730开启虚拟化\"><a href=\"#R730开启虚拟化\" class=\"headerlink\" title=\"R730开启虚拟化\"></a>R730开启虚拟化</h3><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">开机按F2--&gt;<span class=\"built_in\"> system </span>BIOS --&gt; Processor<span class=\"built_in\"> Settings </span>--&gt; 启用virtualization</div></pre></td></tr></table></figure>\n<h3 id=\"重启network失败\"><a href=\"#重启network失败\" class=\"headerlink\" title=\"重启network失败\"></a>重启network失败</h3><figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">前面重启网络服务时报错：</div><div class=\"line\">弹出环回接口：                                             [确定]  </div><div class=\"line\">    弹出界面 eth0： 错误：激活连接失败：Master connection <span class=\"keyword\">not</span> found <span class=\"keyword\">or</span> invalid  </div><div class=\"line\">                                                               [失败]  </div><div class=\"line\">    弹出界面 br0： 错误：激活连接失败：Failed <span class=\"keyword\">to</span> determine connection's virtual interface <span class=\"built_in\">name</span>  </div><div class=\"line\">                                                               [失败]  </div><div class=\"line\">    RTNETLINK answers: File exists  </div><div class=\"line\">    RTNETLINK answers: File exists  </div><div class=\"line\">    RTNETLINK answers: File exists  </div><div class=\"line\">解决办法</div><div class=\"line\">~]<span class=\"comment\"># service NetworkManager stop</span></div><div class=\"line\">~]<span class=\"comment\"># chkconfig NetworkManager off</span></div><div class=\"line\"><span class=\"comment\">#原因：桥接网络NetworkManager无法管理, 关闭NetworkManager服务, 使用network服务</span></div></pre></td></tr></table></figure>\n<h3 id=\"virt-manager启动失败\"><a href=\"#virt-manager启动失败\" class=\"headerlink\" title=\"virt-manager启动失败\"></a>virt-manager启动失败</h3><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">~]#<span class=\"built_in\"> service </span>libvirtd start</div><div class=\"line\">~]# chkconfig libvirtd on</div></pre></td></tr></table></figure>"},{"title":"Linux下Apache2.4+php5.5连接SQL Server2008","abbrlink":"3d6aa6c1","date":"2016-09-27T16:00:00.000Z","_content":"\n> 此文档适用于CentOS6.7部署Apache+PHP连接SQL Server2008\n\n<!-- more -->\n软件版本：\n- Apache: httpd-2.4.23\n- PHP: php-5.5.12 \n- Apr: apr apr-1.5.2\n- Apr-util: apr-util-1.5.4\n- libiconv: libiconv-1.14\n- FreeTDS: freetds-1.00.15\n\n> 先安装开发环境和依赖包\n\n```\nyum install gcc openssl openssl-devel pcre pcre-devel libxml2 libxml2-devel libcurl libcurl-devel libpng libpng-devel freetype-devel libxslt-devel libxslt\n```\n\n\n## Apache\n> 由于Apache2.4.x依赖于apr1.4+和apr-util1.4+，所以在编译安装Apache2.4时要先编译安装这两个包\n\n```\n#安装apr\n~]# ./configure  --prefix=/usr/local/apr\n~]# make && make install\n\n\n#安装apr-util\n~]# ./configure  --prefix=/usr/local/apr-util  --with-apr=/usr/local/apr\n~]# make && make install\n\n#安装Apache(添加运行用户和组)\n~]#  ./configure --prefix=/usr/local/apache24 --sysconfdir=/etc/httpd24  --enable-so --enable-ssl --enable-cgi --enable-rewrite --with-zlib --with-pcre --with-apr=/usr/local/apr --with-apr-util=/usr/local/apr-util --enable-modules=most --enable-mpms-shared=all --with-mpm=prefork\n~]# make && make install\n```\n\n### 添加Apache服务管理脚本\n\nvim /etc/init.d/httpd\n```\n#!/bin/bash\n#\n# httpd        Startup script for the Apache HTTP Server\n#\n# chkconfig: - 85 15\n# description: Apache is a World Wide Web server.  It is used to serve \\\n#        HTML files and CGI.\n# processname: httpd\n# config: /etc/httpd/conf/httpd.conf\n# config: /etc/sysconfig/httpd\n# pidfile: /var/run/httpd.pid\n \n# Source function library.\n. /etc/rc.d/init.d/functions\n \n# Start httpd in the C locale by default.\nHTTPD_LANG=${HTTPD_LANG-\"C\"}\n \n# This will prevent initlog from swallowing up a pass-phrase prompt if\n# mod_ssl needs a pass-phrase from the user.\nINITLOG_ARGS=\"\"\n \n# Set HTTPD=/usr/sbin/httpd.worker in /etc/sysconfig/httpd to use a server\n# with the thread-based \"worker\" MPM; BE WARNED that some modules may not\n# work correctly with a thread-based MPM; notably PHP will refuse to start.\n \n# Path to the apachectl script, server binary, and short-form for messages.\napachectl=/usr/local/apache24/bin/apachectl #根据自己安装路径\nhttpd=${HTTPD-/usr/local/apache24/bin/httpd}\nprog=httpd\npidfile=${PIDFILE-/usr/local/apache24/logs/httpd.pid} #自己安装路径下找\nlockfile=${LOCKFILE-/var/lock/subsys/httpd24}\nRETVAL=0\nSTOP_TIMEOUT=${STOP_TIMEOUT-10}\n\nstart() {\n        echo -n $\"Starting $prog: \"\n        LANG=$HTTPD_LANG daemon --pidfile=${pidfile} $httpd $OPTIONS\n        RETVAL=$?\n        echo\n        [ $RETVAL = 0 ] && touch ${lockfile}\n        return $RETVAL\n}\n\nstop() {\n  echo -n $\"Stopping $prog: \"\n  killproc -p ${pidfile} -d 10 $httpd\n  RETVAL=$?\n  echo\n  [ $RETVAL = 0 ] && rm -f ${lockfile} ${pidfile}\n}\nreload() {\n    echo -n $\"Reloading $prog: \"\n    if ! LANG=$HTTPD_LANG $httpd $OPTIONS -t >&/dev/null; then\n        RETVAL=$?\n        echo $\"not reloading due to configuration syntax error\"\n        failure $\"not reloading $httpd due to configuration syntax error\"\n    else\n        killproc -p ${pidfile} $httpd -HUP\n        RETVAL=$?\n    fi\n    echo\n}\n \n# See how we were called.\ncase \"$1\" in\n  start)\n  start\n  ;;\n  stop)\n  stop\n  ;;\n  status)\n        status -p ${pidfile} $httpd\n  RETVAL=$?\n  ;;\n  restart)\n  stop\n  start\n  ;;\n  condrestart)\n  if [ -f ${pidfile} ] ; then\n    stop\n    start\n  fi\n  ;;\n  reload)\n        reload\n  ;;\n  graceful|help|configtest|fullstatus)\n  $apachectl $@\n  RETVAL=$?\n  ;;\n  *)\n  echo $\"Usage: $prog {start|stop|restart|condrestart|reload|status|fullstatus|graceful|help|configtest}\"\n  exit 1\nesac\n\nexit $RETVAL\n```\n\n给/etc/init.d/httpd添加执行权限，并将httpd添加到开机自动启动\n```\n~]# chmod +x /etc/init.d/httpd\n~]# chkconfig httpd --add\n~]# chkconfig httpd on\n```\n\n## 编译安装PHP\n\n> 后端PHP连接SQL Server时会出现乱码，解决办法：安装libiconv\n\n### 编译安装libiconv\n\n```\n~]# ./configure --prefix=/usr/local/libiconv \n~]# make -j 4 && make install\n```\n### 编译安装PHP\n```\n~]# ./configure --prefix=/usr/local/php --with-curl --with-freetype-dir --with-gd --with-gettext --with-iconv-dir=/usr/local/libiconv --with-kerberos --with-libdir=lib64 --with-libxml-dir --with-openssl --with-pcre-regex --with-pdo-sqlite --with-pear --with-png-dir --with-xmlrpc --with-xsl --with-zlib --with-apxs2=/usr/local/apache24/bin/apxs --enable-libxml --enable-inline-optimization --enable-gd-native-ttf --enable-mbregex --enable-mbstring --enable-opcache --enable-pcntl --enable-shmop --enable-soap --enable-sockets --enable-sysvsem --enable-xml --enable-zip\n\n~]# make -j 4 && make install -j 4\n```\n\n### 配置apache让它支持php\n#### 修改apache的配置文件httpd.conf\n```\n~]# vim /usr/local/apache2.4/conf/httpd.conf\n```\n\n#### 然后查找文本，取消注释\n```\nLoadModule php5_module modules/libphp5.so #若已经取消进行下一步\n\n#添加\nAddType application/x-httpd-php .php\n```\n*** 注意，如果上面一条没配置好的话会导致，，访问http:localhost/*.php会直接下载，而不是打开 ***\n\n#### 复制php配置文件\n```\n~]# cp php-5.6.3/php.ini-production /usr/local/php/lib/php.ini \n```\n\n#### 重启httpd服务测试phpinfo页面\n\n## Freetds编译安装\n> Freetds作用是Linux下PHP支持连接SQL Server\n\n```\n#下载\n~]# wget ftp://ftp.freetds.org/pub/freetds/stable/freetds-patched.tar.gz\n~]# tar -zxvf freetds-patched.tar.gz\n~]# cd freetds-1.00.15\n\n#编译安装\n~]# ./configure --prefix=/usr/local/freetds --with-tdsver=7.3 --enable-msdblib\n~]# make && make install\n\n配置\n~]# cd ../\n~]# echo \"/usr/local/freetds/lib/\" > /etc/ld.so.conf.d/freetds.conf\n~]# ldconfig\n```\n输入以下命令，查看TDS Version是否和你的SQL Server版本一致\nFreeTDS官网版本支持信息\nhttp://www.freetds.org/userguide/choosingtdsprotocol.htm\n```\n~]# /usr/local/freetds/bin/tsql -C\n```\n\n### 测试数据库是否联通\n```\n~]# /usr/local/freetds/bin/tsql -H 数据库服务器IP  -p 端口号 -U 用户名 -P 密码\n```\n### 增加PHP的扩展mssql\n```\n~]# cd /opt/software/php-5.5.12/ext/mssql/\n\n#linux下用phpize给PHP动态添加扩展\n~]# /usr/local/php/bin/phpize\n~]# ./configure --with-php-config=/usr/local/php/bin/php-config --with-mssql=/usr/local/freetds/\n~]# make && make install\n```\n### 修改PHP配置文件\n```\n在php.ini配置文件中增加.so\n~]# cd /usr/local/php/lib下的php.ini\n#增加：\nextension = \"mssql.so\"  \n \n```\n重启httpd服务即可\n\n## 错误\n\n### 有的页面正常打开，有的打开显示源码报错\n> 刚开始以为是配置的环境问题，实际则是因为开发在windows环境下写php网页时，开头用的`<? ?>` 而不是Linux下的`<?php ?>`\n\n解决办法：\n```\n第一种：\n将php.ini里的\nshort_open_tag = Off\n修改为on\n\n第二种：\n让开发将<? ?> 修改为Linux下可以识别的<?php ?>\n```","source":"_posts/2016-09-28-基础服务-apache+php+freetds.md","raw":"---\ntitle: Linux下Apache2.4+php5.5连接SQL Server2008\ncategories: 实践与总结\ntag: web\nabbrlink: 3d6aa6c1\ndate: 2016-09-28 00:00:00\n---\n\n> 此文档适用于CentOS6.7部署Apache+PHP连接SQL Server2008\n\n<!-- more -->\n软件版本：\n- Apache: httpd-2.4.23\n- PHP: php-5.5.12 \n- Apr: apr apr-1.5.2\n- Apr-util: apr-util-1.5.4\n- libiconv: libiconv-1.14\n- FreeTDS: freetds-1.00.15\n\n> 先安装开发环境和依赖包\n\n```\nyum install gcc openssl openssl-devel pcre pcre-devel libxml2 libxml2-devel libcurl libcurl-devel libpng libpng-devel freetype-devel libxslt-devel libxslt\n```\n\n\n## Apache\n> 由于Apache2.4.x依赖于apr1.4+和apr-util1.4+，所以在编译安装Apache2.4时要先编译安装这两个包\n\n```\n#安装apr\n~]# ./configure  --prefix=/usr/local/apr\n~]# make && make install\n\n\n#安装apr-util\n~]# ./configure  --prefix=/usr/local/apr-util  --with-apr=/usr/local/apr\n~]# make && make install\n\n#安装Apache(添加运行用户和组)\n~]#  ./configure --prefix=/usr/local/apache24 --sysconfdir=/etc/httpd24  --enable-so --enable-ssl --enable-cgi --enable-rewrite --with-zlib --with-pcre --with-apr=/usr/local/apr --with-apr-util=/usr/local/apr-util --enable-modules=most --enable-mpms-shared=all --with-mpm=prefork\n~]# make && make install\n```\n\n### 添加Apache服务管理脚本\n\nvim /etc/init.d/httpd\n```\n#!/bin/bash\n#\n# httpd        Startup script for the Apache HTTP Server\n#\n# chkconfig: - 85 15\n# description: Apache is a World Wide Web server.  It is used to serve \\\n#        HTML files and CGI.\n# processname: httpd\n# config: /etc/httpd/conf/httpd.conf\n# config: /etc/sysconfig/httpd\n# pidfile: /var/run/httpd.pid\n \n# Source function library.\n. /etc/rc.d/init.d/functions\n \n# Start httpd in the C locale by default.\nHTTPD_LANG=${HTTPD_LANG-\"C\"}\n \n# This will prevent initlog from swallowing up a pass-phrase prompt if\n# mod_ssl needs a pass-phrase from the user.\nINITLOG_ARGS=\"\"\n \n# Set HTTPD=/usr/sbin/httpd.worker in /etc/sysconfig/httpd to use a server\n# with the thread-based \"worker\" MPM; BE WARNED that some modules may not\n# work correctly with a thread-based MPM; notably PHP will refuse to start.\n \n# Path to the apachectl script, server binary, and short-form for messages.\napachectl=/usr/local/apache24/bin/apachectl #根据自己安装路径\nhttpd=${HTTPD-/usr/local/apache24/bin/httpd}\nprog=httpd\npidfile=${PIDFILE-/usr/local/apache24/logs/httpd.pid} #自己安装路径下找\nlockfile=${LOCKFILE-/var/lock/subsys/httpd24}\nRETVAL=0\nSTOP_TIMEOUT=${STOP_TIMEOUT-10}\n\nstart() {\n        echo -n $\"Starting $prog: \"\n        LANG=$HTTPD_LANG daemon --pidfile=${pidfile} $httpd $OPTIONS\n        RETVAL=$?\n        echo\n        [ $RETVAL = 0 ] && touch ${lockfile}\n        return $RETVAL\n}\n\nstop() {\n  echo -n $\"Stopping $prog: \"\n  killproc -p ${pidfile} -d 10 $httpd\n  RETVAL=$?\n  echo\n  [ $RETVAL = 0 ] && rm -f ${lockfile} ${pidfile}\n}\nreload() {\n    echo -n $\"Reloading $prog: \"\n    if ! LANG=$HTTPD_LANG $httpd $OPTIONS -t >&/dev/null; then\n        RETVAL=$?\n        echo $\"not reloading due to configuration syntax error\"\n        failure $\"not reloading $httpd due to configuration syntax error\"\n    else\n        killproc -p ${pidfile} $httpd -HUP\n        RETVAL=$?\n    fi\n    echo\n}\n \n# See how we were called.\ncase \"$1\" in\n  start)\n  start\n  ;;\n  stop)\n  stop\n  ;;\n  status)\n        status -p ${pidfile} $httpd\n  RETVAL=$?\n  ;;\n  restart)\n  stop\n  start\n  ;;\n  condrestart)\n  if [ -f ${pidfile} ] ; then\n    stop\n    start\n  fi\n  ;;\n  reload)\n        reload\n  ;;\n  graceful|help|configtest|fullstatus)\n  $apachectl $@\n  RETVAL=$?\n  ;;\n  *)\n  echo $\"Usage: $prog {start|stop|restart|condrestart|reload|status|fullstatus|graceful|help|configtest}\"\n  exit 1\nesac\n\nexit $RETVAL\n```\n\n给/etc/init.d/httpd添加执行权限，并将httpd添加到开机自动启动\n```\n~]# chmod +x /etc/init.d/httpd\n~]# chkconfig httpd --add\n~]# chkconfig httpd on\n```\n\n## 编译安装PHP\n\n> 后端PHP连接SQL Server时会出现乱码，解决办法：安装libiconv\n\n### 编译安装libiconv\n\n```\n~]# ./configure --prefix=/usr/local/libiconv \n~]# make -j 4 && make install\n```\n### 编译安装PHP\n```\n~]# ./configure --prefix=/usr/local/php --with-curl --with-freetype-dir --with-gd --with-gettext --with-iconv-dir=/usr/local/libiconv --with-kerberos --with-libdir=lib64 --with-libxml-dir --with-openssl --with-pcre-regex --with-pdo-sqlite --with-pear --with-png-dir --with-xmlrpc --with-xsl --with-zlib --with-apxs2=/usr/local/apache24/bin/apxs --enable-libxml --enable-inline-optimization --enable-gd-native-ttf --enable-mbregex --enable-mbstring --enable-opcache --enable-pcntl --enable-shmop --enable-soap --enable-sockets --enable-sysvsem --enable-xml --enable-zip\n\n~]# make -j 4 && make install -j 4\n```\n\n### 配置apache让它支持php\n#### 修改apache的配置文件httpd.conf\n```\n~]# vim /usr/local/apache2.4/conf/httpd.conf\n```\n\n#### 然后查找文本，取消注释\n```\nLoadModule php5_module modules/libphp5.so #若已经取消进行下一步\n\n#添加\nAddType application/x-httpd-php .php\n```\n*** 注意，如果上面一条没配置好的话会导致，，访问http:localhost/*.php会直接下载，而不是打开 ***\n\n#### 复制php配置文件\n```\n~]# cp php-5.6.3/php.ini-production /usr/local/php/lib/php.ini \n```\n\n#### 重启httpd服务测试phpinfo页面\n\n## Freetds编译安装\n> Freetds作用是Linux下PHP支持连接SQL Server\n\n```\n#下载\n~]# wget ftp://ftp.freetds.org/pub/freetds/stable/freetds-patched.tar.gz\n~]# tar -zxvf freetds-patched.tar.gz\n~]# cd freetds-1.00.15\n\n#编译安装\n~]# ./configure --prefix=/usr/local/freetds --with-tdsver=7.3 --enable-msdblib\n~]# make && make install\n\n配置\n~]# cd ../\n~]# echo \"/usr/local/freetds/lib/\" > /etc/ld.so.conf.d/freetds.conf\n~]# ldconfig\n```\n输入以下命令，查看TDS Version是否和你的SQL Server版本一致\nFreeTDS官网版本支持信息\nhttp://www.freetds.org/userguide/choosingtdsprotocol.htm\n```\n~]# /usr/local/freetds/bin/tsql -C\n```\n\n### 测试数据库是否联通\n```\n~]# /usr/local/freetds/bin/tsql -H 数据库服务器IP  -p 端口号 -U 用户名 -P 密码\n```\n### 增加PHP的扩展mssql\n```\n~]# cd /opt/software/php-5.5.12/ext/mssql/\n\n#linux下用phpize给PHP动态添加扩展\n~]# /usr/local/php/bin/phpize\n~]# ./configure --with-php-config=/usr/local/php/bin/php-config --with-mssql=/usr/local/freetds/\n~]# make && make install\n```\n### 修改PHP配置文件\n```\n在php.ini配置文件中增加.so\n~]# cd /usr/local/php/lib下的php.ini\n#增加：\nextension = \"mssql.so\"  \n \n```\n重启httpd服务即可\n\n## 错误\n\n### 有的页面正常打开，有的打开显示源码报错\n> 刚开始以为是配置的环境问题，实际则是因为开发在windows环境下写php网页时，开头用的`<? ?>` 而不是Linux下的`<?php ?>`\n\n解决办法：\n```\n第一种：\n将php.ini里的\nshort_open_tag = Off\n修改为on\n\n第二种：\n让开发将<? ?> 修改为Linux下可以识别的<?php ?>\n```","slug":"2016-09-28-基础服务-apache+php+freetds","published":1,"updated":"2017-02-14T13:42:45.416Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5mkehs60027ao94honn6g4v","content":"<blockquote>\n<p>此文档适用于CentOS6.7部署Apache+PHP连接SQL Server2008</p>\n</blockquote>\n<a id=\"more\"></a>\n<p>软件版本：</p>\n<ul>\n<li>Apache: httpd-2.4.23</li>\n<li>PHP: php-5.5.12 </li>\n<li>Apr: apr apr-1.5.2</li>\n<li>Apr-util: apr-util-1.5.4</li>\n<li>libiconv: libiconv-1.14</li>\n<li>FreeTDS: freetds-1.00.15</li>\n</ul>\n<blockquote>\n<p>先安装开发环境和依赖包</p>\n</blockquote>\n<figure class=\"highlight elm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"title\">yum</span> install gcc openssl openssl-devel pcre pcre-devel libxml2 libxml2-devel libcurl libcurl-devel libpng libpng-devel free<span class=\"keyword\">type</span>-devel libxslt-devel libxslt</div></pre></td></tr></table></figure>\n<h2 id=\"Apache\"><a href=\"#Apache\" class=\"headerlink\" title=\"Apache\"></a>Apache</h2><blockquote>\n<p>由于Apache2.4.x依赖于apr1.4+和apr-util1.4+，所以在编译安装Apache2.4时要先编译安装这两个包</p>\n</blockquote>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#安装apr</span></div><div class=\"line\">~]# ./configure  <span class=\"attribute\">--prefix</span>=/usr/local/apr</div><div class=\"line\">~]# make &amp;&amp; make install</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#安装apr-util</span></div><div class=\"line\">~]# ./configure  <span class=\"attribute\">--prefix</span>=/usr/local/apr-util  <span class=\"attribute\">--with-apr</span>=/usr/local/apr</div><div class=\"line\">~]# make &amp;&amp; make install</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#安装Apache(添加运行用户和组)</span></div><div class=\"line\">~]#  ./configure <span class=\"attribute\">--prefix</span>=/usr/local/apache24 <span class=\"attribute\">--sysconfdir</span>=/etc/httpd24  --enable-so --enable-ssl --enable-cgi --enable-rewrite --with-zlib --with-pcre <span class=\"attribute\">--with-apr</span>=/usr/local/apr <span class=\"attribute\">--with-apr-util</span>=/usr/local/apr-util <span class=\"attribute\">--enable-modules</span>=most <span class=\"attribute\">--enable-mpms-shared</span>=all <span class=\"attribute\">--with-mpm</span>=prefork</div><div class=\"line\">~]# make &amp;&amp; make install</div></pre></td></tr></table></figure>\n<h3 id=\"添加Apache服务管理脚本\"><a href=\"#添加Apache服务管理脚本\" class=\"headerlink\" title=\"添加Apache服务管理脚本\"></a>添加Apache服务管理脚本</h3><p>vim /etc/init.d/httpd<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#!/bin/bash</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\"># httpd        Startup script for the Apache HTTP Server</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\"># chkconfig: - 85 15</span></div><div class=\"line\"><span class=\"comment\"># description: Apache is a World Wide Web server.  It is used to serve \\</span></div><div class=\"line\"><span class=\"comment\">#        HTML files and CGI.</span></div><div class=\"line\"><span class=\"comment\"># processname: httpd</span></div><div class=\"line\"><span class=\"comment\"># config: /etc/httpd/conf/httpd.conf</span></div><div class=\"line\"><span class=\"comment\"># config: /etc/sysconfig/httpd</span></div><div class=\"line\"><span class=\"comment\"># pidfile: /var/run/httpd.pid</span></div><div class=\"line\"> </div><div class=\"line\"><span class=\"comment\"># Source function library.</span></div><div class=\"line\">. /etc/rc.d/init.d/<span class=\"built_in\">functions</span></div><div class=\"line\"> </div><div class=\"line\"><span class=\"comment\"># Start httpd in the C locale by default.</span></div><div class=\"line\">HTTPD_LANG=<span class=\"variable\">$&#123;HTTPD_LANG-\"C\"&#125;</span></div><div class=\"line\"> </div><div class=\"line\"><span class=\"comment\"># This will prevent initlog from swallowing up a pass-phrase prompt if</span></div><div class=\"line\"><span class=\"comment\"># mod_ssl needs a pass-phrase from the user.</span></div><div class=\"line\">INITLOG_ARGS=<span class=\"string\">\"\"</span></div><div class=\"line\"> </div><div class=\"line\"><span class=\"comment\"># Set HTTPD=/usr/sbin/httpd.worker in /etc/sysconfig/httpd to use a server</span></div><div class=\"line\"><span class=\"comment\"># with the thread-based \"worker\" MPM; BE WARNED that some modules may not</span></div><div class=\"line\"><span class=\"comment\"># work correctly with a thread-based MPM; notably PHP will refuse to start.</span></div><div class=\"line\"> </div><div class=\"line\"><span class=\"comment\"># Path to the apachectl script, server binary, and short-form for messages.</span></div><div class=\"line\">apachectl=/usr/<span class=\"built_in\">local</span>/apache24/bin/apachectl <span class=\"comment\">#根据自己安装路径</span></div><div class=\"line\">httpd=<span class=\"variable\">$&#123;HTTPD-/usr/local/apache24/bin/httpd&#125;</span></div><div class=\"line\">prog=httpd</div><div class=\"line\">pidfile=<span class=\"variable\">$&#123;PIDFILE-/usr/local/apache24/logs/httpd.pid&#125;</span> <span class=\"comment\">#自己安装路径下找</span></div><div class=\"line\">lockfile=<span class=\"variable\">$&#123;LOCKFILE-/var/lock/subsys/httpd24&#125;</span></div><div class=\"line\">RETVAL=0</div><div class=\"line\">STOP_TIMEOUT=<span class=\"variable\">$&#123;STOP_TIMEOUT-10&#125;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"title\">start</span></span>() &#123;</div><div class=\"line\">        <span class=\"built_in\">echo</span> -n $<span class=\"string\">\"Starting <span class=\"variable\">$prog</span>: \"</span></div><div class=\"line\">        LANG=<span class=\"variable\">$HTTPD_LANG</span> daemon --pidfile=<span class=\"variable\">$&#123;pidfile&#125;</span> <span class=\"variable\">$httpd</span> <span class=\"variable\">$OPTIONS</span></div><div class=\"line\">        RETVAL=$?</div><div class=\"line\">        <span class=\"built_in\">echo</span></div><div class=\"line\">        [ <span class=\"variable\">$RETVAL</span> = 0 ] &amp;&amp; touch <span class=\"variable\">$&#123;lockfile&#125;</span></div><div class=\"line\">        <span class=\"built_in\">return</span> <span class=\"variable\">$RETVAL</span></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"title\">stop</span></span>() &#123;</div><div class=\"line\">  <span class=\"built_in\">echo</span> -n $<span class=\"string\">\"Stopping <span class=\"variable\">$prog</span>: \"</span></div><div class=\"line\">  killproc -p <span class=\"variable\">$&#123;pidfile&#125;</span> -d 10 <span class=\"variable\">$httpd</span></div><div class=\"line\">  RETVAL=$?</div><div class=\"line\">  <span class=\"built_in\">echo</span></div><div class=\"line\">  [ <span class=\"variable\">$RETVAL</span> = 0 ] &amp;&amp; rm -f <span class=\"variable\">$&#123;lockfile&#125;</span> <span class=\"variable\">$&#123;pidfile&#125;</span></div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"title\">reload</span></span>() &#123;</div><div class=\"line\">    <span class=\"built_in\">echo</span> -n $<span class=\"string\">\"Reloading <span class=\"variable\">$prog</span>: \"</span></div><div class=\"line\">    <span class=\"keyword\">if</span> ! LANG=<span class=\"variable\">$HTTPD_LANG</span> <span class=\"variable\">$httpd</span> <span class=\"variable\">$OPTIONS</span> -t &gt;&amp;/dev/null; <span class=\"keyword\">then</span></div><div class=\"line\">        RETVAL=$?</div><div class=\"line\">        <span class=\"built_in\">echo</span> $<span class=\"string\">\"not reloading due to configuration syntax error\"</span></div><div class=\"line\">        failure $<span class=\"string\">\"not reloading <span class=\"variable\">$httpd</span> due to configuration syntax error\"</span></div><div class=\"line\">    <span class=\"keyword\">else</span></div><div class=\"line\">        killproc -p <span class=\"variable\">$&#123;pidfile&#125;</span> <span class=\"variable\">$httpd</span> -HUP</div><div class=\"line\">        RETVAL=$?</div><div class=\"line\">    <span class=\"keyword\">fi</span></div><div class=\"line\">    <span class=\"built_in\">echo</span></div><div class=\"line\">&#125;</div><div class=\"line\"> </div><div class=\"line\"><span class=\"comment\"># See how we were called.</span></div><div class=\"line\"><span class=\"keyword\">case</span> <span class=\"string\">\"<span class=\"variable\">$1</span>\"</span> <span class=\"keyword\">in</span></div><div class=\"line\">  start)</div><div class=\"line\">  start</div><div class=\"line\">  ;;</div><div class=\"line\">  stop)</div><div class=\"line\">  stop</div><div class=\"line\">  ;;</div><div class=\"line\">  status)</div><div class=\"line\">        status -p <span class=\"variable\">$&#123;pidfile&#125;</span> <span class=\"variable\">$httpd</span></div><div class=\"line\">  RETVAL=$?</div><div class=\"line\">  ;;</div><div class=\"line\">  restart)</div><div class=\"line\">  stop</div><div class=\"line\">  start</div><div class=\"line\">  ;;</div><div class=\"line\">  condrestart)</div><div class=\"line\">  <span class=\"keyword\">if</span> [ -f <span class=\"variable\">$&#123;pidfile&#125;</span> ] ; <span class=\"keyword\">then</span></div><div class=\"line\">    stop</div><div class=\"line\">    start</div><div class=\"line\">  <span class=\"keyword\">fi</span></div><div class=\"line\">  ;;</div><div class=\"line\">  reload)</div><div class=\"line\">        reload</div><div class=\"line\">  ;;</div><div class=\"line\">  graceful|<span class=\"built_in\">help</span>|configtest|fullstatus)</div><div class=\"line\">  <span class=\"variable\">$apachectl</span> <span class=\"variable\">$@</span></div><div class=\"line\">  RETVAL=$?</div><div class=\"line\">  ;;</div><div class=\"line\">  *)</div><div class=\"line\">  <span class=\"built_in\">echo</span> $<span class=\"string\">\"Usage: <span class=\"variable\">$prog</span> &#123;start|stop|restart|condrestart|reload|status|fullstatus|graceful|help|configtest&#125;\"</span></div><div class=\"line\">  <span class=\"built_in\">exit</span> 1</div><div class=\"line\"><span class=\"keyword\">esac</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">exit</span> <span class=\"variable\">$RETVAL</span></div></pre></td></tr></table></figure></p>\n<p>给/etc/init.d/httpd添加执行权限，并将httpd添加到开机自动启动<br><figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">~]<span class=\"comment\"># chmod +x /etc/init.d/httpd</span></div><div class=\"line\">~]<span class=\"comment\"># chkconfig httpd --add</span></div><div class=\"line\">~]<span class=\"comment\"># chkconfig httpd on</span></div></pre></td></tr></table></figure></p>\n<h2 id=\"编译安装PHP\"><a href=\"#编译安装PHP\" class=\"headerlink\" title=\"编译安装PHP\"></a>编译安装PHP</h2><blockquote>\n<p>后端PHP连接SQL Server时会出现乱码，解决办法：安装libiconv</p>\n</blockquote>\n<h3 id=\"编译安装libiconv\"><a href=\"#编译安装libiconv\" class=\"headerlink\" title=\"编译安装libiconv\"></a>编译安装libiconv</h3><figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">~]<span class=\"comment\"># ./configure --prefix=/usr/local/libiconv </span></div><div class=\"line\">~]<span class=\"comment\"># make -j 4 &amp;&amp; make install</span></div></pre></td></tr></table></figure>\n<h3 id=\"编译安装PHP-1\"><a href=\"#编译安装PHP-1\" class=\"headerlink\" title=\"编译安装PHP\"></a>编译安装PHP</h3><figure class=\"highlight brainfuck\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">~</span><span class=\"title\">]</span><span class=\"comment\">#</span> <span class=\"string\">.</span><span class=\"comment\">/configure</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">prefix=/usr/local/php</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">with</span><span class=\"literal\">-</span><span class=\"comment\">curl</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">with</span><span class=\"literal\">-</span><span class=\"comment\">freetype</span><span class=\"literal\">-</span><span class=\"comment\">dir</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">with</span><span class=\"literal\">-</span><span class=\"comment\">gd</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">with</span><span class=\"literal\">-</span><span class=\"comment\">gettext</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">with</span><span class=\"literal\">-</span><span class=\"comment\">iconv</span><span class=\"literal\">-</span><span class=\"comment\">dir=/usr/local/libiconv</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">with</span><span class=\"literal\">-</span><span class=\"comment\">kerberos</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">with</span><span class=\"literal\">-</span><span class=\"comment\">libdir=lib64</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">with</span><span class=\"literal\">-</span><span class=\"comment\">libxml</span><span class=\"literal\">-</span><span class=\"comment\">dir</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">with</span><span class=\"literal\">-</span><span class=\"comment\">openssl</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">with</span><span class=\"literal\">-</span><span class=\"comment\">pcre</span><span class=\"literal\">-</span><span class=\"comment\">regex</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">with</span><span class=\"literal\">-</span><span class=\"comment\">pdo</span><span class=\"literal\">-</span><span class=\"comment\">sqlite</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">with</span><span class=\"literal\">-</span><span class=\"comment\">pear</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">with</span><span class=\"literal\">-</span><span class=\"comment\">png</span><span class=\"literal\">-</span><span class=\"comment\">dir</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">with</span><span class=\"literal\">-</span><span class=\"comment\">xmlrpc</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">with</span><span class=\"literal\">-</span><span class=\"comment\">xsl</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">with</span><span class=\"literal\">-</span><span class=\"comment\">zlib</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">with</span><span class=\"literal\">-</span><span class=\"comment\">apxs2=/usr/local/apache24/bin/apxs</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">enable</span><span class=\"literal\">-</span><span class=\"comment\">libxml</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">enable</span><span class=\"literal\">-</span><span class=\"comment\">inline</span><span class=\"literal\">-</span><span class=\"comment\">optimization</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">enable</span><span class=\"literal\">-</span><span class=\"comment\">gd</span><span class=\"literal\">-</span><span class=\"comment\">native</span><span class=\"literal\">-</span><span class=\"comment\">ttf</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">enable</span><span class=\"literal\">-</span><span class=\"comment\">mbregex</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">enable</span><span class=\"literal\">-</span><span class=\"comment\">mbstring</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">enable</span><span class=\"literal\">-</span><span class=\"comment\">opcache</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">enable</span><span class=\"literal\">-</span><span class=\"comment\">pcntl</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">enable</span><span class=\"literal\">-</span><span class=\"comment\">shmop</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">enable</span><span class=\"literal\">-</span><span class=\"comment\">soap</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">enable</span><span class=\"literal\">-</span><span class=\"comment\">sockets</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">enable</span><span class=\"literal\">-</span><span class=\"comment\">sysvsem</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">enable</span><span class=\"literal\">-</span><span class=\"comment\">xml</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">enable</span><span class=\"literal\">-</span><span class=\"comment\">zip</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">~</span><span class=\"title\">]</span><span class=\"comment\">#</span> <span class=\"comment\">make</span> <span class=\"literal\">-</span><span class=\"comment\">j</span> <span class=\"comment\">4</span> <span class=\"comment\">&amp;&amp;</span> <span class=\"comment\">make</span> <span class=\"comment\">install</span> <span class=\"literal\">-</span><span class=\"comment\">j</span> <span class=\"comment\">4</span></div></pre></td></tr></table></figure>\n<h3 id=\"配置apache让它支持php\"><a href=\"#配置apache让它支持php\" class=\"headerlink\" title=\"配置apache让它支持php\"></a>配置apache让它支持php</h3><h4 id=\"修改apache的配置文件httpd-conf\"><a href=\"#修改apache的配置文件httpd-conf\" class=\"headerlink\" title=\"修改apache的配置文件httpd.conf\"></a>修改apache的配置文件httpd.conf</h4><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">~]# vim /usr/<span class=\"keyword\">local</span>/apache2.4/<span class=\"keyword\">conf</span>/httpd.<span class=\"keyword\">conf</span></div></pre></td></tr></table></figure>\n<h4 id=\"然后查找文本，取消注释\"><a href=\"#然后查找文本，取消注释\" class=\"headerlink\" title=\"然后查找文本，取消注释\"></a>然后查找文本，取消注释</h4><figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">LoadModule php5_module modules/libphp5.so <span class=\"comment\">#若已经取消进行下一步</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#添加</span></div><div class=\"line\">AddType <span class=\"built_in\">application</span>/x-httpd-php .php</div></pre></td></tr></table></figure>\n<p><strong><em> 注意，如果上面一条没配置好的话会导致，，访问http:localhost/</em>.php会直接下载，而不是打开 *</strong></p>\n<h4 id=\"复制php配置文件\"><a href=\"#复制php配置文件\" class=\"headerlink\" title=\"复制php配置文件\"></a>复制php配置文件</h4><figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">~]# cp php-<span class=\"number\">5.6</span>.<span class=\"number\">3</span><span class=\"regexp\">/php.ini-production /u</span>sr<span class=\"regexp\">/local/</span>php<span class=\"regexp\">/lib/</span>php.ini</div></pre></td></tr></table></figure>\n<h4 id=\"重启httpd服务测试phpinfo页面\"><a href=\"#重启httpd服务测试phpinfo页面\" class=\"headerlink\" title=\"重启httpd服务测试phpinfo页面\"></a>重启httpd服务测试phpinfo页面</h4><h2 id=\"Freetds编译安装\"><a href=\"#Freetds编译安装\" class=\"headerlink\" title=\"Freetds编译安装\"></a>Freetds编译安装</h2><blockquote>\n<p>Freetds作用是Linux下PHP支持连接SQL Server</p>\n</blockquote>\n<figure class=\"highlight clean\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">#下载</div><div class=\"line\">~]# wget ftp:<span class=\"comment\">//ftp.freetds.org/pub/freetds/stable/freetds-patched.tar.gz</span></div><div class=\"line\">~]# tar -zxvf freetds-patched.tar.gz</div><div class=\"line\">~]# cd freetds<span class=\"number\">-1.00</span><span class=\"number\">.15</span></div><div class=\"line\"></div><div class=\"line\">#编译安装</div><div class=\"line\">~]# ./configure --prefix=/usr/local/freetds --<span class=\"keyword\">with</span>-tdsver=<span class=\"number\">7.3</span> --enable-msdblib</div><div class=\"line\">~]# make &amp;&amp; make install</div><div class=\"line\"></div><div class=\"line\">配置</div><div class=\"line\">~]# cd ../</div><div class=\"line\">~]# echo <span class=\"string\">\"/usr/local/freetds/lib/\"</span> &gt; /etc/ld.so.conf.d/freetds.conf</div><div class=\"line\">~]# ldconfig</div></pre></td></tr></table></figure>\n<p>输入以下命令，查看TDS Version是否和你的SQL Server版本一致<br>FreeTDS官网版本支持信息<br><a href=\"http://www.freetds.org/userguide/choosingtdsprotocol.htm\" target=\"_blank\" rel=\"external\">http://www.freetds.org/userguide/choosingtdsprotocol.htm</a><br><figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">~]# <span class=\"regexp\">/usr/</span>local<span class=\"regexp\">/freetds/</span>bin<span class=\"regexp\">/tsql -C</span></div></pre></td></tr></table></figure></p>\n<h3 id=\"测试数据库是否联通\"><a href=\"#测试数据库是否联通\" class=\"headerlink\" title=\"测试数据库是否联通\"></a>测试数据库是否联通</h3><figure class=\"highlight armasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">~]# /usr/local/freetds/<span class=\"keyword\">bin/tsql </span>-H 数据库服务器<span class=\"built_in\">IP</span>  -p 端口号 -U 用户名 -P 密码</div></pre></td></tr></table></figure>\n<h3 id=\"增加PHP的扩展mssql\"><a href=\"#增加PHP的扩展mssql\" class=\"headerlink\" title=\"增加PHP的扩展mssql\"></a>增加PHP的扩展mssql</h3><figure class=\"highlight clean\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">~]# cd /opt/software/php<span class=\"number\">-5.5</span><span class=\"number\">.12</span>/ext/mssql/</div><div class=\"line\"></div><div class=\"line\">#linux下用phpize给PHP动态添加扩展</div><div class=\"line\">~]# /usr/local/php/bin/phpize</div><div class=\"line\">~]# ./configure --<span class=\"keyword\">with</span>-php-config=/usr/local/php/bin/php-config --<span class=\"keyword\">with</span>-mssql=/usr/local/freetds/</div><div class=\"line\">~]# make &amp;&amp; make install</div></pre></td></tr></table></figure>\n<h3 id=\"修改PHP配置文件\"><a href=\"#修改PHP配置文件\" class=\"headerlink\" title=\"修改PHP配置文件\"></a>修改PHP配置文件</h3><figure class=\"highlight makefile\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">在php.ini配置文件中增加.so</div><div class=\"line\">~]<span class=\"comment\"># cd /usr/local/php/lib下的php.ini</span></div><div class=\"line\"><span class=\"comment\">#增加：</span></div><div class=\"line\">extension = <span class=\"string\">\"mssql.so\"</span></div></pre></td></tr></table></figure>\n<p>重启httpd服务即可</p>\n<h2 id=\"错误\"><a href=\"#错误\" class=\"headerlink\" title=\"错误\"></a>错误</h2><h3 id=\"有的页面正常打开，有的打开显示源码报错\"><a href=\"#有的页面正常打开，有的打开显示源码报错\" class=\"headerlink\" title=\"有的页面正常打开，有的打开显示源码报错\"></a>有的页面正常打开，有的打开显示源码报错</h3><blockquote>\n<p>刚开始以为是配置的环境问题，实际则是因为开发在windows环境下写php网页时，开头用的<code>&lt;? ?&gt;</code> 而不是Linux下的<code>&lt;?php ?&gt;</code></p>\n</blockquote>\n<p>解决办法：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">第一种：</div><div class=\"line\">将php.ini里的</div><div class=\"line\">short_open_tag = Off</div><div class=\"line\">修改为on</div><div class=\"line\"></div><div class=\"line\">第二种：</div><div class=\"line\">让开发将<span class=\"php\"><span class=\"meta\">&lt;?</span> <span class=\"meta\">?&gt;</span></span> 修改为Linux下可以识别的<span class=\"php\"><span class=\"meta\">&lt;?php</span> <span class=\"meta\">?&gt;</span></span></div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>此文档适用于CentOS6.7部署Apache+PHP连接SQL Server2008</p>\n</blockquote>","more":"<p>软件版本：</p>\n<ul>\n<li>Apache: httpd-2.4.23</li>\n<li>PHP: php-5.5.12 </li>\n<li>Apr: apr apr-1.5.2</li>\n<li>Apr-util: apr-util-1.5.4</li>\n<li>libiconv: libiconv-1.14</li>\n<li>FreeTDS: freetds-1.00.15</li>\n</ul>\n<blockquote>\n<p>先安装开发环境和依赖包</p>\n</blockquote>\n<figure class=\"highlight elm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"title\">yum</span> install gcc openssl openssl-devel pcre pcre-devel libxml2 libxml2-devel libcurl libcurl-devel libpng libpng-devel free<span class=\"keyword\">type</span>-devel libxslt-devel libxslt</div></pre></td></tr></table></figure>\n<h2 id=\"Apache\"><a href=\"#Apache\" class=\"headerlink\" title=\"Apache\"></a>Apache</h2><blockquote>\n<p>由于Apache2.4.x依赖于apr1.4+和apr-util1.4+，所以在编译安装Apache2.4时要先编译安装这两个包</p>\n</blockquote>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#安装apr</span></div><div class=\"line\">~]# ./configure  <span class=\"attribute\">--prefix</span>=/usr/local/apr</div><div class=\"line\">~]# make &amp;&amp; make install</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#安装apr-util</span></div><div class=\"line\">~]# ./configure  <span class=\"attribute\">--prefix</span>=/usr/local/apr-util  <span class=\"attribute\">--with-apr</span>=/usr/local/apr</div><div class=\"line\">~]# make &amp;&amp; make install</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#安装Apache(添加运行用户和组)</span></div><div class=\"line\">~]#  ./configure <span class=\"attribute\">--prefix</span>=/usr/local/apache24 <span class=\"attribute\">--sysconfdir</span>=/etc/httpd24  --enable-so --enable-ssl --enable-cgi --enable-rewrite --with-zlib --with-pcre <span class=\"attribute\">--with-apr</span>=/usr/local/apr <span class=\"attribute\">--with-apr-util</span>=/usr/local/apr-util <span class=\"attribute\">--enable-modules</span>=most <span class=\"attribute\">--enable-mpms-shared</span>=all <span class=\"attribute\">--with-mpm</span>=prefork</div><div class=\"line\">~]# make &amp;&amp; make install</div></pre></td></tr></table></figure>\n<h3 id=\"添加Apache服务管理脚本\"><a href=\"#添加Apache服务管理脚本\" class=\"headerlink\" title=\"添加Apache服务管理脚本\"></a>添加Apache服务管理脚本</h3><p>vim /etc/init.d/httpd<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#!/bin/bash</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\"># httpd        Startup script for the Apache HTTP Server</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\"># chkconfig: - 85 15</span></div><div class=\"line\"><span class=\"comment\"># description: Apache is a World Wide Web server.  It is used to serve \\</span></div><div class=\"line\"><span class=\"comment\">#        HTML files and CGI.</span></div><div class=\"line\"><span class=\"comment\"># processname: httpd</span></div><div class=\"line\"><span class=\"comment\"># config: /etc/httpd/conf/httpd.conf</span></div><div class=\"line\"><span class=\"comment\"># config: /etc/sysconfig/httpd</span></div><div class=\"line\"><span class=\"comment\"># pidfile: /var/run/httpd.pid</span></div><div class=\"line\"> </div><div class=\"line\"><span class=\"comment\"># Source function library.</span></div><div class=\"line\">. /etc/rc.d/init.d/<span class=\"built_in\">functions</span></div><div class=\"line\"> </div><div class=\"line\"><span class=\"comment\"># Start httpd in the C locale by default.</span></div><div class=\"line\">HTTPD_LANG=<span class=\"variable\">$&#123;HTTPD_LANG-\"C\"&#125;</span></div><div class=\"line\"> </div><div class=\"line\"><span class=\"comment\"># This will prevent initlog from swallowing up a pass-phrase prompt if</span></div><div class=\"line\"><span class=\"comment\"># mod_ssl needs a pass-phrase from the user.</span></div><div class=\"line\">INITLOG_ARGS=<span class=\"string\">\"\"</span></div><div class=\"line\"> </div><div class=\"line\"><span class=\"comment\"># Set HTTPD=/usr/sbin/httpd.worker in /etc/sysconfig/httpd to use a server</span></div><div class=\"line\"><span class=\"comment\"># with the thread-based \"worker\" MPM; BE WARNED that some modules may not</span></div><div class=\"line\"><span class=\"comment\"># work correctly with a thread-based MPM; notably PHP will refuse to start.</span></div><div class=\"line\"> </div><div class=\"line\"><span class=\"comment\"># Path to the apachectl script, server binary, and short-form for messages.</span></div><div class=\"line\">apachectl=/usr/<span class=\"built_in\">local</span>/apache24/bin/apachectl <span class=\"comment\">#根据自己安装路径</span></div><div class=\"line\">httpd=<span class=\"variable\">$&#123;HTTPD-/usr/local/apache24/bin/httpd&#125;</span></div><div class=\"line\">prog=httpd</div><div class=\"line\">pidfile=<span class=\"variable\">$&#123;PIDFILE-/usr/local/apache24/logs/httpd.pid&#125;</span> <span class=\"comment\">#自己安装路径下找</span></div><div class=\"line\">lockfile=<span class=\"variable\">$&#123;LOCKFILE-/var/lock/subsys/httpd24&#125;</span></div><div class=\"line\">RETVAL=0</div><div class=\"line\">STOP_TIMEOUT=<span class=\"variable\">$&#123;STOP_TIMEOUT-10&#125;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"title\">start</span></span>() &#123;</div><div class=\"line\">        <span class=\"built_in\">echo</span> -n $<span class=\"string\">\"Starting <span class=\"variable\">$prog</span>: \"</span></div><div class=\"line\">        LANG=<span class=\"variable\">$HTTPD_LANG</span> daemon --pidfile=<span class=\"variable\">$&#123;pidfile&#125;</span> <span class=\"variable\">$httpd</span> <span class=\"variable\">$OPTIONS</span></div><div class=\"line\">        RETVAL=$?</div><div class=\"line\">        <span class=\"built_in\">echo</span></div><div class=\"line\">        [ <span class=\"variable\">$RETVAL</span> = 0 ] &amp;&amp; touch <span class=\"variable\">$&#123;lockfile&#125;</span></div><div class=\"line\">        <span class=\"built_in\">return</span> <span class=\"variable\">$RETVAL</span></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"title\">stop</span></span>() &#123;</div><div class=\"line\">  <span class=\"built_in\">echo</span> -n $<span class=\"string\">\"Stopping <span class=\"variable\">$prog</span>: \"</span></div><div class=\"line\">  killproc -p <span class=\"variable\">$&#123;pidfile&#125;</span> -d 10 <span class=\"variable\">$httpd</span></div><div class=\"line\">  RETVAL=$?</div><div class=\"line\">  <span class=\"built_in\">echo</span></div><div class=\"line\">  [ <span class=\"variable\">$RETVAL</span> = 0 ] &amp;&amp; rm -f <span class=\"variable\">$&#123;lockfile&#125;</span> <span class=\"variable\">$&#123;pidfile&#125;</span></div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"title\">reload</span></span>() &#123;</div><div class=\"line\">    <span class=\"built_in\">echo</span> -n $<span class=\"string\">\"Reloading <span class=\"variable\">$prog</span>: \"</span></div><div class=\"line\">    <span class=\"keyword\">if</span> ! LANG=<span class=\"variable\">$HTTPD_LANG</span> <span class=\"variable\">$httpd</span> <span class=\"variable\">$OPTIONS</span> -t &gt;&amp;/dev/null; <span class=\"keyword\">then</span></div><div class=\"line\">        RETVAL=$?</div><div class=\"line\">        <span class=\"built_in\">echo</span> $<span class=\"string\">\"not reloading due to configuration syntax error\"</span></div><div class=\"line\">        failure $<span class=\"string\">\"not reloading <span class=\"variable\">$httpd</span> due to configuration syntax error\"</span></div><div class=\"line\">    <span class=\"keyword\">else</span></div><div class=\"line\">        killproc -p <span class=\"variable\">$&#123;pidfile&#125;</span> <span class=\"variable\">$httpd</span> -HUP</div><div class=\"line\">        RETVAL=$?</div><div class=\"line\">    <span class=\"keyword\">fi</span></div><div class=\"line\">    <span class=\"built_in\">echo</span></div><div class=\"line\">&#125;</div><div class=\"line\"> </div><div class=\"line\"><span class=\"comment\"># See how we were called.</span></div><div class=\"line\"><span class=\"keyword\">case</span> <span class=\"string\">\"<span class=\"variable\">$1</span>\"</span> <span class=\"keyword\">in</span></div><div class=\"line\">  start)</div><div class=\"line\">  start</div><div class=\"line\">  ;;</div><div class=\"line\">  stop)</div><div class=\"line\">  stop</div><div class=\"line\">  ;;</div><div class=\"line\">  status)</div><div class=\"line\">        status -p <span class=\"variable\">$&#123;pidfile&#125;</span> <span class=\"variable\">$httpd</span></div><div class=\"line\">  RETVAL=$?</div><div class=\"line\">  ;;</div><div class=\"line\">  restart)</div><div class=\"line\">  stop</div><div class=\"line\">  start</div><div class=\"line\">  ;;</div><div class=\"line\">  condrestart)</div><div class=\"line\">  <span class=\"keyword\">if</span> [ -f <span class=\"variable\">$&#123;pidfile&#125;</span> ] ; <span class=\"keyword\">then</span></div><div class=\"line\">    stop</div><div class=\"line\">    start</div><div class=\"line\">  <span class=\"keyword\">fi</span></div><div class=\"line\">  ;;</div><div class=\"line\">  reload)</div><div class=\"line\">        reload</div><div class=\"line\">  ;;</div><div class=\"line\">  graceful|<span class=\"built_in\">help</span>|configtest|fullstatus)</div><div class=\"line\">  <span class=\"variable\">$apachectl</span> <span class=\"variable\">$@</span></div><div class=\"line\">  RETVAL=$?</div><div class=\"line\">  ;;</div><div class=\"line\">  *)</div><div class=\"line\">  <span class=\"built_in\">echo</span> $<span class=\"string\">\"Usage: <span class=\"variable\">$prog</span> &#123;start|stop|restart|condrestart|reload|status|fullstatus|graceful|help|configtest&#125;\"</span></div><div class=\"line\">  <span class=\"built_in\">exit</span> 1</div><div class=\"line\"><span class=\"keyword\">esac</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">exit</span> <span class=\"variable\">$RETVAL</span></div></pre></td></tr></table></figure></p>\n<p>给/etc/init.d/httpd添加执行权限，并将httpd添加到开机自动启动<br><figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">~]<span class=\"comment\"># chmod +x /etc/init.d/httpd</span></div><div class=\"line\">~]<span class=\"comment\"># chkconfig httpd --add</span></div><div class=\"line\">~]<span class=\"comment\"># chkconfig httpd on</span></div></pre></td></tr></table></figure></p>\n<h2 id=\"编译安装PHP\"><a href=\"#编译安装PHP\" class=\"headerlink\" title=\"编译安装PHP\"></a>编译安装PHP</h2><blockquote>\n<p>后端PHP连接SQL Server时会出现乱码，解决办法：安装libiconv</p>\n</blockquote>\n<h3 id=\"编译安装libiconv\"><a href=\"#编译安装libiconv\" class=\"headerlink\" title=\"编译安装libiconv\"></a>编译安装libiconv</h3><figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">~]<span class=\"comment\"># ./configure --prefix=/usr/local/libiconv </span></div><div class=\"line\">~]<span class=\"comment\"># make -j 4 &amp;&amp; make install</span></div></pre></td></tr></table></figure>\n<h3 id=\"编译安装PHP-1\"><a href=\"#编译安装PHP-1\" class=\"headerlink\" title=\"编译安装PHP\"></a>编译安装PHP</h3><figure class=\"highlight brainfuck\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">~</span><span class=\"title\">]</span><span class=\"comment\">#</span> <span class=\"string\">.</span><span class=\"comment\">/configure</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">prefix=/usr/local/php</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">with</span><span class=\"literal\">-</span><span class=\"comment\">curl</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">with</span><span class=\"literal\">-</span><span class=\"comment\">freetype</span><span class=\"literal\">-</span><span class=\"comment\">dir</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">with</span><span class=\"literal\">-</span><span class=\"comment\">gd</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">with</span><span class=\"literal\">-</span><span class=\"comment\">gettext</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">with</span><span class=\"literal\">-</span><span class=\"comment\">iconv</span><span class=\"literal\">-</span><span class=\"comment\">dir=/usr/local/libiconv</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">with</span><span class=\"literal\">-</span><span class=\"comment\">kerberos</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">with</span><span class=\"literal\">-</span><span class=\"comment\">libdir=lib64</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">with</span><span class=\"literal\">-</span><span class=\"comment\">libxml</span><span class=\"literal\">-</span><span class=\"comment\">dir</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">with</span><span class=\"literal\">-</span><span class=\"comment\">openssl</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">with</span><span class=\"literal\">-</span><span class=\"comment\">pcre</span><span class=\"literal\">-</span><span class=\"comment\">regex</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">with</span><span class=\"literal\">-</span><span class=\"comment\">pdo</span><span class=\"literal\">-</span><span class=\"comment\">sqlite</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">with</span><span class=\"literal\">-</span><span class=\"comment\">pear</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">with</span><span class=\"literal\">-</span><span class=\"comment\">png</span><span class=\"literal\">-</span><span class=\"comment\">dir</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">with</span><span class=\"literal\">-</span><span class=\"comment\">xmlrpc</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">with</span><span class=\"literal\">-</span><span class=\"comment\">xsl</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">with</span><span class=\"literal\">-</span><span class=\"comment\">zlib</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">with</span><span class=\"literal\">-</span><span class=\"comment\">apxs2=/usr/local/apache24/bin/apxs</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">enable</span><span class=\"literal\">-</span><span class=\"comment\">libxml</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">enable</span><span class=\"literal\">-</span><span class=\"comment\">inline</span><span class=\"literal\">-</span><span class=\"comment\">optimization</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">enable</span><span class=\"literal\">-</span><span class=\"comment\">gd</span><span class=\"literal\">-</span><span class=\"comment\">native</span><span class=\"literal\">-</span><span class=\"comment\">ttf</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">enable</span><span class=\"literal\">-</span><span class=\"comment\">mbregex</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">enable</span><span class=\"literal\">-</span><span class=\"comment\">mbstring</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">enable</span><span class=\"literal\">-</span><span class=\"comment\">opcache</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">enable</span><span class=\"literal\">-</span><span class=\"comment\">pcntl</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">enable</span><span class=\"literal\">-</span><span class=\"comment\">shmop</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">enable</span><span class=\"literal\">-</span><span class=\"comment\">soap</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">enable</span><span class=\"literal\">-</span><span class=\"comment\">sockets</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">enable</span><span class=\"literal\">-</span><span class=\"comment\">sysvsem</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">enable</span><span class=\"literal\">-</span><span class=\"comment\">xml</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">enable</span><span class=\"literal\">-</span><span class=\"comment\">zip</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">~</span><span class=\"title\">]</span><span class=\"comment\">#</span> <span class=\"comment\">make</span> <span class=\"literal\">-</span><span class=\"comment\">j</span> <span class=\"comment\">4</span> <span class=\"comment\">&amp;&amp;</span> <span class=\"comment\">make</span> <span class=\"comment\">install</span> <span class=\"literal\">-</span><span class=\"comment\">j</span> <span class=\"comment\">4</span></div></pre></td></tr></table></figure>\n<h3 id=\"配置apache让它支持php\"><a href=\"#配置apache让它支持php\" class=\"headerlink\" title=\"配置apache让它支持php\"></a>配置apache让它支持php</h3><h4 id=\"修改apache的配置文件httpd-conf\"><a href=\"#修改apache的配置文件httpd-conf\" class=\"headerlink\" title=\"修改apache的配置文件httpd.conf\"></a>修改apache的配置文件httpd.conf</h4><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">~]# vim /usr/<span class=\"keyword\">local</span>/apache2.4/<span class=\"keyword\">conf</span>/httpd.<span class=\"keyword\">conf</span></div></pre></td></tr></table></figure>\n<h4 id=\"然后查找文本，取消注释\"><a href=\"#然后查找文本，取消注释\" class=\"headerlink\" title=\"然后查找文本，取消注释\"></a>然后查找文本，取消注释</h4><figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">LoadModule php5_module modules/libphp5.so <span class=\"comment\">#若已经取消进行下一步</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#添加</span></div><div class=\"line\">AddType <span class=\"built_in\">application</span>/x-httpd-php .php</div></pre></td></tr></table></figure>\n<p><strong><em> 注意，如果上面一条没配置好的话会导致，，访问http:localhost/</em>.php会直接下载，而不是打开 *</strong></p>\n<h4 id=\"复制php配置文件\"><a href=\"#复制php配置文件\" class=\"headerlink\" title=\"复制php配置文件\"></a>复制php配置文件</h4><figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">~]# cp php-<span class=\"number\">5.6</span>.<span class=\"number\">3</span><span class=\"regexp\">/php.ini-production /u</span>sr<span class=\"regexp\">/local/</span>php<span class=\"regexp\">/lib/</span>php.ini</div></pre></td></tr></table></figure>\n<h4 id=\"重启httpd服务测试phpinfo页面\"><a href=\"#重启httpd服务测试phpinfo页面\" class=\"headerlink\" title=\"重启httpd服务测试phpinfo页面\"></a>重启httpd服务测试phpinfo页面</h4><h2 id=\"Freetds编译安装\"><a href=\"#Freetds编译安装\" class=\"headerlink\" title=\"Freetds编译安装\"></a>Freetds编译安装</h2><blockquote>\n<p>Freetds作用是Linux下PHP支持连接SQL Server</p>\n</blockquote>\n<figure class=\"highlight clean\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">#下载</div><div class=\"line\">~]# wget ftp:<span class=\"comment\">//ftp.freetds.org/pub/freetds/stable/freetds-patched.tar.gz</span></div><div class=\"line\">~]# tar -zxvf freetds-patched.tar.gz</div><div class=\"line\">~]# cd freetds<span class=\"number\">-1.00</span><span class=\"number\">.15</span></div><div class=\"line\"></div><div class=\"line\">#编译安装</div><div class=\"line\">~]# ./configure --prefix=/usr/local/freetds --<span class=\"keyword\">with</span>-tdsver=<span class=\"number\">7.3</span> --enable-msdblib</div><div class=\"line\">~]# make &amp;&amp; make install</div><div class=\"line\"></div><div class=\"line\">配置</div><div class=\"line\">~]# cd ../</div><div class=\"line\">~]# echo <span class=\"string\">\"/usr/local/freetds/lib/\"</span> &gt; /etc/ld.so.conf.d/freetds.conf</div><div class=\"line\">~]# ldconfig</div></pre></td></tr></table></figure>\n<p>输入以下命令，查看TDS Version是否和你的SQL Server版本一致<br>FreeTDS官网版本支持信息<br><a href=\"http://www.freetds.org/userguide/choosingtdsprotocol.htm\" target=\"_blank\" rel=\"external\">http://www.freetds.org/userguide/choosingtdsprotocol.htm</a><br><figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">~]# <span class=\"regexp\">/usr/</span>local<span class=\"regexp\">/freetds/</span>bin<span class=\"regexp\">/tsql -C</span></div></pre></td></tr></table></figure></p>\n<h3 id=\"测试数据库是否联通\"><a href=\"#测试数据库是否联通\" class=\"headerlink\" title=\"测试数据库是否联通\"></a>测试数据库是否联通</h3><figure class=\"highlight armasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">~]# /usr/local/freetds/<span class=\"keyword\">bin/tsql </span>-H 数据库服务器<span class=\"built_in\">IP</span>  -p 端口号 -U 用户名 -P 密码</div></pre></td></tr></table></figure>\n<h3 id=\"增加PHP的扩展mssql\"><a href=\"#增加PHP的扩展mssql\" class=\"headerlink\" title=\"增加PHP的扩展mssql\"></a>增加PHP的扩展mssql</h3><figure class=\"highlight clean\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">~]# cd /opt/software/php<span class=\"number\">-5.5</span><span class=\"number\">.12</span>/ext/mssql/</div><div class=\"line\"></div><div class=\"line\">#linux下用phpize给PHP动态添加扩展</div><div class=\"line\">~]# /usr/local/php/bin/phpize</div><div class=\"line\">~]# ./configure --<span class=\"keyword\">with</span>-php-config=/usr/local/php/bin/php-config --<span class=\"keyword\">with</span>-mssql=/usr/local/freetds/</div><div class=\"line\">~]# make &amp;&amp; make install</div></pre></td></tr></table></figure>\n<h3 id=\"修改PHP配置文件\"><a href=\"#修改PHP配置文件\" class=\"headerlink\" title=\"修改PHP配置文件\"></a>修改PHP配置文件</h3><figure class=\"highlight makefile\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">在php.ini配置文件中增加.so</div><div class=\"line\">~]<span class=\"comment\"># cd /usr/local/php/lib下的php.ini</span></div><div class=\"line\"><span class=\"comment\">#增加：</span></div><div class=\"line\">extension = <span class=\"string\">\"mssql.so\"</span></div></pre></td></tr></table></figure>\n<p>重启httpd服务即可</p>\n<h2 id=\"错误\"><a href=\"#错误\" class=\"headerlink\" title=\"错误\"></a>错误</h2><h3 id=\"有的页面正常打开，有的打开显示源码报错\"><a href=\"#有的页面正常打开，有的打开显示源码报错\" class=\"headerlink\" title=\"有的页面正常打开，有的打开显示源码报错\"></a>有的页面正常打开，有的打开显示源码报错</h3><blockquote>\n<p>刚开始以为是配置的环境问题，实际则是因为开发在windows环境下写php网页时，开头用的<code>&lt;? ?&gt;</code> 而不是Linux下的<code>&lt;?php ?&gt;</code></p>\n</blockquote>\n<p>解决办法：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">第一种：</div><div class=\"line\">将php.ini里的</div><div class=\"line\">short_open_tag = Off</div><div class=\"line\">修改为on</div><div class=\"line\"></div><div class=\"line\">第二种：</div><div class=\"line\">让开发将<span class=\"php\"><span class=\"meta\">&lt;?</span> <span class=\"meta\">?&gt;</span></span> 修改为Linux下可以识别的<span class=\"php\"><span class=\"meta\">&lt;?php</span> <span class=\"meta\">?&gt;</span></span></div></pre></td></tr></table></figure></p>"},{"title":"KeepAlived高可用Nginx","abbrlink":"bf9d2e83","date":"2016-09-26T16:00:00.000Z","_content":"\n# 主\n\n## Nginx\n> /etc/nginx/conf.d/default.conf\n> 同时修改nginx.conf里监听的端口\n\n<!-- more -->\n```\n~]# vim /etc/nginx/conf.d/default.conf\n#\n# The default server\n#\n upstream backend {\n          server 10.207.0.88 weight=1;\n          server 10.207.0.89 weight=1;\n    }\n\n    server {\n        listen       80;\n        server_name  localhost;\n        # 当nginx将php代码送至后端RS处理时请求头中的Host值会是backend.\n        # php代码在RS上处理时,其内部代码会去请求图片/层叠样式表等静态资源以填充页面.\n        # 而php代码去请求后端资源时使用的是如http://backend/xxxx.php这样的url,自然是取不到的.\n        # 所以我们要在nginx向后代理遇到Host为backend时,将其转换为127.0.0.1.\n        set $my_host $http_host;\n        if ($http_host = \"backend\") {\n            set $my_host \"127.0.0.1\";\n        }\n\n        location / {\n              proxy_pass     http://backend;\n              proxy_redirect off;\n              proxy_set_header  Host  $my_host;\n         }\n    }\n\nserver {\n    listen       8080 default_server;\n    server_name  localhost;\n    root         /usr/share/nginx/html;\n\n    # Load configuration files for the default server block.\n    include /etc/nginx/default.d/*.conf;\n\n    location / {\n    }\n\n    error_page 404 /404.html;\n        location = /40x.html {\n    }\n\n    error_page 500 502 503 504 /50x.html;\n        location = /50x.html {\n    }\n\n}\n\n```\n## keepalived\n\n```\n! Configuration File for keepalived\nglobal_defs {\n\n   notification_email {\n     root@localhost  # 邮件给本机root用户\n   }\n   notification_email_from admin@nginx-124.com\n   smtp_server 127.0.0.1  # 使用本机作为smtp服务器\n   smtp_connect_timeout 30\n   router_id 8a028eb8  # 标识主机,可以使用主机名.\n   vrrp_mcast_group4 224.0.71.18  # 多播地址,用于发送心跳信号.尽量让集群内的主机处于同一个独立的多播地址.\n}\n\n# nginx进程监控脚本.如果进程不在,降低自身权重,使从节点主机优先级高于自身,将VRRP漂移至从节点主机.\nvrrp_script chk_nginx {\n    script \"killall -0 nginx\"\n    interval 2\n    weight -8\n}\nvrrp_instance VI_1 {\n    state MASTER  # vrrp实例VI_1中作为主\n    interface eth0\n    virtual_router_id 71 # 0-255范围内的数字,用于区分vrrp实例,所以两个实例不能一致.\n    priority 100    # MASTER的优先级要高一些\n    advert_int 1\n    authentication {\n        auth_type PASS\n        auth_pass uWjblY61  # 简单字符认证, 8位任意字符串.\n    }\n    virtual_ipaddress {\n        10.207.0.164/24 brd 10.207.0.164 dev eth0 label eth0:0  # VIP1\n    }\n\n    # 在此处调用nginx进程监控脚本\n    track_script {\n        chk_nginx\n    }\n\n    # 关闭争用. 争用是指当高优先级节点上线会立即争夺成为MASTER\n    # 而不管其它节点是否正在给用户提供服务.\n    #nopreempt\n\n    # 开启争用时,会延迟一段时间才开始.\n    #preempt_delay 300\n}\nvrrp_instance VI_2 {\n    state BACKUP    # vrrp实例VI_2中作为备\n    interface eth0\n    virtual_router_id 171\n    priority 95     # MASTER的优先级要高一些\n    advert_int 1\n    authentication {\n        auth_type PASS\n        auth_pass uWjblY62\n    }\n    virtual_ipaddress {\n        10.207.0.164/24 brd 10.207.0.164 dev eth0 label eth0:0  # VIP1\n    }\n\n    # 在此处调用nginx进程监控脚本\n    track_script {\n        chk_nginx\n    }\n}\n\n\n```\n\n# 备\n## Nginx\n> /etc/nginx/conf.d/default.conf\n> 同时修改nginx.conf里监听的端口\n\n```\n\nupstream backend {\n          server 10.207.0.88 weight=1;\n          server 10.207.0.89 weight=1;\n    }\n\n    server {\n        listen       80;\n        server_name  localhost;\n        # 当nginx将php代码送至后端RS处理时请求头中的Host值会是backend.\n        # php代码在RS上处理时,其内部代码会去请求图片/层叠样式表等静态资源以填充页面.\n        # 而php代码去请求资源时使用的是如http://backend/xxxx.php这样的url,自然是取不到的.\n        # 所以我们要在nginx向后代理遇到Host为backend时,将其转换为127.0.0.1.\n       set $my_host $http_host;\n        if ($http_host = \"backend\") {\n            set $my_host \"127.0.0.1\";\n        }\n\n        location / {\n              proxy_pass     http://backend;\n              proxy_redirect off;\n              proxy_set_header  Host  $my_host;\n         }\n    }\n\n\nserver {\n     listen       8080 default_server;\n     server_name  localhost;\n     root         /usr/share/nginx/html;\n     \n     # Load configuration files for the default server block.\n     include /etc/nginx/default.d/*.conf;\n     \n     location / {\n     }\n     \n     error_page 404 /404.html;\n         location = /40x.html {\n     }   \n     \n     error_page 500 502 503 504 /50x.html;\n        location = /50x.html { \n     }\n \n}\n\n\n```\n\n## keepalived\n\n```\n! Configuration File for keepalived\nglobal_defs {\n\n   notification_email {\n     root@localhost  # 邮件给本机root用户\n   }\n   notification_email_from admin@nginx-133.com\n   smtp_server 127.0.0.1  # 使用本机作为smtp服务器\n   smtp_connect_timeout 30\n   router_id 8a028eb8  # 标识主机,可以使用主机名.\n   vrrp_mcast_group4 224.0.71.18  # 多播地址,用于发送心跳信号.尽量让集群内的主机处于同一个独立的多播地址.\n}\n\n# nginx进程监控脚本.如果进程不在,降低自身权重,使从节点主机优先级高于自身,将VRRP漂移至从节点主机.\nvrrp_script chk_nginx {\n    script \"killall -0 nginx\"\n    interval 2\n    weight -8\n}\nvrrp_instance VI_1 {\n    state BACKUP  # vrrp实例VI_1中HostA作为备\n    interface eth0\n    virtual_router_id 71 # 0-255范围内的数字,用于区分vrrp实例,所以两个实例不能一致.\n    priority 95    # MASTER的优先级要高一些\n    advert_int 1\n    authentication {\n        auth_type PASS\n        auth_pass uWjblY61  # 简单字符认证, 8位任意字符串.\n    }\n    virtual_ipaddress {\n        10.207.0.164/24 brd 10.207.0.164 dev eth0 label eth0:0  # VIP1\n    }\n\n    # 在此处调用nginx进程监控脚本\n    track_script {\n        chk_nginx\n    }\n\n    # 关闭争用. 争用是指当高优先级节点上线会立即争夺成为MASTER\n    # 而不管其它节点是否正在给用户提供服务.\n    #nopreempt\n\n    # 开启争用时,会延迟一段时间才开始.\n    #preempt_delay 300\n}\nvrrp_instance VI_2 {\n    state MASTER    # vrrp实例VI_2中HostA作为主\n    interface eth0\n    virtual_router_id 171\n    priority 100     # BACKUP的优先级要低一些\n    advert_int 1\n    authentication {\n        auth_type PASS\n        auth_pass uWjblY62\n    }\n    virtual_ipaddress {\n        10.207.0.164/24 brd 10.207.0.164 dev eth0 label eth0:0  # VIP1\n    }\n\n    # 在此处调用nginx进程监控脚本\n    track_script {\n        chk_nginx\n    }\n}\n\n```","source":"_posts/2016-09-27-基础服务-keepalived+nginx.md","raw":"---\ntitle: KeepAlived高可用Nginx\ncategories: 实践与总结\ntag: 高可用\nabbrlink: bf9d2e83\ndate: 2016-09-27 00:00:00\n---\n\n# 主\n\n## Nginx\n> /etc/nginx/conf.d/default.conf\n> 同时修改nginx.conf里监听的端口\n\n<!-- more -->\n```\n~]# vim /etc/nginx/conf.d/default.conf\n#\n# The default server\n#\n upstream backend {\n          server 10.207.0.88 weight=1;\n          server 10.207.0.89 weight=1;\n    }\n\n    server {\n        listen       80;\n        server_name  localhost;\n        # 当nginx将php代码送至后端RS处理时请求头中的Host值会是backend.\n        # php代码在RS上处理时,其内部代码会去请求图片/层叠样式表等静态资源以填充页面.\n        # 而php代码去请求后端资源时使用的是如http://backend/xxxx.php这样的url,自然是取不到的.\n        # 所以我们要在nginx向后代理遇到Host为backend时,将其转换为127.0.0.1.\n        set $my_host $http_host;\n        if ($http_host = \"backend\") {\n            set $my_host \"127.0.0.1\";\n        }\n\n        location / {\n              proxy_pass     http://backend;\n              proxy_redirect off;\n              proxy_set_header  Host  $my_host;\n         }\n    }\n\nserver {\n    listen       8080 default_server;\n    server_name  localhost;\n    root         /usr/share/nginx/html;\n\n    # Load configuration files for the default server block.\n    include /etc/nginx/default.d/*.conf;\n\n    location / {\n    }\n\n    error_page 404 /404.html;\n        location = /40x.html {\n    }\n\n    error_page 500 502 503 504 /50x.html;\n        location = /50x.html {\n    }\n\n}\n\n```\n## keepalived\n\n```\n! Configuration File for keepalived\nglobal_defs {\n\n   notification_email {\n     root@localhost  # 邮件给本机root用户\n   }\n   notification_email_from admin@nginx-124.com\n   smtp_server 127.0.0.1  # 使用本机作为smtp服务器\n   smtp_connect_timeout 30\n   router_id 8a028eb8  # 标识主机,可以使用主机名.\n   vrrp_mcast_group4 224.0.71.18  # 多播地址,用于发送心跳信号.尽量让集群内的主机处于同一个独立的多播地址.\n}\n\n# nginx进程监控脚本.如果进程不在,降低自身权重,使从节点主机优先级高于自身,将VRRP漂移至从节点主机.\nvrrp_script chk_nginx {\n    script \"killall -0 nginx\"\n    interval 2\n    weight -8\n}\nvrrp_instance VI_1 {\n    state MASTER  # vrrp实例VI_1中作为主\n    interface eth0\n    virtual_router_id 71 # 0-255范围内的数字,用于区分vrrp实例,所以两个实例不能一致.\n    priority 100    # MASTER的优先级要高一些\n    advert_int 1\n    authentication {\n        auth_type PASS\n        auth_pass uWjblY61  # 简单字符认证, 8位任意字符串.\n    }\n    virtual_ipaddress {\n        10.207.0.164/24 brd 10.207.0.164 dev eth0 label eth0:0  # VIP1\n    }\n\n    # 在此处调用nginx进程监控脚本\n    track_script {\n        chk_nginx\n    }\n\n    # 关闭争用. 争用是指当高优先级节点上线会立即争夺成为MASTER\n    # 而不管其它节点是否正在给用户提供服务.\n    #nopreempt\n\n    # 开启争用时,会延迟一段时间才开始.\n    #preempt_delay 300\n}\nvrrp_instance VI_2 {\n    state BACKUP    # vrrp实例VI_2中作为备\n    interface eth0\n    virtual_router_id 171\n    priority 95     # MASTER的优先级要高一些\n    advert_int 1\n    authentication {\n        auth_type PASS\n        auth_pass uWjblY62\n    }\n    virtual_ipaddress {\n        10.207.0.164/24 brd 10.207.0.164 dev eth0 label eth0:0  # VIP1\n    }\n\n    # 在此处调用nginx进程监控脚本\n    track_script {\n        chk_nginx\n    }\n}\n\n\n```\n\n# 备\n## Nginx\n> /etc/nginx/conf.d/default.conf\n> 同时修改nginx.conf里监听的端口\n\n```\n\nupstream backend {\n          server 10.207.0.88 weight=1;\n          server 10.207.0.89 weight=1;\n    }\n\n    server {\n        listen       80;\n        server_name  localhost;\n        # 当nginx将php代码送至后端RS处理时请求头中的Host值会是backend.\n        # php代码在RS上处理时,其内部代码会去请求图片/层叠样式表等静态资源以填充页面.\n        # 而php代码去请求资源时使用的是如http://backend/xxxx.php这样的url,自然是取不到的.\n        # 所以我们要在nginx向后代理遇到Host为backend时,将其转换为127.0.0.1.\n       set $my_host $http_host;\n        if ($http_host = \"backend\") {\n            set $my_host \"127.0.0.1\";\n        }\n\n        location / {\n              proxy_pass     http://backend;\n              proxy_redirect off;\n              proxy_set_header  Host  $my_host;\n         }\n    }\n\n\nserver {\n     listen       8080 default_server;\n     server_name  localhost;\n     root         /usr/share/nginx/html;\n     \n     # Load configuration files for the default server block.\n     include /etc/nginx/default.d/*.conf;\n     \n     location / {\n     }\n     \n     error_page 404 /404.html;\n         location = /40x.html {\n     }   \n     \n     error_page 500 502 503 504 /50x.html;\n        location = /50x.html { \n     }\n \n}\n\n\n```\n\n## keepalived\n\n```\n! Configuration File for keepalived\nglobal_defs {\n\n   notification_email {\n     root@localhost  # 邮件给本机root用户\n   }\n   notification_email_from admin@nginx-133.com\n   smtp_server 127.0.0.1  # 使用本机作为smtp服务器\n   smtp_connect_timeout 30\n   router_id 8a028eb8  # 标识主机,可以使用主机名.\n   vrrp_mcast_group4 224.0.71.18  # 多播地址,用于发送心跳信号.尽量让集群内的主机处于同一个独立的多播地址.\n}\n\n# nginx进程监控脚本.如果进程不在,降低自身权重,使从节点主机优先级高于自身,将VRRP漂移至从节点主机.\nvrrp_script chk_nginx {\n    script \"killall -0 nginx\"\n    interval 2\n    weight -8\n}\nvrrp_instance VI_1 {\n    state BACKUP  # vrrp实例VI_1中HostA作为备\n    interface eth0\n    virtual_router_id 71 # 0-255范围内的数字,用于区分vrrp实例,所以两个实例不能一致.\n    priority 95    # MASTER的优先级要高一些\n    advert_int 1\n    authentication {\n        auth_type PASS\n        auth_pass uWjblY61  # 简单字符认证, 8位任意字符串.\n    }\n    virtual_ipaddress {\n        10.207.0.164/24 brd 10.207.0.164 dev eth0 label eth0:0  # VIP1\n    }\n\n    # 在此处调用nginx进程监控脚本\n    track_script {\n        chk_nginx\n    }\n\n    # 关闭争用. 争用是指当高优先级节点上线会立即争夺成为MASTER\n    # 而不管其它节点是否正在给用户提供服务.\n    #nopreempt\n\n    # 开启争用时,会延迟一段时间才开始.\n    #preempt_delay 300\n}\nvrrp_instance VI_2 {\n    state MASTER    # vrrp实例VI_2中HostA作为主\n    interface eth0\n    virtual_router_id 171\n    priority 100     # BACKUP的优先级要低一些\n    advert_int 1\n    authentication {\n        auth_type PASS\n        auth_pass uWjblY62\n    }\n    virtual_ipaddress {\n        10.207.0.164/24 brd 10.207.0.164 dev eth0 label eth0:0  # VIP1\n    }\n\n    # 在此处调用nginx进程监控脚本\n    track_script {\n        chk_nginx\n    }\n}\n\n```","slug":"2016-09-27-基础服务-keepalived+nginx","published":1,"updated":"2017-02-14T13:42:45.413Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5mkehsb002bao94xx1tp8bc","content":"<h1 id=\"主\"><a href=\"#主\" class=\"headerlink\" title=\"主\"></a>主</h1><h2 id=\"Nginx\"><a href=\"#Nginx\" class=\"headerlink\" title=\"Nginx\"></a>Nginx</h2><blockquote>\n<p>/etc/nginx/conf.d/default.conf<br>同时修改nginx.conf里监听的端口</p>\n</blockquote>\n<a id=\"more\"></a>\n<figure class=\"highlight puppet\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div></pre></td><td class=\"code\"><pre><div class=\"line\">~]<span class=\"comment\"># vim /etc/nginx/conf.d/default.conf</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\"># The default server</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"> upstream <span class=\"keyword\">backend</span> &#123;</div><div class=\"line\">          server <span class=\"number\">10.207</span>.<span class=\"number\">0</span>.<span class=\"number\">88</span> weight=<span class=\"number\">1</span>;</div><div class=\"line\">          server <span class=\"number\">10.207</span>.<span class=\"number\">0</span>.<span class=\"number\">89</span> weight=<span class=\"number\">1</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">server</span> &#123;</div><div class=\"line\">        listen       <span class=\"number\">80</span>;</div><div class=\"line\">        server_name  localhost;</div><div class=\"line\">        <span class=\"comment\"># 当nginx将php代码送至后端RS处理时请求头中的Host值会是backend.</span></div><div class=\"line\">        <span class=\"comment\"># php代码在RS上处理时,其内部代码会去请求图片/层叠样式表等静态资源以填充页面.</span></div><div class=\"line\">        <span class=\"comment\"># 而php代码去请求后端资源时使用的是如http://backend/xxxx.php这样的url,自然是取不到的.</span></div><div class=\"line\">        <span class=\"comment\"># 所以我们要在nginx向后代理遇到Host为backend时,将其转换为127.0.0.1.</span></div><div class=\"line\">        set <span class=\"variable\">$my_host</span> <span class=\"variable\">$http_host</span>;</div><div class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"variable\">$http_host</span> = <span class=\"string\">\"backend\"</span>) &#123;</div><div class=\"line\">            set <span class=\"variable\">$my_host</span> <span class=\"string\">\"127.0.0.1\"</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">location</span> / &#123;</div><div class=\"line\">              proxy_pass     http://backend;</div><div class=\"line\">              proxy_redirect off;</div><div class=\"line\">              proxy_set_header  Host  <span class=\"variable\">$my_host</span>;</div><div class=\"line\">         &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">server</span> &#123;</div><div class=\"line\">    listen       <span class=\"number\">8080</span> default_server;</div><div class=\"line\">    server_name  localhost;</div><div class=\"line\">    <span class=\"literal\">root</span>         /usr/share/nginx/html;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># Load configuration files for the default server block.</span></div><div class=\"line\">    <span class=\"literal\">include</span> /etc/nginx/<span class=\"keyword\">default</span>.d/*.conf;</div><div class=\"line\"></div><div class=\"line\">    location / &#123;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">error_page</span> 404 /404.html;</div><div class=\"line\">        location = /40x.<span class=\"keyword\">html</span> &#123;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">error_page</span> 500 502 503 504 /50x.html;</div><div class=\"line\">        location = /50x.<span class=\"keyword\">html</span> &#123;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"keepalived\"><a href=\"#keepalived\" class=\"headerlink\" title=\"keepalived\"></a>keepalived</h2><figure class=\"highlight pf\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div></pre></td><td class=\"code\"><pre><div class=\"line\">! Configuration File <span class=\"keyword\">for</span> keepalived</div><div class=\"line\">global_defs &#123;</div><div class=\"line\"></div><div class=\"line\">   notification_email &#123;</div><div class=\"line\">     root@localhost  <span class=\"comment\"># 邮件给本机root用户</span></div><div class=\"line\">   &#125;</div><div class=\"line\">   notification_email_from admin@nginx-<span class=\"number\">124</span>.com</div><div class=\"line\">   smtp_server <span class=\"number\">127.0</span>.<span class=\"number\">0.1</span>  <span class=\"comment\"># 使用本机作为smtp服务器</span></div><div class=\"line\">   smtp_connect_timeout <span class=\"number\">30</span></div><div class=\"line\">   router_id <span class=\"number\">8</span>a028eb8  <span class=\"comment\"># 标识主机,可以使用主机名.</span></div><div class=\"line\">   vrrp_mcast_group4 <span class=\"number\">224.0</span>.<span class=\"number\">71.18</span>  <span class=\"comment\"># 多播地址,用于发送心跳信号.尽量让集群内的主机处于同一个独立的多播地址.</span></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># nginx进程监控脚本.如果进程不在,降低自身权重,使从节点主机优先级高于自身,将VRRP漂移至从节点主机.</span></div><div class=\"line\">vrrp_script chk_nginx &#123;</div><div class=\"line\">    script <span class=\"string\">\"killall -0 nginx\"</span></div><div class=\"line\">    interval <span class=\"number\">2</span></div><div class=\"line\">    weight -<span class=\"number\">8</span></div><div class=\"line\">&#125;</div><div class=\"line\">vrrp_instance VI_1 &#123;</div><div class=\"line\">    <span class=\"keyword\">state</span> MASTER  <span class=\"comment\"># vrrp实例VI_1中作为主</span></div><div class=\"line\">    interface eth0</div><div class=\"line\">    virtual_router_id <span class=\"number\">71</span> <span class=\"comment\"># 0-255范围内的数字,用于区分vrrp实例,所以两个实例不能一致.</span></div><div class=\"line\">    priority <span class=\"number\">100</span>    <span class=\"comment\"># MASTER的优先级要高一些</span></div><div class=\"line\">    advert_int <span class=\"number\">1</span></div><div class=\"line\">    authentication &#123;</div><div class=\"line\">        auth_type PASS</div><div class=\"line\">        auth_pass uWjblY61  <span class=\"comment\"># 简单字符认证, 8位任意字符串.</span></div><div class=\"line\">    &#125;</div><div class=\"line\">    virtual_ipaddress &#123;</div><div class=\"line\">        <span class=\"number\">10.207</span>.<span class=\"number\">0.164</span>/<span class=\"number\">24</span> brd <span class=\"number\">10.207</span>.<span class=\"number\">0.164</span> dev eth0 <span class=\"keyword\">label</span> eth0:<span class=\"number\">0</span>  <span class=\"comment\"># VIP1</span></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># 在此处调用nginx进程监控脚本</span></div><div class=\"line\">    track_script &#123;</div><div class=\"line\">        chk_nginx</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># 关闭争用. 争用是指当高优先级节点上线会立即争夺成为MASTER</span></div><div class=\"line\">    <span class=\"comment\"># 而不管其它节点是否正在给用户提供服务.</span></div><div class=\"line\">    <span class=\"comment\">#nopreempt</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># 开启争用时,会延迟一段时间才开始.</span></div><div class=\"line\">    <span class=\"comment\">#preempt_delay 300</span></div><div class=\"line\">&#125;</div><div class=\"line\">vrrp_instance VI_2 &#123;</div><div class=\"line\">    <span class=\"keyword\">state</span> BACKUP    <span class=\"comment\"># vrrp实例VI_2中作为备</span></div><div class=\"line\">    interface eth0</div><div class=\"line\">    virtual_router_id <span class=\"number\">171</span></div><div class=\"line\">    priority <span class=\"number\">95</span>     <span class=\"comment\"># MASTER的优先级要高一些</span></div><div class=\"line\">    advert_int <span class=\"number\">1</span></div><div class=\"line\">    authentication &#123;</div><div class=\"line\">        auth_type PASS</div><div class=\"line\">        auth_pass uWjblY62</div><div class=\"line\">    &#125;</div><div class=\"line\">    virtual_ipaddress &#123;</div><div class=\"line\">        <span class=\"number\">10.207</span>.<span class=\"number\">0.164</span>/<span class=\"number\">24</span> brd <span class=\"number\">10.207</span>.<span class=\"number\">0.164</span> dev eth0 <span class=\"keyword\">label</span> eth0:<span class=\"number\">0</span>  <span class=\"comment\"># VIP1</span></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># 在此处调用nginx进程监控脚本</span></div><div class=\"line\">    track_script &#123;</div><div class=\"line\">        chk_nginx</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"备\"><a href=\"#备\" class=\"headerlink\" title=\"备\"></a>备</h1><h2 id=\"Nginx-1\"><a href=\"#Nginx-1\" class=\"headerlink\" title=\"Nginx\"></a>Nginx</h2><blockquote>\n<p>/etc/nginx/conf.d/default.conf<br>同时修改nginx.conf里监听的端口</p>\n</blockquote>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"attribute\">upstream</span> backend &#123;</div><div class=\"line\">          <span class=\"attribute\">server</span> <span class=\"number\">10.207.0.88</span> weight=<span class=\"number\">1</span>;</div><div class=\"line\">          <span class=\"attribute\">server</span> <span class=\"number\">10.207.0.89</span> weight=<span class=\"number\">1</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"section\">server</span> &#123;</div><div class=\"line\">        <span class=\"attribute\">listen</span>       <span class=\"number\">80</span>;</div><div class=\"line\">        <span class=\"attribute\">server_name</span>  localhost;</div><div class=\"line\">        <span class=\"comment\"># 当nginx将php代码送至后端RS处理时请求头中的Host值会是backend.</span></div><div class=\"line\">        <span class=\"comment\"># php代码在RS上处理时,其内部代码会去请求图片/层叠样式表等静态资源以填充页面.</span></div><div class=\"line\">        <span class=\"comment\"># 而php代码去请求资源时使用的是如http://backend/xxxx.php这样的url,自然是取不到的.</span></div><div class=\"line\">        <span class=\"comment\"># 所以我们要在nginx向后代理遇到Host为backend时,将其转换为127.0.0.1.</span></div><div class=\"line\">       <span class=\"attribute\">set</span> <span class=\"variable\">$my_host</span> <span class=\"variable\">$http_host</span>;</div><div class=\"line\">        <span class=\"attribute\">if</span> (<span class=\"variable\">$http_host</span> = <span class=\"string\">\"backend\"</span>) &#123;</div><div class=\"line\">            <span class=\"attribute\">set</span> <span class=\"variable\">$my_host</span> <span class=\"string\">\"127.0.0.1\"</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"attribute\">location</span> / &#123;</div><div class=\"line\">              <span class=\"attribute\">proxy_pass</span>     http://backend;</div><div class=\"line\">              <span class=\"attribute\">proxy_redirect</span> <span class=\"literal\">off</span>;</div><div class=\"line\">              <span class=\"attribute\">proxy_set_header</span>  Host  <span class=\"variable\">$my_host</span>;</div><div class=\"line\">         &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"section\">server</span> &#123;</div><div class=\"line\">     <span class=\"attribute\">listen</span>       <span class=\"number\">8080</span> default_server;</div><div class=\"line\">     <span class=\"attribute\">server_name</span>  localhost;</div><div class=\"line\">     <span class=\"attribute\">root</span>         /usr/share/nginx/html;</div><div class=\"line\">     </div><div class=\"line\">     <span class=\"comment\"># Load configuration files for the default server block.</span></div><div class=\"line\">     <span class=\"attribute\">include</span> /etc/nginx/default.d/<span class=\"regexp\">*.conf</span>;</div><div class=\"line\">     </div><div class=\"line\">     <span class=\"attribute\">location</span> / &#123;</div><div class=\"line\">     &#125;</div><div class=\"line\">     </div><div class=\"line\">     <span class=\"attribute\">error_page</span> <span class=\"number\">404</span> /<span class=\"number\">404</span>.html;</div><div class=\"line\">         <span class=\"attribute\">location</span> = /40x.html &#123;</div><div class=\"line\">     &#125;   </div><div class=\"line\">     </div><div class=\"line\">     <span class=\"attribute\">error_page</span> <span class=\"number\">500</span> <span class=\"number\">502</span> <span class=\"number\">503</span> <span class=\"number\">504</span> /50x.html;</div><div class=\"line\">        <span class=\"attribute\">location</span> = /50x.html &#123; </div><div class=\"line\">     &#125;</div><div class=\"line\"> </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"keepalived-1\"><a href=\"#keepalived-1\" class=\"headerlink\" title=\"keepalived\"></a>keepalived</h2><figure class=\"highlight pf\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div></pre></td><td class=\"code\"><pre><div class=\"line\">! Configuration File <span class=\"keyword\">for</span> keepalived</div><div class=\"line\">global_defs &#123;</div><div class=\"line\"></div><div class=\"line\">   notification_email &#123;</div><div class=\"line\">     root@localhost  <span class=\"comment\"># 邮件给本机root用户</span></div><div class=\"line\">   &#125;</div><div class=\"line\">   notification_email_from admin@nginx-<span class=\"number\">133</span>.com</div><div class=\"line\">   smtp_server <span class=\"number\">127.0</span>.<span class=\"number\">0.1</span>  <span class=\"comment\"># 使用本机作为smtp服务器</span></div><div class=\"line\">   smtp_connect_timeout <span class=\"number\">30</span></div><div class=\"line\">   router_id <span class=\"number\">8</span>a028eb8  <span class=\"comment\"># 标识主机,可以使用主机名.</span></div><div class=\"line\">   vrrp_mcast_group4 <span class=\"number\">224.0</span>.<span class=\"number\">71.18</span>  <span class=\"comment\"># 多播地址,用于发送心跳信号.尽量让集群内的主机处于同一个独立的多播地址.</span></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># nginx进程监控脚本.如果进程不在,降低自身权重,使从节点主机优先级高于自身,将VRRP漂移至从节点主机.</span></div><div class=\"line\">vrrp_script chk_nginx &#123;</div><div class=\"line\">    script <span class=\"string\">\"killall -0 nginx\"</span></div><div class=\"line\">    interval <span class=\"number\">2</span></div><div class=\"line\">    weight -<span class=\"number\">8</span></div><div class=\"line\">&#125;</div><div class=\"line\">vrrp_instance VI_1 &#123;</div><div class=\"line\">    <span class=\"keyword\">state</span> BACKUP  <span class=\"comment\"># vrrp实例VI_1中HostA作为备</span></div><div class=\"line\">    interface eth0</div><div class=\"line\">    virtual_router_id <span class=\"number\">71</span> <span class=\"comment\"># 0-255范围内的数字,用于区分vrrp实例,所以两个实例不能一致.</span></div><div class=\"line\">    priority <span class=\"number\">95</span>    <span class=\"comment\"># MASTER的优先级要高一些</span></div><div class=\"line\">    advert_int <span class=\"number\">1</span></div><div class=\"line\">    authentication &#123;</div><div class=\"line\">        auth_type PASS</div><div class=\"line\">        auth_pass uWjblY61  <span class=\"comment\"># 简单字符认证, 8位任意字符串.</span></div><div class=\"line\">    &#125;</div><div class=\"line\">    virtual_ipaddress &#123;</div><div class=\"line\">        <span class=\"number\">10.207</span>.<span class=\"number\">0.164</span>/<span class=\"number\">24</span> brd <span class=\"number\">10.207</span>.<span class=\"number\">0.164</span> dev eth0 <span class=\"keyword\">label</span> eth0:<span class=\"number\">0</span>  <span class=\"comment\"># VIP1</span></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># 在此处调用nginx进程监控脚本</span></div><div class=\"line\">    track_script &#123;</div><div class=\"line\">        chk_nginx</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># 关闭争用. 争用是指当高优先级节点上线会立即争夺成为MASTER</span></div><div class=\"line\">    <span class=\"comment\"># 而不管其它节点是否正在给用户提供服务.</span></div><div class=\"line\">    <span class=\"comment\">#nopreempt</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># 开启争用时,会延迟一段时间才开始.</span></div><div class=\"line\">    <span class=\"comment\">#preempt_delay 300</span></div><div class=\"line\">&#125;</div><div class=\"line\">vrrp_instance VI_2 &#123;</div><div class=\"line\">    <span class=\"keyword\">state</span> MASTER    <span class=\"comment\"># vrrp实例VI_2中HostA作为主</span></div><div class=\"line\">    interface eth0</div><div class=\"line\">    virtual_router_id <span class=\"number\">171</span></div><div class=\"line\">    priority <span class=\"number\">100</span>     <span class=\"comment\"># BACKUP的优先级要低一些</span></div><div class=\"line\">    advert_int <span class=\"number\">1</span></div><div class=\"line\">    authentication &#123;</div><div class=\"line\">        auth_type PASS</div><div class=\"line\">        auth_pass uWjblY62</div><div class=\"line\">    &#125;</div><div class=\"line\">    virtual_ipaddress &#123;</div><div class=\"line\">        <span class=\"number\">10.207</span>.<span class=\"number\">0.164</span>/<span class=\"number\">24</span> brd <span class=\"number\">10.207</span>.<span class=\"number\">0.164</span> dev eth0 <span class=\"keyword\">label</span> eth0:<span class=\"number\">0</span>  <span class=\"comment\"># VIP1</span></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># 在此处调用nginx进程监控脚本</span></div><div class=\"line\">    track_script &#123;</div><div class=\"line\">        chk_nginx</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h1 id=\"主\"><a href=\"#主\" class=\"headerlink\" title=\"主\"></a>主</h1><h2 id=\"Nginx\"><a href=\"#Nginx\" class=\"headerlink\" title=\"Nginx\"></a>Nginx</h2><blockquote>\n<p>/etc/nginx/conf.d/default.conf<br>同时修改nginx.conf里监听的端口</p>\n</blockquote>","more":"<figure class=\"highlight puppet\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div></pre></td><td class=\"code\"><pre><div class=\"line\">~]<span class=\"comment\"># vim /etc/nginx/conf.d/default.conf</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\"># The default server</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"> upstream <span class=\"keyword\">backend</span> &#123;</div><div class=\"line\">          server <span class=\"number\">10.207</span>.<span class=\"number\">0</span>.<span class=\"number\">88</span> weight=<span class=\"number\">1</span>;</div><div class=\"line\">          server <span class=\"number\">10.207</span>.<span class=\"number\">0</span>.<span class=\"number\">89</span> weight=<span class=\"number\">1</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">server</span> &#123;</div><div class=\"line\">        listen       <span class=\"number\">80</span>;</div><div class=\"line\">        server_name  localhost;</div><div class=\"line\">        <span class=\"comment\"># 当nginx将php代码送至后端RS处理时请求头中的Host值会是backend.</span></div><div class=\"line\">        <span class=\"comment\"># php代码在RS上处理时,其内部代码会去请求图片/层叠样式表等静态资源以填充页面.</span></div><div class=\"line\">        <span class=\"comment\"># 而php代码去请求后端资源时使用的是如http://backend/xxxx.php这样的url,自然是取不到的.</span></div><div class=\"line\">        <span class=\"comment\"># 所以我们要在nginx向后代理遇到Host为backend时,将其转换为127.0.0.1.</span></div><div class=\"line\">        set <span class=\"variable\">$my_host</span> <span class=\"variable\">$http_host</span>;</div><div class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"variable\">$http_host</span> = <span class=\"string\">\"backend\"</span>) &#123;</div><div class=\"line\">            set <span class=\"variable\">$my_host</span> <span class=\"string\">\"127.0.0.1\"</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">location</span> / &#123;</div><div class=\"line\">              proxy_pass     http://backend;</div><div class=\"line\">              proxy_redirect off;</div><div class=\"line\">              proxy_set_header  Host  <span class=\"variable\">$my_host</span>;</div><div class=\"line\">         &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">server</span> &#123;</div><div class=\"line\">    listen       <span class=\"number\">8080</span> default_server;</div><div class=\"line\">    server_name  localhost;</div><div class=\"line\">    <span class=\"literal\">root</span>         /usr/share/nginx/html;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># Load configuration files for the default server block.</span></div><div class=\"line\">    <span class=\"literal\">include</span> /etc/nginx/<span class=\"keyword\">default</span>.d/*.conf;</div><div class=\"line\"></div><div class=\"line\">    location / &#123;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">error_page</span> 404 /404.html;</div><div class=\"line\">        location = /40x.<span class=\"keyword\">html</span> &#123;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">error_page</span> 500 502 503 504 /50x.html;</div><div class=\"line\">        location = /50x.<span class=\"keyword\">html</span> &#123;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"keepalived\"><a href=\"#keepalived\" class=\"headerlink\" title=\"keepalived\"></a>keepalived</h2><figure class=\"highlight pf\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div></pre></td><td class=\"code\"><pre><div class=\"line\">! Configuration File <span class=\"keyword\">for</span> keepalived</div><div class=\"line\">global_defs &#123;</div><div class=\"line\"></div><div class=\"line\">   notification_email &#123;</div><div class=\"line\">     root@localhost  <span class=\"comment\"># 邮件给本机root用户</span></div><div class=\"line\">   &#125;</div><div class=\"line\">   notification_email_from admin@nginx-<span class=\"number\">124</span>.com</div><div class=\"line\">   smtp_server <span class=\"number\">127.0</span>.<span class=\"number\">0.1</span>  <span class=\"comment\"># 使用本机作为smtp服务器</span></div><div class=\"line\">   smtp_connect_timeout <span class=\"number\">30</span></div><div class=\"line\">   router_id <span class=\"number\">8</span>a028eb8  <span class=\"comment\"># 标识主机,可以使用主机名.</span></div><div class=\"line\">   vrrp_mcast_group4 <span class=\"number\">224.0</span>.<span class=\"number\">71.18</span>  <span class=\"comment\"># 多播地址,用于发送心跳信号.尽量让集群内的主机处于同一个独立的多播地址.</span></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># nginx进程监控脚本.如果进程不在,降低自身权重,使从节点主机优先级高于自身,将VRRP漂移至从节点主机.</span></div><div class=\"line\">vrrp_script chk_nginx &#123;</div><div class=\"line\">    script <span class=\"string\">\"killall -0 nginx\"</span></div><div class=\"line\">    interval <span class=\"number\">2</span></div><div class=\"line\">    weight -<span class=\"number\">8</span></div><div class=\"line\">&#125;</div><div class=\"line\">vrrp_instance VI_1 &#123;</div><div class=\"line\">    <span class=\"keyword\">state</span> MASTER  <span class=\"comment\"># vrrp实例VI_1中作为主</span></div><div class=\"line\">    interface eth0</div><div class=\"line\">    virtual_router_id <span class=\"number\">71</span> <span class=\"comment\"># 0-255范围内的数字,用于区分vrrp实例,所以两个实例不能一致.</span></div><div class=\"line\">    priority <span class=\"number\">100</span>    <span class=\"comment\"># MASTER的优先级要高一些</span></div><div class=\"line\">    advert_int <span class=\"number\">1</span></div><div class=\"line\">    authentication &#123;</div><div class=\"line\">        auth_type PASS</div><div class=\"line\">        auth_pass uWjblY61  <span class=\"comment\"># 简单字符认证, 8位任意字符串.</span></div><div class=\"line\">    &#125;</div><div class=\"line\">    virtual_ipaddress &#123;</div><div class=\"line\">        <span class=\"number\">10.207</span>.<span class=\"number\">0.164</span>/<span class=\"number\">24</span> brd <span class=\"number\">10.207</span>.<span class=\"number\">0.164</span> dev eth0 <span class=\"keyword\">label</span> eth0:<span class=\"number\">0</span>  <span class=\"comment\"># VIP1</span></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># 在此处调用nginx进程监控脚本</span></div><div class=\"line\">    track_script &#123;</div><div class=\"line\">        chk_nginx</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># 关闭争用. 争用是指当高优先级节点上线会立即争夺成为MASTER</span></div><div class=\"line\">    <span class=\"comment\"># 而不管其它节点是否正在给用户提供服务.</span></div><div class=\"line\">    <span class=\"comment\">#nopreempt</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># 开启争用时,会延迟一段时间才开始.</span></div><div class=\"line\">    <span class=\"comment\">#preempt_delay 300</span></div><div class=\"line\">&#125;</div><div class=\"line\">vrrp_instance VI_2 &#123;</div><div class=\"line\">    <span class=\"keyword\">state</span> BACKUP    <span class=\"comment\"># vrrp实例VI_2中作为备</span></div><div class=\"line\">    interface eth0</div><div class=\"line\">    virtual_router_id <span class=\"number\">171</span></div><div class=\"line\">    priority <span class=\"number\">95</span>     <span class=\"comment\"># MASTER的优先级要高一些</span></div><div class=\"line\">    advert_int <span class=\"number\">1</span></div><div class=\"line\">    authentication &#123;</div><div class=\"line\">        auth_type PASS</div><div class=\"line\">        auth_pass uWjblY62</div><div class=\"line\">    &#125;</div><div class=\"line\">    virtual_ipaddress &#123;</div><div class=\"line\">        <span class=\"number\">10.207</span>.<span class=\"number\">0.164</span>/<span class=\"number\">24</span> brd <span class=\"number\">10.207</span>.<span class=\"number\">0.164</span> dev eth0 <span class=\"keyword\">label</span> eth0:<span class=\"number\">0</span>  <span class=\"comment\"># VIP1</span></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># 在此处调用nginx进程监控脚本</span></div><div class=\"line\">    track_script &#123;</div><div class=\"line\">        chk_nginx</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"备\"><a href=\"#备\" class=\"headerlink\" title=\"备\"></a>备</h1><h2 id=\"Nginx-1\"><a href=\"#Nginx-1\" class=\"headerlink\" title=\"Nginx\"></a>Nginx</h2><blockquote>\n<p>/etc/nginx/conf.d/default.conf<br>同时修改nginx.conf里监听的端口</p>\n</blockquote>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"attribute\">upstream</span> backend &#123;</div><div class=\"line\">          <span class=\"attribute\">server</span> <span class=\"number\">10.207.0.88</span> weight=<span class=\"number\">1</span>;</div><div class=\"line\">          <span class=\"attribute\">server</span> <span class=\"number\">10.207.0.89</span> weight=<span class=\"number\">1</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"section\">server</span> &#123;</div><div class=\"line\">        <span class=\"attribute\">listen</span>       <span class=\"number\">80</span>;</div><div class=\"line\">        <span class=\"attribute\">server_name</span>  localhost;</div><div class=\"line\">        <span class=\"comment\"># 当nginx将php代码送至后端RS处理时请求头中的Host值会是backend.</span></div><div class=\"line\">        <span class=\"comment\"># php代码在RS上处理时,其内部代码会去请求图片/层叠样式表等静态资源以填充页面.</span></div><div class=\"line\">        <span class=\"comment\"># 而php代码去请求资源时使用的是如http://backend/xxxx.php这样的url,自然是取不到的.</span></div><div class=\"line\">        <span class=\"comment\"># 所以我们要在nginx向后代理遇到Host为backend时,将其转换为127.0.0.1.</span></div><div class=\"line\">       <span class=\"attribute\">set</span> <span class=\"variable\">$my_host</span> <span class=\"variable\">$http_host</span>;</div><div class=\"line\">        <span class=\"attribute\">if</span> (<span class=\"variable\">$http_host</span> = <span class=\"string\">\"backend\"</span>) &#123;</div><div class=\"line\">            <span class=\"attribute\">set</span> <span class=\"variable\">$my_host</span> <span class=\"string\">\"127.0.0.1\"</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"attribute\">location</span> / &#123;</div><div class=\"line\">              <span class=\"attribute\">proxy_pass</span>     http://backend;</div><div class=\"line\">              <span class=\"attribute\">proxy_redirect</span> <span class=\"literal\">off</span>;</div><div class=\"line\">              <span class=\"attribute\">proxy_set_header</span>  Host  <span class=\"variable\">$my_host</span>;</div><div class=\"line\">         &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"section\">server</span> &#123;</div><div class=\"line\">     <span class=\"attribute\">listen</span>       <span class=\"number\">8080</span> default_server;</div><div class=\"line\">     <span class=\"attribute\">server_name</span>  localhost;</div><div class=\"line\">     <span class=\"attribute\">root</span>         /usr/share/nginx/html;</div><div class=\"line\">     </div><div class=\"line\">     <span class=\"comment\"># Load configuration files for the default server block.</span></div><div class=\"line\">     <span class=\"attribute\">include</span> /etc/nginx/default.d/<span class=\"regexp\">*.conf</span>;</div><div class=\"line\">     </div><div class=\"line\">     <span class=\"attribute\">location</span> / &#123;</div><div class=\"line\">     &#125;</div><div class=\"line\">     </div><div class=\"line\">     <span class=\"attribute\">error_page</span> <span class=\"number\">404</span> /<span class=\"number\">404</span>.html;</div><div class=\"line\">         <span class=\"attribute\">location</span> = /40x.html &#123;</div><div class=\"line\">     &#125;   </div><div class=\"line\">     </div><div class=\"line\">     <span class=\"attribute\">error_page</span> <span class=\"number\">500</span> <span class=\"number\">502</span> <span class=\"number\">503</span> <span class=\"number\">504</span> /50x.html;</div><div class=\"line\">        <span class=\"attribute\">location</span> = /50x.html &#123; </div><div class=\"line\">     &#125;</div><div class=\"line\"> </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"keepalived-1\"><a href=\"#keepalived-1\" class=\"headerlink\" title=\"keepalived\"></a>keepalived</h2><figure class=\"highlight pf\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div></pre></td><td class=\"code\"><pre><div class=\"line\">! Configuration File <span class=\"keyword\">for</span> keepalived</div><div class=\"line\">global_defs &#123;</div><div class=\"line\"></div><div class=\"line\">   notification_email &#123;</div><div class=\"line\">     root@localhost  <span class=\"comment\"># 邮件给本机root用户</span></div><div class=\"line\">   &#125;</div><div class=\"line\">   notification_email_from admin@nginx-<span class=\"number\">133</span>.com</div><div class=\"line\">   smtp_server <span class=\"number\">127.0</span>.<span class=\"number\">0.1</span>  <span class=\"comment\"># 使用本机作为smtp服务器</span></div><div class=\"line\">   smtp_connect_timeout <span class=\"number\">30</span></div><div class=\"line\">   router_id <span class=\"number\">8</span>a028eb8  <span class=\"comment\"># 标识主机,可以使用主机名.</span></div><div class=\"line\">   vrrp_mcast_group4 <span class=\"number\">224.0</span>.<span class=\"number\">71.18</span>  <span class=\"comment\"># 多播地址,用于发送心跳信号.尽量让集群内的主机处于同一个独立的多播地址.</span></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># nginx进程监控脚本.如果进程不在,降低自身权重,使从节点主机优先级高于自身,将VRRP漂移至从节点主机.</span></div><div class=\"line\">vrrp_script chk_nginx &#123;</div><div class=\"line\">    script <span class=\"string\">\"killall -0 nginx\"</span></div><div class=\"line\">    interval <span class=\"number\">2</span></div><div class=\"line\">    weight -<span class=\"number\">8</span></div><div class=\"line\">&#125;</div><div class=\"line\">vrrp_instance VI_1 &#123;</div><div class=\"line\">    <span class=\"keyword\">state</span> BACKUP  <span class=\"comment\"># vrrp实例VI_1中HostA作为备</span></div><div class=\"line\">    interface eth0</div><div class=\"line\">    virtual_router_id <span class=\"number\">71</span> <span class=\"comment\"># 0-255范围内的数字,用于区分vrrp实例,所以两个实例不能一致.</span></div><div class=\"line\">    priority <span class=\"number\">95</span>    <span class=\"comment\"># MASTER的优先级要高一些</span></div><div class=\"line\">    advert_int <span class=\"number\">1</span></div><div class=\"line\">    authentication &#123;</div><div class=\"line\">        auth_type PASS</div><div class=\"line\">        auth_pass uWjblY61  <span class=\"comment\"># 简单字符认证, 8位任意字符串.</span></div><div class=\"line\">    &#125;</div><div class=\"line\">    virtual_ipaddress &#123;</div><div class=\"line\">        <span class=\"number\">10.207</span>.<span class=\"number\">0.164</span>/<span class=\"number\">24</span> brd <span class=\"number\">10.207</span>.<span class=\"number\">0.164</span> dev eth0 <span class=\"keyword\">label</span> eth0:<span class=\"number\">0</span>  <span class=\"comment\"># VIP1</span></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># 在此处调用nginx进程监控脚本</span></div><div class=\"line\">    track_script &#123;</div><div class=\"line\">        chk_nginx</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># 关闭争用. 争用是指当高优先级节点上线会立即争夺成为MASTER</span></div><div class=\"line\">    <span class=\"comment\"># 而不管其它节点是否正在给用户提供服务.</span></div><div class=\"line\">    <span class=\"comment\">#nopreempt</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># 开启争用时,会延迟一段时间才开始.</span></div><div class=\"line\">    <span class=\"comment\">#preempt_delay 300</span></div><div class=\"line\">&#125;</div><div class=\"line\">vrrp_instance VI_2 &#123;</div><div class=\"line\">    <span class=\"keyword\">state</span> MASTER    <span class=\"comment\"># vrrp实例VI_2中HostA作为主</span></div><div class=\"line\">    interface eth0</div><div class=\"line\">    virtual_router_id <span class=\"number\">171</span></div><div class=\"line\">    priority <span class=\"number\">100</span>     <span class=\"comment\"># BACKUP的优先级要低一些</span></div><div class=\"line\">    advert_int <span class=\"number\">1</span></div><div class=\"line\">    authentication &#123;</div><div class=\"line\">        auth_type PASS</div><div class=\"line\">        auth_pass uWjblY62</div><div class=\"line\">    &#125;</div><div class=\"line\">    virtual_ipaddress &#123;</div><div class=\"line\">        <span class=\"number\">10.207</span>.<span class=\"number\">0.164</span>/<span class=\"number\">24</span> brd <span class=\"number\">10.207</span>.<span class=\"number\">0.164</span> dev eth0 <span class=\"keyword\">label</span> eth0:<span class=\"number\">0</span>  <span class=\"comment\"># VIP1</span></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># 在此处调用nginx进程监控脚本</span></div><div class=\"line\">    track_script &#123;</div><div class=\"line\">        chk_nginx</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"Python之10分钟快速入门","abbrlink":"f65a1069","date":"2017-01-06T16:00:00.000Z","_content":"\n# 【搭建开发环境】\n\n1 可以到[Welcome to Python.org](https://www.python.org/)下载安装包，然后通过`configure`、`make`、`make install`进行安装。\n\n2 也可以到[ActiveState | ActiveState](http://www.activestate.com/activepython)去下载ActivePython组件包。（ActivePython是对Python核心和常用模块的二 进制包装，它是ActiveState公司发布的Python开发环境。ActivePython使得Python的安装更加容易，并且可以应用在各种操 作系统上。ActivePython包含了一些常用的Python扩展，以及Windows环境的编程接口）。对ActivePython来说，如果你是 windows用户，下载msi包安装即可；如果你是Unix用户，下载tar.gz包直接解压即可。\n\n3 Python的IDE，包括`PythonWin`、`Eclipse+PyDev插件`、`Komodo`、`EditPlus`、`Sublime`等\n<!-- more -->\n# 【版本】\n\npython2与python3是目前主要的两个版本。\n\n如下两种情况下，建议使用python2：\n\n> 1 你无法完全控制你即将部署的环境时；\n\n> 2 你需要使用一些特定的第三方包或扩展时；\n\n\npython3是官方推荐的且是未来全力支持的版本，目前很多功能提升仅在python3版本上进行。\n\n\n# 【hello world】\n\n1 创建hello.py\n\n2 编写程序：\n```\nif __name__ == '__main__':\n    print \"hello word\"\n```\n3 运行程序：\n`python ./hello.py`\n\n# 【注释】\n\n1 无论是行注释还是段注释，均以#加一个空格来注释。\n\n2 如果需要在代码中使用中文注释，必须在python文件的最前面加上如下注释说明：\n\n```\n# -* - coding: UTF-8 -* -\n```\n3 如下注释用于指定解释器\n```\n#! /usr/bin/python\n```\n\n# 【文件类型】\n\n1 Python的文件类型分为3种，即源代码、字节代码和优化代码。这些都可以直接运行，不需要进行编译或连接。\n\n2 源代码以`.py`为扩展名，由`python`来负责解释；\n\n3 源文件经过编译后生成扩展名为.pyc的文件，即编译过的字节文件。这种文件不能使用文本编辑器修改。pyc文件是和平台无关的，可以在大部分操作系统上运行。如下语句可以用来产生pyc文件：\n\n```\nimport py_compile\npy_compile.compile(‘hello.py’)\n```\n4 经过优化的源文件会以.pyo为后缀，即优化代码。它也不能直接用文本编辑器修改，如下命令可用来生成pyo文件：\n```\npython -O -m py_complie hello.py\n```\n\n# 【变量】\n\n1 python中的变量不需要声明，变量的赋值操作即使变量声明和定义的过程。\n\n2 python中一次新的赋值，将创建一个新的变量。即使变量的名称相同，变量的标识并不相同。用id()函数可以获取变量标识：\n```\nx = 1\nprint id(x)\nx = 2\nprint id(x)\n```\n3 如果变量没有赋值，则python认为该变量不存在\n\n4 在函数之外定义的变量都可以称为全局变量。全局变量可以被文件内部的任何函数和外部文件访问。\n\n5 全局变量建议在文件的开头定义。\n\n6 也可以把全局变量放到一个专门的文件中，然后通过import来引用：\n\ngl.py文件中内容如下：\n```\n_a = 1\n_b = 2\n```\nuse_global.py中引用全局变量：\n```\nimport gl\ndef fun():\n  print gl._a\n  print gl._b\nfun()\n```\n# 【常量】\n\npython中没有提供定义常量的保留字。可以自己定义一个常量类来实现常量的功能。\n\n```\nclass _const:\n  class ConstError(TypeError): pass\n    def __setattr__(self,name,vlaue):\n      if self.__dict__.has_key(name):\n        raise self.ConstError, “Can’t rebind const(%s)”%name\n        self.__dict__[name]=value\nimport sys\nsys.modules[__name__]=_const()\n```\n# 【数据类型】\n\n1 python的数字类型分为整型、长整型、浮点型、布尔型、复数类型。\n\n2 python没有字符类型\n\n3 python内部没有普通类型，任何类型都是对象。\n\n4 如果需要查看变量的类型，可以使用type类，该类可以返回变量的类型或创建一个新的类型。\n\n5 python有3种表示字符串类型的方式，即单引号、双引号、三引号。单引号和双引号的作用是相同的。python程序员更喜欢用单引号，C/Java程序员则习惯使用双引号表示字符串。三引号中可以输入单引号、双引号或换行等字符。\n\n# 【运算符和表达式】\n\n1 python不支持自增运算符和自减运算符。例如i++/i–是错误的，但i+=1是可以的。\n\n2 1/2在python2.5之前会等于0.5，在python2.5之后会等于0。\n\n3 不等于为!=或<>\n\n4 等于用==表示\n\n5 逻辑表达式中and表示逻辑与，or表示逻辑或，not表示逻辑非\n\n# 【控制语句】\n\n1、条件语句：\n```\nif (表达式) :\n    语句1\nelse :\n    语句2\n```\n\n2、多条件语句：\n```\nif (表达式) :\n  语句1\nelif (表达式) :\n  语句2\n…\nelif (表达式) :\n  语句n\nelse :\n  语句m\n```\n\n3 条件嵌套：\n\n```\nif (表达式1) :\n  if (表达式2) :\n    语句1\n  elif (表达式3) :\n    语句2\n  …\n  else:\n    语句3\nelif (表达式n) :\n   …\nelse :\n   …\n```\n\n4 python本身没有switch语句。\n\n5 循环语句:\n```\nwhile(表达式) :\n   …\nelse :\n   …\n```\n\n6 循环语句：\n```\nfor 变量 in 集合 :\n   …\nelse :\n   …\n```\n\n7 python不支持类似c的`for(i=0;i<5;i++)`这样的循环语句，但可以借助range模拟：\n\n```\nfor x in range(0,5,2):\n    print x\n```\n\n# 【数组相关】\n\n1 元组（tuple）：python中一种内置的数据结构。元组由不同的元素组成，每个元素可以存储不同类型的数据，如字符串、数字甚至元素。元组是写保护 的，即元组创建之后不能再修改。元组往往代表一行数据，而元组中的元素代表不同的数据项。可以把元组看做不可修改的数组。创建元组示例如下：\n```\ntuple_name=(“apple”,”banana”,”grape”,”orange”)\n```\n2 列表（list）：列表和元组相似，也由一组元素组成，列表可以实现添加、删除和查找操作，元素的值可以被修改。列表是传统意义上的数组。列表创建示例如下：\n```\nlist=[“apple”,”banana”,”grage”,”orange”]\n```\n可以使用append方法来在尾部追加元素，使用remove来删除元素。\n\n3 字典（dictionary）：由键-值对组成的集合，字典中的值通过键来引用。键和值之间用冒号隔开，键-值对之间用逗号隔开，并且被包含在一对花括号中。创建示例如下：\n```\ndict={“a”:”apple”, “b”:”banana”, “g”:”grage”, “o”:”orange”}\n```\n4 序列：序列是具有索引和切片能力的集合。元组、列表和字符串都属于序列。\n\n# 【函数相关】\n\n1 python程序由包（package）、模块（module）和函数组成。包是由一系列模块组成的集合。模块是处理某一类问题的函数和类的集合。\n\n2 包就是一个完成特定任务的工具箱。\n\n3 包必须含有一个__init__.py文件，它用于标识当前文件夹是一个包。\n\n4 python的程序是由一个个模块组成的。模块把一组相关的函数或代码组织到一个文件中，一个文件即是一个模块。模块由代码、函数和类组成。导入模块使用import语句。\n\n5 包的作用是实现程序的重用。\n\n6 函数是一段可以重复多次调用的代码，函数定义示例如下：\n\n```\ndef arithmetic(x,y,operator):\n   result={\n      “+”:x+y,\n      “-“:x-y,\n      “*”:x*y,\n      “/”:x/y\n   }\n```\n\n7 函数返回值可以用return来控制。\n\n# 【字符串相关】\n\n1 格式化输出:\n\n```\nformat=”%s%d” % (str1,num)\nprint format\n```\n\n2 用+进行字符串的合并：\n\n```\nstr1=”hello”\nstr2=”world”\nresult=str1+str2\n```\n\n3 字符串截取可以通过索引/切片，也可以通过split函数。\n\n4 通过切片截取字符串：\n\n```\nword=”world”\nprint word[0:3]\n```\n\n5 python使用==和!=来进行字符串比较。如果比较的两个变量的类型不相同，那么结果必然为不同。\n\n# 【文件处理】\n\n1 简单处理文件:\n\n```\ncontext=”hello,world”\nf=file(“hello.txt”,’w’)\nf.write(context);\nf.close()\n```\n\n2 读取文件可以使用readline()函数、readlines()函数和read函数。\n\n3 写入文件可以使用write()、writelines()函数\n\n# 【对象和类】\n\n1 python用class保留字来定义一个类，类名的首字符要大写。当程序员需要创建的类型不能用简单类型来表示时，就需要定义类，然后利用定义的类创建对象。定义类示例：\n\n```\nclass Fruit:\n    def grow(self):\n       print “Fruit grow”\n```\n\n2 当一个对象被创建后，包含了三方面的特性，即对象的句柄、属性和方法。创建对象的方法：\n\n```\nfruit = Fruit()\nfruit.grow()\n```\n\n3 python没有保护类型的修饰符\n\n4 类的方法也分为公有方法和私有方法。私有函数不能被该类之外的函数调用，私有的方法也不能被外部的类或函数调用。\n\n5 python使用函数”staticmethod()“或”@ staticmethod“指令的方法把普通的函数转换为静态方法。静态方法相当于全局函数。\n\n6 python的构造函数名为__init__，析构函数名为__del__\n\n7 继承的使用方法：\n\n```\nclass Apple(Fruit):\n   def …\n```\n\n# 【连接mysql】\n\n1 用MySQLdb模块操作MySQL数据库非常方便。示例代码如下：\n\n```\nimport os, sys\nimport MySQLdb\ntry:\n    conn=MySQLdb.connect(host=’localhost’,user=’root’,passwd=’password’,db=’address’\nexcept Exception,e:\n    print e\n    sys.exit()\ncursor=conn.cursor()\nsql=’insert into address(name, address) values(%s, %s)’\nvalue=((“zhangsan”,”haidian”),(“lisi”,”haidian”))\ntry\n    cursor.executemany(sql,values)\nexcept Exception, e:\n    print e\nsql=”select * from address”\ncursor.execute(sql)\ndata=cursor.fetchall()\nif data\n    for x in data:\n        print x[0],x[1]\ncursor.close()\nconn.close()\n```\n","source":"_posts/2017-01-17-Python之10分钟入门.md","raw":"---\ntitle: Python之10分钟快速入门\ncategories: 技术与干货\ntag: Python\nabbrlink: f65a1069\ndate: 2017-01-07 00:00:00\n---\n\n# 【搭建开发环境】\n\n1 可以到[Welcome to Python.org](https://www.python.org/)下载安装包，然后通过`configure`、`make`、`make install`进行安装。\n\n2 也可以到[ActiveState | ActiveState](http://www.activestate.com/activepython)去下载ActivePython组件包。（ActivePython是对Python核心和常用模块的二 进制包装，它是ActiveState公司发布的Python开发环境。ActivePython使得Python的安装更加容易，并且可以应用在各种操 作系统上。ActivePython包含了一些常用的Python扩展，以及Windows环境的编程接口）。对ActivePython来说，如果你是 windows用户，下载msi包安装即可；如果你是Unix用户，下载tar.gz包直接解压即可。\n\n3 Python的IDE，包括`PythonWin`、`Eclipse+PyDev插件`、`Komodo`、`EditPlus`、`Sublime`等\n<!-- more -->\n# 【版本】\n\npython2与python3是目前主要的两个版本。\n\n如下两种情况下，建议使用python2：\n\n> 1 你无法完全控制你即将部署的环境时；\n\n> 2 你需要使用一些特定的第三方包或扩展时；\n\n\npython3是官方推荐的且是未来全力支持的版本，目前很多功能提升仅在python3版本上进行。\n\n\n# 【hello world】\n\n1 创建hello.py\n\n2 编写程序：\n```\nif __name__ == '__main__':\n    print \"hello word\"\n```\n3 运行程序：\n`python ./hello.py`\n\n# 【注释】\n\n1 无论是行注释还是段注释，均以#加一个空格来注释。\n\n2 如果需要在代码中使用中文注释，必须在python文件的最前面加上如下注释说明：\n\n```\n# -* - coding: UTF-8 -* -\n```\n3 如下注释用于指定解释器\n```\n#! /usr/bin/python\n```\n\n# 【文件类型】\n\n1 Python的文件类型分为3种，即源代码、字节代码和优化代码。这些都可以直接运行，不需要进行编译或连接。\n\n2 源代码以`.py`为扩展名，由`python`来负责解释；\n\n3 源文件经过编译后生成扩展名为.pyc的文件，即编译过的字节文件。这种文件不能使用文本编辑器修改。pyc文件是和平台无关的，可以在大部分操作系统上运行。如下语句可以用来产生pyc文件：\n\n```\nimport py_compile\npy_compile.compile(‘hello.py’)\n```\n4 经过优化的源文件会以.pyo为后缀，即优化代码。它也不能直接用文本编辑器修改，如下命令可用来生成pyo文件：\n```\npython -O -m py_complie hello.py\n```\n\n# 【变量】\n\n1 python中的变量不需要声明，变量的赋值操作即使变量声明和定义的过程。\n\n2 python中一次新的赋值，将创建一个新的变量。即使变量的名称相同，变量的标识并不相同。用id()函数可以获取变量标识：\n```\nx = 1\nprint id(x)\nx = 2\nprint id(x)\n```\n3 如果变量没有赋值，则python认为该变量不存在\n\n4 在函数之外定义的变量都可以称为全局变量。全局变量可以被文件内部的任何函数和外部文件访问。\n\n5 全局变量建议在文件的开头定义。\n\n6 也可以把全局变量放到一个专门的文件中，然后通过import来引用：\n\ngl.py文件中内容如下：\n```\n_a = 1\n_b = 2\n```\nuse_global.py中引用全局变量：\n```\nimport gl\ndef fun():\n  print gl._a\n  print gl._b\nfun()\n```\n# 【常量】\n\npython中没有提供定义常量的保留字。可以自己定义一个常量类来实现常量的功能。\n\n```\nclass _const:\n  class ConstError(TypeError): pass\n    def __setattr__(self,name,vlaue):\n      if self.__dict__.has_key(name):\n        raise self.ConstError, “Can’t rebind const(%s)”%name\n        self.__dict__[name]=value\nimport sys\nsys.modules[__name__]=_const()\n```\n# 【数据类型】\n\n1 python的数字类型分为整型、长整型、浮点型、布尔型、复数类型。\n\n2 python没有字符类型\n\n3 python内部没有普通类型，任何类型都是对象。\n\n4 如果需要查看变量的类型，可以使用type类，该类可以返回变量的类型或创建一个新的类型。\n\n5 python有3种表示字符串类型的方式，即单引号、双引号、三引号。单引号和双引号的作用是相同的。python程序员更喜欢用单引号，C/Java程序员则习惯使用双引号表示字符串。三引号中可以输入单引号、双引号或换行等字符。\n\n# 【运算符和表达式】\n\n1 python不支持自增运算符和自减运算符。例如i++/i–是错误的，但i+=1是可以的。\n\n2 1/2在python2.5之前会等于0.5，在python2.5之后会等于0。\n\n3 不等于为!=或<>\n\n4 等于用==表示\n\n5 逻辑表达式中and表示逻辑与，or表示逻辑或，not表示逻辑非\n\n# 【控制语句】\n\n1、条件语句：\n```\nif (表达式) :\n    语句1\nelse :\n    语句2\n```\n\n2、多条件语句：\n```\nif (表达式) :\n  语句1\nelif (表达式) :\n  语句2\n…\nelif (表达式) :\n  语句n\nelse :\n  语句m\n```\n\n3 条件嵌套：\n\n```\nif (表达式1) :\n  if (表达式2) :\n    语句1\n  elif (表达式3) :\n    语句2\n  …\n  else:\n    语句3\nelif (表达式n) :\n   …\nelse :\n   …\n```\n\n4 python本身没有switch语句。\n\n5 循环语句:\n```\nwhile(表达式) :\n   …\nelse :\n   …\n```\n\n6 循环语句：\n```\nfor 变量 in 集合 :\n   …\nelse :\n   …\n```\n\n7 python不支持类似c的`for(i=0;i<5;i++)`这样的循环语句，但可以借助range模拟：\n\n```\nfor x in range(0,5,2):\n    print x\n```\n\n# 【数组相关】\n\n1 元组（tuple）：python中一种内置的数据结构。元组由不同的元素组成，每个元素可以存储不同类型的数据，如字符串、数字甚至元素。元组是写保护 的，即元组创建之后不能再修改。元组往往代表一行数据，而元组中的元素代表不同的数据项。可以把元组看做不可修改的数组。创建元组示例如下：\n```\ntuple_name=(“apple”,”banana”,”grape”,”orange”)\n```\n2 列表（list）：列表和元组相似，也由一组元素组成，列表可以实现添加、删除和查找操作，元素的值可以被修改。列表是传统意义上的数组。列表创建示例如下：\n```\nlist=[“apple”,”banana”,”grage”,”orange”]\n```\n可以使用append方法来在尾部追加元素，使用remove来删除元素。\n\n3 字典（dictionary）：由键-值对组成的集合，字典中的值通过键来引用。键和值之间用冒号隔开，键-值对之间用逗号隔开，并且被包含在一对花括号中。创建示例如下：\n```\ndict={“a”:”apple”, “b”:”banana”, “g”:”grage”, “o”:”orange”}\n```\n4 序列：序列是具有索引和切片能力的集合。元组、列表和字符串都属于序列。\n\n# 【函数相关】\n\n1 python程序由包（package）、模块（module）和函数组成。包是由一系列模块组成的集合。模块是处理某一类问题的函数和类的集合。\n\n2 包就是一个完成特定任务的工具箱。\n\n3 包必须含有一个__init__.py文件，它用于标识当前文件夹是一个包。\n\n4 python的程序是由一个个模块组成的。模块把一组相关的函数或代码组织到一个文件中，一个文件即是一个模块。模块由代码、函数和类组成。导入模块使用import语句。\n\n5 包的作用是实现程序的重用。\n\n6 函数是一段可以重复多次调用的代码，函数定义示例如下：\n\n```\ndef arithmetic(x,y,operator):\n   result={\n      “+”:x+y,\n      “-“:x-y,\n      “*”:x*y,\n      “/”:x/y\n   }\n```\n\n7 函数返回值可以用return来控制。\n\n# 【字符串相关】\n\n1 格式化输出:\n\n```\nformat=”%s%d” % (str1,num)\nprint format\n```\n\n2 用+进行字符串的合并：\n\n```\nstr1=”hello”\nstr2=”world”\nresult=str1+str2\n```\n\n3 字符串截取可以通过索引/切片，也可以通过split函数。\n\n4 通过切片截取字符串：\n\n```\nword=”world”\nprint word[0:3]\n```\n\n5 python使用==和!=来进行字符串比较。如果比较的两个变量的类型不相同，那么结果必然为不同。\n\n# 【文件处理】\n\n1 简单处理文件:\n\n```\ncontext=”hello,world”\nf=file(“hello.txt”,’w’)\nf.write(context);\nf.close()\n```\n\n2 读取文件可以使用readline()函数、readlines()函数和read函数。\n\n3 写入文件可以使用write()、writelines()函数\n\n# 【对象和类】\n\n1 python用class保留字来定义一个类，类名的首字符要大写。当程序员需要创建的类型不能用简单类型来表示时，就需要定义类，然后利用定义的类创建对象。定义类示例：\n\n```\nclass Fruit:\n    def grow(self):\n       print “Fruit grow”\n```\n\n2 当一个对象被创建后，包含了三方面的特性，即对象的句柄、属性和方法。创建对象的方法：\n\n```\nfruit = Fruit()\nfruit.grow()\n```\n\n3 python没有保护类型的修饰符\n\n4 类的方法也分为公有方法和私有方法。私有函数不能被该类之外的函数调用，私有的方法也不能被外部的类或函数调用。\n\n5 python使用函数”staticmethod()“或”@ staticmethod“指令的方法把普通的函数转换为静态方法。静态方法相当于全局函数。\n\n6 python的构造函数名为__init__，析构函数名为__del__\n\n7 继承的使用方法：\n\n```\nclass Apple(Fruit):\n   def …\n```\n\n# 【连接mysql】\n\n1 用MySQLdb模块操作MySQL数据库非常方便。示例代码如下：\n\n```\nimport os, sys\nimport MySQLdb\ntry:\n    conn=MySQLdb.connect(host=’localhost’,user=’root’,passwd=’password’,db=’address’\nexcept Exception,e:\n    print e\n    sys.exit()\ncursor=conn.cursor()\nsql=’insert into address(name, address) values(%s, %s)’\nvalue=((“zhangsan”,”haidian”),(“lisi”,”haidian”))\ntry\n    cursor.executemany(sql,values)\nexcept Exception, e:\n    print e\nsql=”select * from address”\ncursor.execute(sql)\ndata=cursor.fetchall()\nif data\n    for x in data:\n        print x[0],x[1]\ncursor.close()\nconn.close()\n```\n","slug":"2017-01-17-Python之10分钟入门","published":1,"updated":"2017-07-30T08:36:08.212Z","_id":"cj5mkehsd002eao94zfe1ve3m","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"【搭建开发环境】\"><a href=\"#【搭建开发环境】\" class=\"headerlink\" title=\"【搭建开发环境】\"></a>【搭建开发环境】</h1><p>1 可以到<a href=\"https://www.python.org/\" target=\"_blank\" rel=\"external\">Welcome to Python.org</a>下载安装包，然后通过<code>configure</code>、<code>make</code>、<code>make install</code>进行安装。</p>\n<p>2 也可以到<a href=\"http://www.activestate.com/activepython\" target=\"_blank\" rel=\"external\">ActiveState | ActiveState</a>去下载ActivePython组件包。（ActivePython是对Python核心和常用模块的二 进制包装，它是ActiveState公司发布的Python开发环境。ActivePython使得Python的安装更加容易，并且可以应用在各种操 作系统上。ActivePython包含了一些常用的Python扩展，以及Windows环境的编程接口）。对ActivePython来说，如果你是 windows用户，下载msi包安装即可；如果你是Unix用户，下载tar.gz包直接解压即可。</p>\n<p>3 Python的IDE，包括<code>PythonWin</code>、<code>Eclipse+PyDev插件</code>、<code>Komodo</code>、<code>EditPlus</code>、<code>Sublime</code>等<br><a id=\"more\"></a></p>\n<h1 id=\"【版本】\"><a href=\"#【版本】\" class=\"headerlink\" title=\"【版本】\"></a>【版本】</h1><p>python2与python3是目前主要的两个版本。</p>\n<p>如下两种情况下，建议使用python2：</p>\n<blockquote>\n<p>1 你无法完全控制你即将部署的环境时；</p>\n<p>2 你需要使用一些特定的第三方包或扩展时；</p>\n</blockquote>\n<p>python3是官方推荐的且是未来全力支持的版本，目前很多功能提升仅在python3版本上进行。</p>\n<h1 id=\"【hello-world】\"><a href=\"#【hello-world】\" class=\"headerlink\" title=\"【hello world】\"></a>【hello world】</h1><p>1 创建hello.py</p>\n<p>2 编写程序：<br><figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</div><div class=\"line\">    <span class=\"built_in\">print</span> <span class=\"string\">\"hello word\"</span></div></pre></td></tr></table></figure></p>\n<p>3 运行程序：<br><code>python ./hello.py</code></p>\n<h1 id=\"【注释】\"><a href=\"#【注释】\" class=\"headerlink\" title=\"【注释】\"></a>【注释】</h1><p>1 无论是行注释还是段注释，均以#加一个空格来注释。</p>\n<p>2 如果需要在代码中使用中文注释，必须在python文件的最前面加上如下注释说明：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> -* - coding: UTF-8 -* -</span></div></pre></td></tr></table></figure>\n<p>3 如下注释用于指定解释器<br><figure class=\"highlight d\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#! /usr/bin/python</span></div></pre></td></tr></table></figure></p>\n<h1 id=\"【文件类型】\"><a href=\"#【文件类型】\" class=\"headerlink\" title=\"【文件类型】\"></a>【文件类型】</h1><p>1 Python的文件类型分为3种，即源代码、字节代码和优化代码。这些都可以直接运行，不需要进行编译或连接。</p>\n<p>2 源代码以<code>.py</code>为扩展名，由<code>python</code>来负责解释；</p>\n<p>3 源文件经过编译后生成扩展名为.pyc的文件，即编译过的字节文件。这种文件不能使用文本编辑器修改。pyc文件是和平台无关的，可以在大部分操作系统上运行。如下语句可以用来产生pyc文件：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">import</span> <span class=\"selector-tag\">py_compile</span></div><div class=\"line\"><span class=\"selector-tag\">py_compile</span><span class=\"selector-class\">.compile</span>(‘<span class=\"selector-tag\">hello</span><span class=\"selector-class\">.py</span>’)</div></pre></td></tr></table></figure>\n<p>4 经过优化的源文件会以.pyo为后缀，即优化代码。它也不能直接用文本编辑器修改，如下命令可用来生成pyo文件：<br><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">python</span> -O -<span class=\"keyword\">m</span> py_complie hello.<span class=\"keyword\">py</span></div></pre></td></tr></table></figure></p>\n<h1 id=\"【变量】\"><a href=\"#【变量】\" class=\"headerlink\" title=\"【变量】\"></a>【变量】</h1><p>1 python中的变量不需要声明，变量的赋值操作即使变量声明和定义的过程。</p>\n<p>2 python中一次新的赋值，将创建一个新的变量。即使变量的名称相同，变量的标识并不相同。用id()函数可以获取变量标识：<br><figure class=\"highlight lisp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">x = <span class=\"number\">1</span></div><div class=\"line\">print id(<span class=\"name\">x</span>)</div><div class=\"line\">x = <span class=\"number\">2</span></div><div class=\"line\">print id(<span class=\"name\">x</span>)</div></pre></td></tr></table></figure></p>\n<p>3 如果变量没有赋值，则python认为该变量不存在</p>\n<p>4 在函数之外定义的变量都可以称为全局变量。全局变量可以被文件内部的任何函数和外部文件访问。</p>\n<p>5 全局变量建议在文件的开头定义。</p>\n<p>6 也可以把全局变量放到一个专门的文件中，然后通过import来引用：</p>\n<p>gl.py文件中内容如下：<br><figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">_a</span> = <span class=\"number\">1</span></div><div class=\"line\"><span class=\"attr\">_b</span> = <span class=\"number\">2</span></div></pre></td></tr></table></figure></p>\n<p>use_global.py中引用全局变量：<br><figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> gl</div><div class=\"line\">def <span class=\"function\"><span class=\"title\">fun</span><span class=\"params\">()</span></span>:</div><div class=\"line\">  print gl._a</div><div class=\"line\">  print gl._b</div><div class=\"line\"><span class=\"function\"><span class=\"title\">fun</span><span class=\"params\">()</span></span></div></pre></td></tr></table></figure></p>\n<h1 id=\"【常量】\"><a href=\"#【常量】\" class=\"headerlink\" title=\"【常量】\"></a>【常量】</h1><p>python中没有提供定义常量的保留字。可以自己定义一个常量类来实现常量的功能。</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">_const</span>:</span></div><div class=\"line\">  <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ConstError</span>(<span class=\"title\">TypeError</span>): <span class=\"title\">pass</span></span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__setattr__</span><span class=\"params\">(<span class=\"keyword\">self</span>,name,vlaue)</span></span>:</div><div class=\"line\">      <span class=\"keyword\">if</span> <span class=\"keyword\">self</span>.__dict_<span class=\"number\">_</span>.has_key(name):</div><div class=\"line\">        raise <span class=\"keyword\">self</span>.ConstError, “Can’t rebind const(%s)”%name</div><div class=\"line\">        <span class=\"keyword\">self</span>.__dict_<span class=\"number\">_</span>[name]=value</div><div class=\"line\">import sys</div><div class=\"line\">sys.modules[__name_<span class=\"number\">_</span>]=_const()</div></pre></td></tr></table></figure>\n<h1 id=\"【数据类型】\"><a href=\"#【数据类型】\" class=\"headerlink\" title=\"【数据类型】\"></a>【数据类型】</h1><p>1 python的数字类型分为整型、长整型、浮点型、布尔型、复数类型。</p>\n<p>2 python没有字符类型</p>\n<p>3 python内部没有普通类型，任何类型都是对象。</p>\n<p>4 如果需要查看变量的类型，可以使用type类，该类可以返回变量的类型或创建一个新的类型。</p>\n<p>5 python有3种表示字符串类型的方式，即单引号、双引号、三引号。单引号和双引号的作用是相同的。python程序员更喜欢用单引号，C/Java程序员则习惯使用双引号表示字符串。三引号中可以输入单引号、双引号或换行等字符。</p>\n<h1 id=\"【运算符和表达式】\"><a href=\"#【运算符和表达式】\" class=\"headerlink\" title=\"【运算符和表达式】\"></a>【运算符和表达式】</h1><p>1 python不支持自增运算符和自减运算符。例如i++/i–是错误的，但i+=1是可以的。</p>\n<p>2 1/2在python2.5之前会等于0.5，在python2.5之后会等于0。</p>\n<p>3 不等于为!=或&lt;&gt;</p>\n<p>4 等于用==表示</p>\n<p>5 逻辑表达式中and表示逻辑与，or表示逻辑或，not表示逻辑非</p>\n<h1 id=\"【控制语句】\"><a href=\"#【控制语句】\" class=\"headerlink\" title=\"【控制语句】\"></a>【控制语句】</h1><p>1、条件语句：<br><figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">if</span> (表达式) :</div><div class=\"line\">    语句1</div><div class=\"line\"><span class=\"keyword\">else</span> :</div><div class=\"line\">    语句2</div></pre></td></tr></table></figure></p>\n<p>2、多条件语句：<br><figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">if</span> (表达式) :</div><div class=\"line\">  语句1</div><div class=\"line\">elif (表达式) :</div><div class=\"line\">  语句2</div><div class=\"line\">…</div><div class=\"line\">elif (表达式) :</div><div class=\"line\">  语句<span class=\"type\">n</span></div><div class=\"line\"><span class=\"keyword\">else</span> :</div><div class=\"line\">  语句<span class=\"type\">m</span></div></pre></td></tr></table></figure></p>\n<p>3 条件嵌套：</p>\n<figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">if</span> (表达式<span class=\"number\">1</span>) :</div><div class=\"line\">  <span class=\"type\">if</span> (表达式<span class=\"number\">2</span>) :</div><div class=\"line\">    语句1</div><div class=\"line\">  elif (表达式<span class=\"number\">3</span>) :</div><div class=\"line\">    语句2</div><div class=\"line\">  …</div><div class=\"line\">  <span class=\"keyword\">else</span>:</div><div class=\"line\">    语句<span class=\"number\">3</span></div><div class=\"line\">elif (表达式n) :</div><div class=\"line\">   …</div><div class=\"line\"><span class=\"keyword\">else</span> :</div><div class=\"line\">   …</div></pre></td></tr></table></figure>\n<p>4 python本身没有switch语句。</p>\n<p>5 循环语句:<br><figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">while</span>(表达式) :</div><div class=\"line\">   …</div><div class=\"line\"><span class=\"keyword\">else</span> :</div><div class=\"line\">   …</div></pre></td></tr></table></figure></p>\n<p>6 循环语句：<br><figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">for</span> 变量 <span class=\"keyword\">in</span> 集合 :</div><div class=\"line\">   …</div><div class=\"line\"><span class=\"keyword\">else</span> :</div><div class=\"line\">   …</div></pre></td></tr></table></figure></p>\n<p>7 python不支持类似c的<code>for(i=0;i&lt;5;i++)</code>这样的循环语句，但可以借助range模拟：</p>\n<figure class=\"highlight maxima\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>,<span class=\"number\">5</span>,<span class=\"number\">2</span>):</div><div class=\"line\">    <span class=\"built_in\">print</span> x</div></pre></td></tr></table></figure>\n<h1 id=\"【数组相关】\"><a href=\"#【数组相关】\" class=\"headerlink\" title=\"【数组相关】\"></a>【数组相关】</h1><p>1 元组（tuple）：python中一种内置的数据结构。元组由不同的元素组成，每个元素可以存储不同类型的数据，如字符串、数字甚至元素。元组是写保护 的，即元组创建之后不能再修改。元组往往代表一行数据，而元组中的元素代表不同的数据项。可以把元组看做不可修改的数组。创建元组示例如下：<br><figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">tuple_name</span>=(“apple”,”banana”,”grape”,”orange”)</div></pre></td></tr></table></figure></p>\n<p>2 列表（list）：列表和元组相似，也由一组元素组成，列表可以实现添加、删除和查找操作，元素的值可以被修改。列表是传统意义上的数组。列表创建示例如下：<br><figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">list</span>=[“apple”,”banana”,”grage”,”orange”]</div></pre></td></tr></table></figure></p>\n<p>可以使用append方法来在尾部追加元素，使用remove来删除元素。</p>\n<p>3 字典（dictionary）：由键-值对组成的集合，字典中的值通过键来引用。键和值之间用冒号隔开，键-值对之间用逗号隔开，并且被包含在一对花括号中。创建示例如下：<br><figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">dict</span>=&#123;“a”:”apple”, “b”:”banana”, “g”:”grage”, “o”:”orange”&#125;</div></pre></td></tr></table></figure></p>\n<p>4 序列：序列是具有索引和切片能力的集合。元组、列表和字符串都属于序列。</p>\n<h1 id=\"【函数相关】\"><a href=\"#【函数相关】\" class=\"headerlink\" title=\"【函数相关】\"></a>【函数相关】</h1><p>1 python程序由包（package）、模块（module）和函数组成。包是由一系列模块组成的集合。模块是处理某一类问题的函数和类的集合。</p>\n<p>2 包就是一个完成特定任务的工具箱。</p>\n<p>3 包必须含有一个<strong>init</strong>.py文件，它用于标识当前文件夹是一个包。</p>\n<p>4 python的程序是由一个个模块组成的。模块把一组相关的函数或代码组织到一个文件中，一个文件即是一个模块。模块由代码、函数和类组成。导入模块使用import语句。</p>\n<p>5 包的作用是实现程序的重用。</p>\n<p>6 函数是一段可以重复多次调用的代码，函数定义示例如下：</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">arithmetic</span><span class=\"params\">(x,y,operator)</span></span>:</div><div class=\"line\">   result=&#123;</div><div class=\"line\">      “+”<span class=\"symbol\">:x+y</span>,</div><div class=\"line\">      “-“<span class=\"symbol\">:x-y</span>,</div><div class=\"line\">      “*”<span class=\"symbol\">:x*y</span>,</div><div class=\"line\">      “/”<span class=\"symbol\">:x/y</span></div><div class=\"line\">   &#125;</div></pre></td></tr></table></figure>\n<p>7 函数返回值可以用return来控制。</p>\n<h1 id=\"【字符串相关】\"><a href=\"#【字符串相关】\" class=\"headerlink\" title=\"【字符串相关】\"></a>【字符串相关】</h1><p>1 格式化输出:</p>\n<figure class=\"highlight mel\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">format</span>=”%s%d” % (str1,num)</div><div class=\"line\"><span class=\"keyword\">print</span> <span class=\"keyword\">format</span></div></pre></td></tr></table></figure>\n<p>2 用+进行字符串的合并：</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">str1</span>=”hello”</div><div class=\"line\"><span class=\"attr\">str2</span>=”world”</div><div class=\"line\"><span class=\"attr\">result</span>=str1+str2</div></pre></td></tr></table></figure>\n<p>3 字符串截取可以通过索引/切片，也可以通过split函数。</p>\n<p>4 通过切片截取字符串：</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attribute\">word</span>=”world”</div><div class=\"line\"><span class=\"builtin-name\">print</span> word[0:3]</div></pre></td></tr></table></figure>\n<p>5 python使用==和!=来进行字符串比较。如果比较的两个变量的类型不相同，那么结果必然为不同。</p>\n<h1 id=\"【文件处理】\"><a href=\"#【文件处理】\" class=\"headerlink\" title=\"【文件处理】\"></a>【文件处理】</h1><p>1 简单处理文件:</p>\n<figure class=\"highlight makefile\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">context=”hello,world”</div><div class=\"line\">f=file(“hello.txt”,’w’)</div><div class=\"line\">f.write(context);</div><div class=\"line\">f.close()</div></pre></td></tr></table></figure>\n<p>2 读取文件可以使用readline()函数、readlines()函数和read函数。</p>\n<p>3 写入文件可以使用write()、writelines()函数</p>\n<h1 id=\"【对象和类】\"><a href=\"#【对象和类】\" class=\"headerlink\" title=\"【对象和类】\"></a>【对象和类】</h1><p>1 python用class保留字来定义一个类，类名的首字符要大写。当程序员需要创建的类型不能用简单类型来表示时，就需要定义类，然后利用定义的类创建对象。定义类示例：</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Fruit</span>:</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">grow</span><span class=\"params\">(<span class=\"keyword\">self</span>)</span></span>:</div><div class=\"line\">       print “Fruit grow”</div></pre></td></tr></table></figure>\n<p>2 当一个对象被创建后，包含了三方面的特性，即对象的句柄、属性和方法。创建对象的方法：</p>\n<figure class=\"highlight gcode\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">fruit = Fruit<span class=\"comment\">()</span></div><div class=\"line\">fruit.grow<span class=\"comment\">()</span></div></pre></td></tr></table></figure>\n<p>3 python没有保护类型的修饰符</p>\n<p>4 类的方法也分为公有方法和私有方法。私有函数不能被该类之外的函数调用，私有的方法也不能被外部的类或函数调用。</p>\n<p>5 python使用函数”staticmethod()“或”@ staticmethod“指令的方法把普通的函数转换为静态方法。静态方法相当于全局函数。</p>\n<p>6 python的构造函数名为<strong>init</strong>，析构函数名为<strong>del</strong></p>\n<p>7 继承的使用方法：</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Apple</span>(<span class=\"title\">Fruit</span>):</span></div><div class=\"line\">   <span class=\"function\"><span class=\"keyword\">def</span> …</span></div></pre></td></tr></table></figure>\n<h1 id=\"【连接mysql】\"><a href=\"#【连接mysql】\" class=\"headerlink\" title=\"【连接mysql】\"></a>【连接mysql】</h1><p>1 用MySQLdb模块操作MySQL数据库非常方便。示例代码如下：</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\">import os, sys</div><div class=\"line\">import MySQLdb</div><div class=\"line\"><span class=\"keyword\">try</span>:</div><div class=\"line\">    conn=MySQLdb.connect(host=’localhost’,user=’root’,passwd=’password’,db=’address’</div><div class=\"line\">except Exception,<span class=\"keyword\">e</span>:</div><div class=\"line\">    <span class=\"keyword\">print</span> <span class=\"keyword\">e</span></div><div class=\"line\">    sys.<span class=\"keyword\">exit</span>()</div><div class=\"line\"><span class=\"built_in\">cursor</span>=conn.<span class=\"built_in\">cursor</span>()</div><div class=\"line\">sql=’<span class=\"keyword\">insert</span> into address(name, address) <span class=\"built_in\">values</span>(%s, %s)’</div><div class=\"line\">value=((“zhangsan”,”haidian”),(“lisi”,”haidian”))</div><div class=\"line\"><span class=\"keyword\">try</span></div><div class=\"line\">    <span class=\"built_in\">cursor</span>.executemany(sql,<span class=\"built_in\">values</span>)</div><div class=\"line\">except Exception, <span class=\"keyword\">e</span>:</div><div class=\"line\">    <span class=\"keyword\">print</span> <span class=\"keyword\">e</span></div><div class=\"line\">sql=”select * from address”</div><div class=\"line\"><span class=\"built_in\">cursor</span>.<span class=\"keyword\">execute</span>(sql)</div><div class=\"line\">data=<span class=\"built_in\">cursor</span>.fetchall()</div><div class=\"line\"><span class=\"keyword\">if</span> data</div><div class=\"line\">    <span class=\"keyword\">for</span> <span class=\"keyword\">x</span> in dat<span class=\"variable\">a:</span></div><div class=\"line\">        <span class=\"keyword\">print</span> <span class=\"keyword\">x</span>[<span class=\"number\">0</span>],<span class=\"keyword\">x</span>[<span class=\"number\">1</span>]</div><div class=\"line\"><span class=\"built_in\">cursor</span>.<span class=\"keyword\">close</span>()</div><div class=\"line\">conn.<span class=\"keyword\">close</span>()</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<h1 id=\"【搭建开发环境】\"><a href=\"#【搭建开发环境】\" class=\"headerlink\" title=\"【搭建开发环境】\"></a>【搭建开发环境】</h1><p>1 可以到<a href=\"https://www.python.org/\" target=\"_blank\" rel=\"external\">Welcome to Python.org</a>下载安装包，然后通过<code>configure</code>、<code>make</code>、<code>make install</code>进行安装。</p>\n<p>2 也可以到<a href=\"http://www.activestate.com/activepython\" target=\"_blank\" rel=\"external\">ActiveState | ActiveState</a>去下载ActivePython组件包。（ActivePython是对Python核心和常用模块的二 进制包装，它是ActiveState公司发布的Python开发环境。ActivePython使得Python的安装更加容易，并且可以应用在各种操 作系统上。ActivePython包含了一些常用的Python扩展，以及Windows环境的编程接口）。对ActivePython来说，如果你是 windows用户，下载msi包安装即可；如果你是Unix用户，下载tar.gz包直接解压即可。</p>\n<p>3 Python的IDE，包括<code>PythonWin</code>、<code>Eclipse+PyDev插件</code>、<code>Komodo</code>、<code>EditPlus</code>、<code>Sublime</code>等<br>","more":"</p>\n<h1 id=\"【版本】\"><a href=\"#【版本】\" class=\"headerlink\" title=\"【版本】\"></a>【版本】</h1><p>python2与python3是目前主要的两个版本。</p>\n<p>如下两种情况下，建议使用python2：</p>\n<blockquote>\n<p>1 你无法完全控制你即将部署的环境时；</p>\n<p>2 你需要使用一些特定的第三方包或扩展时；</p>\n</blockquote>\n<p>python3是官方推荐的且是未来全力支持的版本，目前很多功能提升仅在python3版本上进行。</p>\n<h1 id=\"【hello-world】\"><a href=\"#【hello-world】\" class=\"headerlink\" title=\"【hello world】\"></a>【hello world】</h1><p>1 创建hello.py</p>\n<p>2 编写程序：<br><figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</div><div class=\"line\">    <span class=\"built_in\">print</span> <span class=\"string\">\"hello word\"</span></div></pre></td></tr></table></figure></p>\n<p>3 运行程序：<br><code>python ./hello.py</code></p>\n<h1 id=\"【注释】\"><a href=\"#【注释】\" class=\"headerlink\" title=\"【注释】\"></a>【注释】</h1><p>1 无论是行注释还是段注释，均以#加一个空格来注释。</p>\n<p>2 如果需要在代码中使用中文注释，必须在python文件的最前面加上如下注释说明：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> -* - coding: UTF-8 -* -</span></div></pre></td></tr></table></figure>\n<p>3 如下注释用于指定解释器<br><figure class=\"highlight d\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#! /usr/bin/python</span></div></pre></td></tr></table></figure></p>\n<h1 id=\"【文件类型】\"><a href=\"#【文件类型】\" class=\"headerlink\" title=\"【文件类型】\"></a>【文件类型】</h1><p>1 Python的文件类型分为3种，即源代码、字节代码和优化代码。这些都可以直接运行，不需要进行编译或连接。</p>\n<p>2 源代码以<code>.py</code>为扩展名，由<code>python</code>来负责解释；</p>\n<p>3 源文件经过编译后生成扩展名为.pyc的文件，即编译过的字节文件。这种文件不能使用文本编辑器修改。pyc文件是和平台无关的，可以在大部分操作系统上运行。如下语句可以用来产生pyc文件：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">import</span> <span class=\"selector-tag\">py_compile</span></div><div class=\"line\"><span class=\"selector-tag\">py_compile</span><span class=\"selector-class\">.compile</span>(‘<span class=\"selector-tag\">hello</span><span class=\"selector-class\">.py</span>’)</div></pre></td></tr></table></figure>\n<p>4 经过优化的源文件会以.pyo为后缀，即优化代码。它也不能直接用文本编辑器修改，如下命令可用来生成pyo文件：<br><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">python</span> -O -<span class=\"keyword\">m</span> py_complie hello.<span class=\"keyword\">py</span></div></pre></td></tr></table></figure></p>\n<h1 id=\"【变量】\"><a href=\"#【变量】\" class=\"headerlink\" title=\"【变量】\"></a>【变量】</h1><p>1 python中的变量不需要声明，变量的赋值操作即使变量声明和定义的过程。</p>\n<p>2 python中一次新的赋值，将创建一个新的变量。即使变量的名称相同，变量的标识并不相同。用id()函数可以获取变量标识：<br><figure class=\"highlight lisp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">x = <span class=\"number\">1</span></div><div class=\"line\">print id(<span class=\"name\">x</span>)</div><div class=\"line\">x = <span class=\"number\">2</span></div><div class=\"line\">print id(<span class=\"name\">x</span>)</div></pre></td></tr></table></figure></p>\n<p>3 如果变量没有赋值，则python认为该变量不存在</p>\n<p>4 在函数之外定义的变量都可以称为全局变量。全局变量可以被文件内部的任何函数和外部文件访问。</p>\n<p>5 全局变量建议在文件的开头定义。</p>\n<p>6 也可以把全局变量放到一个专门的文件中，然后通过import来引用：</p>\n<p>gl.py文件中内容如下：<br><figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">_a</span> = <span class=\"number\">1</span></div><div class=\"line\"><span class=\"attr\">_b</span> = <span class=\"number\">2</span></div></pre></td></tr></table></figure></p>\n<p>use_global.py中引用全局变量：<br><figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> gl</div><div class=\"line\">def <span class=\"function\"><span class=\"title\">fun</span><span class=\"params\">()</span></span>:</div><div class=\"line\">  print gl._a</div><div class=\"line\">  print gl._b</div><div class=\"line\"><span class=\"function\"><span class=\"title\">fun</span><span class=\"params\">()</span></span></div></pre></td></tr></table></figure></p>\n<h1 id=\"【常量】\"><a href=\"#【常量】\" class=\"headerlink\" title=\"【常量】\"></a>【常量】</h1><p>python中没有提供定义常量的保留字。可以自己定义一个常量类来实现常量的功能。</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">_const</span>:</span></div><div class=\"line\">  <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ConstError</span>(<span class=\"title\">TypeError</span>): <span class=\"title\">pass</span></span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__setattr__</span><span class=\"params\">(<span class=\"keyword\">self</span>,name,vlaue)</span></span>:</div><div class=\"line\">      <span class=\"keyword\">if</span> <span class=\"keyword\">self</span>.__dict_<span class=\"number\">_</span>.has_key(name):</div><div class=\"line\">        raise <span class=\"keyword\">self</span>.ConstError, “Can’t rebind const(%s)”%name</div><div class=\"line\">        <span class=\"keyword\">self</span>.__dict_<span class=\"number\">_</span>[name]=value</div><div class=\"line\">import sys</div><div class=\"line\">sys.modules[__name_<span class=\"number\">_</span>]=_const()</div></pre></td></tr></table></figure>\n<h1 id=\"【数据类型】\"><a href=\"#【数据类型】\" class=\"headerlink\" title=\"【数据类型】\"></a>【数据类型】</h1><p>1 python的数字类型分为整型、长整型、浮点型、布尔型、复数类型。</p>\n<p>2 python没有字符类型</p>\n<p>3 python内部没有普通类型，任何类型都是对象。</p>\n<p>4 如果需要查看变量的类型，可以使用type类，该类可以返回变量的类型或创建一个新的类型。</p>\n<p>5 python有3种表示字符串类型的方式，即单引号、双引号、三引号。单引号和双引号的作用是相同的。python程序员更喜欢用单引号，C/Java程序员则习惯使用双引号表示字符串。三引号中可以输入单引号、双引号或换行等字符。</p>\n<h1 id=\"【运算符和表达式】\"><a href=\"#【运算符和表达式】\" class=\"headerlink\" title=\"【运算符和表达式】\"></a>【运算符和表达式】</h1><p>1 python不支持自增运算符和自减运算符。例如i++/i–是错误的，但i+=1是可以的。</p>\n<p>2 1/2在python2.5之前会等于0.5，在python2.5之后会等于0。</p>\n<p>3 不等于为!=或&lt;&gt;</p>\n<p>4 等于用==表示</p>\n<p>5 逻辑表达式中and表示逻辑与，or表示逻辑或，not表示逻辑非</p>\n<h1 id=\"【控制语句】\"><a href=\"#【控制语句】\" class=\"headerlink\" title=\"【控制语句】\"></a>【控制语句】</h1><p>1、条件语句：<br><figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">if</span> (表达式) :</div><div class=\"line\">    语句1</div><div class=\"line\"><span class=\"keyword\">else</span> :</div><div class=\"line\">    语句2</div></pre></td></tr></table></figure></p>\n<p>2、多条件语句：<br><figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">if</span> (表达式) :</div><div class=\"line\">  语句1</div><div class=\"line\">elif (表达式) :</div><div class=\"line\">  语句2</div><div class=\"line\">…</div><div class=\"line\">elif (表达式) :</div><div class=\"line\">  语句<span class=\"type\">n</span></div><div class=\"line\"><span class=\"keyword\">else</span> :</div><div class=\"line\">  语句<span class=\"type\">m</span></div></pre></td></tr></table></figure></p>\n<p>3 条件嵌套：</p>\n<figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">if</span> (表达式<span class=\"number\">1</span>) :</div><div class=\"line\">  <span class=\"type\">if</span> (表达式<span class=\"number\">2</span>) :</div><div class=\"line\">    语句1</div><div class=\"line\">  elif (表达式<span class=\"number\">3</span>) :</div><div class=\"line\">    语句2</div><div class=\"line\">  …</div><div class=\"line\">  <span class=\"keyword\">else</span>:</div><div class=\"line\">    语句<span class=\"number\">3</span></div><div class=\"line\">elif (表达式n) :</div><div class=\"line\">   …</div><div class=\"line\"><span class=\"keyword\">else</span> :</div><div class=\"line\">   …</div></pre></td></tr></table></figure>\n<p>4 python本身没有switch语句。</p>\n<p>5 循环语句:<br><figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">while</span>(表达式) :</div><div class=\"line\">   …</div><div class=\"line\"><span class=\"keyword\">else</span> :</div><div class=\"line\">   …</div></pre></td></tr></table></figure></p>\n<p>6 循环语句：<br><figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">for</span> 变量 <span class=\"keyword\">in</span> 集合 :</div><div class=\"line\">   …</div><div class=\"line\"><span class=\"keyword\">else</span> :</div><div class=\"line\">   …</div></pre></td></tr></table></figure></p>\n<p>7 python不支持类似c的<code>for(i=0;i&lt;5;i++)</code>这样的循环语句，但可以借助range模拟：</p>\n<figure class=\"highlight maxima\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>,<span class=\"number\">5</span>,<span class=\"number\">2</span>):</div><div class=\"line\">    <span class=\"built_in\">print</span> x</div></pre></td></tr></table></figure>\n<h1 id=\"【数组相关】\"><a href=\"#【数组相关】\" class=\"headerlink\" title=\"【数组相关】\"></a>【数组相关】</h1><p>1 元组（tuple）：python中一种内置的数据结构。元组由不同的元素组成，每个元素可以存储不同类型的数据，如字符串、数字甚至元素。元组是写保护 的，即元组创建之后不能再修改。元组往往代表一行数据，而元组中的元素代表不同的数据项。可以把元组看做不可修改的数组。创建元组示例如下：<br><figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">tuple_name</span>=(“apple”,”banana”,”grape”,”orange”)</div></pre></td></tr></table></figure></p>\n<p>2 列表（list）：列表和元组相似，也由一组元素组成，列表可以实现添加、删除和查找操作，元素的值可以被修改。列表是传统意义上的数组。列表创建示例如下：<br><figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">list</span>=[“apple”,”banana”,”grage”,”orange”]</div></pre></td></tr></table></figure></p>\n<p>可以使用append方法来在尾部追加元素，使用remove来删除元素。</p>\n<p>3 字典（dictionary）：由键-值对组成的集合，字典中的值通过键来引用。键和值之间用冒号隔开，键-值对之间用逗号隔开，并且被包含在一对花括号中。创建示例如下：<br><figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">dict</span>=&#123;“a”:”apple”, “b”:”banana”, “g”:”grage”, “o”:”orange”&#125;</div></pre></td></tr></table></figure></p>\n<p>4 序列：序列是具有索引和切片能力的集合。元组、列表和字符串都属于序列。</p>\n<h1 id=\"【函数相关】\"><a href=\"#【函数相关】\" class=\"headerlink\" title=\"【函数相关】\"></a>【函数相关】</h1><p>1 python程序由包（package）、模块（module）和函数组成。包是由一系列模块组成的集合。模块是处理某一类问题的函数和类的集合。</p>\n<p>2 包就是一个完成特定任务的工具箱。</p>\n<p>3 包必须含有一个<strong>init</strong>.py文件，它用于标识当前文件夹是一个包。</p>\n<p>4 python的程序是由一个个模块组成的。模块把一组相关的函数或代码组织到一个文件中，一个文件即是一个模块。模块由代码、函数和类组成。导入模块使用import语句。</p>\n<p>5 包的作用是实现程序的重用。</p>\n<p>6 函数是一段可以重复多次调用的代码，函数定义示例如下：</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">arithmetic</span><span class=\"params\">(x,y,operator)</span></span>:</div><div class=\"line\">   result=&#123;</div><div class=\"line\">      “+”<span class=\"symbol\">:x+y</span>,</div><div class=\"line\">      “-“<span class=\"symbol\">:x-y</span>,</div><div class=\"line\">      “*”<span class=\"symbol\">:x*y</span>,</div><div class=\"line\">      “/”<span class=\"symbol\">:x/y</span></div><div class=\"line\">   &#125;</div></pre></td></tr></table></figure>\n<p>7 函数返回值可以用return来控制。</p>\n<h1 id=\"【字符串相关】\"><a href=\"#【字符串相关】\" class=\"headerlink\" title=\"【字符串相关】\"></a>【字符串相关】</h1><p>1 格式化输出:</p>\n<figure class=\"highlight mel\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">format</span>=”%s%d” % (str1,num)</div><div class=\"line\"><span class=\"keyword\">print</span> <span class=\"keyword\">format</span></div></pre></td></tr></table></figure>\n<p>2 用+进行字符串的合并：</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">str1</span>=”hello”</div><div class=\"line\"><span class=\"attr\">str2</span>=”world”</div><div class=\"line\"><span class=\"attr\">result</span>=str1+str2</div></pre></td></tr></table></figure>\n<p>3 字符串截取可以通过索引/切片，也可以通过split函数。</p>\n<p>4 通过切片截取字符串：</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attribute\">word</span>=”world”</div><div class=\"line\"><span class=\"builtin-name\">print</span> word[0:3]</div></pre></td></tr></table></figure>\n<p>5 python使用==和!=来进行字符串比较。如果比较的两个变量的类型不相同，那么结果必然为不同。</p>\n<h1 id=\"【文件处理】\"><a href=\"#【文件处理】\" class=\"headerlink\" title=\"【文件处理】\"></a>【文件处理】</h1><p>1 简单处理文件:</p>\n<figure class=\"highlight makefile\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">context=”hello,world”</div><div class=\"line\">f=file(“hello.txt”,’w’)</div><div class=\"line\">f.write(context);</div><div class=\"line\">f.close()</div></pre></td></tr></table></figure>\n<p>2 读取文件可以使用readline()函数、readlines()函数和read函数。</p>\n<p>3 写入文件可以使用write()、writelines()函数</p>\n<h1 id=\"【对象和类】\"><a href=\"#【对象和类】\" class=\"headerlink\" title=\"【对象和类】\"></a>【对象和类】</h1><p>1 python用class保留字来定义一个类，类名的首字符要大写。当程序员需要创建的类型不能用简单类型来表示时，就需要定义类，然后利用定义的类创建对象。定义类示例：</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Fruit</span>:</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">grow</span><span class=\"params\">(<span class=\"keyword\">self</span>)</span></span>:</div><div class=\"line\">       print “Fruit grow”</div></pre></td></tr></table></figure>\n<p>2 当一个对象被创建后，包含了三方面的特性，即对象的句柄、属性和方法。创建对象的方法：</p>\n<figure class=\"highlight gcode\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">fruit = Fruit<span class=\"comment\">()</span></div><div class=\"line\">fruit.grow<span class=\"comment\">()</span></div></pre></td></tr></table></figure>\n<p>3 python没有保护类型的修饰符</p>\n<p>4 类的方法也分为公有方法和私有方法。私有函数不能被该类之外的函数调用，私有的方法也不能被外部的类或函数调用。</p>\n<p>5 python使用函数”staticmethod()“或”@ staticmethod“指令的方法把普通的函数转换为静态方法。静态方法相当于全局函数。</p>\n<p>6 python的构造函数名为<strong>init</strong>，析构函数名为<strong>del</strong></p>\n<p>7 继承的使用方法：</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Apple</span>(<span class=\"title\">Fruit</span>):</span></div><div class=\"line\">   <span class=\"function\"><span class=\"keyword\">def</span> …</span></div></pre></td></tr></table></figure>\n<h1 id=\"【连接mysql】\"><a href=\"#【连接mysql】\" class=\"headerlink\" title=\"【连接mysql】\"></a>【连接mysql】</h1><p>1 用MySQLdb模块操作MySQL数据库非常方便。示例代码如下：</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\">import os, sys</div><div class=\"line\">import MySQLdb</div><div class=\"line\"><span class=\"keyword\">try</span>:</div><div class=\"line\">    conn=MySQLdb.connect(host=’localhost’,user=’root’,passwd=’password’,db=’address’</div><div class=\"line\">except Exception,<span class=\"keyword\">e</span>:</div><div class=\"line\">    <span class=\"keyword\">print</span> <span class=\"keyword\">e</span></div><div class=\"line\">    sys.<span class=\"keyword\">exit</span>()</div><div class=\"line\"><span class=\"built_in\">cursor</span>=conn.<span class=\"built_in\">cursor</span>()</div><div class=\"line\">sql=’<span class=\"keyword\">insert</span> into address(name, address) <span class=\"built_in\">values</span>(%s, %s)’</div><div class=\"line\">value=((“zhangsan”,”haidian”),(“lisi”,”haidian”))</div><div class=\"line\"><span class=\"keyword\">try</span></div><div class=\"line\">    <span class=\"built_in\">cursor</span>.executemany(sql,<span class=\"built_in\">values</span>)</div><div class=\"line\">except Exception, <span class=\"keyword\">e</span>:</div><div class=\"line\">    <span class=\"keyword\">print</span> <span class=\"keyword\">e</span></div><div class=\"line\">sql=”select * from address”</div><div class=\"line\"><span class=\"built_in\">cursor</span>.<span class=\"keyword\">execute</span>(sql)</div><div class=\"line\">data=<span class=\"built_in\">cursor</span>.fetchall()</div><div class=\"line\"><span class=\"keyword\">if</span> data</div><div class=\"line\">    <span class=\"keyword\">for</span> <span class=\"keyword\">x</span> in dat<span class=\"variable\">a:</span></div><div class=\"line\">        <span class=\"keyword\">print</span> <span class=\"keyword\">x</span>[<span class=\"number\">0</span>],<span class=\"keyword\">x</span>[<span class=\"number\">1</span>]</div><div class=\"line\"><span class=\"built_in\">cursor</span>.<span class=\"keyword\">close</span>()</div><div class=\"line\">conn.<span class=\"keyword\">close</span>()</div></pre></td></tr></table></figure>"},{"title":"解决kvm虚拟windows系统间歇性网络中断的问题","abbrlink":"d6278d54","date":"2016-09-27T16:00:00.000Z","_content":"\n\n> 现象\n- 突然之间，网络完全中断，无法从网络访问虚拟机\n- 用virt-manager或者console登录虚拟机，发现虚拟机还在正常工作，没有崩溃\n- 使用 service network restart重启物理机网络服务，可以立即恢复网络\n- 网络负载越大，故障出现的频率越高。轻网络负载的机器，没有出现故障\n\n<!-- more -->\n## 解决\n搜索了一下，发现ubuntu和centos都会出现这样的问题：\n\nhttps://bugs.launchpad.net/ubuntu/+source/libvirt/+bug/997978\nhttp://bugs.centos.org/view.php?id=5526\n\n几个解决办法：\n\n第1种：使用 e1000替代原有的windows网卡\n\n第2种：使用 vhost_net 模块\n```\necho vhost_net > /etc/modules\nmodprobe vhost_net\n```\n然后重新启动虚拟机，libvirtd就会自动使用 vhost_net\n\n## 原因分析\n在kvm虚拟机里，默认windows系统虚拟的网卡是RTL8139C的网卡，此网卡在网络重负载下易发生崩溃现象。","source":"_posts/2016-09-30-解决kvm虚拟机windows系统间歇性断网的问题.md","raw":"---\ntitle: 解决kvm虚拟windows系统间歇性网络中断的问题\ncategories: 实践与总结\ntag: kvm\nabbrlink: d6278d54\ndate: 2016-09-28 00:00:00\n---\n\n\n> 现象\n- 突然之间，网络完全中断，无法从网络访问虚拟机\n- 用virt-manager或者console登录虚拟机，发现虚拟机还在正常工作，没有崩溃\n- 使用 service network restart重启物理机网络服务，可以立即恢复网络\n- 网络负载越大，故障出现的频率越高。轻网络负载的机器，没有出现故障\n\n<!-- more -->\n## 解决\n搜索了一下，发现ubuntu和centos都会出现这样的问题：\n\nhttps://bugs.launchpad.net/ubuntu/+source/libvirt/+bug/997978\nhttp://bugs.centos.org/view.php?id=5526\n\n几个解决办法：\n\n第1种：使用 e1000替代原有的windows网卡\n\n第2种：使用 vhost_net 模块\n```\necho vhost_net > /etc/modules\nmodprobe vhost_net\n```\n然后重新启动虚拟机，libvirtd就会自动使用 vhost_net\n\n## 原因分析\n在kvm虚拟机里，默认windows系统虚拟的网卡是RTL8139C的网卡，此网卡在网络重负载下易发生崩溃现象。","slug":"2016-09-30-解决kvm虚拟机windows系统间歇性断网的问题","published":1,"updated":"2017-02-14T13:42:45.414Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5mkehsk002iao943na8z2in","content":"<blockquote>\n<p>现象</p>\n<ul>\n<li>突然之间，网络完全中断，无法从网络访问虚拟机</li>\n<li>用virt-manager或者console登录虚拟机，发现虚拟机还在正常工作，没有崩溃</li>\n<li>使用 service network restart重启物理机网络服务，可以立即恢复网络</li>\n<li>网络负载越大，故障出现的频率越高。轻网络负载的机器，没有出现故障</li>\n</ul>\n</blockquote>\n<a id=\"more\"></a>\n<h2 id=\"解决\"><a href=\"#解决\" class=\"headerlink\" title=\"解决\"></a>解决</h2><p>搜索了一下，发现ubuntu和centos都会出现这样的问题：</p>\n<p><a href=\"https://bugs.launchpad.net/ubuntu/+source/libvirt/+bug/997978\" target=\"_blank\" rel=\"external\">https://bugs.launchpad.net/ubuntu/+source/libvirt/+bug/997978</a><br><a href=\"http://bugs.centos.org/view.php?id=5526\" target=\"_blank\" rel=\"external\">http://bugs.centos.org/view.php?id=5526</a></p>\n<p>几个解决办法：</p>\n<p>第1种：使用 e1000替代原有的windows网卡</p>\n<p>第2种：使用 vhost_net 模块<br><figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">echo</span> vhost_net &gt; <span class=\"string\">/etc/modules</span></div><div class=\"line\">modprobe vhost_net</div></pre></td></tr></table></figure></p>\n<p>然后重新启动虚拟机，libvirtd就会自动使用 vhost_net</p>\n<h2 id=\"原因分析\"><a href=\"#原因分析\" class=\"headerlink\" title=\"原因分析\"></a>原因分析</h2><p>在kvm虚拟机里，默认windows系统虚拟的网卡是RTL8139C的网卡，此网卡在网络重负载下易发生崩溃现象。</p>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>现象</p>\n<ul>\n<li>突然之间，网络完全中断，无法从网络访问虚拟机</li>\n<li>用virt-manager或者console登录虚拟机，发现虚拟机还在正常工作，没有崩溃</li>\n<li>使用 service network restart重启物理机网络服务，可以立即恢复网络</li>\n<li>网络负载越大，故障出现的频率越高。轻网络负载的机器，没有出现故障</li>\n</ul>\n</blockquote>","more":"<h2 id=\"解决\"><a href=\"#解决\" class=\"headerlink\" title=\"解决\"></a>解决</h2><p>搜索了一下，发现ubuntu和centos都会出现这样的问题：</p>\n<p><a href=\"https://bugs.launchpad.net/ubuntu/+source/libvirt/+bug/997978\" target=\"_blank\" rel=\"external\">https://bugs.launchpad.net/ubuntu/+source/libvirt/+bug/997978</a><br><a href=\"http://bugs.centos.org/view.php?id=5526\" target=\"_blank\" rel=\"external\">http://bugs.centos.org/view.php?id=5526</a></p>\n<p>几个解决办法：</p>\n<p>第1种：使用 e1000替代原有的windows网卡</p>\n<p>第2种：使用 vhost_net 模块<br><figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">echo</span> vhost_net &gt; <span class=\"string\">/etc/modules</span></div><div class=\"line\">modprobe vhost_net</div></pre></td></tr></table></figure></p>\n<p>然后重新启动虚拟机，libvirtd就会自动使用 vhost_net</p>\n<h2 id=\"原因分析\"><a href=\"#原因分析\" class=\"headerlink\" title=\"原因分析\"></a>原因分析</h2><p>在kvm虚拟机里，默认windows系统虚拟的网卡是RTL8139C的网卡，此网卡在网络重负载下易发生崩溃现象。</p>"},{"title":"Django小项目之留言板","abbrlink":"ecf0dfea","date":"2017-03-25T16:00:00.000Z","_content":"Django在线留言板小练习\n## 环境\n```\nubuntu16.04 + python3 + django1.11\n```\n\n## 1、创建项目\n```\ndjango-admin.py startproject message\n```\n进入项目message\n## 2、创建APP\n```\npython manager.py startapp guestbook\n```\n<!-- more -->\n\n## 项目结构\n```\n.\n├── guestbook\n│   ├── admin.py\n│   ├── apps.py\n│   ├── __init__.py\n│   ├── migrations\n│   │   └── __init__.py\n│   ├── models.py\n│   ├── tests.py\n│   └── views.py\n├── manage.py\n└── message\n    ├── __init__.py\n    ├── __pycache__\n    │   ├── __init__.cpython-35.pyc\n    │   └── settings.cpython-35.pyc\n    ├── settings.py\n    ├── urls.py\n    └── wsgi.py\n\n4 directories, 14 files\n\n```\n\n需要做的事：\n\t配置项目setting 、初始化数据库、配置url 、编写views 、创建HTML文件\n\n## 项目配置\n打开message/settings.py\n```\n设置哪些主机可以访问,*代表所有主机\nALLOWED_HOSTS = [\"*\"]\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'guestbook',   #刚刚创建的APP，加入到此项目中\n]\n\n#数据库默认用sqlite3,后期可以换成MySQL或者SQL Server等\n\nTIME_ZONE = 'PRC'  #时区设置为中国\n```\n\n## 创建数据库字段\n```\n#encoding: utf-8\nfrom django.db import models\n\nclass Message(models.Model):\n    username=models.CharField(max_length=256)\n    title=models.CharField(max_length=512)\n    content=models.TextField(max_length=256)\n    publish=models.DateTimeField()\n\n\t#为了显示\n    def __str__(self):\n        tpl = '<Message:[username={username}, title={title}, content={content}, publish={publish}]>'\n        return tpl.format(username=self.username, title=self.title, content=self.content, publish=self.publish)\n```\n\n## 初始化数据库\n```\n# 1. 创建更改的文件\nroot@python:/online/message# python3 manage.py makemigrations\nMigrations for 'guestbook':\n  guestbook/migrations/0001_initial.py\n    - Create model Message\n\n\n\n# 2. 将生成的py文件应用到数据库\nroot@python:/online/message# python3 manage.py migrate\nOperations to perform:\n  Apply all migrations: admin, auth, contenttypes, guestbook, sessions\nRunning migrations:\n  Applying contenttypes.0001_initial... OK\n  Applying auth.0001_initial... OK\n  Applying admin.0001_initial... OK\n  Applying admin.0002_logentry_remove_auto_add... OK\n  Applying contenttypes.0002_remove_content_type_name... OK\n  Applying auth.0002_alter_permission_name_max_length... OK\n  Applying auth.0003_alter_user_email_max_length... OK\n  Applying auth.0004_alter_user_username_opts... OK\n  Applying auth.0005_alter_user_last_login_null... OK\n  Applying auth.0006_require_contenttypes_0002... OK\n  Applying auth.0007_alter_validators_add_error_messages... OK\n  Applying auth.0008_alter_user_username_max_length... OK\n  Applying guestbook.0001_initial... OK\n  Applying sessions.0001_initial... OK\n```\n\n## 配置url\n\n设置项目message/urls.py\n```\nfrom django.conf.urls import url,include  #添加了include\nfrom django.contrib import admin\n\nurlpatterns = [\n    url(r'^admin/', admin.site.urls),\n    url(r'^guestbook/', include('guestbook.urls',namespace='guestbook')),   #表示在url地址中所有guestbook的都交给guestbook下面的url来处理，后面的逗号不要省略\n]\n\n```\n\n设置APP的url\n如果是初次创建APP，urls.py在APP中一般不存在，创建即可\n```\nvim guestbook/urls.py\n\n# 内容如下\nfrom django.conf.urls import url\nfrom . import views\n\nurlpatterns = [\n    url(r'^index/',views.index,name='index'),   #不要忘了逗号\n]\n\n```\n\n## 编写views\n编辑APP中的views.py\n```\nfrom django.shortcuts import render\nfrom django.http import HttpResponseRedirect\nfrom . import models\n\n# Create your views here.\ndef index(request):\n    messages = models.Message.objects.all()\n    return render(request, 'guestbook/index.html', {'messages' : messages})\n\n\n```\n\n## 编写HTML文件\n创建APP/templates/guestbook/index.html目录及文件\n\n#使用bootstrap美化了\n```\n<!DOCTYPE html>\n<html>\n    <head>\n        <meta charset=\"utf-8\" />\n        <title>留言板</title>\n        <link rel=\"stylesheet\" href=\"https://cdn.bootcss.com/bootstrap/3.3.7/css/bootstrap.min.css\" crossorigin=\"anonymous\">\n    </head>\n    <body>\n       \n        <table class=\"table table-striped table-bordered table-hover table-condensed\">\n            <thead>\n                <tr class=\"danger\">\n                    <th>留言时间</th>\n                    <th>留言者</th>\n                    <th>标题</th>\n                    <th>内容</th>\n                </tr>\n            </thead>\n            <tbody>\n                {% if messages %}\n                    {% for message in messages %}\n                        <tr class=\"{% cycle 'active' 'success' 'warning' 'info' %}\">\n                            <td>{{ message.publish|date:'Y-m-d H:i:s' }}</td>\n                            <td>{{ message.username }}</td>\n                            <td>{{ message.title }}</td>\n                            <td>{{ message.content }}</td>\n                        </tr>\n                    {% endfor %}\n                {% else %}\n                    <tr>\n                        <td colspan=\"4\">无数据</td>\n                    </tr>\n                {% endif %}\n            </tbody>\n        </table> \n        <a class=\"btn btn-xs btn-info\" href=\"/guestbook/create/\">去留言</a>\n    </body>\n</html>\n```\n\n## 调试index页面\n```\npython manage.py runserver 0.0.0.0:99\n```\n打开浏览器访问http://开发机器ip地址:99/guestbook/index/\n\n图1\n\n留言展示页面成功\n\n\n## 创建留言页面\n```\n<!DOCTYPE html>\n<html>\n    <head>\n        <meta charset=\"utf-8\" />\n        <title>留言</title>\n        <link rel=\"stylesheet\" href=\"https://cdn.bootcss.com/bootstrap/3.3.7/css/bootstrap.min.css\" crossorigin=\"anonymous\">\n    </head>\n    <body>\n        <!-- 我是注释 -->\n        <h3>留言</h3> <!--h1-> h6-->\n        <!--method: POST /GET -->\n        <form action=\"/online/save/\" method=\"POST\" novalidate=\"novalidate\">\n\t    {% csrf_token %}\n            <table class=\"table table-striped table-bordered table-hover table-condensed\">\n\t\t\t\t<label>用户名:</label> <input type=\"text\" name=\"username\" placeholder=\"用户名\" /> <br /><br />\n\t            <label>标  题:</label> <input type=\"text\" name=\"title\" placeholder=\"标题\" /><br /><br />\n\t            <label>内  容:</label> <textarea name=\"content\" placeholder=\"内容\"> </textarea><br /><br />\n            </table>\n            <input class=\"btn btn-success\" type=\"submit\" value=\"留言\"/>\n        </form>\n    </body>\n</html>\n\n```\n配置APP下的url\n```\nvim guestbook/urls.py\n\nurlpatterns = [\n    url(r'^index/',views.index,name='index'),   #不要忘了逗号\n    url(r'^create/$', views.create, name='create'),\n    url(r'^save/$', views.save, name='save'), \n]\n```\n\n编辑views.py\n```\n#先导入时间模块\nimport datetime\n\n#添加create、save\n\ndef create(request):\n    return render(request, 'guestbook/create.html')\n\ndef save(request):\n    username = request.POST.get(\"username\")\n    title = request.POST.get(\"title\")\n    content = request.POST.get(\"content\")\n    publish = datetime.datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n\tmessage = models.Message(title=title, content=content, username=username, publish=publish)\n    message.save()\n\n\treturn HttpResponseRedirect('/guestbook/index/')\n\n```\n\nOK，再次运行，enjoy it!","source":"_posts/Django留言板.md","raw":"---\ntitle: Django小项目之留言板\ncategories: 实践与总结\ntag: 实践与总结\nabbrlink: ecf0dfea\ndate: 2017-03-26 00:00:00\n---\nDjango在线留言板小练习\n## 环境\n```\nubuntu16.04 + python3 + django1.11\n```\n\n## 1、创建项目\n```\ndjango-admin.py startproject message\n```\n进入项目message\n## 2、创建APP\n```\npython manager.py startapp guestbook\n```\n<!-- more -->\n\n## 项目结构\n```\n.\n├── guestbook\n│   ├── admin.py\n│   ├── apps.py\n│   ├── __init__.py\n│   ├── migrations\n│   │   └── __init__.py\n│   ├── models.py\n│   ├── tests.py\n│   └── views.py\n├── manage.py\n└── message\n    ├── __init__.py\n    ├── __pycache__\n    │   ├── __init__.cpython-35.pyc\n    │   └── settings.cpython-35.pyc\n    ├── settings.py\n    ├── urls.py\n    └── wsgi.py\n\n4 directories, 14 files\n\n```\n\n需要做的事：\n\t配置项目setting 、初始化数据库、配置url 、编写views 、创建HTML文件\n\n## 项目配置\n打开message/settings.py\n```\n设置哪些主机可以访问,*代表所有主机\nALLOWED_HOSTS = [\"*\"]\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'guestbook',   #刚刚创建的APP，加入到此项目中\n]\n\n#数据库默认用sqlite3,后期可以换成MySQL或者SQL Server等\n\nTIME_ZONE = 'PRC'  #时区设置为中国\n```\n\n## 创建数据库字段\n```\n#encoding: utf-8\nfrom django.db import models\n\nclass Message(models.Model):\n    username=models.CharField(max_length=256)\n    title=models.CharField(max_length=512)\n    content=models.TextField(max_length=256)\n    publish=models.DateTimeField()\n\n\t#为了显示\n    def __str__(self):\n        tpl = '<Message:[username={username}, title={title}, content={content}, publish={publish}]>'\n        return tpl.format(username=self.username, title=self.title, content=self.content, publish=self.publish)\n```\n\n## 初始化数据库\n```\n# 1. 创建更改的文件\nroot@python:/online/message# python3 manage.py makemigrations\nMigrations for 'guestbook':\n  guestbook/migrations/0001_initial.py\n    - Create model Message\n\n\n\n# 2. 将生成的py文件应用到数据库\nroot@python:/online/message# python3 manage.py migrate\nOperations to perform:\n  Apply all migrations: admin, auth, contenttypes, guestbook, sessions\nRunning migrations:\n  Applying contenttypes.0001_initial... OK\n  Applying auth.0001_initial... OK\n  Applying admin.0001_initial... OK\n  Applying admin.0002_logentry_remove_auto_add... OK\n  Applying contenttypes.0002_remove_content_type_name... OK\n  Applying auth.0002_alter_permission_name_max_length... OK\n  Applying auth.0003_alter_user_email_max_length... OK\n  Applying auth.0004_alter_user_username_opts... OK\n  Applying auth.0005_alter_user_last_login_null... OK\n  Applying auth.0006_require_contenttypes_0002... OK\n  Applying auth.0007_alter_validators_add_error_messages... OK\n  Applying auth.0008_alter_user_username_max_length... OK\n  Applying guestbook.0001_initial... OK\n  Applying sessions.0001_initial... OK\n```\n\n## 配置url\n\n设置项目message/urls.py\n```\nfrom django.conf.urls import url,include  #添加了include\nfrom django.contrib import admin\n\nurlpatterns = [\n    url(r'^admin/', admin.site.urls),\n    url(r'^guestbook/', include('guestbook.urls',namespace='guestbook')),   #表示在url地址中所有guestbook的都交给guestbook下面的url来处理，后面的逗号不要省略\n]\n\n```\n\n设置APP的url\n如果是初次创建APP，urls.py在APP中一般不存在，创建即可\n```\nvim guestbook/urls.py\n\n# 内容如下\nfrom django.conf.urls import url\nfrom . import views\n\nurlpatterns = [\n    url(r'^index/',views.index,name='index'),   #不要忘了逗号\n]\n\n```\n\n## 编写views\n编辑APP中的views.py\n```\nfrom django.shortcuts import render\nfrom django.http import HttpResponseRedirect\nfrom . import models\n\n# Create your views here.\ndef index(request):\n    messages = models.Message.objects.all()\n    return render(request, 'guestbook/index.html', {'messages' : messages})\n\n\n```\n\n## 编写HTML文件\n创建APP/templates/guestbook/index.html目录及文件\n\n#使用bootstrap美化了\n```\n<!DOCTYPE html>\n<html>\n    <head>\n        <meta charset=\"utf-8\" />\n        <title>留言板</title>\n        <link rel=\"stylesheet\" href=\"https://cdn.bootcss.com/bootstrap/3.3.7/css/bootstrap.min.css\" crossorigin=\"anonymous\">\n    </head>\n    <body>\n       \n        <table class=\"table table-striped table-bordered table-hover table-condensed\">\n            <thead>\n                <tr class=\"danger\">\n                    <th>留言时间</th>\n                    <th>留言者</th>\n                    <th>标题</th>\n                    <th>内容</th>\n                </tr>\n            </thead>\n            <tbody>\n                {% if messages %}\n                    {% for message in messages %}\n                        <tr class=\"{% cycle 'active' 'success' 'warning' 'info' %}\">\n                            <td>{{ message.publish|date:'Y-m-d H:i:s' }}</td>\n                            <td>{{ message.username }}</td>\n                            <td>{{ message.title }}</td>\n                            <td>{{ message.content }}</td>\n                        </tr>\n                    {% endfor %}\n                {% else %}\n                    <tr>\n                        <td colspan=\"4\">无数据</td>\n                    </tr>\n                {% endif %}\n            </tbody>\n        </table> \n        <a class=\"btn btn-xs btn-info\" href=\"/guestbook/create/\">去留言</a>\n    </body>\n</html>\n```\n\n## 调试index页面\n```\npython manage.py runserver 0.0.0.0:99\n```\n打开浏览器访问http://开发机器ip地址:99/guestbook/index/\n\n图1\n\n留言展示页面成功\n\n\n## 创建留言页面\n```\n<!DOCTYPE html>\n<html>\n    <head>\n        <meta charset=\"utf-8\" />\n        <title>留言</title>\n        <link rel=\"stylesheet\" href=\"https://cdn.bootcss.com/bootstrap/3.3.7/css/bootstrap.min.css\" crossorigin=\"anonymous\">\n    </head>\n    <body>\n        <!-- 我是注释 -->\n        <h3>留言</h3> <!--h1-> h6-->\n        <!--method: POST /GET -->\n        <form action=\"/online/save/\" method=\"POST\" novalidate=\"novalidate\">\n\t    {% csrf_token %}\n            <table class=\"table table-striped table-bordered table-hover table-condensed\">\n\t\t\t\t<label>用户名:</label> <input type=\"text\" name=\"username\" placeholder=\"用户名\" /> <br /><br />\n\t            <label>标  题:</label> <input type=\"text\" name=\"title\" placeholder=\"标题\" /><br /><br />\n\t            <label>内  容:</label> <textarea name=\"content\" placeholder=\"内容\"> </textarea><br /><br />\n            </table>\n            <input class=\"btn btn-success\" type=\"submit\" value=\"留言\"/>\n        </form>\n    </body>\n</html>\n\n```\n配置APP下的url\n```\nvim guestbook/urls.py\n\nurlpatterns = [\n    url(r'^index/',views.index,name='index'),   #不要忘了逗号\n    url(r'^create/$', views.create, name='create'),\n    url(r'^save/$', views.save, name='save'), \n]\n```\n\n编辑views.py\n```\n#先导入时间模块\nimport datetime\n\n#添加create、save\n\ndef create(request):\n    return render(request, 'guestbook/create.html')\n\ndef save(request):\n    username = request.POST.get(\"username\")\n    title = request.POST.get(\"title\")\n    content = request.POST.get(\"content\")\n    publish = datetime.datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n\tmessage = models.Message(title=title, content=content, username=username, publish=publish)\n    message.save()\n\n\treturn HttpResponseRedirect('/guestbook/index/')\n\n```\n\nOK，再次运行，enjoy it!","slug":"Django留言板","published":1,"updated":"2017-07-27T13:24:53.745Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5mkehsl002lao94axig3j5i","content":"<p>Django在线留言板小练习</p>\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><figure class=\"highlight gcode\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ubu<span class=\"symbol\">ntu16</span><span class=\"number\">.04</span> + pytho<span class=\"symbol\">n3</span> + dja<span class=\"symbol\">ngo1</span><span class=\"number\">.11</span></div></pre></td></tr></table></figure>\n<h2 id=\"1、创建项目\"><a href=\"#1、创建项目\" class=\"headerlink\" title=\"1、创建项目\"></a>1、创建项目</h2><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">django-admin<span class=\"selector-class\">.py</span> startproject message</div></pre></td></tr></table></figure>\n<p>进入项目message</p>\n<h2 id=\"2、创建APP\"><a href=\"#2、创建APP\" class=\"headerlink\" title=\"2、创建APP\"></a>2、创建APP</h2><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">python manager<span class=\"selector-class\">.py</span> startapp guestbook</div></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h2 id=\"项目结构\"><a href=\"#项目结构\" class=\"headerlink\" title=\"项目结构\"></a>项目结构</h2><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\">.</div><div class=\"line\">├── guestbook</div><div class=\"line\">│   ├── admin<span class=\"selector-class\">.py</span></div><div class=\"line\">│   ├── apps<span class=\"selector-class\">.py</span></div><div class=\"line\">│   ├── __init__<span class=\"selector-class\">.py</span></div><div class=\"line\">│   ├── migrations</div><div class=\"line\">│   │   └── __init__<span class=\"selector-class\">.py</span></div><div class=\"line\">│   ├── models<span class=\"selector-class\">.py</span></div><div class=\"line\">│   ├── tests<span class=\"selector-class\">.py</span></div><div class=\"line\">│   └── views<span class=\"selector-class\">.py</span></div><div class=\"line\">├── manage<span class=\"selector-class\">.py</span></div><div class=\"line\">└── message</div><div class=\"line\">    ├── __init__<span class=\"selector-class\">.py</span></div><div class=\"line\">    ├── __pycache__</div><div class=\"line\">    │   ├── __init__<span class=\"selector-class\">.cpython-35</span><span class=\"selector-class\">.pyc</span></div><div class=\"line\">    │   └── settings<span class=\"selector-class\">.cpython-35</span><span class=\"selector-class\">.pyc</span></div><div class=\"line\">    ├── settings<span class=\"selector-class\">.py</span></div><div class=\"line\">    ├── urls<span class=\"selector-class\">.py</span></div><div class=\"line\">    └── wsgi<span class=\"selector-class\">.py</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"number\">4</span> directories, <span class=\"number\">14</span> files</div></pre></td></tr></table></figure>\n<p>需要做的事：<br>    配置项目setting 、初始化数据库、配置url 、编写views 、创建HTML文件</p>\n<h2 id=\"项目配置\"><a href=\"#项目配置\" class=\"headerlink\" title=\"项目配置\"></a>项目配置</h2><p>打开message/settings.py<br><figure class=\"highlight sml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">设置哪些主机可以访问,*代表所有主机</div><div class=\"line\"><span class=\"type\">ALLOWED_HOSTS</span> = [<span class=\"string\">\"*\"</span>]</div><div class=\"line\"></div><div class=\"line\"><span class=\"type\">INSTALLED_APPS</span> = [</div><div class=\"line\">    <span class=\"symbol\">'django</span>.contrib.admin',</div><div class=\"line\">    <span class=\"symbol\">'django</span>.contrib.auth',</div><div class=\"line\">    <span class=\"symbol\">'django</span>.contrib.contenttypes',</div><div class=\"line\">    <span class=\"symbol\">'django</span>.contrib.sessions',</div><div class=\"line\">    <span class=\"symbol\">'django</span>.contrib.messages',</div><div class=\"line\">    <span class=\"symbol\">'django</span>.contrib.staticfiles',</div><div class=\"line\">    <span class=\"symbol\">'guestbook'</span>,   #刚刚创建的<span class=\"type\">APP</span>，加入到此项目中</div><div class=\"line\">]</div><div class=\"line\"></div><div class=\"line\">#数据库默认用sqlite3,后期可以换成<span class=\"type\">MySQL</span>或者<span class=\"type\">SQL</span> <span class=\"type\">Server</span>等</div><div class=\"line\"></div><div class=\"line\"><span class=\"type\">TIME_ZONE</span> = <span class=\"symbol\">'PRC'</span>  #时区设置为中国</div></pre></td></tr></table></figure></p>\n<h2 id=\"创建数据库字段\"><a href=\"#创建数据库字段\" class=\"headerlink\" title=\"创建数据库字段\"></a>创建数据库字段</h2><figure class=\"highlight nix\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#encoding: utf-8</span></div><div class=\"line\">from django.db <span class=\"built_in\">import</span> models</div><div class=\"line\"></div><div class=\"line\">class Message(models.Model):</div><div class=\"line\">    <span class=\"attr\">username=models.CharField(max_length=256)</span></div><div class=\"line\">    <span class=\"attr\">title=models.CharField(max_length=512)</span></div><div class=\"line\">    <span class=\"attr\">content=models.TextField(max_length=256)</span></div><div class=\"line\">    <span class=\"attr\">publish=models.DateTimeField()</span></div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">#为了显示</span></div><div class=\"line\">    def __str__(self):</div><div class=\"line\">        <span class=\"attr\">tpl</span> = '&lt;Message:[<span class=\"attr\">username=&#123;username&#125;,</span> <span class=\"attr\">title=&#123;title&#125;,</span> <span class=\"attr\">content=&#123;content&#125;,</span> <span class=\"attr\">publish=&#123;publish&#125;]&gt;'</span></div><div class=\"line\">        return tpl.format(<span class=\"attr\">username=self.username,</span> <span class=\"attr\">title=self.title,</span> <span class=\"attr\">content=self.content,</span> <span class=\"attr\">publish=self.publish)</span></div></pre></td></tr></table></figure>\n<h2 id=\"初始化数据库\"><a href=\"#初始化数据库\" class=\"headerlink\" title=\"初始化数据库\"></a>初始化数据库</h2><figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># 1. 创建更改的文件</span></div><div class=\"line\">root@python:<span class=\"string\">/online/message</span><span class=\"comment\"># python3 manage.py makemigrations</span></div><div class=\"line\">Migrations for 'guestbook':</div><div class=\"line\">  guestbook/migrations/0001_initial.py</div><div class=\"line\">    - Create model Message</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 2. 将生成的py文件应用到数据库</span></div><div class=\"line\">root@python:<span class=\"string\">/online/message</span><span class=\"comment\"># python3 manage.py migrate</span></div><div class=\"line\">Operations to perform:</div><div class=\"line\">  Apply all migrations: admin, auth, contenttypes, guestbook, sessions</div><div class=\"line\">Running migrations:</div><div class=\"line\">  Applying contenttypes.0001_initial.<span class=\"string\">..</span> OK</div><div class=\"line\">  Applying auth.0001_initial.<span class=\"string\">..</span> OK</div><div class=\"line\">  Applying admin.0001_initial.<span class=\"string\">..</span> OK</div><div class=\"line\">  Applying admin.0002_logentry_remove_auto_add.<span class=\"string\">..</span> OK</div><div class=\"line\">  Applying contenttypes.0002_remove_content_type_name.<span class=\"string\">..</span> OK</div><div class=\"line\">  Applying auth.0002_alter_permission_name_max_length.<span class=\"string\">..</span> OK</div><div class=\"line\">  Applying auth.0003_alter_user_email_max_length.<span class=\"string\">..</span> OK</div><div class=\"line\">  Applying auth.0004_alter_user_username_opts.<span class=\"string\">..</span> OK</div><div class=\"line\">  Applying auth.0005_alter_user_last_login_null.<span class=\"string\">..</span> OK</div><div class=\"line\">  Applying auth.0006_require_contenttypes_0002.<span class=\"string\">..</span> OK</div><div class=\"line\">  Applying auth.0007_alter_validators_add_error_messages.<span class=\"string\">..</span> OK</div><div class=\"line\">  Applying auth.0008_alter_user_username_max_length.<span class=\"string\">..</span> OK</div><div class=\"line\">  Applying guestbook.0001_initial.<span class=\"string\">..</span> OK</div><div class=\"line\">  Applying sessions.0001_initial.<span class=\"string\">..</span> OK</div></pre></td></tr></table></figure>\n<h2 id=\"配置url\"><a href=\"#配置url\" class=\"headerlink\" title=\"配置url\"></a>配置url</h2><p>设置项目message/urls.py<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">from</span> django.conf.urls <span class=\"keyword\">import</span> url,include  <span class=\"comment\">#添加了include</span></div><div class=\"line\"><span class=\"keyword\">from</span> django.contrib <span class=\"keyword\">import</span> admin</div><div class=\"line\"></div><div class=\"line\">urlpatterns = [</div><div class=\"line\">    url(<span class=\"string\">r'^admin/'</span>, admin.site.urls),</div><div class=\"line\">    url(<span class=\"string\">r'^guestbook/'</span>, include(<span class=\"string\">'guestbook.urls'</span>,namespace=<span class=\"string\">'guestbook'</span>)),   <span class=\"comment\">#表示在url地址中所有guestbook的都交给guestbook下面的url来处理，后面的逗号不要省略</span></div><div class=\"line\">]</div></pre></td></tr></table></figure></p>\n<p>设置APP的url<br>如果是初次创建APP，urls.py在APP中一般不存在，创建即可<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">vim guestbook/urls.py</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 内容如下</span></div><div class=\"line\"><span class=\"keyword\">from</span> django.conf.urls <span class=\"keyword\">import</span> url</div><div class=\"line\"><span class=\"keyword\">from</span> . <span class=\"keyword\">import</span> views</div><div class=\"line\"></div><div class=\"line\">urlpatterns = [</div><div class=\"line\">    url(<span class=\"string\">r'^index/'</span>,views.index,name=<span class=\"string\">'index'</span>),   <span class=\"comment\">#不要忘了逗号</span></div><div class=\"line\">]</div></pre></td></tr></table></figure></p>\n<h2 id=\"编写views\"><a href=\"#编写views\" class=\"headerlink\" title=\"编写views\"></a>编写views</h2><p>编辑APP中的views.py<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">from</span> django.shortcuts <span class=\"keyword\">import</span> render</div><div class=\"line\"><span class=\"keyword\">from</span> django.http <span class=\"keyword\">import</span> HttpResponseRedirect</div><div class=\"line\"><span class=\"keyword\">from</span> . <span class=\"keyword\">import</span> models</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Create your views here.</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">index</span><span class=\"params\">(request)</span>:</span></div><div class=\"line\">    messages = models.Message.objects.all()</div><div class=\"line\">    <span class=\"keyword\">return</span> render(request, <span class=\"string\">'guestbook/index.html'</span>, &#123;<span class=\"string\">'messages'</span> : messages&#125;)</div></pre></td></tr></table></figure></p>\n<h2 id=\"编写HTML文件\"><a href=\"#编写HTML文件\" class=\"headerlink\" title=\"编写HTML文件\"></a>编写HTML文件</h2><p>创建APP/templates/guestbook/index.html目录及文件</p>\n<p>#使用bootstrap美化了<br><figure class=\"highlight django\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"utf-8\"</span> /&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>留言板<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"https://cdn.bootcss.com/bootstrap/3.3.7/css/bootstrap.min.css\"</span> <span class=\"attr\">crossorigin</span>=<span class=\"string\">\"anonymous\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">       </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">class</span>=<span class=\"string\">\"table table-striped table-bordered table-hover table-condensed\"</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">thead</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">tr</span> <span class=\"attr\">class</span>=<span class=\"string\">\"danger\"</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>留言时间<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>留言者<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>标题<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>内容<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">thead</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">tbody</span>&gt;</span></div><div class=\"line\">                <span class=\"template-tag\">&#123;% <span class=\"name\"><span class=\"name\">if</span></span> messages %&#125;</span><span class=\"xml\"></span></div><div class=\"line\">                    <span class=\"template-tag\">&#123;% <span class=\"name\"><span class=\"name\">for</span></span> message <span class=\"keyword\">in</span> messages %&#125;</span><span class=\"xml\"></span></div><div class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">tr</span> <span class=\"attr\">class</span>=<span class=\"string\">\"</span></span><span class=\"template-tag\">&#123;% <span class=\"name\"><span class=\"name\">cycle</span></span> 'active' 'success' 'warning' 'info' %&#125;</span><span class=\"xml\"><span class=\"tag\"><span class=\"string\">\"</span>&gt;</span></span></div><div class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span><span class=\"template-variable\">&#123;&#123; message.publish|<span class=\"name\">date</span>:<span class=\"string\">'Y-m-d H:i:s'</span> &#125;&#125;</span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span></div><div class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span><span class=\"template-variable\">&#123;&#123; message.username &#125;&#125;</span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span></div><div class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span><span class=\"template-variable\">&#123;&#123; message.title &#125;&#125;</span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span></div><div class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span><span class=\"template-variable\">&#123;&#123; message.content &#125;&#125;</span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span></div><div class=\"line\">                        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">                    <span class=\"template-tag\">&#123;% <span class=\"name\"><span class=\"name\">endfor</span></span> %&#125;</span><span class=\"xml\"></span></div><div class=\"line\">                <span class=\"template-tag\">&#123;% <span class=\"name\"><span class=\"name\">else</span></span> %&#125;</span><span class=\"xml\"></span></div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">colspan</span>=<span class=\"string\">\"4\"</span>&gt;</span>无数据<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">                <span class=\"template-tag\">&#123;% <span class=\"name\"><span class=\"name\">endif</span></span> %&#125;</span><span class=\"xml\"></span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">tbody</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span> </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn btn-xs btn-info\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"/guestbook/create/\"</span>&gt;</span>去留言<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<h2 id=\"调试index页面\"><a href=\"#调试index页面\" class=\"headerlink\" title=\"调试index页面\"></a>调试index页面</h2><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">python</span> <span class=\"selector-tag\">manage</span><span class=\"selector-class\">.py</span> <span class=\"selector-tag\">runserver</span> 0<span class=\"selector-class\">.0</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.0</span><span class=\"selector-pseudo\">:99</span></div></pre></td></tr></table></figure>\n<p>打开浏览器访问<a href=\"http://开发机器ip地址:99/guestbook/index/\" target=\"_blank\" rel=\"external\">http://开发机器ip地址:99/guestbook/index/</a></p>\n<p>图1</p>\n<p>留言展示页面成功</p>\n<h2 id=\"创建留言页面\"><a href=\"#创建留言页面\" class=\"headerlink\" title=\"创建留言页面\"></a>创建留言页面</h2><figure class=\"highlight django\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"utf-8\"</span> /&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>留言<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"https://cdn.bootcss.com/bootstrap/3.3.7/css/bootstrap.min.css\"</span> <span class=\"attr\">crossorigin</span>=<span class=\"string\">\"anonymous\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">        <span class=\"comment\">&lt;!-- 我是注释 --&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>留言<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span> <span class=\"comment\">&lt;!--h1-&gt; h6--&gt;</span></div><div class=\"line\">        <span class=\"comment\">&lt;!--method: POST /GET --&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">\"/online/save/\"</span> <span class=\"attr\">method</span>=<span class=\"string\">\"POST\"</span> <span class=\"attr\">novalidate</span>=<span class=\"string\">\"novalidate\"</span>&gt;</span></div><div class=\"line\">\t    <span class=\"template-tag\">&#123;% <span class=\"name\"><span class=\"name\">csrf_token</span></span> %&#125;</span><span class=\"xml\"></span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">class</span>=<span class=\"string\">\"table table-striped table-bordered table-hover table-condensed\"</span>&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span>用户名:<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span> <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"username\"</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">\"用户名\"</span> /&gt;</span> <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></div><div class=\"line\">\t            <span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span>标  题:<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span> <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"title\"</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">\"标题\"</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></div><div class=\"line\">\t            <span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span>内  容:<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span> <span class=\"tag\">&lt;<span class=\"name\">textarea</span> <span class=\"attr\">name</span>=<span class=\"string\">\"content\"</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">\"内容\"</span>&gt;</span> <span class=\"tag\">&lt;/<span class=\"name\">textarea</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn btn-success\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"留言\"</span>/&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>配置APP下的url<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">vim guestbook/urls.py</div><div class=\"line\"></div><div class=\"line\">urlpatterns = [</div><div class=\"line\">    url(<span class=\"string\">r'^index/'</span>,views.index,name=<span class=\"string\">'index'</span>),   <span class=\"comment\">#不要忘了逗号</span></div><div class=\"line\">    url(<span class=\"string\">r'^create/$'</span>, views.create, name=<span class=\"string\">'create'</span>),</div><div class=\"line\">    url(<span class=\"string\">r'^save/$'</span>, views.save, name=<span class=\"string\">'save'</span>), </div><div class=\"line\">]</div></pre></td></tr></table></figure></p>\n<p>编辑views.py<br><figure class=\"highlight maxima\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">#先导入时间模块</div><div class=\"line\">import datetime</div><div class=\"line\"></div><div class=\"line\">#添加create、<span class=\"built_in\">save</span></div><div class=\"line\"></div><div class=\"line\">def create(request):</div><div class=\"line\">    <span class=\"built_in\">return</span> render(request, 'guestbook/create.html')</div><div class=\"line\"></div><div class=\"line\">def <span class=\"built_in\">save</span>(request):</div><div class=\"line\">    username = request.POST.<span class=\"built_in\">get</span>(<span class=\"string\">\"username\"</span>)</div><div class=\"line\">    <span class=\"built_in\">title</span> = request.POST.<span class=\"built_in\">get</span>(<span class=\"string\">\"title\"</span>)</div><div class=\"line\">    <span class=\"built_in\">content</span> = request.POST.<span class=\"built_in\">get</span>(<span class=\"string\">\"content\"</span>)</div><div class=\"line\">    publish = datetime.datetime.now().strftime(<span class=\"string\">\"%Y-%m-%d %H:%M:%S\"</span>)</div><div class=\"line\">\tmessage = models.Message(<span class=\"built_in\">title</span>=<span class=\"built_in\">title</span>, <span class=\"built_in\">content</span>=<span class=\"built_in\">content</span>, username=username, publish=publish)</div><div class=\"line\">    message.<span class=\"built_in\">save</span>()</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"built_in\">return</span> HttpResponseRedirect('/guestbook/index/')</div></pre></td></tr></table></figure></p>\n<p>OK，再次运行，enjoy it!</p>\n","site":{"data":{}},"excerpt":"<p>Django在线留言板小练习</p>\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><figure class=\"highlight gcode\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ubu<span class=\"symbol\">ntu16</span><span class=\"number\">.04</span> + pytho<span class=\"symbol\">n3</span> + dja<span class=\"symbol\">ngo1</span><span class=\"number\">.11</span></div></pre></td></tr></table></figure>\n<h2 id=\"1、创建项目\"><a href=\"#1、创建项目\" class=\"headerlink\" title=\"1、创建项目\"></a>1、创建项目</h2><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">django-admin<span class=\"selector-class\">.py</span> startproject message</div></pre></td></tr></table></figure>\n<p>进入项目message</p>\n<h2 id=\"2、创建APP\"><a href=\"#2、创建APP\" class=\"headerlink\" title=\"2、创建APP\"></a>2、创建APP</h2><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">python manager<span class=\"selector-class\">.py</span> startapp guestbook</div></pre></td></tr></table></figure>","more":"<h2 id=\"项目结构\"><a href=\"#项目结构\" class=\"headerlink\" title=\"项目结构\"></a>项目结构</h2><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\">.</div><div class=\"line\">├── guestbook</div><div class=\"line\">│   ├── admin<span class=\"selector-class\">.py</span></div><div class=\"line\">│   ├── apps<span class=\"selector-class\">.py</span></div><div class=\"line\">│   ├── __init__<span class=\"selector-class\">.py</span></div><div class=\"line\">│   ├── migrations</div><div class=\"line\">│   │   └── __init__<span class=\"selector-class\">.py</span></div><div class=\"line\">│   ├── models<span class=\"selector-class\">.py</span></div><div class=\"line\">│   ├── tests<span class=\"selector-class\">.py</span></div><div class=\"line\">│   └── views<span class=\"selector-class\">.py</span></div><div class=\"line\">├── manage<span class=\"selector-class\">.py</span></div><div class=\"line\">└── message</div><div class=\"line\">    ├── __init__<span class=\"selector-class\">.py</span></div><div class=\"line\">    ├── __pycache__</div><div class=\"line\">    │   ├── __init__<span class=\"selector-class\">.cpython-35</span><span class=\"selector-class\">.pyc</span></div><div class=\"line\">    │   └── settings<span class=\"selector-class\">.cpython-35</span><span class=\"selector-class\">.pyc</span></div><div class=\"line\">    ├── settings<span class=\"selector-class\">.py</span></div><div class=\"line\">    ├── urls<span class=\"selector-class\">.py</span></div><div class=\"line\">    └── wsgi<span class=\"selector-class\">.py</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"number\">4</span> directories, <span class=\"number\">14</span> files</div></pre></td></tr></table></figure>\n<p>需要做的事：<br>    配置项目setting 、初始化数据库、配置url 、编写views 、创建HTML文件</p>\n<h2 id=\"项目配置\"><a href=\"#项目配置\" class=\"headerlink\" title=\"项目配置\"></a>项目配置</h2><p>打开message/settings.py<br><figure class=\"highlight sml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">设置哪些主机可以访问,*代表所有主机</div><div class=\"line\"><span class=\"type\">ALLOWED_HOSTS</span> = [<span class=\"string\">\"*\"</span>]</div><div class=\"line\"></div><div class=\"line\"><span class=\"type\">INSTALLED_APPS</span> = [</div><div class=\"line\">    <span class=\"symbol\">'django</span>.contrib.admin',</div><div class=\"line\">    <span class=\"symbol\">'django</span>.contrib.auth',</div><div class=\"line\">    <span class=\"symbol\">'django</span>.contrib.contenttypes',</div><div class=\"line\">    <span class=\"symbol\">'django</span>.contrib.sessions',</div><div class=\"line\">    <span class=\"symbol\">'django</span>.contrib.messages',</div><div class=\"line\">    <span class=\"symbol\">'django</span>.contrib.staticfiles',</div><div class=\"line\">    <span class=\"symbol\">'guestbook'</span>,   #刚刚创建的<span class=\"type\">APP</span>，加入到此项目中</div><div class=\"line\">]</div><div class=\"line\"></div><div class=\"line\">#数据库默认用sqlite3,后期可以换成<span class=\"type\">MySQL</span>或者<span class=\"type\">SQL</span> <span class=\"type\">Server</span>等</div><div class=\"line\"></div><div class=\"line\"><span class=\"type\">TIME_ZONE</span> = <span class=\"symbol\">'PRC'</span>  #时区设置为中国</div></pre></td></tr></table></figure></p>\n<h2 id=\"创建数据库字段\"><a href=\"#创建数据库字段\" class=\"headerlink\" title=\"创建数据库字段\"></a>创建数据库字段</h2><figure class=\"highlight nix\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#encoding: utf-8</span></div><div class=\"line\">from django.db <span class=\"built_in\">import</span> models</div><div class=\"line\"></div><div class=\"line\">class Message(models.Model):</div><div class=\"line\">    <span class=\"attr\">username=models.CharField(max_length=256)</span></div><div class=\"line\">    <span class=\"attr\">title=models.CharField(max_length=512)</span></div><div class=\"line\">    <span class=\"attr\">content=models.TextField(max_length=256)</span></div><div class=\"line\">    <span class=\"attr\">publish=models.DateTimeField()</span></div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">#为了显示</span></div><div class=\"line\">    def __str__(self):</div><div class=\"line\">        <span class=\"attr\">tpl</span> = '&lt;Message:[<span class=\"attr\">username=&#123;username&#125;,</span> <span class=\"attr\">title=&#123;title&#125;,</span> <span class=\"attr\">content=&#123;content&#125;,</span> <span class=\"attr\">publish=&#123;publish&#125;]&gt;'</span></div><div class=\"line\">        return tpl.format(<span class=\"attr\">username=self.username,</span> <span class=\"attr\">title=self.title,</span> <span class=\"attr\">content=self.content,</span> <span class=\"attr\">publish=self.publish)</span></div></pre></td></tr></table></figure>\n<h2 id=\"初始化数据库\"><a href=\"#初始化数据库\" class=\"headerlink\" title=\"初始化数据库\"></a>初始化数据库</h2><figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># 1. 创建更改的文件</span></div><div class=\"line\">root@python:<span class=\"string\">/online/message</span><span class=\"comment\"># python3 manage.py makemigrations</span></div><div class=\"line\">Migrations for 'guestbook':</div><div class=\"line\">  guestbook/migrations/0001_initial.py</div><div class=\"line\">    - Create model Message</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 2. 将生成的py文件应用到数据库</span></div><div class=\"line\">root@python:<span class=\"string\">/online/message</span><span class=\"comment\"># python3 manage.py migrate</span></div><div class=\"line\">Operations to perform:</div><div class=\"line\">  Apply all migrations: admin, auth, contenttypes, guestbook, sessions</div><div class=\"line\">Running migrations:</div><div class=\"line\">  Applying contenttypes.0001_initial.<span class=\"string\">..</span> OK</div><div class=\"line\">  Applying auth.0001_initial.<span class=\"string\">..</span> OK</div><div class=\"line\">  Applying admin.0001_initial.<span class=\"string\">..</span> OK</div><div class=\"line\">  Applying admin.0002_logentry_remove_auto_add.<span class=\"string\">..</span> OK</div><div class=\"line\">  Applying contenttypes.0002_remove_content_type_name.<span class=\"string\">..</span> OK</div><div class=\"line\">  Applying auth.0002_alter_permission_name_max_length.<span class=\"string\">..</span> OK</div><div class=\"line\">  Applying auth.0003_alter_user_email_max_length.<span class=\"string\">..</span> OK</div><div class=\"line\">  Applying auth.0004_alter_user_username_opts.<span class=\"string\">..</span> OK</div><div class=\"line\">  Applying auth.0005_alter_user_last_login_null.<span class=\"string\">..</span> OK</div><div class=\"line\">  Applying auth.0006_require_contenttypes_0002.<span class=\"string\">..</span> OK</div><div class=\"line\">  Applying auth.0007_alter_validators_add_error_messages.<span class=\"string\">..</span> OK</div><div class=\"line\">  Applying auth.0008_alter_user_username_max_length.<span class=\"string\">..</span> OK</div><div class=\"line\">  Applying guestbook.0001_initial.<span class=\"string\">..</span> OK</div><div class=\"line\">  Applying sessions.0001_initial.<span class=\"string\">..</span> OK</div></pre></td></tr></table></figure>\n<h2 id=\"配置url\"><a href=\"#配置url\" class=\"headerlink\" title=\"配置url\"></a>配置url</h2><p>设置项目message/urls.py<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">from</span> django.conf.urls <span class=\"keyword\">import</span> url,include  <span class=\"comment\">#添加了include</span></div><div class=\"line\"><span class=\"keyword\">from</span> django.contrib <span class=\"keyword\">import</span> admin</div><div class=\"line\"></div><div class=\"line\">urlpatterns = [</div><div class=\"line\">    url(<span class=\"string\">r'^admin/'</span>, admin.site.urls),</div><div class=\"line\">    url(<span class=\"string\">r'^guestbook/'</span>, include(<span class=\"string\">'guestbook.urls'</span>,namespace=<span class=\"string\">'guestbook'</span>)),   <span class=\"comment\">#表示在url地址中所有guestbook的都交给guestbook下面的url来处理，后面的逗号不要省略</span></div><div class=\"line\">]</div></pre></td></tr></table></figure></p>\n<p>设置APP的url<br>如果是初次创建APP，urls.py在APP中一般不存在，创建即可<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">vim guestbook/urls.py</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 内容如下</span></div><div class=\"line\"><span class=\"keyword\">from</span> django.conf.urls <span class=\"keyword\">import</span> url</div><div class=\"line\"><span class=\"keyword\">from</span> . <span class=\"keyword\">import</span> views</div><div class=\"line\"></div><div class=\"line\">urlpatterns = [</div><div class=\"line\">    url(<span class=\"string\">r'^index/'</span>,views.index,name=<span class=\"string\">'index'</span>),   <span class=\"comment\">#不要忘了逗号</span></div><div class=\"line\">]</div></pre></td></tr></table></figure></p>\n<h2 id=\"编写views\"><a href=\"#编写views\" class=\"headerlink\" title=\"编写views\"></a>编写views</h2><p>编辑APP中的views.py<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">from</span> django.shortcuts <span class=\"keyword\">import</span> render</div><div class=\"line\"><span class=\"keyword\">from</span> django.http <span class=\"keyword\">import</span> HttpResponseRedirect</div><div class=\"line\"><span class=\"keyword\">from</span> . <span class=\"keyword\">import</span> models</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Create your views here.</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">index</span><span class=\"params\">(request)</span>:</span></div><div class=\"line\">    messages = models.Message.objects.all()</div><div class=\"line\">    <span class=\"keyword\">return</span> render(request, <span class=\"string\">'guestbook/index.html'</span>, &#123;<span class=\"string\">'messages'</span> : messages&#125;)</div></pre></td></tr></table></figure></p>\n<h2 id=\"编写HTML文件\"><a href=\"#编写HTML文件\" class=\"headerlink\" title=\"编写HTML文件\"></a>编写HTML文件</h2><p>创建APP/templates/guestbook/index.html目录及文件</p>\n<p>#使用bootstrap美化了<br><figure class=\"highlight django\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"utf-8\"</span> /&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>留言板<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"https://cdn.bootcss.com/bootstrap/3.3.7/css/bootstrap.min.css\"</span> <span class=\"attr\">crossorigin</span>=<span class=\"string\">\"anonymous\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">       </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">class</span>=<span class=\"string\">\"table table-striped table-bordered table-hover table-condensed\"</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">thead</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">tr</span> <span class=\"attr\">class</span>=<span class=\"string\">\"danger\"</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>留言时间<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>留言者<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>标题<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>内容<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">thead</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">tbody</span>&gt;</span></div><div class=\"line\">                <span class=\"template-tag\">&#123;% <span class=\"name\"><span class=\"name\">if</span></span> messages %&#125;</span><span class=\"xml\"></span></div><div class=\"line\">                    <span class=\"template-tag\">&#123;% <span class=\"name\"><span class=\"name\">for</span></span> message <span class=\"keyword\">in</span> messages %&#125;</span><span class=\"xml\"></span></div><div class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">tr</span> <span class=\"attr\">class</span>=<span class=\"string\">\"</span></span><span class=\"template-tag\">&#123;% <span class=\"name\"><span class=\"name\">cycle</span></span> 'active' 'success' 'warning' 'info' %&#125;</span><span class=\"xml\"><span class=\"tag\"><span class=\"string\">\"</span>&gt;</span></span></div><div class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span><span class=\"template-variable\">&#123;&#123; message.publish|<span class=\"name\">date</span>:<span class=\"string\">'Y-m-d H:i:s'</span> &#125;&#125;</span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span></div><div class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span><span class=\"template-variable\">&#123;&#123; message.username &#125;&#125;</span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span></div><div class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span><span class=\"template-variable\">&#123;&#123; message.title &#125;&#125;</span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span></div><div class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span><span class=\"template-variable\">&#123;&#123; message.content &#125;&#125;</span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span></div><div class=\"line\">                        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">                    <span class=\"template-tag\">&#123;% <span class=\"name\"><span class=\"name\">endfor</span></span> %&#125;</span><span class=\"xml\"></span></div><div class=\"line\">                <span class=\"template-tag\">&#123;% <span class=\"name\"><span class=\"name\">else</span></span> %&#125;</span><span class=\"xml\"></span></div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">colspan</span>=<span class=\"string\">\"4\"</span>&gt;</span>无数据<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">                <span class=\"template-tag\">&#123;% <span class=\"name\"><span class=\"name\">endif</span></span> %&#125;</span><span class=\"xml\"></span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">tbody</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span> </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn btn-xs btn-info\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"/guestbook/create/\"</span>&gt;</span>去留言<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<h2 id=\"调试index页面\"><a href=\"#调试index页面\" class=\"headerlink\" title=\"调试index页面\"></a>调试index页面</h2><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">python</span> <span class=\"selector-tag\">manage</span><span class=\"selector-class\">.py</span> <span class=\"selector-tag\">runserver</span> 0<span class=\"selector-class\">.0</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.0</span><span class=\"selector-pseudo\">:99</span></div></pre></td></tr></table></figure>\n<p>打开浏览器访问<a href=\"http://开发机器ip地址:99/guestbook/index/\" target=\"_blank\" rel=\"external\">http://开发机器ip地址:99/guestbook/index/</a></p>\n<p>图1</p>\n<p>留言展示页面成功</p>\n<h2 id=\"创建留言页面\"><a href=\"#创建留言页面\" class=\"headerlink\" title=\"创建留言页面\"></a>创建留言页面</h2><figure class=\"highlight django\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"utf-8\"</span> /&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>留言<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"https://cdn.bootcss.com/bootstrap/3.3.7/css/bootstrap.min.css\"</span> <span class=\"attr\">crossorigin</span>=<span class=\"string\">\"anonymous\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">        <span class=\"comment\">&lt;!-- 我是注释 --&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>留言<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span> <span class=\"comment\">&lt;!--h1-&gt; h6--&gt;</span></div><div class=\"line\">        <span class=\"comment\">&lt;!--method: POST /GET --&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">\"/online/save/\"</span> <span class=\"attr\">method</span>=<span class=\"string\">\"POST\"</span> <span class=\"attr\">novalidate</span>=<span class=\"string\">\"novalidate\"</span>&gt;</span></div><div class=\"line\">\t    <span class=\"template-tag\">&#123;% <span class=\"name\"><span class=\"name\">csrf_token</span></span> %&#125;</span><span class=\"xml\"></span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">class</span>=<span class=\"string\">\"table table-striped table-bordered table-hover table-condensed\"</span>&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span>用户名:<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span> <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"username\"</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">\"用户名\"</span> /&gt;</span> <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></div><div class=\"line\">\t            <span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span>标  题:<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span> <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"title\"</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">\"标题\"</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></div><div class=\"line\">\t            <span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span>内  容:<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span> <span class=\"tag\">&lt;<span class=\"name\">textarea</span> <span class=\"attr\">name</span>=<span class=\"string\">\"content\"</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">\"内容\"</span>&gt;</span> <span class=\"tag\">&lt;/<span class=\"name\">textarea</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn btn-success\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"留言\"</span>/&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>配置APP下的url<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">vim guestbook/urls.py</div><div class=\"line\"></div><div class=\"line\">urlpatterns = [</div><div class=\"line\">    url(<span class=\"string\">r'^index/'</span>,views.index,name=<span class=\"string\">'index'</span>),   <span class=\"comment\">#不要忘了逗号</span></div><div class=\"line\">    url(<span class=\"string\">r'^create/$'</span>, views.create, name=<span class=\"string\">'create'</span>),</div><div class=\"line\">    url(<span class=\"string\">r'^save/$'</span>, views.save, name=<span class=\"string\">'save'</span>), </div><div class=\"line\">]</div></pre></td></tr></table></figure></p>\n<p>编辑views.py<br><figure class=\"highlight maxima\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">#先导入时间模块</div><div class=\"line\">import datetime</div><div class=\"line\"></div><div class=\"line\">#添加create、<span class=\"built_in\">save</span></div><div class=\"line\"></div><div class=\"line\">def create(request):</div><div class=\"line\">    <span class=\"built_in\">return</span> render(request, 'guestbook/create.html')</div><div class=\"line\"></div><div class=\"line\">def <span class=\"built_in\">save</span>(request):</div><div class=\"line\">    username = request.POST.<span class=\"built_in\">get</span>(<span class=\"string\">\"username\"</span>)</div><div class=\"line\">    <span class=\"built_in\">title</span> = request.POST.<span class=\"built_in\">get</span>(<span class=\"string\">\"title\"</span>)</div><div class=\"line\">    <span class=\"built_in\">content</span> = request.POST.<span class=\"built_in\">get</span>(<span class=\"string\">\"content\"</span>)</div><div class=\"line\">    publish = datetime.datetime.now().strftime(<span class=\"string\">\"%Y-%m-%d %H:%M:%S\"</span>)</div><div class=\"line\">\tmessage = models.Message(<span class=\"built_in\">title</span>=<span class=\"built_in\">title</span>, <span class=\"built_in\">content</span>=<span class=\"built_in\">content</span>, username=username, publish=publish)</div><div class=\"line\">    message.<span class=\"built_in\">save</span>()</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"built_in\">return</span> HttpResponseRedirect('/guestbook/index/')</div></pre></td></tr></table></figure></p>\n<p>OK，再次运行，enjoy it!</p>"},{"title":"KVM虚拟Mac OS X Sierra","abbrlink":"638d5663","date":"2017-04-11T16:00:00.000Z","_content":"# KVM虚拟Mac OS X Sierra\n \n> 大致可行的方法有两种：\n\n```\n第一种，重新编译内核、编译qemu、编译kvm、kvm-mod，加上OS X的支持。\n详情：http://www.tuicool.com/articles/JBzANrU\n在使用此种方法编译kvm时，报错，无法安装，文件内容都与作者标识的不一致。才疏学浅，未能成功。。。\n\n第二种,GitHub上有OSX-KVM项目，相对来说较为简单，本次采用此种方法。\n具体请参考：https://github.com/kholia/OSX-KVM\n```\n<!-- more -->\n本文所需文件：\n```\n在Mac下制作的Install_macOS_Sierra_OS_X_10.12.iso\n引导文件enoch_rev2839_boot\n创建的磁盘mac_hdd.img\nqemu配置文件OSX_KVM.xml\n\n```\n链接：http://pan.baidu.com/s/1qYbe12W 密码：6znh\n\n## 环境准备\n```\n物理机系统说明：\n\n作者在以下系统中测试过:\nUbuntu 15.10 running on i5-6500 CPU.\nUbuntu 16.10 running on i7-3960X CPU.\nFedora 24 running on i5-6500 + i7-6600U CPU.\n\nQEMU版本：2.4.1, 2.5, 2.6.1, and 2.8.\n\nAMD CPU有问题。AMD FX-8350 可以工作，但是Phenom II X3 720不工作\n需要开启  Intel VT-x/AMD-v虚拟化技术\n\n本次使用环境：\nUbuntu Server 16.04 LTS  \nQEMU:2.5.0\n```\n\n## 安装qemu和virt-manager\n```\nsudo apt-get install qemu uml-utilities virt-manager\n```\n\n## 安装桥接网络管理管理工具\n```\nsudo apt-get install bridge-utils\n```\n\n## 配置桥接网络\n\n```\nroot@fin75:~# vim /etc/network/interface\n# This file describes the network interfaces available on your system\n# and how to activate them. For more information, see interfaces(5).\n\nsource /etc/network/interfaces.d/*\n\n# The loopback network interface\nauto lo\niface lo inet loopback\n\nauto br0\niface br0 inet static\n    address 172.16.0.75\n    network 172.16.0.0\n    netmask 255.255.255.0\n    broadcast 172.16.0.255\n    gateway 172.16.0.1\n    dns-nameservers 223.5.5.5\n    bridge_ports eno1\n    bridge_stp off\n    bridge_fd 0\n    bridge_maxwait 0\n\tpost-up ip link set br0 address aa:2b:3c:4d:5e:6f\n\nroot@fin75:~# reboot\n```\n注意：virbr0是安装kvm时系统建立的，为NAT网络专用，跟我们要使用的桥接完全不同\n> 按照官方文档直接重启服务会失败，重启物理机就可以了。\n\n参考：https://help.ubuntu.com/community/KVM/Networking\n\n\n## 创建磁盘文件\n```\nqemu-img create -f qcow2 /u01/mac_hdd.img 200G\n```\n\n> 安装方法可以使用boot-macOS.sh/boot.sh，或者使用macOS-libvirt.xml\n> 本次使用libvirt文件的方式\n\n## 修改libvirt文件\n```\n#只需修改这几处即可。\n\n#引导文件位置\n<kernel>/u01/boot/enoch_rev2839_boot</kernel> \n\n#磁盘文件位置\n<source file='/u01/mac_hdd.img'/> \n\n#ISO镜像位置\n<qemu:arg value='id=MacDVD,if=none,snapshot=on,file=/opt/Install_macOS_Sierra_OS_X_10.12.iso'/>\n\n#如果有多台OS X系统，还需修改\n\n<uuid>c757b31e-115f-4d1a-b574-0ae7b3cc8a58</uuid>\n\n#kvm中合理的Mac地址为52:54:00开头\n<mac address='52:54:00:3d:f8:25'/> \n\n#可在shell中执行以下命令获取合理的Mac地址：\nMACADDR=\"52:54:00:$(dd if=/dev/urandom bs=512 count=1 2>/dev/null | md5sum | sed 's/^\\(..\\)\\(..\\)\\(..\\).*$/\\1:\\2:\\3/')\"; echo $MACADDR\n\n#vnc中的port需更改为与第一个虚拟机不同\n<graphics type='vnc' port='5900' autoport='no' listen='127.0.0.1' keymap='en-us'>\n\n\n```\n\n## 重新定义libvirt文件\n```\nvirsh define /somepath/OSX-KVM/macOS-libvirt.xml \n\n#定义后，在/etc/libvirt/qemu/目录下会有macOS-libvirt.xml文件，以后修改后只需重新定义此文件即可\n```\n\n## 安装OS X\n\n在virt-manager中启动OSX\n\n步骤：\n![](https://cloud.githubusercontent.com/assets/731252/17645877/5136b1ac-61b2-11e6-8d90-29f5cc11ae01.png)\n\n选择磁盘工具\n![](https://cloud.githubusercontent.com/assets/731252/17645881/513b6918-61b2-11e6-91f2-026d953cbe0b.png)\n\n格式化KVM磁盘\n![](https://cloud.githubusercontent.com/assets/731252/17645878/51373d48-61b2-11e6-8740-69c86bf92d31.png)\n\n![](https://cloud.githubusercontent.com/assets/731252/17645879/513ae704-61b2-11e6-9a54-109c37132783.png)\n\n退出磁盘工具，打开终端\n![](https://cloud.githubusercontent.com/assets/731252/17645876/5136ad6a-61b2-11e6-84cd-cb7851119292.png)\n输入命令，拷贝安装文件：\n```\ncp -av /Extra /Volumes/KVMDisk\n```\n\n退出终端，启动安装即可！\n\n\n#错误合集\n## virt-manager启动虚拟机，打不开安装界面，显示boot，无限重启\n解决办法：开启ignore_msrs\n```\necho 1 > /sys/module/kvm/parameters/ignore_msrs\n```\n\n开机执行\n```\nvim /etc/rc.local\necho 1 > /sys/module/kvm/parameters/ignore_msrs\n```\n\n## 启动域时出错: \ninternal error: process exited while connecting to monitor: 2017-04-05 T06\\:\\25:53.648209Z qemu-system-x86_64: -drive id=MacDVD,if=none,snapshot=on,file=/opt/Install_macOS_Sierra_OS_X_10.12.iso: Could not open '/opt/Install_macOS_Sierra_OS_X_10.12.iso': Permission denied\n\n#解决办法\nkvm需要selinux装载安全模块，默认的Ubuntu server没有安装selinux\n\n```\nsudo apt-get install selinux\n#设置selinux=permissive\nreboot\n```\n\n## virt-manager显示乱码\n\n```\nsudo apt install font-manager \nsudo apt install fonts-arphic-ukai \nsudo apt install ttf-wqy-zenhei xfonts-wqy ttf-wqy-microhei \nsudo apt install fonts-cwtex-fs \nsudo apt install ttf-hanazono \nsudo apt install ttf-mscorefonts-installer \n```\n\n\n\n\n# Ubuntu虚拟Windows\n\n需要将显示协议由`Spice`服务器更改为`VNC`服务器，并且将键映射改为：`en-us`，不然会出现键盘无法使用的情况\n\n需要将显卡由`QXL`改为`Cirrus`，不然kvm安装windows系统时会卡在Starting Windows画面\nhttp://serverfault.com/questions/776406/windows-7-setup-hangs-at-starting-windows-using-proxmox-4-2\n\n需要将NIC网卡由`rtl8139`更改为`e1000`，不然会出现断网的情况\n\n\n# 参考\nhttps://github.com/kholia/OSX-KVM\nhttp://www.tuicool.com/articles/JBzANrU\nhttp://www.jianshu.com/p/e95c458d78bd\nhttps://blog.ostanin.org/2014/02/11/playing-with-mac-os-x-on-kvm/\nhttp://www.cnblogs.com/huntaiji/p/3918941.html","source":"_posts/KVM-OSX.md","raw":"---\ntitle: KVM虚拟Mac OS X Sierra\ncategories: 实践与总结\ntag: 实践与总结\nabbrlink: 638d5663\ndate: 2017-04-12 00:00:00\n---\n# KVM虚拟Mac OS X Sierra\n \n> 大致可行的方法有两种：\n\n```\n第一种，重新编译内核、编译qemu、编译kvm、kvm-mod，加上OS X的支持。\n详情：http://www.tuicool.com/articles/JBzANrU\n在使用此种方法编译kvm时，报错，无法安装，文件内容都与作者标识的不一致。才疏学浅，未能成功。。。\n\n第二种,GitHub上有OSX-KVM项目，相对来说较为简单，本次采用此种方法。\n具体请参考：https://github.com/kholia/OSX-KVM\n```\n<!-- more -->\n本文所需文件：\n```\n在Mac下制作的Install_macOS_Sierra_OS_X_10.12.iso\n引导文件enoch_rev2839_boot\n创建的磁盘mac_hdd.img\nqemu配置文件OSX_KVM.xml\n\n```\n链接：http://pan.baidu.com/s/1qYbe12W 密码：6znh\n\n## 环境准备\n```\n物理机系统说明：\n\n作者在以下系统中测试过:\nUbuntu 15.10 running on i5-6500 CPU.\nUbuntu 16.10 running on i7-3960X CPU.\nFedora 24 running on i5-6500 + i7-6600U CPU.\n\nQEMU版本：2.4.1, 2.5, 2.6.1, and 2.8.\n\nAMD CPU有问题。AMD FX-8350 可以工作，但是Phenom II X3 720不工作\n需要开启  Intel VT-x/AMD-v虚拟化技术\n\n本次使用环境：\nUbuntu Server 16.04 LTS  \nQEMU:2.5.0\n```\n\n## 安装qemu和virt-manager\n```\nsudo apt-get install qemu uml-utilities virt-manager\n```\n\n## 安装桥接网络管理管理工具\n```\nsudo apt-get install bridge-utils\n```\n\n## 配置桥接网络\n\n```\nroot@fin75:~# vim /etc/network/interface\n# This file describes the network interfaces available on your system\n# and how to activate them. For more information, see interfaces(5).\n\nsource /etc/network/interfaces.d/*\n\n# The loopback network interface\nauto lo\niface lo inet loopback\n\nauto br0\niface br0 inet static\n    address 172.16.0.75\n    network 172.16.0.0\n    netmask 255.255.255.0\n    broadcast 172.16.0.255\n    gateway 172.16.0.1\n    dns-nameservers 223.5.5.5\n    bridge_ports eno1\n    bridge_stp off\n    bridge_fd 0\n    bridge_maxwait 0\n\tpost-up ip link set br0 address aa:2b:3c:4d:5e:6f\n\nroot@fin75:~# reboot\n```\n注意：virbr0是安装kvm时系统建立的，为NAT网络专用，跟我们要使用的桥接完全不同\n> 按照官方文档直接重启服务会失败，重启物理机就可以了。\n\n参考：https://help.ubuntu.com/community/KVM/Networking\n\n\n## 创建磁盘文件\n```\nqemu-img create -f qcow2 /u01/mac_hdd.img 200G\n```\n\n> 安装方法可以使用boot-macOS.sh/boot.sh，或者使用macOS-libvirt.xml\n> 本次使用libvirt文件的方式\n\n## 修改libvirt文件\n```\n#只需修改这几处即可。\n\n#引导文件位置\n<kernel>/u01/boot/enoch_rev2839_boot</kernel> \n\n#磁盘文件位置\n<source file='/u01/mac_hdd.img'/> \n\n#ISO镜像位置\n<qemu:arg value='id=MacDVD,if=none,snapshot=on,file=/opt/Install_macOS_Sierra_OS_X_10.12.iso'/>\n\n#如果有多台OS X系统，还需修改\n\n<uuid>c757b31e-115f-4d1a-b574-0ae7b3cc8a58</uuid>\n\n#kvm中合理的Mac地址为52:54:00开头\n<mac address='52:54:00:3d:f8:25'/> \n\n#可在shell中执行以下命令获取合理的Mac地址：\nMACADDR=\"52:54:00:$(dd if=/dev/urandom bs=512 count=1 2>/dev/null | md5sum | sed 's/^\\(..\\)\\(..\\)\\(..\\).*$/\\1:\\2:\\3/')\"; echo $MACADDR\n\n#vnc中的port需更改为与第一个虚拟机不同\n<graphics type='vnc' port='5900' autoport='no' listen='127.0.0.1' keymap='en-us'>\n\n\n```\n\n## 重新定义libvirt文件\n```\nvirsh define /somepath/OSX-KVM/macOS-libvirt.xml \n\n#定义后，在/etc/libvirt/qemu/目录下会有macOS-libvirt.xml文件，以后修改后只需重新定义此文件即可\n```\n\n## 安装OS X\n\n在virt-manager中启动OSX\n\n步骤：\n![](https://cloud.githubusercontent.com/assets/731252/17645877/5136b1ac-61b2-11e6-8d90-29f5cc11ae01.png)\n\n选择磁盘工具\n![](https://cloud.githubusercontent.com/assets/731252/17645881/513b6918-61b2-11e6-91f2-026d953cbe0b.png)\n\n格式化KVM磁盘\n![](https://cloud.githubusercontent.com/assets/731252/17645878/51373d48-61b2-11e6-8740-69c86bf92d31.png)\n\n![](https://cloud.githubusercontent.com/assets/731252/17645879/513ae704-61b2-11e6-9a54-109c37132783.png)\n\n退出磁盘工具，打开终端\n![](https://cloud.githubusercontent.com/assets/731252/17645876/5136ad6a-61b2-11e6-84cd-cb7851119292.png)\n输入命令，拷贝安装文件：\n```\ncp -av /Extra /Volumes/KVMDisk\n```\n\n退出终端，启动安装即可！\n\n\n#错误合集\n## virt-manager启动虚拟机，打不开安装界面，显示boot，无限重启\n解决办法：开启ignore_msrs\n```\necho 1 > /sys/module/kvm/parameters/ignore_msrs\n```\n\n开机执行\n```\nvim /etc/rc.local\necho 1 > /sys/module/kvm/parameters/ignore_msrs\n```\n\n## 启动域时出错: \ninternal error: process exited while connecting to monitor: 2017-04-05 T06\\:\\25:53.648209Z qemu-system-x86_64: -drive id=MacDVD,if=none,snapshot=on,file=/opt/Install_macOS_Sierra_OS_X_10.12.iso: Could not open '/opt/Install_macOS_Sierra_OS_X_10.12.iso': Permission denied\n\n#解决办法\nkvm需要selinux装载安全模块，默认的Ubuntu server没有安装selinux\n\n```\nsudo apt-get install selinux\n#设置selinux=permissive\nreboot\n```\n\n## virt-manager显示乱码\n\n```\nsudo apt install font-manager \nsudo apt install fonts-arphic-ukai \nsudo apt install ttf-wqy-zenhei xfonts-wqy ttf-wqy-microhei \nsudo apt install fonts-cwtex-fs \nsudo apt install ttf-hanazono \nsudo apt install ttf-mscorefonts-installer \n```\n\n\n\n\n# Ubuntu虚拟Windows\n\n需要将显示协议由`Spice`服务器更改为`VNC`服务器，并且将键映射改为：`en-us`，不然会出现键盘无法使用的情况\n\n需要将显卡由`QXL`改为`Cirrus`，不然kvm安装windows系统时会卡在Starting Windows画面\nhttp://serverfault.com/questions/776406/windows-7-setup-hangs-at-starting-windows-using-proxmox-4-2\n\n需要将NIC网卡由`rtl8139`更改为`e1000`，不然会出现断网的情况\n\n\n# 参考\nhttps://github.com/kholia/OSX-KVM\nhttp://www.tuicool.com/articles/JBzANrU\nhttp://www.jianshu.com/p/e95c458d78bd\nhttps://blog.ostanin.org/2014/02/11/playing-with-mac-os-x-on-kvm/\nhttp://www.cnblogs.com/huntaiji/p/3918941.html","slug":"KVM-OSX","published":1,"updated":"2017-07-28T13:22:32.164Z","_id":"cj5mkehsn002pao94agubobjg","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"KVM虚拟Mac-OS-X-Sierra\"><a href=\"#KVM虚拟Mac-OS-X-Sierra\" class=\"headerlink\" title=\"KVM虚拟Mac OS X Sierra\"></a>KVM虚拟Mac OS X Sierra</h1><blockquote>\n<p>大致可行的方法有两种：</p>\n</blockquote>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">第一种，重新编译内核、编译qemu、编译kvm、kvm-mod，加上OS X的支持。</div><div class=\"line\">详情：http:<span class=\"regexp\">//</span>www.tuicool.com<span class=\"regexp\">/articles/</span>JBzANrU</div><div class=\"line\">在使用此种方法编译kvm时，报错，无法安装，文件内容都与作者标识的不一致。才疏学浅，未能成功。。。</div><div class=\"line\"></div><div class=\"line\">第二种,GitHub上有OSX-KVM项目，相对来说较为简单，本次采用此种方法。</div><div class=\"line\">具体请参考：https:<span class=\"regexp\">//gi</span>thub.com<span class=\"regexp\">/kholia/</span>OSX-KVM</div></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<p>本文所需文件：<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">在<span class=\"selector-tag\">Mac</span>下制作的<span class=\"selector-tag\">Install_macOS_Sierra_OS_X_10</span><span class=\"selector-class\">.12</span><span class=\"selector-class\">.iso</span></div><div class=\"line\">引导文件<span class=\"selector-tag\">enoch_rev2839_boot</span></div><div class=\"line\">创建的磁盘<span class=\"selector-tag\">mac_hdd</span><span class=\"selector-class\">.img</span></div><div class=\"line\"><span class=\"selector-tag\">qemu</span>配置文件<span class=\"selector-tag\">OSX_KVM</span><span class=\"selector-class\">.xml</span></div></pre></td></tr></table></figure></p>\n<p>链接：<a href=\"http://pan.baidu.com/s/1qYbe12W\" target=\"_blank\" rel=\"external\">http://pan.baidu.com/s/1qYbe12W</a> 密码：6znh</p>\n<h2 id=\"环境准备\"><a href=\"#环境准备\" class=\"headerlink\" title=\"环境准备\"></a>环境准备</h2><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">物理机系统说明：</div><div class=\"line\"></div><div class=\"line\">作者在以下系统中测试过:</div><div class=\"line\">Ubuntu 15.10 running on i5-6500 CPU.</div><div class=\"line\">Ubuntu 16.10 running on i7-3960X CPU.</div><div class=\"line\">Fedora 24 running on i5-6500 + i7-6600U CPU.</div><div class=\"line\"></div><div class=\"line\">QEMU版本：2.4.1, 2.5, 2.6.1, <span class=\"keyword\">and</span> 2.8.</div><div class=\"line\"></div><div class=\"line\">AMD CPU有问题。AMD FX-8350 可以工作，但是Phenom II X3 720不工作</div><div class=\"line\">需要开启  Intel VT-x/AMD-v虚拟化技术</div><div class=\"line\"></div><div class=\"line\">本次使用环境：</div><div class=\"line\">Ubuntu<span class=\"built_in\"> Server </span>16.04 LTS  </div><div class=\"line\">QEMU:2.5.0</div></pre></td></tr></table></figure>\n<h2 id=\"安装qemu和virt-manager\"><a href=\"#安装qemu和virt-manager\" class=\"headerlink\" title=\"安装qemu和virt-manager\"></a>安装qemu和virt-manager</h2><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-<span class=\"builtin-name\">get</span> install qemu uml-utilities virt-manager</div></pre></td></tr></table></figure>\n<h2 id=\"安装桥接网络管理管理工具\"><a href=\"#安装桥接网络管理管理工具\" class=\"headerlink\" title=\"安装桥接网络管理管理工具\"></a>安装桥接网络管理管理工具</h2><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-<span class=\"builtin-name\">get</span> install bridge-utils</div></pre></td></tr></table></figure>\n<h2 id=\"配置桥接网络\"><a href=\"#配置桥接网络\" class=\"headerlink\" title=\"配置桥接网络\"></a>配置桥接网络</h2><figure class=\"highlight x86asm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"symbol\">root@fin75:</span>~# vim /etc/network/interface</div><div class=\"line\"># This file describes the network interfaces available on your system</div><div class=\"line\"># <span class=\"keyword\">and</span> how to activate them. For more information, see interfaces(<span class=\"number\">5</span>).</div><div class=\"line\"></div><div class=\"line\">source /etc/network/interfaces.d/*</div><div class=\"line\"></div><div class=\"line\"># The loopback network interface</div><div class=\"line\">auto lo</div><div class=\"line\">iface lo inet loopback</div><div class=\"line\"></div><div class=\"line\">auto br0</div><div class=\"line\">iface br0 inet static</div><div class=\"line\">    address <span class=\"number\">172.16</span><span class=\"meta\">.0</span><span class=\"meta\">.75</span></div><div class=\"line\">    network <span class=\"number\">172.16</span><span class=\"meta\">.0</span><span class=\"meta\">.0</span></div><div class=\"line\">    netmask <span class=\"number\">255.255</span><span class=\"meta\">.255</span><span class=\"meta\">.0</span></div><div class=\"line\">    broadcast <span class=\"number\">172.16</span><span class=\"meta\">.0</span><span class=\"meta\">.255</span></div><div class=\"line\">    gateway <span class=\"number\">172.16</span><span class=\"meta\">.0</span><span class=\"meta\">.1</span></div><div class=\"line\">    dns-nameservers <span class=\"number\">223.5</span><span class=\"meta\">.5</span><span class=\"meta\">.5</span></div><div class=\"line\">    bridge_ports eno1</div><div class=\"line\">    bridge_stp off</div><div class=\"line\">    bridge_fd <span class=\"number\">0</span></div><div class=\"line\">    bridge_maxwait <span class=\"number\">0</span></div><div class=\"line\">\tpost-<span class=\"meta\">up</span> <span class=\"built_in\">ip</span> link set br0 address aa:2b:3c:<span class=\"number\">4d</span>:5e:6f</div><div class=\"line\"><span class=\"symbol\"></span></div><div class=\"line\">root@fin75:~# reboot</div></pre></td></tr></table></figure>\n<p>注意：virbr0是安装kvm时系统建立的，为NAT网络专用，跟我们要使用的桥接完全不同</p>\n<blockquote>\n<p>按照官方文档直接重启服务会失败，重启物理机就可以了。</p>\n</blockquote>\n<p>参考：<a href=\"https://help.ubuntu.com/community/KVM/Networking\" target=\"_blank\" rel=\"external\">https://help.ubuntu.com/community/KVM/Networking</a></p>\n<h2 id=\"创建磁盘文件\"><a href=\"#创建磁盘文件\" class=\"headerlink\" title=\"创建磁盘文件\"></a>创建磁盘文件</h2><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">qemu-<span class=\"selector-tag\">img</span> create -f qcow2 /u01/mac_hdd<span class=\"selector-class\">.img</span> <span class=\"number\">200</span>G</div></pre></td></tr></table></figure>\n<blockquote>\n<p>安装方法可以使用boot-macOS.sh/boot.sh，或者使用macOS-libvirt.xml<br>本次使用libvirt文件的方式</p>\n</blockquote>\n<h2 id=\"修改libvirt文件\"><a href=\"#修改libvirt文件\" class=\"headerlink\" title=\"修改libvirt文件\"></a>修改libvirt文件</h2><figure class=\"highlight vala\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#只需修改这几处即可。</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">#引导文件位置</span></div><div class=\"line\">&lt;kernel&gt;/u01/boot/enoch_rev2839_boot&lt;/kernel&gt; </div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">#磁盘文件位置</span></div><div class=\"line\">&lt;source file=<span class=\"string\">'/u01/mac_hdd.img'</span>/&gt; </div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">#ISO镜像位置</span></div><div class=\"line\">&lt;qemu:arg value=<span class=\"string\">'id=MacDVD,if=none,snapshot=on,file=/opt/Install_macOS_Sierra_OS_X_10.12.iso'</span>/&gt;</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">#如果有多台OS X系统，还需修改</span></div><div class=\"line\"></div><div class=\"line\">&lt;uuid&gt;c757b31e<span class=\"number\">-115</span>f<span class=\"number\">-4</span>d1a-b574<span class=\"number\">-0</span>ae7b3cc8a58&lt;/uuid&gt;</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">#kvm中合理的Mac地址为52:54:00开头</span></div><div class=\"line\">&lt;mac address=<span class=\"string\">'52:54:00:3d:f8:25'</span>/&gt; </div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">#可在shell中执行以下命令获取合理的Mac地址：</span></div><div class=\"line\">MACADDR=<span class=\"string\">\"52:54:00:$(dd if=/dev/urandom bs=512 count=1 2&gt;/dev/null | md5sum | sed 's/^\\(..\\)\\(..\\)\\(..\\).*$/\\1:\\2:\\3/')\"</span>; echo $MACADDR</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">#vnc中的port需更改为与第一个虚拟机不同</span></div><div class=\"line\">&lt;graphics type=<span class=\"string\">'vnc'</span> port=<span class=\"string\">'5900'</span> autoport=<span class=\"string\">'no'</span> listen=<span class=\"string\">'127.0.0.1'</span> keymap=<span class=\"string\">'en-us'</span>&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"重新定义libvirt文件\"><a href=\"#重新定义libvirt文件\" class=\"headerlink\" title=\"重新定义libvirt文件\"></a>重新定义libvirt文件</h2><figure class=\"highlight puppet\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">virsh <span class=\"keyword\">define</span> /<span class=\"section\">somepath</span>/OSX-KVM/macOS-libvirt.xml </div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#定义后，在/etc/libvirt/qemu/目录下会有macOS-libvirt.xml文件，以后修改后只需重新定义此文件即可</span></div></pre></td></tr></table></figure>\n<h2 id=\"安装OS-X\"><a href=\"#安装OS-X\" class=\"headerlink\" title=\"安装OS X\"></a>安装OS X</h2><p>在virt-manager中启动OSX</p>\n<p>步骤：<br><img src=\"https://cloud.githubusercontent.com/assets/731252/17645877/5136b1ac-61b2-11e6-8d90-29f5cc11ae01.png\" alt=\"\"></p>\n<p>选择磁盘工具<br><img src=\"https://cloud.githubusercontent.com/assets/731252/17645881/513b6918-61b2-11e6-91f2-026d953cbe0b.png\" alt=\"\"></p>\n<p>格式化KVM磁盘<br><img src=\"https://cloud.githubusercontent.com/assets/731252/17645878/51373d48-61b2-11e6-8740-69c86bf92d31.png\" alt=\"\"></p>\n<p><img src=\"https://cloud.githubusercontent.com/assets/731252/17645879/513ae704-61b2-11e6-9a54-109c37132783.png\" alt=\"\"></p>\n<p>退出磁盘工具，打开终端<br><img src=\"https://cloud.githubusercontent.com/assets/731252/17645876/5136ad6a-61b2-11e6-84cd-cb7851119292.png\" alt=\"\"><br>输入命令，拷贝安装文件：<br><figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">cp -av <span class=\"string\">/Extra</span> <span class=\"string\">/Volumes/KVMDisk</span></div></pre></td></tr></table></figure></p>\n<p>退出终端，启动安装即可！</p>\n<p>#错误合集</p>\n<h2 id=\"virt-manager启动虚拟机，打不开安装界面，显示boot，无限重启\"><a href=\"#virt-manager启动虚拟机，打不开安装界面，显示boot，无限重启\" class=\"headerlink\" title=\"virt-manager启动虚拟机，打不开安装界面，显示boot，无限重启\"></a>virt-manager启动虚拟机，打不开安装界面，显示boot，无限重启</h2><p>解决办法：开启ignore_msrs<br><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">echo <span class=\"number\">1</span> &gt; <span class=\"regexp\">/sys/m</span>odule<span class=\"regexp\">/kvm/</span>parameters<span class=\"regexp\">/ignore_msrs</span></div></pre></td></tr></table></figure></p>\n<p>开机执行<br><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">vim <span class=\"regexp\">/etc/</span>rc.local</div><div class=\"line\">echo <span class=\"number\">1</span> &gt; <span class=\"regexp\">/sys/m</span>odule<span class=\"regexp\">/kvm/</span>parameters<span class=\"regexp\">/ignore_msrs</span></div></pre></td></tr></table></figure></p>\n<h2 id=\"启动域时出错\"><a href=\"#启动域时出错\" class=\"headerlink\" title=\"启动域时出错:\"></a>启动域时出错:</h2><p>internal error: process exited while connecting to monitor: 2017-04-05 T06\\:\\25:53.648209Z qemu-system-x86_64: -drive id=MacDVD,if=none,snapshot=on,file=/opt/Install_macOS_Sierra_OS_X_10.12.iso: Could not open ‘/opt/Install_macOS_Sierra_OS_X_10.12.iso’: Permission denied</p>\n<p>#解决办法<br>kvm需要selinux装载安全模块，默认的Ubuntu server没有安装selinux</p>\n<figure class=\"highlight armasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"symbol\">sudo</span> apt-<span class=\"meta\">get</span> install <span class=\"keyword\">selinux</span></div><div class=\"line\">#设置<span class=\"keyword\">selinux=permissive</span></div><div class=\"line\"><span class=\"symbol\">reboot</span></div></pre></td></tr></table></figure>\n<h2 id=\"virt-manager显示乱码\"><a href=\"#virt-manager显示乱码\" class=\"headerlink\" title=\"virt-manager显示乱码\"></a>virt-manager显示乱码</h2><figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt <span class=\"keyword\">install</span> font-manager </div><div class=\"line\">sudo apt <span class=\"keyword\">install</span> fonts-arphic-ukai </div><div class=\"line\">sudo apt <span class=\"keyword\">install</span> ttf-wqy-zenhei xfonts-wqy ttf-wqy-microhei </div><div class=\"line\">sudo apt <span class=\"keyword\">install</span> fonts-cwtex-fs </div><div class=\"line\">sudo apt <span class=\"keyword\">install</span> ttf-hanazono </div><div class=\"line\">sudo apt <span class=\"keyword\">install</span> ttf-mscorefonts-installer</div></pre></td></tr></table></figure>\n<h1 id=\"Ubuntu虚拟Windows\"><a href=\"#Ubuntu虚拟Windows\" class=\"headerlink\" title=\"Ubuntu虚拟Windows\"></a>Ubuntu虚拟Windows</h1><p>需要将显示协议由<code>Spice</code>服务器更改为<code>VNC</code>服务器，并且将键映射改为：<code>en-us</code>，不然会出现键盘无法使用的情况</p>\n<p>需要将显卡由<code>QXL</code>改为<code>Cirrus</code>，不然kvm安装windows系统时会卡在Starting Windows画面<br><a href=\"http://serverfault.com/questions/776406/windows-7-setup-hangs-at-starting-windows-using-proxmox-4-2\" target=\"_blank\" rel=\"external\">http://serverfault.com/questions/776406/windows-7-setup-hangs-at-starting-windows-using-proxmox-4-2</a></p>\n<p>需要将NIC网卡由<code>rtl8139</code>更改为<code>e1000</code>，不然会出现断网的情况</p>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><p><a href=\"https://github.com/kholia/OSX-KVM\" target=\"_blank\" rel=\"external\">https://github.com/kholia/OSX-KVM</a><br><a href=\"http://www.tuicool.com/articles/JBzANrU\" target=\"_blank\" rel=\"external\">http://www.tuicool.com/articles/JBzANrU</a><br><a href=\"http://www.jianshu.com/p/e95c458d78bd\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/e95c458d78bd</a><br><a href=\"https://blog.ostanin.org/2014/02/11/playing-with-mac-os-x-on-kvm/\" target=\"_blank\" rel=\"external\">https://blog.ostanin.org/2014/02/11/playing-with-mac-os-x-on-kvm/</a><br><a href=\"http://www.cnblogs.com/huntaiji/p/3918941.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/huntaiji/p/3918941.html</a></p>\n","site":{"data":{}},"excerpt":"<h1 id=\"KVM虚拟Mac-OS-X-Sierra\"><a href=\"#KVM虚拟Mac-OS-X-Sierra\" class=\"headerlink\" title=\"KVM虚拟Mac OS X Sierra\"></a>KVM虚拟Mac OS X Sierra</h1><blockquote>\n<p>大致可行的方法有两种：</p>\n</blockquote>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">第一种，重新编译内核、编译qemu、编译kvm、kvm-mod，加上OS X的支持。</div><div class=\"line\">详情：http:<span class=\"regexp\">//</span>www.tuicool.com<span class=\"regexp\">/articles/</span>JBzANrU</div><div class=\"line\">在使用此种方法编译kvm时，报错，无法安装，文件内容都与作者标识的不一致。才疏学浅，未能成功。。。</div><div class=\"line\"></div><div class=\"line\">第二种,GitHub上有OSX-KVM项目，相对来说较为简单，本次采用此种方法。</div><div class=\"line\">具体请参考：https:<span class=\"regexp\">//gi</span>thub.com<span class=\"regexp\">/kholia/</span>OSX-KVM</div></pre></td></tr></table></figure>","more":"<p>本文所需文件：<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">在<span class=\"selector-tag\">Mac</span>下制作的<span class=\"selector-tag\">Install_macOS_Sierra_OS_X_10</span><span class=\"selector-class\">.12</span><span class=\"selector-class\">.iso</span></div><div class=\"line\">引导文件<span class=\"selector-tag\">enoch_rev2839_boot</span></div><div class=\"line\">创建的磁盘<span class=\"selector-tag\">mac_hdd</span><span class=\"selector-class\">.img</span></div><div class=\"line\"><span class=\"selector-tag\">qemu</span>配置文件<span class=\"selector-tag\">OSX_KVM</span><span class=\"selector-class\">.xml</span></div></pre></td></tr></table></figure></p>\n<p>链接：<a href=\"http://pan.baidu.com/s/1qYbe12W\" target=\"_blank\" rel=\"external\">http://pan.baidu.com/s/1qYbe12W</a> 密码：6znh</p>\n<h2 id=\"环境准备\"><a href=\"#环境准备\" class=\"headerlink\" title=\"环境准备\"></a>环境准备</h2><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">物理机系统说明：</div><div class=\"line\"></div><div class=\"line\">作者在以下系统中测试过:</div><div class=\"line\">Ubuntu 15.10 running on i5-6500 CPU.</div><div class=\"line\">Ubuntu 16.10 running on i7-3960X CPU.</div><div class=\"line\">Fedora 24 running on i5-6500 + i7-6600U CPU.</div><div class=\"line\"></div><div class=\"line\">QEMU版本：2.4.1, 2.5, 2.6.1, <span class=\"keyword\">and</span> 2.8.</div><div class=\"line\"></div><div class=\"line\">AMD CPU有问题。AMD FX-8350 可以工作，但是Phenom II X3 720不工作</div><div class=\"line\">需要开启  Intel VT-x/AMD-v虚拟化技术</div><div class=\"line\"></div><div class=\"line\">本次使用环境：</div><div class=\"line\">Ubuntu<span class=\"built_in\"> Server </span>16.04 LTS  </div><div class=\"line\">QEMU:2.5.0</div></pre></td></tr></table></figure>\n<h2 id=\"安装qemu和virt-manager\"><a href=\"#安装qemu和virt-manager\" class=\"headerlink\" title=\"安装qemu和virt-manager\"></a>安装qemu和virt-manager</h2><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-<span class=\"builtin-name\">get</span> install qemu uml-utilities virt-manager</div></pre></td></tr></table></figure>\n<h2 id=\"安装桥接网络管理管理工具\"><a href=\"#安装桥接网络管理管理工具\" class=\"headerlink\" title=\"安装桥接网络管理管理工具\"></a>安装桥接网络管理管理工具</h2><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-<span class=\"builtin-name\">get</span> install bridge-utils</div></pre></td></tr></table></figure>\n<h2 id=\"配置桥接网络\"><a href=\"#配置桥接网络\" class=\"headerlink\" title=\"配置桥接网络\"></a>配置桥接网络</h2><figure class=\"highlight x86asm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"symbol\">root@fin75:</span>~# vim /etc/network/interface</div><div class=\"line\"># This file describes the network interfaces available on your system</div><div class=\"line\"># <span class=\"keyword\">and</span> how to activate them. For more information, see interfaces(<span class=\"number\">5</span>).</div><div class=\"line\"></div><div class=\"line\">source /etc/network/interfaces.d/*</div><div class=\"line\"></div><div class=\"line\"># The loopback network interface</div><div class=\"line\">auto lo</div><div class=\"line\">iface lo inet loopback</div><div class=\"line\"></div><div class=\"line\">auto br0</div><div class=\"line\">iface br0 inet static</div><div class=\"line\">    address <span class=\"number\">172.16</span><span class=\"meta\">.0</span><span class=\"meta\">.75</span></div><div class=\"line\">    network <span class=\"number\">172.16</span><span class=\"meta\">.0</span><span class=\"meta\">.0</span></div><div class=\"line\">    netmask <span class=\"number\">255.255</span><span class=\"meta\">.255</span><span class=\"meta\">.0</span></div><div class=\"line\">    broadcast <span class=\"number\">172.16</span><span class=\"meta\">.0</span><span class=\"meta\">.255</span></div><div class=\"line\">    gateway <span class=\"number\">172.16</span><span class=\"meta\">.0</span><span class=\"meta\">.1</span></div><div class=\"line\">    dns-nameservers <span class=\"number\">223.5</span><span class=\"meta\">.5</span><span class=\"meta\">.5</span></div><div class=\"line\">    bridge_ports eno1</div><div class=\"line\">    bridge_stp off</div><div class=\"line\">    bridge_fd <span class=\"number\">0</span></div><div class=\"line\">    bridge_maxwait <span class=\"number\">0</span></div><div class=\"line\">\tpost-<span class=\"meta\">up</span> <span class=\"built_in\">ip</span> link set br0 address aa:2b:3c:<span class=\"number\">4d</span>:5e:6f</div><div class=\"line\"><span class=\"symbol\"></span></div><div class=\"line\">root@fin75:~# reboot</div></pre></td></tr></table></figure>\n<p>注意：virbr0是安装kvm时系统建立的，为NAT网络专用，跟我们要使用的桥接完全不同</p>\n<blockquote>\n<p>按照官方文档直接重启服务会失败，重启物理机就可以了。</p>\n</blockquote>\n<p>参考：<a href=\"https://help.ubuntu.com/community/KVM/Networking\" target=\"_blank\" rel=\"external\">https://help.ubuntu.com/community/KVM/Networking</a></p>\n<h2 id=\"创建磁盘文件\"><a href=\"#创建磁盘文件\" class=\"headerlink\" title=\"创建磁盘文件\"></a>创建磁盘文件</h2><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">qemu-<span class=\"selector-tag\">img</span> create -f qcow2 /u01/mac_hdd<span class=\"selector-class\">.img</span> <span class=\"number\">200</span>G</div></pre></td></tr></table></figure>\n<blockquote>\n<p>安装方法可以使用boot-macOS.sh/boot.sh，或者使用macOS-libvirt.xml<br>本次使用libvirt文件的方式</p>\n</blockquote>\n<h2 id=\"修改libvirt文件\"><a href=\"#修改libvirt文件\" class=\"headerlink\" title=\"修改libvirt文件\"></a>修改libvirt文件</h2><figure class=\"highlight vala\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#只需修改这几处即可。</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">#引导文件位置</span></div><div class=\"line\">&lt;kernel&gt;/u01/boot/enoch_rev2839_boot&lt;/kernel&gt; </div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">#磁盘文件位置</span></div><div class=\"line\">&lt;source file=<span class=\"string\">'/u01/mac_hdd.img'</span>/&gt; </div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">#ISO镜像位置</span></div><div class=\"line\">&lt;qemu:arg value=<span class=\"string\">'id=MacDVD,if=none,snapshot=on,file=/opt/Install_macOS_Sierra_OS_X_10.12.iso'</span>/&gt;</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">#如果有多台OS X系统，还需修改</span></div><div class=\"line\"></div><div class=\"line\">&lt;uuid&gt;c757b31e<span class=\"number\">-115</span>f<span class=\"number\">-4</span>d1a-b574<span class=\"number\">-0</span>ae7b3cc8a58&lt;/uuid&gt;</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">#kvm中合理的Mac地址为52:54:00开头</span></div><div class=\"line\">&lt;mac address=<span class=\"string\">'52:54:00:3d:f8:25'</span>/&gt; </div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">#可在shell中执行以下命令获取合理的Mac地址：</span></div><div class=\"line\">MACADDR=<span class=\"string\">\"52:54:00:$(dd if=/dev/urandom bs=512 count=1 2&gt;/dev/null | md5sum | sed 's/^\\(..\\)\\(..\\)\\(..\\).*$/\\1:\\2:\\3/')\"</span>; echo $MACADDR</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">#vnc中的port需更改为与第一个虚拟机不同</span></div><div class=\"line\">&lt;graphics type=<span class=\"string\">'vnc'</span> port=<span class=\"string\">'5900'</span> autoport=<span class=\"string\">'no'</span> listen=<span class=\"string\">'127.0.0.1'</span> keymap=<span class=\"string\">'en-us'</span>&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"重新定义libvirt文件\"><a href=\"#重新定义libvirt文件\" class=\"headerlink\" title=\"重新定义libvirt文件\"></a>重新定义libvirt文件</h2><figure class=\"highlight puppet\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">virsh <span class=\"keyword\">define</span> /<span class=\"section\">somepath</span>/OSX-KVM/macOS-libvirt.xml </div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#定义后，在/etc/libvirt/qemu/目录下会有macOS-libvirt.xml文件，以后修改后只需重新定义此文件即可</span></div></pre></td></tr></table></figure>\n<h2 id=\"安装OS-X\"><a href=\"#安装OS-X\" class=\"headerlink\" title=\"安装OS X\"></a>安装OS X</h2><p>在virt-manager中启动OSX</p>\n<p>步骤：<br><img src=\"https://cloud.githubusercontent.com/assets/731252/17645877/5136b1ac-61b2-11e6-8d90-29f5cc11ae01.png\" alt=\"\"></p>\n<p>选择磁盘工具<br><img src=\"https://cloud.githubusercontent.com/assets/731252/17645881/513b6918-61b2-11e6-91f2-026d953cbe0b.png\" alt=\"\"></p>\n<p>格式化KVM磁盘<br><img src=\"https://cloud.githubusercontent.com/assets/731252/17645878/51373d48-61b2-11e6-8740-69c86bf92d31.png\" alt=\"\"></p>\n<p><img src=\"https://cloud.githubusercontent.com/assets/731252/17645879/513ae704-61b2-11e6-9a54-109c37132783.png\" alt=\"\"></p>\n<p>退出磁盘工具，打开终端<br><img src=\"https://cloud.githubusercontent.com/assets/731252/17645876/5136ad6a-61b2-11e6-84cd-cb7851119292.png\" alt=\"\"><br>输入命令，拷贝安装文件：<br><figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">cp -av <span class=\"string\">/Extra</span> <span class=\"string\">/Volumes/KVMDisk</span></div></pre></td></tr></table></figure></p>\n<p>退出终端，启动安装即可！</p>\n<p>#错误合集</p>\n<h2 id=\"virt-manager启动虚拟机，打不开安装界面，显示boot，无限重启\"><a href=\"#virt-manager启动虚拟机，打不开安装界面，显示boot，无限重启\" class=\"headerlink\" title=\"virt-manager启动虚拟机，打不开安装界面，显示boot，无限重启\"></a>virt-manager启动虚拟机，打不开安装界面，显示boot，无限重启</h2><p>解决办法：开启ignore_msrs<br><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">echo <span class=\"number\">1</span> &gt; <span class=\"regexp\">/sys/m</span>odule<span class=\"regexp\">/kvm/</span>parameters<span class=\"regexp\">/ignore_msrs</span></div></pre></td></tr></table></figure></p>\n<p>开机执行<br><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">vim <span class=\"regexp\">/etc/</span>rc.local</div><div class=\"line\">echo <span class=\"number\">1</span> &gt; <span class=\"regexp\">/sys/m</span>odule<span class=\"regexp\">/kvm/</span>parameters<span class=\"regexp\">/ignore_msrs</span></div></pre></td></tr></table></figure></p>\n<h2 id=\"启动域时出错\"><a href=\"#启动域时出错\" class=\"headerlink\" title=\"启动域时出错:\"></a>启动域时出错:</h2><p>internal error: process exited while connecting to monitor: 2017-04-05 T06\\:\\25:53.648209Z qemu-system-x86_64: -drive id=MacDVD,if=none,snapshot=on,file=/opt/Install_macOS_Sierra_OS_X_10.12.iso: Could not open ‘/opt/Install_macOS_Sierra_OS_X_10.12.iso’: Permission denied</p>\n<p>#解决办法<br>kvm需要selinux装载安全模块，默认的Ubuntu server没有安装selinux</p>\n<figure class=\"highlight armasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"symbol\">sudo</span> apt-<span class=\"meta\">get</span> install <span class=\"keyword\">selinux</span></div><div class=\"line\">#设置<span class=\"keyword\">selinux=permissive</span></div><div class=\"line\"><span class=\"symbol\">reboot</span></div></pre></td></tr></table></figure>\n<h2 id=\"virt-manager显示乱码\"><a href=\"#virt-manager显示乱码\" class=\"headerlink\" title=\"virt-manager显示乱码\"></a>virt-manager显示乱码</h2><figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt <span class=\"keyword\">install</span> font-manager </div><div class=\"line\">sudo apt <span class=\"keyword\">install</span> fonts-arphic-ukai </div><div class=\"line\">sudo apt <span class=\"keyword\">install</span> ttf-wqy-zenhei xfonts-wqy ttf-wqy-microhei </div><div class=\"line\">sudo apt <span class=\"keyword\">install</span> fonts-cwtex-fs </div><div class=\"line\">sudo apt <span class=\"keyword\">install</span> ttf-hanazono </div><div class=\"line\">sudo apt <span class=\"keyword\">install</span> ttf-mscorefonts-installer</div></pre></td></tr></table></figure>\n<h1 id=\"Ubuntu虚拟Windows\"><a href=\"#Ubuntu虚拟Windows\" class=\"headerlink\" title=\"Ubuntu虚拟Windows\"></a>Ubuntu虚拟Windows</h1><p>需要将显示协议由<code>Spice</code>服务器更改为<code>VNC</code>服务器，并且将键映射改为：<code>en-us</code>，不然会出现键盘无法使用的情况</p>\n<p>需要将显卡由<code>QXL</code>改为<code>Cirrus</code>，不然kvm安装windows系统时会卡在Starting Windows画面<br><a href=\"http://serverfault.com/questions/776406/windows-7-setup-hangs-at-starting-windows-using-proxmox-4-2\" target=\"_blank\" rel=\"external\">http://serverfault.com/questions/776406/windows-7-setup-hangs-at-starting-windows-using-proxmox-4-2</a></p>\n<p>需要将NIC网卡由<code>rtl8139</code>更改为<code>e1000</code>，不然会出现断网的情况</p>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><p><a href=\"https://github.com/kholia/OSX-KVM\" target=\"_blank\" rel=\"external\">https://github.com/kholia/OSX-KVM</a><br><a href=\"http://www.tuicool.com/articles/JBzANrU\" target=\"_blank\" rel=\"external\">http://www.tuicool.com/articles/JBzANrU</a><br><a href=\"http://www.jianshu.com/p/e95c458d78bd\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/e95c458d78bd</a><br><a href=\"https://blog.ostanin.org/2014/02/11/playing-with-mac-os-x-on-kvm/\" target=\"_blank\" rel=\"external\">https://blog.ostanin.org/2014/02/11/playing-with-mac-os-x-on-kvm/</a><br><a href=\"http://www.cnblogs.com/huntaiji/p/3918941.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/huntaiji/p/3918941.html</a></p>"},{"title":"lnmp环境搭建","abbrlink":"110e9b1f","date":"2017-03-26T16:00:00.000Z","_content":"## 准备Linux环境\n环境为CentOS6.7最小化安装\n安装开发包组\n```\nyum groupinstall \"Development Tools\"\nyum -y install pcre-devel bzip2-devel libmcrypt-devel gcc  gcc-c++ openssl-devel pcre-devel libxml2-devel libcurl-devel libpng-devel freetype-devel libxslt-devel libtool gd-devel\n```\n\n<!-- more -->\n## 安装MySQL\n```\n1、准备MySQL数据存放的文件目录\n\n数据目录为/data，而后需要创建/data/mysql目录做为mysql数据的存放目录。\n\n2、新建用户以安全方式运行进程：\n\n# groupadd -r mysql\n# useradd -g mysql -r -s /sbin/nologin -M -d /data/mysql mysql\n# chown -R mysql:mysql /data/mysql\n\n3、安装并初始化mysql\nhttps://cdn.mysql.com//Downloads/MySQL-5.7/mysql-5.7.19-linux-glibc2.12-x86_64.tar.gz\n\n# tar xf mysql-5.7.19-linux-glibc2.12-x86_64.tar.gz -C /usr/local\n# cd /usr/local/\n# ln -sv mysql-5.7.19-linux-glibc2.12-x86_64  mysql\n# cd mysql \n\n# chown -R mysql:mysql  .\n# bin/mysql_install_db --user=mysql --datadir=/data/mysql\n# chown -R root  .\n\n4、为mysql提供主配置文件：\n\n参考链接https://dev.mysql.com/doc/refman/5.7/en/server-configuration-defaults.html\n从MySQL 5.7.18开始，my-default.ini不再包含在分发包中或由分发包安装。\n# vim /etc/my.cnf\n[mysqld]\n# innodb_buffer_pool_size = 128M\n# join_buffer_size = 128M\n# sort_buffer_size = 2M\n# read_rnd_buffer_size = 2M\ndatadir=/data/mysql\nsocket=/var/lib/mysql/mysql.sock\n\n# Disabling symbolic-links is recommended to prevent assorted security risks\nsymbolic-links=0\n\nlog-error=/var/log/mysqld.log\npid-file=/var/run/mysqld/mysqld.pid\n\n\n\n5、为mysql提供sysv服务脚本：\n\n# cd /usr/local/mysql\n# cp support-files/mysql.server  /etc/rc.d/init.d/mysqld\n\n添加至服务列表：\n# chkconfig --add mysqld\n# chkconfig mysqld on\n\n而后就可以启动服务测试使用了。\n\n\n为了使用mysql的安装符合系统使用规范，并将其开发组件导出给系统使用，这里还需要进行如下步骤：\n\n6、输出mysql的man手册至man命令的查找路径：\n\n编辑/etc/man.config，添加如下行即可：\nMANPATH  /usr/local/mysql/man\n\n7、输出mysql的头文件至系统头文件路径/usr/include：\n\n这可以通过简单的创建链接实现：\n# ln -sv /usr/local/mysql/include  /usr/include/mysql\n\n8、输出mysql的库文件给系统库查找路径：\n\n# echo '/usr/local/mysql/lib' > /etc/ld.so.conf.d/mysql.conf\n\n而后让系统重新载入系统库：\n# ldconfig\n\n9、修改PATH环境变量，让系统可以直接使用mysql的相关命令。\n在/etc/profile.d下新建mysql.sh\n内容如下：\nMYSQL_BASE=/usr/local/mysql\nPATH=$MYSQL_BASE/bin:$PATH\n执行source /etc/profile.d/mysql.sh\n\n10、连接MySQL\n首次使用执行mysql_secure_installation\n\n执行完成后使用root连接\nmysql -uroot -h127.0.0.1 -p\n>password\n\n```\n## Nginx\n\n1、下载\n官网下载地址：`http://nginx.org/download/nginx-1.10.3.tar.gz`\n2、安装\n首先添加用户nginx，实现以之运行nginx服务进程：\n```\n# groupadd -r nginx\n# useradd -r -g nginx nginx\n```\n接着开始编译和安装：\n```\n# ./configure \\\n  --prefix=/usr/local/nginx \\\n  --sbin-path=/usr/local/nginx/sbin/nginx \\\n  --conf-path=/etc/nginx/nginx.conf \\\n  --error-log-path=/var/log/nginx/error.log \\\n  --http-log-path=/var/log/nginx/access.log \\\n  --pid-path=/var/run/nginx/nginx.pid  \\\n  --lock-path=/var/lock/nginx.lock \\\n  --user=nginx \\\n  --group=nginx \\\n  --with-http_ssl_module \\\n  --with-http_flv_module \\\n  --with-http_stub_status_module \\\n  --with-http_gzip_static_module \\\n  --http-client-body-temp-path=/var/tmp/nginx/client/ \\\n  --http-proxy-temp-path=/var/tmp/nginx/proxy/ \\\n  --http-fastcgi-temp-path=/var/tmp/nginx/fcgi/ \\\n  --http-uwsgi-temp-path=/var/tmp/nginx/uwsgi \\\n  --http-scgi-temp-path=/var/tmp/nginx/scgi \\\n  --with-pcre\n# make && make install\n```\n3、为nginx提供SysV init脚本:\n\n新建文件/etc/rc.d/init.d/nginx，内容如下：\n```\n#!/bin/sh\n#\n# nginx - this script starts and stops the nginx daemon\n#\n# chkconfig:   - 85 15 \n# description:  Nginx is an HTTP(S) server, HTTP(S) reverse \\\n#               proxy and IMAP/POP3 proxy server\n# processname: nginx\n# config:      /etc/nginx/nginx.conf\n# config:      /etc/sysconfig/nginx\n# pidfile:     /var/run/nginx.pid\n \n# Source function library.\n. /etc/rc.d/init.d/functions\n \n# Source networking configuration.\n. /etc/sysconfig/network\n \n# Check that networking is up.\n[ \"$NETWORKING\" = \"no\" ] && exit 0\n \nnginx=\"/usr/sbin/nginx\"\nprog=$(basename $nginx)\n \nNGINX_CONF_FILE=\"/etc/nginx/nginx.conf\"\n \n[ -f /etc/sysconfig/nginx ] && . /etc/sysconfig/nginx\n \nlockfile=/var/lock/subsys/nginx\n \nmake_dirs() {\n   # make required directories\n   user=`nginx -V 2>&1 | grep \"configure arguments:\" | sed 's/[^*]*--user=\\([^ ]*\\).*/\\1/g' -`\n   options=`$nginx -V 2>&1 | grep 'configure arguments:'`\n   for opt in $options; do\n       if [ `echo $opt | grep '.*-temp-path'` ]; then\n           value=`echo $opt | cut -d \"=\" -f 2`\n           if [ ! -d \"$value\" ]; then\n               # echo \"creating\" $value\n               mkdir -p $value && chown -R $user $value\n           fi\n       fi\n   done\n}\n \nstart() {\n    [ -x $nginx ] || exit 5\n    [ -f $NGINX_CONF_FILE ] || exit 6\n    make_dirs\n    echo -n $\"Starting $prog: \"\n    daemon $nginx -c $NGINX_CONF_FILE\n    retval=$?\n    echo\n    [ $retval -eq 0 ] && touch $lockfile\n    return $retval\n}\n \nstop() {\n    echo -n $\"Stopping $prog: \"\n    killproc $prog -QUIT\n    retval=$?\n    echo\n    [ $retval -eq 0 ] && rm -f $lockfile\n    return $retval\n}\n \nrestart() {\n    configtest || return $?\n    stop\n    sleep 1\n    start\n}\n \nreload() {\n    configtest || return $?\n    echo -n $\"Reloading $prog: \"\n    killproc $nginx -HUP\n    RETVAL=$?\n    echo\n}\n \nforce_reload() {\n    restart\n}\n \nconfigtest() {\n  $nginx -t -c $NGINX_CONF_FILE\n}\n \nrh_status() {\n    status $prog\n}\n \nrh_status_q() {\n    rh_status >/dev/null 2>&1\n}\n \ncase \"$1\" in\n    start)\n        rh_status_q && exit 0\n        $1\n        ;;\n    stop)\n        rh_status_q || exit 0\n        $1\n        ;;\n    restart|configtest)\n        $1\n        ;;\n    reload)\n        rh_status_q || exit 7\n        $1\n        ;;\n    force-reload)\n        force_reload\n        ;;\n    status)\n        rh_status\n        ;;\n    condrestart|try-restart)\n        rh_status_q || exit 0\n            ;;\n    *)\n        echo $\"Usage: $0 {start|stop|status|restart|condrestart|try-restart|reload|force-reload|configtest}\"\n        exit 2\nesac\n```\n而后为此脚本赋予执行权限：\n```\n# chmod +x /etc/rc.d/init.d/nginx\n```\n添加至服务管理列表，并让其开机自动启动：\n```\n# chkconfig --add nginx\n# chkconfig nginx on\n```\n而后就可以启动服务并测试了：\n```\n# service nginx start\n```\n\n## php\n1、下载\nhttp://php.net/downloads.php\n这里选择5.6.31版本\n\n2、编译安装\n```\n[root@lnmp php-5.6.31]#  ./configure --prefix=/usr/local/php --with-mysql=/usr/local/mysql --with-openssl --enable-fpm --enable-sockets --enable-sysvshm  --with-mysqli=/usr/local/mysql/bin/mysql_config --enable-mbstring --with-freetype-dir --with-jpeg-dir --with-png-dir --with-zlib-dir --with-libxml-dir=/usr --enable-xml  --with-mhash --with-mcrypt  --with-config-file-path=/etc --with-config-file-scan-dir=/etc/php.d --with-bz2 --with-curl \n\n[root@lnmp php-5.6.31]# make\n[root@lnmp php-5.6.31]# make test  #此步骤可以不做，非常耗时间\n[root@lnmp php-5.6.31]# make intall\n```\n3、为php提供配置文件：\n```\n[root@lnmp php-5.6.31]# cp php.ini-production /etc/php.ini\n```\n4、为php-fpm提供Sysv init脚本，并将其添加至服务列表：\n```\n[root@lnmp php-5.6.31]# cp sapi/fpm/init.d.php-fpm  /etc/init.d/php-fpm\n[root@lnmp php-5.6.31]# chmod +x /etc/rc.d/init.d/php-fpm\n[root@lnmp php-5.6.31]# chkconfig --add php-fpm\n[root@lnmp php-5.6.31]# chkconfig php-fpm on\n```\n5、为php-fpm提供配置文件：\n```\n[root@lnmp php-5.6.31]# cp /usr/local/php/etc/php-fpm.conf.default /usr/local/php/etc/php-fpm.conf \n```\n6、编辑php-fpm的配置文件：\n```\n[root@lnmp php-5.6.31]# vim /usr/local/php/etc/php-fpm.conf\n配置fpm的相关选项为你所需要的值，并启用pid文件（如下最后一行）：\npm.max_children = 150\npm.start_servers = 8\npm.min_spare_servers = 5\npm.max_spare_servers = 10\npid = /usr/local/php/var/run/php-fpm.pid \n\n# 可以设置运行用户和组\nuser = nginx\ngroup = nginx\n```\n接下来就可以启动php-fpm了：\n```\n# service php-fpm start\n```\n使用如下命令来验正（如果此命令输出有中几个php-fpm进程就说明启动成功了）：\n```\n# ps aux | grep php-fpm\n```\n\n## 整合nginx和php5\n\n1、编辑/etc/nginx/nginx.conf，启用如下选项：\n```\n    location ~ \\.php$ {\n          #root html;\n          root   html; #可以自定义根路径\n          fastcgi_pass 127.0.0.1:9000;\n          fastcgi_index index.php;\n          include /etc/nginx/fastcgi.conf;\n       }\n```\n\n并在所支持的主页面格式中添加php格式的主页，类似如下：\n```\nlocation / {\n            root   html; #可以自定义根路径\n            index  index.php index.html index.htm;\n        }\n        \n```\n而后重新载入nginx的配置文件：\n```\n# service nginx reload\n```\n3、在/usr/local/nginx/html新建index.php的测试页面，测试php是否能正常工作：\n```\n# vim /usr/local/nginx/html/index.php\n<?php\n  phpinfo();\n?>\n```\n接着就可以通过浏览器访问此测试页面了。\n\n## 测试php和MySQL联通性\n在/usr/local/nginx/html新建index2.php的测试页面，测试php是否能正常工作\n```\n# vim /usr/local/nginx/html/index2.php\n\n<?php\n$con=mysql_connect('127.0.0.1:3306','root','password');\n    if($con)\n    {\n        die('ok');\n    }\n    else\n    {\n        die('Could not connect: ' . mysql_error());\n    }\n?>\n\n```","source":"_posts/lnmp搭建.md","raw":"---\ntitle: lnmp环境搭建\ncategories: 实践与总结\ntag: 实践与总结\nabbrlink: 110e9b1f\ndate: 2017-03-27 00:00:00\n---\n## 准备Linux环境\n环境为CentOS6.7最小化安装\n安装开发包组\n```\nyum groupinstall \"Development Tools\"\nyum -y install pcre-devel bzip2-devel libmcrypt-devel gcc  gcc-c++ openssl-devel pcre-devel libxml2-devel libcurl-devel libpng-devel freetype-devel libxslt-devel libtool gd-devel\n```\n\n<!-- more -->\n## 安装MySQL\n```\n1、准备MySQL数据存放的文件目录\n\n数据目录为/data，而后需要创建/data/mysql目录做为mysql数据的存放目录。\n\n2、新建用户以安全方式运行进程：\n\n# groupadd -r mysql\n# useradd -g mysql -r -s /sbin/nologin -M -d /data/mysql mysql\n# chown -R mysql:mysql /data/mysql\n\n3、安装并初始化mysql\nhttps://cdn.mysql.com//Downloads/MySQL-5.7/mysql-5.7.19-linux-glibc2.12-x86_64.tar.gz\n\n# tar xf mysql-5.7.19-linux-glibc2.12-x86_64.tar.gz -C /usr/local\n# cd /usr/local/\n# ln -sv mysql-5.7.19-linux-glibc2.12-x86_64  mysql\n# cd mysql \n\n# chown -R mysql:mysql  .\n# bin/mysql_install_db --user=mysql --datadir=/data/mysql\n# chown -R root  .\n\n4、为mysql提供主配置文件：\n\n参考链接https://dev.mysql.com/doc/refman/5.7/en/server-configuration-defaults.html\n从MySQL 5.7.18开始，my-default.ini不再包含在分发包中或由分发包安装。\n# vim /etc/my.cnf\n[mysqld]\n# innodb_buffer_pool_size = 128M\n# join_buffer_size = 128M\n# sort_buffer_size = 2M\n# read_rnd_buffer_size = 2M\ndatadir=/data/mysql\nsocket=/var/lib/mysql/mysql.sock\n\n# Disabling symbolic-links is recommended to prevent assorted security risks\nsymbolic-links=0\n\nlog-error=/var/log/mysqld.log\npid-file=/var/run/mysqld/mysqld.pid\n\n\n\n5、为mysql提供sysv服务脚本：\n\n# cd /usr/local/mysql\n# cp support-files/mysql.server  /etc/rc.d/init.d/mysqld\n\n添加至服务列表：\n# chkconfig --add mysqld\n# chkconfig mysqld on\n\n而后就可以启动服务测试使用了。\n\n\n为了使用mysql的安装符合系统使用规范，并将其开发组件导出给系统使用，这里还需要进行如下步骤：\n\n6、输出mysql的man手册至man命令的查找路径：\n\n编辑/etc/man.config，添加如下行即可：\nMANPATH  /usr/local/mysql/man\n\n7、输出mysql的头文件至系统头文件路径/usr/include：\n\n这可以通过简单的创建链接实现：\n# ln -sv /usr/local/mysql/include  /usr/include/mysql\n\n8、输出mysql的库文件给系统库查找路径：\n\n# echo '/usr/local/mysql/lib' > /etc/ld.so.conf.d/mysql.conf\n\n而后让系统重新载入系统库：\n# ldconfig\n\n9、修改PATH环境变量，让系统可以直接使用mysql的相关命令。\n在/etc/profile.d下新建mysql.sh\n内容如下：\nMYSQL_BASE=/usr/local/mysql\nPATH=$MYSQL_BASE/bin:$PATH\n执行source /etc/profile.d/mysql.sh\n\n10、连接MySQL\n首次使用执行mysql_secure_installation\n\n执行完成后使用root连接\nmysql -uroot -h127.0.0.1 -p\n>password\n\n```\n## Nginx\n\n1、下载\n官网下载地址：`http://nginx.org/download/nginx-1.10.3.tar.gz`\n2、安装\n首先添加用户nginx，实现以之运行nginx服务进程：\n```\n# groupadd -r nginx\n# useradd -r -g nginx nginx\n```\n接着开始编译和安装：\n```\n# ./configure \\\n  --prefix=/usr/local/nginx \\\n  --sbin-path=/usr/local/nginx/sbin/nginx \\\n  --conf-path=/etc/nginx/nginx.conf \\\n  --error-log-path=/var/log/nginx/error.log \\\n  --http-log-path=/var/log/nginx/access.log \\\n  --pid-path=/var/run/nginx/nginx.pid  \\\n  --lock-path=/var/lock/nginx.lock \\\n  --user=nginx \\\n  --group=nginx \\\n  --with-http_ssl_module \\\n  --with-http_flv_module \\\n  --with-http_stub_status_module \\\n  --with-http_gzip_static_module \\\n  --http-client-body-temp-path=/var/tmp/nginx/client/ \\\n  --http-proxy-temp-path=/var/tmp/nginx/proxy/ \\\n  --http-fastcgi-temp-path=/var/tmp/nginx/fcgi/ \\\n  --http-uwsgi-temp-path=/var/tmp/nginx/uwsgi \\\n  --http-scgi-temp-path=/var/tmp/nginx/scgi \\\n  --with-pcre\n# make && make install\n```\n3、为nginx提供SysV init脚本:\n\n新建文件/etc/rc.d/init.d/nginx，内容如下：\n```\n#!/bin/sh\n#\n# nginx - this script starts and stops the nginx daemon\n#\n# chkconfig:   - 85 15 \n# description:  Nginx is an HTTP(S) server, HTTP(S) reverse \\\n#               proxy and IMAP/POP3 proxy server\n# processname: nginx\n# config:      /etc/nginx/nginx.conf\n# config:      /etc/sysconfig/nginx\n# pidfile:     /var/run/nginx.pid\n \n# Source function library.\n. /etc/rc.d/init.d/functions\n \n# Source networking configuration.\n. /etc/sysconfig/network\n \n# Check that networking is up.\n[ \"$NETWORKING\" = \"no\" ] && exit 0\n \nnginx=\"/usr/sbin/nginx\"\nprog=$(basename $nginx)\n \nNGINX_CONF_FILE=\"/etc/nginx/nginx.conf\"\n \n[ -f /etc/sysconfig/nginx ] && . /etc/sysconfig/nginx\n \nlockfile=/var/lock/subsys/nginx\n \nmake_dirs() {\n   # make required directories\n   user=`nginx -V 2>&1 | grep \"configure arguments:\" | sed 's/[^*]*--user=\\([^ ]*\\).*/\\1/g' -`\n   options=`$nginx -V 2>&1 | grep 'configure arguments:'`\n   for opt in $options; do\n       if [ `echo $opt | grep '.*-temp-path'` ]; then\n           value=`echo $opt | cut -d \"=\" -f 2`\n           if [ ! -d \"$value\" ]; then\n               # echo \"creating\" $value\n               mkdir -p $value && chown -R $user $value\n           fi\n       fi\n   done\n}\n \nstart() {\n    [ -x $nginx ] || exit 5\n    [ -f $NGINX_CONF_FILE ] || exit 6\n    make_dirs\n    echo -n $\"Starting $prog: \"\n    daemon $nginx -c $NGINX_CONF_FILE\n    retval=$?\n    echo\n    [ $retval -eq 0 ] && touch $lockfile\n    return $retval\n}\n \nstop() {\n    echo -n $\"Stopping $prog: \"\n    killproc $prog -QUIT\n    retval=$?\n    echo\n    [ $retval -eq 0 ] && rm -f $lockfile\n    return $retval\n}\n \nrestart() {\n    configtest || return $?\n    stop\n    sleep 1\n    start\n}\n \nreload() {\n    configtest || return $?\n    echo -n $\"Reloading $prog: \"\n    killproc $nginx -HUP\n    RETVAL=$?\n    echo\n}\n \nforce_reload() {\n    restart\n}\n \nconfigtest() {\n  $nginx -t -c $NGINX_CONF_FILE\n}\n \nrh_status() {\n    status $prog\n}\n \nrh_status_q() {\n    rh_status >/dev/null 2>&1\n}\n \ncase \"$1\" in\n    start)\n        rh_status_q && exit 0\n        $1\n        ;;\n    stop)\n        rh_status_q || exit 0\n        $1\n        ;;\n    restart|configtest)\n        $1\n        ;;\n    reload)\n        rh_status_q || exit 7\n        $1\n        ;;\n    force-reload)\n        force_reload\n        ;;\n    status)\n        rh_status\n        ;;\n    condrestart|try-restart)\n        rh_status_q || exit 0\n            ;;\n    *)\n        echo $\"Usage: $0 {start|stop|status|restart|condrestart|try-restart|reload|force-reload|configtest}\"\n        exit 2\nesac\n```\n而后为此脚本赋予执行权限：\n```\n# chmod +x /etc/rc.d/init.d/nginx\n```\n添加至服务管理列表，并让其开机自动启动：\n```\n# chkconfig --add nginx\n# chkconfig nginx on\n```\n而后就可以启动服务并测试了：\n```\n# service nginx start\n```\n\n## php\n1、下载\nhttp://php.net/downloads.php\n这里选择5.6.31版本\n\n2、编译安装\n```\n[root@lnmp php-5.6.31]#  ./configure --prefix=/usr/local/php --with-mysql=/usr/local/mysql --with-openssl --enable-fpm --enable-sockets --enable-sysvshm  --with-mysqli=/usr/local/mysql/bin/mysql_config --enable-mbstring --with-freetype-dir --with-jpeg-dir --with-png-dir --with-zlib-dir --with-libxml-dir=/usr --enable-xml  --with-mhash --with-mcrypt  --with-config-file-path=/etc --with-config-file-scan-dir=/etc/php.d --with-bz2 --with-curl \n\n[root@lnmp php-5.6.31]# make\n[root@lnmp php-5.6.31]# make test  #此步骤可以不做，非常耗时间\n[root@lnmp php-5.6.31]# make intall\n```\n3、为php提供配置文件：\n```\n[root@lnmp php-5.6.31]# cp php.ini-production /etc/php.ini\n```\n4、为php-fpm提供Sysv init脚本，并将其添加至服务列表：\n```\n[root@lnmp php-5.6.31]# cp sapi/fpm/init.d.php-fpm  /etc/init.d/php-fpm\n[root@lnmp php-5.6.31]# chmod +x /etc/rc.d/init.d/php-fpm\n[root@lnmp php-5.6.31]# chkconfig --add php-fpm\n[root@lnmp php-5.6.31]# chkconfig php-fpm on\n```\n5、为php-fpm提供配置文件：\n```\n[root@lnmp php-5.6.31]# cp /usr/local/php/etc/php-fpm.conf.default /usr/local/php/etc/php-fpm.conf \n```\n6、编辑php-fpm的配置文件：\n```\n[root@lnmp php-5.6.31]# vim /usr/local/php/etc/php-fpm.conf\n配置fpm的相关选项为你所需要的值，并启用pid文件（如下最后一行）：\npm.max_children = 150\npm.start_servers = 8\npm.min_spare_servers = 5\npm.max_spare_servers = 10\npid = /usr/local/php/var/run/php-fpm.pid \n\n# 可以设置运行用户和组\nuser = nginx\ngroup = nginx\n```\n接下来就可以启动php-fpm了：\n```\n# service php-fpm start\n```\n使用如下命令来验正（如果此命令输出有中几个php-fpm进程就说明启动成功了）：\n```\n# ps aux | grep php-fpm\n```\n\n## 整合nginx和php5\n\n1、编辑/etc/nginx/nginx.conf，启用如下选项：\n```\n    location ~ \\.php$ {\n          #root html;\n          root   html; #可以自定义根路径\n          fastcgi_pass 127.0.0.1:9000;\n          fastcgi_index index.php;\n          include /etc/nginx/fastcgi.conf;\n       }\n```\n\n并在所支持的主页面格式中添加php格式的主页，类似如下：\n```\nlocation / {\n            root   html; #可以自定义根路径\n            index  index.php index.html index.htm;\n        }\n        \n```\n而后重新载入nginx的配置文件：\n```\n# service nginx reload\n```\n3、在/usr/local/nginx/html新建index.php的测试页面，测试php是否能正常工作：\n```\n# vim /usr/local/nginx/html/index.php\n<?php\n  phpinfo();\n?>\n```\n接着就可以通过浏览器访问此测试页面了。\n\n## 测试php和MySQL联通性\n在/usr/local/nginx/html新建index2.php的测试页面，测试php是否能正常工作\n```\n# vim /usr/local/nginx/html/index2.php\n\n<?php\n$con=mysql_connect('127.0.0.1:3306','root','password');\n    if($con)\n    {\n        die('ok');\n    }\n    else\n    {\n        die('Could not connect: ' . mysql_error());\n    }\n?>\n\n```","slug":"lnmp搭建","published":1,"updated":"2017-07-28T13:25:00.412Z","_id":"cj5mkehsp002sao943p60q2ls","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"准备Linux环境\"><a href=\"#准备Linux环境\" class=\"headerlink\" title=\"准备Linux环境\"></a>准备Linux环境</h2><p>环境为CentOS6.7最小化安装<br>安装开发包组<br><figure class=\"highlight elm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"title\">yum</span> groupinstall <span class=\"string\">\"Development Tools\"</span></div><div class=\"line\"><span class=\"title\">yum</span> -y install pcre-devel bzip2-devel libmcrypt-devel gcc  gcc-c++ openssl-devel pcre-devel libxml2-devel libcurl-devel libpng-devel free<span class=\"keyword\">type</span>-devel libxslt-devel libtool gd-devel</div></pre></td></tr></table></figure></p>\n<a id=\"more\"></a>\n<h2 id=\"安装MySQL\"><a href=\"#安装MySQL\" class=\"headerlink\" title=\"安装MySQL\"></a>安装MySQL</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div></pre></td><td class=\"code\"><pre><div class=\"line\">1、准备MySQL数据存放的文件目录</div><div class=\"line\"></div><div class=\"line\">数据目录为/data，而后需要创建/data/mysql目录做为mysql数据的存放目录。</div><div class=\"line\"></div><div class=\"line\">2、新建用户以安全方式运行进程：</div><div class=\"line\"><span class=\"meta\"></span></div><div class=\"line\">#<span class=\"bash\"> groupadd -r mysql</span></div><div class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> useradd -g mysql -r -s /sbin/nologin -M -d /data/mysql mysql</span></div><div class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> chown -R mysql:mysql /data/mysql</span></div><div class=\"line\"></div><div class=\"line\">3、安装并初始化mysql</div><div class=\"line\">https://cdn.mysql.com//Downloads/MySQL-5.7/mysql-5.7.19-linux-glibc2.12-x86_64.tar.gz</div><div class=\"line\"><span class=\"meta\"></span></div><div class=\"line\">#<span class=\"bash\"> tar xf mysql-5.7.19-linux-glibc2.12-x86_64.tar.gz -C /usr/<span class=\"built_in\">local</span></span></div><div class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> <span class=\"built_in\">cd</span> /usr/<span class=\"built_in\">local</span>/</span></div><div class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> ln -sv mysql-5.7.19-linux-glibc2.12-x86_64  mysql</span></div><div class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> <span class=\"built_in\">cd</span> mysql </span></div><div class=\"line\"><span class=\"meta\"></span></div><div class=\"line\">#<span class=\"bash\"> chown -R mysql:mysql  .</span></div><div class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> bin/mysql_install_db --user=mysql --datadir=/data/mysql</span></div><div class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> chown -R root  .</span></div><div class=\"line\"></div><div class=\"line\">4、为mysql提供主配置文件：</div><div class=\"line\"></div><div class=\"line\">参考链接https://dev.mysql.com/doc/refman/5.7/en/server-configuration-defaults.html</div><div class=\"line\">从MySQL 5.7.18开始，my-default.ini不再包含在分发包中或由分发包安装。</div><div class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> vim /etc/my.cnf</span></div><div class=\"line\">[mysqld]</div><div class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> innodb_buffer_pool_size = 128M</span></div><div class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> join_buffer_size = 128M</span></div><div class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> sort_buffer_size = 2M</span></div><div class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> read_rnd_buffer_size = 2M</span></div><div class=\"line\">datadir=/data/mysql</div><div class=\"line\">socket=/var/lib/mysql/mysql.sock</div><div class=\"line\"><span class=\"meta\"></span></div><div class=\"line\">#<span class=\"bash\"> Disabling symbolic-links is recommended to prevent assorted security risks</span></div><div class=\"line\">symbolic-links=0</div><div class=\"line\"></div><div class=\"line\">log-error=/var/log/mysqld.log</div><div class=\"line\">pid-file=/var/run/mysqld/mysqld.pid</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">5、为mysql提供sysv服务脚本：</div><div class=\"line\"><span class=\"meta\"></span></div><div class=\"line\">#<span class=\"bash\"> <span class=\"built_in\">cd</span> /usr/<span class=\"built_in\">local</span>/mysql</span></div><div class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> cp support-files/mysql.server  /etc/rc.d/init.d/mysqld</span></div><div class=\"line\"></div><div class=\"line\">添加至服务列表：</div><div class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> chkconfig --add mysqld</span></div><div class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> chkconfig mysqld on</span></div><div class=\"line\"></div><div class=\"line\">而后就可以启动服务测试使用了。</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">为了使用mysql的安装符合系统使用规范，并将其开发组件导出给系统使用，这里还需要进行如下步骤：</div><div class=\"line\"></div><div class=\"line\">6、输出mysql的man手册至man命令的查找路径：</div><div class=\"line\"></div><div class=\"line\">编辑/etc/man.config，添加如下行即可：</div><div class=\"line\">MANPATH  /usr/local/mysql/man</div><div class=\"line\"></div><div class=\"line\">7、输出mysql的头文件至系统头文件路径/usr/include：</div><div class=\"line\"></div><div class=\"line\">这可以通过简单的创建链接实现：</div><div class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> ln -sv /usr/<span class=\"built_in\">local</span>/mysql/include  /usr/include/mysql</span></div><div class=\"line\"></div><div class=\"line\">8、输出mysql的库文件给系统库查找路径：</div><div class=\"line\"><span class=\"meta\"></span></div><div class=\"line\">#<span class=\"bash\"> <span class=\"built_in\">echo</span> <span class=\"string\">'/usr/local/mysql/lib'</span> &gt; /etc/ld.so.conf.d/mysql.conf</span></div><div class=\"line\"></div><div class=\"line\">而后让系统重新载入系统库：</div><div class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> ldconfig</span></div><div class=\"line\"></div><div class=\"line\">9、修改PATH环境变量，让系统可以直接使用mysql的相关命令。</div><div class=\"line\">在/etc/profile.d下新建mysql.sh</div><div class=\"line\">内容如下：</div><div class=\"line\">MYSQL_BASE=/usr/local/mysql</div><div class=\"line\">PATH=$MYSQL_BASE/bin:$PATH</div><div class=\"line\">执行source /etc/profile.d/mysql.sh</div><div class=\"line\"></div><div class=\"line\">10、连接MySQL</div><div class=\"line\">首次使用执行mysql_secure_installation</div><div class=\"line\"></div><div class=\"line\">执行完成后使用root连接</div><div class=\"line\">mysql -uroot -h127.0.0.1 -p</div><div class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\">password</span></div></pre></td></tr></table></figure>\n<h2 id=\"Nginx\"><a href=\"#Nginx\" class=\"headerlink\" title=\"Nginx\"></a>Nginx</h2><p>1、下载<br>官网下载地址：<code>http://nginx.org/download/nginx-1.10.3.tar.gz</code><br>2、安装<br>首先添加用户nginx，实现以之运行nginx服务进程：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> groupadd -r nginx</span></div><div class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> useradd -r -g nginx nginx</span></div></pre></td></tr></table></figure></p>\n<p>接着开始编译和安装：<br><figure class=\"highlight haml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"># ./configure \\</div><div class=\"line\">  -<span class=\"ruby\">-prefix=<span class=\"regexp\">/usr/local</span><span class=\"regexp\">/nginx \\</span></span></div><div class=\"line\">  -<span class=\"ruby\"><span class=\"regexp\">-sbin-path=/usr</span><span class=\"regexp\">/local/nginx</span><span class=\"regexp\">/sbin/nginx</span> \\</span></div><div class=\"line\">  -<span class=\"ruby\">-conf-path=<span class=\"regexp\">/etc/nginx</span><span class=\"regexp\">/nginx.conf \\</span></span></div><div class=\"line\">  -<span class=\"ruby\"><span class=\"regexp\">-error-log-path=/var</span><span class=\"regexp\">/log/nginx</span><span class=\"regexp\">/error.log \\</span></span></div><div class=\"line\">  -<span class=\"ruby\"><span class=\"regexp\">-http-log-path=/var</span><span class=\"regexp\">/log/nginx</span><span class=\"regexp\">/access.log \\</span></span></div><div class=\"line\">  -<span class=\"ruby\"><span class=\"regexp\">-pid-path=/var</span><span class=\"regexp\">/run/nginx</span><span class=\"regexp\">/nginx.pid  \\</span></span></div><div class=\"line\">  -<span class=\"ruby\"><span class=\"regexp\">-lock-path=/var</span><span class=\"regexp\">/lock/nginx</span>.lock \\</span></div><div class=\"line\">  -<span class=\"ruby\">-user=nginx \\</span></div><div class=\"line\">  -<span class=\"ruby\">-group=nginx \\</span></div><div class=\"line\">  -<span class=\"ruby\">-with-http_ssl_module \\</span></div><div class=\"line\">  -<span class=\"ruby\">-with-http_flv_module \\</span></div><div class=\"line\">  -<span class=\"ruby\">-with-http_stub_status_module \\</span></div><div class=\"line\">  -<span class=\"ruby\">-with-http_gzip_static_module \\</span></div><div class=\"line\">  -<span class=\"ruby\">-http-client-body-temp-path=<span class=\"regexp\">/var/tmp</span><span class=\"regexp\">/nginx/client</span><span class=\"regexp\">/ \\</span></span></div><div class=\"line\">  -<span class=\"ruby\"><span class=\"regexp\">-http-proxy-temp-path=/var</span><span class=\"regexp\">/tmp/nginx</span><span class=\"regexp\">/proxy/</span> \\</span></div><div class=\"line\">  -<span class=\"ruby\">-http-fastcgi-temp-path=<span class=\"regexp\">/var/tmp</span><span class=\"regexp\">/nginx/fcgi</span><span class=\"regexp\">/ \\</span></span></div><div class=\"line\">  -<span class=\"ruby\"><span class=\"regexp\">-http-uwsgi-temp-path=/var</span><span class=\"regexp\">/tmp/nginx</span><span class=\"regexp\">/uwsgi \\</span></span></div><div class=\"line\">  -<span class=\"ruby\"><span class=\"regexp\">-http-scgi-temp-path=/var</span><span class=\"regexp\">/tmp/nginx</span><span class=\"regexp\">/scgi \\</span></span></div><div class=\"line\">  -<span class=\"ruby\"><span class=\"regexp\">-with-pcre</span></span></div><div class=\"line\"># make &amp;&amp; make install</div></pre></td></tr></table></figure></p>\n<p>3、为nginx提供SysV init脚本:</p>\n<p>新建文件/etc/rc.d/init.d/nginx，内容如下：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#!/bin/sh</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\"># nginx - this script starts and stops the nginx daemon</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\"># chkconfig:   - 85 15 </span></div><div class=\"line\"><span class=\"comment\"># description:  Nginx is an HTTP(S) server, HTTP(S) reverse \\</span></div><div class=\"line\"><span class=\"comment\">#               proxy and IMAP/POP3 proxy server</span></div><div class=\"line\"><span class=\"comment\"># processname: nginx</span></div><div class=\"line\"><span class=\"comment\"># config:      /etc/nginx/nginx.conf</span></div><div class=\"line\"><span class=\"comment\"># config:      /etc/sysconfig/nginx</span></div><div class=\"line\"><span class=\"comment\"># pidfile:     /var/run/nginx.pid</span></div><div class=\"line\"> </div><div class=\"line\"><span class=\"comment\"># Source function library.</span></div><div class=\"line\">. /etc/rc.d/init.d/<span class=\"built_in\">functions</span></div><div class=\"line\"> </div><div class=\"line\"><span class=\"comment\"># Source networking configuration.</span></div><div class=\"line\">. /etc/sysconfig/network</div><div class=\"line\"> </div><div class=\"line\"><span class=\"comment\"># Check that networking is up.</span></div><div class=\"line\">[ <span class=\"string\">\"<span class=\"variable\">$NETWORKING</span>\"</span> = <span class=\"string\">\"no\"</span> ] &amp;&amp; <span class=\"built_in\">exit</span> 0</div><div class=\"line\"> </div><div class=\"line\">nginx=<span class=\"string\">\"/usr/sbin/nginx\"</span></div><div class=\"line\">prog=$(basename <span class=\"variable\">$nginx</span>)</div><div class=\"line\"> </div><div class=\"line\">NGINX_CONF_FILE=<span class=\"string\">\"/etc/nginx/nginx.conf\"</span></div><div class=\"line\"> </div><div class=\"line\">[ -f /etc/sysconfig/nginx ] &amp;&amp; . /etc/sysconfig/nginx</div><div class=\"line\"> </div><div class=\"line\">lockfile=/var/lock/subsys/nginx</div><div class=\"line\"> </div><div class=\"line\"><span class=\"function\"><span class=\"title\">make_dirs</span></span>() &#123;</div><div class=\"line\">   <span class=\"comment\"># make required directories</span></div><div class=\"line\">   user=`nginx -V 2&gt;&amp;1 | grep <span class=\"string\">\"configure arguments:\"</span> | sed <span class=\"string\">'s/[^*]*--user=\\([^ ]*\\).*/\\1/g'</span> -`</div><div class=\"line\">   options=`<span class=\"variable\">$nginx</span> -V 2&gt;&amp;1 | grep <span class=\"string\">'configure arguments:'</span>`</div><div class=\"line\">   <span class=\"keyword\">for</span> opt <span class=\"keyword\">in</span> <span class=\"variable\">$options</span>; <span class=\"keyword\">do</span></div><div class=\"line\">       <span class=\"keyword\">if</span> [ `<span class=\"built_in\">echo</span> <span class=\"variable\">$opt</span> | grep <span class=\"string\">'.*-temp-path'</span>` ]; <span class=\"keyword\">then</span></div><div class=\"line\">           value=`<span class=\"built_in\">echo</span> <span class=\"variable\">$opt</span> | cut -d <span class=\"string\">\"=\"</span> -f 2`</div><div class=\"line\">           <span class=\"keyword\">if</span> [ ! -d <span class=\"string\">\"<span class=\"variable\">$value</span>\"</span> ]; <span class=\"keyword\">then</span></div><div class=\"line\">               <span class=\"comment\"># echo \"creating\" $value</span></div><div class=\"line\">               mkdir -p <span class=\"variable\">$value</span> &amp;&amp; chown -R <span class=\"variable\">$user</span> <span class=\"variable\">$value</span></div><div class=\"line\">           <span class=\"keyword\">fi</span></div><div class=\"line\">       <span class=\"keyword\">fi</span></div><div class=\"line\">   <span class=\"keyword\">done</span></div><div class=\"line\">&#125;</div><div class=\"line\"> </div><div class=\"line\"><span class=\"function\"><span class=\"title\">start</span></span>() &#123;</div><div class=\"line\">    [ -x <span class=\"variable\">$nginx</span> ] || <span class=\"built_in\">exit</span> 5</div><div class=\"line\">    [ -f <span class=\"variable\">$NGINX_CONF_FILE</span> ] || <span class=\"built_in\">exit</span> 6</div><div class=\"line\">    make_dirs</div><div class=\"line\">    <span class=\"built_in\">echo</span> -n $<span class=\"string\">\"Starting <span class=\"variable\">$prog</span>: \"</span></div><div class=\"line\">    daemon <span class=\"variable\">$nginx</span> -c <span class=\"variable\">$NGINX_CONF_FILE</span></div><div class=\"line\">    retval=$?</div><div class=\"line\">    <span class=\"built_in\">echo</span></div><div class=\"line\">    [ <span class=\"variable\">$retval</span> -eq 0 ] &amp;&amp; touch <span class=\"variable\">$lockfile</span></div><div class=\"line\">    <span class=\"built_in\">return</span> <span class=\"variable\">$retval</span></div><div class=\"line\">&#125;</div><div class=\"line\"> </div><div class=\"line\"><span class=\"function\"><span class=\"title\">stop</span></span>() &#123;</div><div class=\"line\">    <span class=\"built_in\">echo</span> -n $<span class=\"string\">\"Stopping <span class=\"variable\">$prog</span>: \"</span></div><div class=\"line\">    killproc <span class=\"variable\">$prog</span> -QUIT</div><div class=\"line\">    retval=$?</div><div class=\"line\">    <span class=\"built_in\">echo</span></div><div class=\"line\">    [ <span class=\"variable\">$retval</span> -eq 0 ] &amp;&amp; rm -f <span class=\"variable\">$lockfile</span></div><div class=\"line\">    <span class=\"built_in\">return</span> <span class=\"variable\">$retval</span></div><div class=\"line\">&#125;</div><div class=\"line\"> </div><div class=\"line\"><span class=\"function\"><span class=\"title\">restart</span></span>() &#123;</div><div class=\"line\">    configtest || <span class=\"built_in\">return</span> $?</div><div class=\"line\">    stop</div><div class=\"line\">    sleep 1</div><div class=\"line\">    start</div><div class=\"line\">&#125;</div><div class=\"line\"> </div><div class=\"line\"><span class=\"function\"><span class=\"title\">reload</span></span>() &#123;</div><div class=\"line\">    configtest || <span class=\"built_in\">return</span> $?</div><div class=\"line\">    <span class=\"built_in\">echo</span> -n $<span class=\"string\">\"Reloading <span class=\"variable\">$prog</span>: \"</span></div><div class=\"line\">    killproc <span class=\"variable\">$nginx</span> -HUP</div><div class=\"line\">    RETVAL=$?</div><div class=\"line\">    <span class=\"built_in\">echo</span></div><div class=\"line\">&#125;</div><div class=\"line\"> </div><div class=\"line\"><span class=\"function\"><span class=\"title\">force_reload</span></span>() &#123;</div><div class=\"line\">    restart</div><div class=\"line\">&#125;</div><div class=\"line\"> </div><div class=\"line\"><span class=\"function\"><span class=\"title\">configtest</span></span>() &#123;</div><div class=\"line\">  <span class=\"variable\">$nginx</span> -t -c <span class=\"variable\">$NGINX_CONF_FILE</span></div><div class=\"line\">&#125;</div><div class=\"line\"> </div><div class=\"line\"><span class=\"function\"><span class=\"title\">rh_status</span></span>() &#123;</div><div class=\"line\">    status <span class=\"variable\">$prog</span></div><div class=\"line\">&#125;</div><div class=\"line\"> </div><div class=\"line\"><span class=\"function\"><span class=\"title\">rh_status_q</span></span>() &#123;</div><div class=\"line\">    rh_status &gt;/dev/null 2&gt;&amp;1</div><div class=\"line\">&#125;</div><div class=\"line\"> </div><div class=\"line\"><span class=\"keyword\">case</span> <span class=\"string\">\"<span class=\"variable\">$1</span>\"</span> <span class=\"keyword\">in</span></div><div class=\"line\">    start)</div><div class=\"line\">        rh_status_q &amp;&amp; <span class=\"built_in\">exit</span> 0</div><div class=\"line\">        <span class=\"variable\">$1</span></div><div class=\"line\">        ;;</div><div class=\"line\">    stop)</div><div class=\"line\">        rh_status_q || <span class=\"built_in\">exit</span> 0</div><div class=\"line\">        <span class=\"variable\">$1</span></div><div class=\"line\">        ;;</div><div class=\"line\">    restart|configtest)</div><div class=\"line\">        <span class=\"variable\">$1</span></div><div class=\"line\">        ;;</div><div class=\"line\">    reload)</div><div class=\"line\">        rh_status_q || <span class=\"built_in\">exit</span> 7</div><div class=\"line\">        <span class=\"variable\">$1</span></div><div class=\"line\">        ;;</div><div class=\"line\">    force-reload)</div><div class=\"line\">        force_reload</div><div class=\"line\">        ;;</div><div class=\"line\">    status)</div><div class=\"line\">        rh_status</div><div class=\"line\">        ;;</div><div class=\"line\">    condrestart|try-restart)</div><div class=\"line\">        rh_status_q || <span class=\"built_in\">exit</span> 0</div><div class=\"line\">            ;;</div><div class=\"line\">    *)</div><div class=\"line\">        <span class=\"built_in\">echo</span> $<span class=\"string\">\"Usage: <span class=\"variable\">$0</span> &#123;start|stop|status|restart|condrestart|try-restart|reload|force-reload|configtest&#125;\"</span></div><div class=\"line\">        <span class=\"built_in\">exit</span> 2</div><div class=\"line\"><span class=\"keyword\">esac</span></div></pre></td></tr></table></figure></p>\n<p>而后为此脚本赋予执行权限：<br><figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"># chmod +x <span class=\"regexp\">/etc/</span>rc.d<span class=\"regexp\">/init.d/</span>nginx</div></pre></td></tr></table></figure></p>\n<p>添加至服务管理列表，并让其开机自动启动：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> chkconfig --add nginx</span></div><div class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> chkconfig nginx on</span></div></pre></td></tr></table></figure></p>\n<p>而后就可以启动服务并测试了：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> service nginx start</span></div></pre></td></tr></table></figure></p>\n<h2 id=\"php\"><a href=\"#php\" class=\"headerlink\" title=\"php\"></a>php</h2><p>1、下载<br><a href=\"http://php.net/downloads.php\" target=\"_blank\" rel=\"external\">http://php.net/downloads.php</a><br>这里选择5.6.31版本</p>\n<p>2、编译安装<br><figure class=\"highlight brainfuck\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"title\">[</span><span class=\"comment\">root@lnmp</span> <span class=\"comment\">php</span><span class=\"literal\">-</span><span class=\"comment\">5</span><span class=\"string\">.</span><span class=\"comment\">6</span><span class=\"string\">.</span><span class=\"comment\">31</span><span class=\"title\">]</span><span class=\"comment\">#</span>  <span class=\"string\">.</span><span class=\"comment\">/configure</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">prefix=/usr/local/php</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">with</span><span class=\"literal\">-</span><span class=\"comment\">mysql=/usr/local/mysql</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">with</span><span class=\"literal\">-</span><span class=\"comment\">openssl</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">enable</span><span class=\"literal\">-</span><span class=\"comment\">fpm</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">enable</span><span class=\"literal\">-</span><span class=\"comment\">sockets</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">enable</span><span class=\"literal\">-</span><span class=\"comment\">sysvshm</span>  <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">with</span><span class=\"literal\">-</span><span class=\"comment\">mysqli=/usr/local/mysql/bin/mysql_config</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">enable</span><span class=\"literal\">-</span><span class=\"comment\">mbstring</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">with</span><span class=\"literal\">-</span><span class=\"comment\">freetype</span><span class=\"literal\">-</span><span class=\"comment\">dir</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">with</span><span class=\"literal\">-</span><span class=\"comment\">jpeg</span><span class=\"literal\">-</span><span class=\"comment\">dir</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">with</span><span class=\"literal\">-</span><span class=\"comment\">png</span><span class=\"literal\">-</span><span class=\"comment\">dir</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">with</span><span class=\"literal\">-</span><span class=\"comment\">zlib</span><span class=\"literal\">-</span><span class=\"comment\">dir</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">with</span><span class=\"literal\">-</span><span class=\"comment\">libxml</span><span class=\"literal\">-</span><span class=\"comment\">dir=/usr</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">enable</span><span class=\"literal\">-</span><span class=\"comment\">xml</span>  <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">with</span><span class=\"literal\">-</span><span class=\"comment\">mhash</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">with</span><span class=\"literal\">-</span><span class=\"comment\">mcrypt</span>  <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">with</span><span class=\"literal\">-</span><span class=\"comment\">config</span><span class=\"literal\">-</span><span class=\"comment\">file</span><span class=\"literal\">-</span><span class=\"comment\">path=/etc</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">with</span><span class=\"literal\">-</span><span class=\"comment\">config</span><span class=\"literal\">-</span><span class=\"comment\">file</span><span class=\"literal\">-</span><span class=\"comment\">scan</span><span class=\"literal\">-</span><span class=\"comment\">dir=/etc/php</span><span class=\"string\">.</span><span class=\"comment\">d</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">with</span><span class=\"literal\">-</span><span class=\"comment\">bz2</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">with</span><span class=\"literal\">-</span><span class=\"comment\">curl</span> </div><div class=\"line\"></div><div class=\"line\"><span class=\"title\">[</span><span class=\"comment\">root@lnmp</span> <span class=\"comment\">php</span><span class=\"literal\">-</span><span class=\"comment\">5</span><span class=\"string\">.</span><span class=\"comment\">6</span><span class=\"string\">.</span><span class=\"comment\">31</span><span class=\"title\">]</span><span class=\"comment\">#</span> <span class=\"comment\">make</span></div><div class=\"line\"><span class=\"title\">[</span><span class=\"comment\">root@lnmp</span> <span class=\"comment\">php</span><span class=\"literal\">-</span><span class=\"comment\">5</span><span class=\"string\">.</span><span class=\"comment\">6</span><span class=\"string\">.</span><span class=\"comment\">31</span><span class=\"title\">]</span><span class=\"comment\">#</span> <span class=\"comment\">make</span> <span class=\"comment\">test</span>  <span class=\"comment\">#此步骤可以不做，非常耗时间</span></div><div class=\"line\"><span class=\"title\">[</span><span class=\"comment\">root@lnmp</span> <span class=\"comment\">php</span><span class=\"literal\">-</span><span class=\"comment\">5</span><span class=\"string\">.</span><span class=\"comment\">6</span><span class=\"string\">.</span><span class=\"comment\">31</span><span class=\"title\">]</span><span class=\"comment\">#</span> <span class=\"comment\">make</span> <span class=\"comment\">intall</span></div></pre></td></tr></table></figure></p>\n<p>3、为php提供配置文件：<br><figure class=\"highlight autoit\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root<span class=\"symbol\">@lnmp</span> php<span class=\"number\">-5.6</span><span class=\"number\">.31</span>]<span class=\"meta\"># cp php.ini-production /etc/php.ini</span></div></pre></td></tr></table></figure></p>\n<p>4、为php-fpm提供Sysv init脚本，并将其添加至服务列表：<br><figure class=\"highlight autoit\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root<span class=\"symbol\">@lnmp</span> php<span class=\"number\">-5.6</span><span class=\"number\">.31</span>]<span class=\"meta\"># cp sapi/fpm/init.d.php-fpm  /etc/init.d/php-fpm</span></div><div class=\"line\">[root<span class=\"symbol\">@lnmp</span> php<span class=\"number\">-5.6</span><span class=\"number\">.31</span>]<span class=\"meta\"># chmod +x /etc/rc.d/init.d/php-fpm</span></div><div class=\"line\">[root<span class=\"symbol\">@lnmp</span> php<span class=\"number\">-5.6</span><span class=\"number\">.31</span>]<span class=\"meta\"># chkconfig --add php-fpm</span></div><div class=\"line\">[root<span class=\"symbol\">@lnmp</span> php<span class=\"number\">-5.6</span><span class=\"number\">.31</span>]<span class=\"meta\"># chkconfig php-fpm on</span></div></pre></td></tr></table></figure></p>\n<p>5、为php-fpm提供配置文件：<br><figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@lnmp php-<span class=\"number\">5.6</span>.<span class=\"number\">31</span>]# cp <span class=\"regexp\">/usr/</span>local<span class=\"regexp\">/php/</span>etc<span class=\"regexp\">/php-fpm.conf.default /u</span>sr<span class=\"regexp\">/local/</span>php<span class=\"regexp\">/etc/</span>php-fpm.conf</div></pre></td></tr></table></figure></p>\n<p>6、编辑php-fpm的配置文件：<br><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@lnmp php-5.6.31]# vim /usr/local/php/etc/php-fpm.conf</div><div class=\"line\">配置fpm的相关选项为你所需要的值，并启用pid文件（如下最后一行）：</div><div class=\"line\">pm.max_children = 150</div><div class=\"line\">pm.start_servers = 8</div><div class=\"line\">pm.min_spare_servers = 5</div><div class=\"line\">pm.max_spare_servers = 10</div><div class=\"line\">pid = /usr/local/php/var/run/php-fpm.pid </div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 可以设置运行用户和组</span><span class=\"built_in\"></span></div><div class=\"line\">user = nginx<span class=\"built_in\"></span></div><div class=\"line\">group = nginx</div></pre></td></tr></table></figure></p>\n<p>接下来就可以启动php-fpm了：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> service php-fpm start</span></div></pre></td></tr></table></figure></p>\n<p>使用如下命令来验正（如果此命令输出有中几个php-fpm进程就说明启动成功了）：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> ps aux | grep php-fpm</span></div></pre></td></tr></table></figure></p>\n<h2 id=\"整合nginx和php5\"><a href=\"#整合nginx和php5\" class=\"headerlink\" title=\"整合nginx和php5\"></a>整合nginx和php5</h2><p>1、编辑/etc/nginx/nginx.conf，启用如下选项：<br><figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attribute\">location</span> <span class=\"regexp\">~ \\.php$</span> &#123;</div><div class=\"line\">      <span class=\"comment\">#root html;</span></div><div class=\"line\">      <span class=\"attribute\">root</span>   html; <span class=\"comment\">#可以自定义根路径</span></div><div class=\"line\">      <span class=\"attribute\">fastcgi_pass</span> <span class=\"number\">127.0.0.1:9000</span>;</div><div class=\"line\">      <span class=\"attribute\">fastcgi_index</span> index.php;</div><div class=\"line\">      <span class=\"attribute\">include</span> /etc/nginx/fastcgi.conf;</div><div class=\"line\">   &#125;</div></pre></td></tr></table></figure></p>\n<p>并在所支持的主页面格式中添加php格式的主页，类似如下：<br><figure class=\"highlight glsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">location</span> / &#123;</div><div class=\"line\">            root   html; <span class=\"meta\">#可以自定义根路径</span></div><div class=\"line\">            <span class=\"keyword\">index</span>  <span class=\"keyword\">index</span>.php <span class=\"keyword\">index</span>.html <span class=\"keyword\">index</span>.htm;</div><div class=\"line\">        &#125;</div></pre></td></tr></table></figure></p>\n<p>而后重新载入nginx的配置文件：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> service nginx reload</span></div></pre></td></tr></table></figure></p>\n<p>3、在/usr/local/nginx/html新建index.php的测试页面，测试php是否能正常工作：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"># vim /usr/local/nginx/html/index.php</div><div class=\"line\"><span class=\"php\"><span class=\"meta\">&lt;?php</span></span></div><div class=\"line\">  phpinfo();</div><div class=\"line\"><span class=\"meta\">?&gt;</span></div></pre></td></tr></table></figure></p>\n<p>接着就可以通过浏览器访问此测试页面了。</p>\n<h2 id=\"测试php和MySQL联通性\"><a href=\"#测试php和MySQL联通性\" class=\"headerlink\" title=\"测试php和MySQL联通性\"></a>测试php和MySQL联通性</h2><p>在/usr/local/nginx/html新建index2.php的测试页面，测试php是否能正常工作<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"># vim /usr/local/nginx/html/index2.php</div><div class=\"line\"></div><div class=\"line\"><span class=\"php\"><span class=\"meta\">&lt;?php</span></span></div><div class=\"line\">$con=mysql_connect(<span class=\"string\">'127.0.0.1:3306'</span>,<span class=\"string\">'root'</span>,<span class=\"string\">'password'</span>);</div><div class=\"line\">    <span class=\"keyword\">if</span>($con)</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">die</span>(<span class=\"string\">'ok'</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">else</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">die</span>(<span class=\"string\">'Could not connect: '</span> . mysql_error());</div><div class=\"line\">    &#125;</div><div class=\"line\"><span class=\"meta\">?&gt;</span></div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<h2 id=\"准备Linux环境\"><a href=\"#准备Linux环境\" class=\"headerlink\" title=\"准备Linux环境\"></a>准备Linux环境</h2><p>环境为CentOS6.7最小化安装<br>安装开发包组<br><figure class=\"highlight elm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"title\">yum</span> groupinstall <span class=\"string\">\"Development Tools\"</span></div><div class=\"line\"><span class=\"title\">yum</span> -y install pcre-devel bzip2-devel libmcrypt-devel gcc  gcc-c++ openssl-devel pcre-devel libxml2-devel libcurl-devel libpng-devel free<span class=\"keyword\">type</span>-devel libxslt-devel libtool gd-devel</div></pre></td></tr></table></figure></p>","more":"<h2 id=\"安装MySQL\"><a href=\"#安装MySQL\" class=\"headerlink\" title=\"安装MySQL\"></a>安装MySQL</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div></pre></td><td class=\"code\"><pre><div class=\"line\">1、准备MySQL数据存放的文件目录</div><div class=\"line\"></div><div class=\"line\">数据目录为/data，而后需要创建/data/mysql目录做为mysql数据的存放目录。</div><div class=\"line\"></div><div class=\"line\">2、新建用户以安全方式运行进程：</div><div class=\"line\"><span class=\"meta\"></span></div><div class=\"line\">#<span class=\"bash\"> groupadd -r mysql</span></div><div class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> useradd -g mysql -r -s /sbin/nologin -M -d /data/mysql mysql</span></div><div class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> chown -R mysql:mysql /data/mysql</span></div><div class=\"line\"></div><div class=\"line\">3、安装并初始化mysql</div><div class=\"line\">https://cdn.mysql.com//Downloads/MySQL-5.7/mysql-5.7.19-linux-glibc2.12-x86_64.tar.gz</div><div class=\"line\"><span class=\"meta\"></span></div><div class=\"line\">#<span class=\"bash\"> tar xf mysql-5.7.19-linux-glibc2.12-x86_64.tar.gz -C /usr/<span class=\"built_in\">local</span></span></div><div class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> <span class=\"built_in\">cd</span> /usr/<span class=\"built_in\">local</span>/</span></div><div class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> ln -sv mysql-5.7.19-linux-glibc2.12-x86_64  mysql</span></div><div class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> <span class=\"built_in\">cd</span> mysql </span></div><div class=\"line\"><span class=\"meta\"></span></div><div class=\"line\">#<span class=\"bash\"> chown -R mysql:mysql  .</span></div><div class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> bin/mysql_install_db --user=mysql --datadir=/data/mysql</span></div><div class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> chown -R root  .</span></div><div class=\"line\"></div><div class=\"line\">4、为mysql提供主配置文件：</div><div class=\"line\"></div><div class=\"line\">参考链接https://dev.mysql.com/doc/refman/5.7/en/server-configuration-defaults.html</div><div class=\"line\">从MySQL 5.7.18开始，my-default.ini不再包含在分发包中或由分发包安装。</div><div class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> vim /etc/my.cnf</span></div><div class=\"line\">[mysqld]</div><div class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> innodb_buffer_pool_size = 128M</span></div><div class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> join_buffer_size = 128M</span></div><div class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> sort_buffer_size = 2M</span></div><div class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> read_rnd_buffer_size = 2M</span></div><div class=\"line\">datadir=/data/mysql</div><div class=\"line\">socket=/var/lib/mysql/mysql.sock</div><div class=\"line\"><span class=\"meta\"></span></div><div class=\"line\">#<span class=\"bash\"> Disabling symbolic-links is recommended to prevent assorted security risks</span></div><div class=\"line\">symbolic-links=0</div><div class=\"line\"></div><div class=\"line\">log-error=/var/log/mysqld.log</div><div class=\"line\">pid-file=/var/run/mysqld/mysqld.pid</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">5、为mysql提供sysv服务脚本：</div><div class=\"line\"><span class=\"meta\"></span></div><div class=\"line\">#<span class=\"bash\"> <span class=\"built_in\">cd</span> /usr/<span class=\"built_in\">local</span>/mysql</span></div><div class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> cp support-files/mysql.server  /etc/rc.d/init.d/mysqld</span></div><div class=\"line\"></div><div class=\"line\">添加至服务列表：</div><div class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> chkconfig --add mysqld</span></div><div class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> chkconfig mysqld on</span></div><div class=\"line\"></div><div class=\"line\">而后就可以启动服务测试使用了。</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">为了使用mysql的安装符合系统使用规范，并将其开发组件导出给系统使用，这里还需要进行如下步骤：</div><div class=\"line\"></div><div class=\"line\">6、输出mysql的man手册至man命令的查找路径：</div><div class=\"line\"></div><div class=\"line\">编辑/etc/man.config，添加如下行即可：</div><div class=\"line\">MANPATH  /usr/local/mysql/man</div><div class=\"line\"></div><div class=\"line\">7、输出mysql的头文件至系统头文件路径/usr/include：</div><div class=\"line\"></div><div class=\"line\">这可以通过简单的创建链接实现：</div><div class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> ln -sv /usr/<span class=\"built_in\">local</span>/mysql/include  /usr/include/mysql</span></div><div class=\"line\"></div><div class=\"line\">8、输出mysql的库文件给系统库查找路径：</div><div class=\"line\"><span class=\"meta\"></span></div><div class=\"line\">#<span class=\"bash\"> <span class=\"built_in\">echo</span> <span class=\"string\">'/usr/local/mysql/lib'</span> &gt; /etc/ld.so.conf.d/mysql.conf</span></div><div class=\"line\"></div><div class=\"line\">而后让系统重新载入系统库：</div><div class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> ldconfig</span></div><div class=\"line\"></div><div class=\"line\">9、修改PATH环境变量，让系统可以直接使用mysql的相关命令。</div><div class=\"line\">在/etc/profile.d下新建mysql.sh</div><div class=\"line\">内容如下：</div><div class=\"line\">MYSQL_BASE=/usr/local/mysql</div><div class=\"line\">PATH=$MYSQL_BASE/bin:$PATH</div><div class=\"line\">执行source /etc/profile.d/mysql.sh</div><div class=\"line\"></div><div class=\"line\">10、连接MySQL</div><div class=\"line\">首次使用执行mysql_secure_installation</div><div class=\"line\"></div><div class=\"line\">执行完成后使用root连接</div><div class=\"line\">mysql -uroot -h127.0.0.1 -p</div><div class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\">password</span></div></pre></td></tr></table></figure>\n<h2 id=\"Nginx\"><a href=\"#Nginx\" class=\"headerlink\" title=\"Nginx\"></a>Nginx</h2><p>1、下载<br>官网下载地址：<code>http://nginx.org/download/nginx-1.10.3.tar.gz</code><br>2、安装<br>首先添加用户nginx，实现以之运行nginx服务进程：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> groupadd -r nginx</span></div><div class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> useradd -r -g nginx nginx</span></div></pre></td></tr></table></figure></p>\n<p>接着开始编译和安装：<br><figure class=\"highlight haml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"># ./configure \\</div><div class=\"line\">  -<span class=\"ruby\">-prefix=<span class=\"regexp\">/usr/local</span><span class=\"regexp\">/nginx \\</span></span></div><div class=\"line\">  -<span class=\"ruby\"><span class=\"regexp\">-sbin-path=/usr</span><span class=\"regexp\">/local/nginx</span><span class=\"regexp\">/sbin/nginx</span> \\</span></div><div class=\"line\">  -<span class=\"ruby\">-conf-path=<span class=\"regexp\">/etc/nginx</span><span class=\"regexp\">/nginx.conf \\</span></span></div><div class=\"line\">  -<span class=\"ruby\"><span class=\"regexp\">-error-log-path=/var</span><span class=\"regexp\">/log/nginx</span><span class=\"regexp\">/error.log \\</span></span></div><div class=\"line\">  -<span class=\"ruby\"><span class=\"regexp\">-http-log-path=/var</span><span class=\"regexp\">/log/nginx</span><span class=\"regexp\">/access.log \\</span></span></div><div class=\"line\">  -<span class=\"ruby\"><span class=\"regexp\">-pid-path=/var</span><span class=\"regexp\">/run/nginx</span><span class=\"regexp\">/nginx.pid  \\</span></span></div><div class=\"line\">  -<span class=\"ruby\"><span class=\"regexp\">-lock-path=/var</span><span class=\"regexp\">/lock/nginx</span>.lock \\</span></div><div class=\"line\">  -<span class=\"ruby\">-user=nginx \\</span></div><div class=\"line\">  -<span class=\"ruby\">-group=nginx \\</span></div><div class=\"line\">  -<span class=\"ruby\">-with-http_ssl_module \\</span></div><div class=\"line\">  -<span class=\"ruby\">-with-http_flv_module \\</span></div><div class=\"line\">  -<span class=\"ruby\">-with-http_stub_status_module \\</span></div><div class=\"line\">  -<span class=\"ruby\">-with-http_gzip_static_module \\</span></div><div class=\"line\">  -<span class=\"ruby\">-http-client-body-temp-path=<span class=\"regexp\">/var/tmp</span><span class=\"regexp\">/nginx/client</span><span class=\"regexp\">/ \\</span></span></div><div class=\"line\">  -<span class=\"ruby\"><span class=\"regexp\">-http-proxy-temp-path=/var</span><span class=\"regexp\">/tmp/nginx</span><span class=\"regexp\">/proxy/</span> \\</span></div><div class=\"line\">  -<span class=\"ruby\">-http-fastcgi-temp-path=<span class=\"regexp\">/var/tmp</span><span class=\"regexp\">/nginx/fcgi</span><span class=\"regexp\">/ \\</span></span></div><div class=\"line\">  -<span class=\"ruby\"><span class=\"regexp\">-http-uwsgi-temp-path=/var</span><span class=\"regexp\">/tmp/nginx</span><span class=\"regexp\">/uwsgi \\</span></span></div><div class=\"line\">  -<span class=\"ruby\"><span class=\"regexp\">-http-scgi-temp-path=/var</span><span class=\"regexp\">/tmp/nginx</span><span class=\"regexp\">/scgi \\</span></span></div><div class=\"line\">  -<span class=\"ruby\"><span class=\"regexp\">-with-pcre</span></span></div><div class=\"line\"># make &amp;&amp; make install</div></pre></td></tr></table></figure></p>\n<p>3、为nginx提供SysV init脚本:</p>\n<p>新建文件/etc/rc.d/init.d/nginx，内容如下：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#!/bin/sh</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\"># nginx - this script starts and stops the nginx daemon</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\"># chkconfig:   - 85 15 </span></div><div class=\"line\"><span class=\"comment\"># description:  Nginx is an HTTP(S) server, HTTP(S) reverse \\</span></div><div class=\"line\"><span class=\"comment\">#               proxy and IMAP/POP3 proxy server</span></div><div class=\"line\"><span class=\"comment\"># processname: nginx</span></div><div class=\"line\"><span class=\"comment\"># config:      /etc/nginx/nginx.conf</span></div><div class=\"line\"><span class=\"comment\"># config:      /etc/sysconfig/nginx</span></div><div class=\"line\"><span class=\"comment\"># pidfile:     /var/run/nginx.pid</span></div><div class=\"line\"> </div><div class=\"line\"><span class=\"comment\"># Source function library.</span></div><div class=\"line\">. /etc/rc.d/init.d/<span class=\"built_in\">functions</span></div><div class=\"line\"> </div><div class=\"line\"><span class=\"comment\"># Source networking configuration.</span></div><div class=\"line\">. /etc/sysconfig/network</div><div class=\"line\"> </div><div class=\"line\"><span class=\"comment\"># Check that networking is up.</span></div><div class=\"line\">[ <span class=\"string\">\"<span class=\"variable\">$NETWORKING</span>\"</span> = <span class=\"string\">\"no\"</span> ] &amp;&amp; <span class=\"built_in\">exit</span> 0</div><div class=\"line\"> </div><div class=\"line\">nginx=<span class=\"string\">\"/usr/sbin/nginx\"</span></div><div class=\"line\">prog=$(basename <span class=\"variable\">$nginx</span>)</div><div class=\"line\"> </div><div class=\"line\">NGINX_CONF_FILE=<span class=\"string\">\"/etc/nginx/nginx.conf\"</span></div><div class=\"line\"> </div><div class=\"line\">[ -f /etc/sysconfig/nginx ] &amp;&amp; . /etc/sysconfig/nginx</div><div class=\"line\"> </div><div class=\"line\">lockfile=/var/lock/subsys/nginx</div><div class=\"line\"> </div><div class=\"line\"><span class=\"function\"><span class=\"title\">make_dirs</span></span>() &#123;</div><div class=\"line\">   <span class=\"comment\"># make required directories</span></div><div class=\"line\">   user=`nginx -V 2&gt;&amp;1 | grep <span class=\"string\">\"configure arguments:\"</span> | sed <span class=\"string\">'s/[^*]*--user=\\([^ ]*\\).*/\\1/g'</span> -`</div><div class=\"line\">   options=`<span class=\"variable\">$nginx</span> -V 2&gt;&amp;1 | grep <span class=\"string\">'configure arguments:'</span>`</div><div class=\"line\">   <span class=\"keyword\">for</span> opt <span class=\"keyword\">in</span> <span class=\"variable\">$options</span>; <span class=\"keyword\">do</span></div><div class=\"line\">       <span class=\"keyword\">if</span> [ `<span class=\"built_in\">echo</span> <span class=\"variable\">$opt</span> | grep <span class=\"string\">'.*-temp-path'</span>` ]; <span class=\"keyword\">then</span></div><div class=\"line\">           value=`<span class=\"built_in\">echo</span> <span class=\"variable\">$opt</span> | cut -d <span class=\"string\">\"=\"</span> -f 2`</div><div class=\"line\">           <span class=\"keyword\">if</span> [ ! -d <span class=\"string\">\"<span class=\"variable\">$value</span>\"</span> ]; <span class=\"keyword\">then</span></div><div class=\"line\">               <span class=\"comment\"># echo \"creating\" $value</span></div><div class=\"line\">               mkdir -p <span class=\"variable\">$value</span> &amp;&amp; chown -R <span class=\"variable\">$user</span> <span class=\"variable\">$value</span></div><div class=\"line\">           <span class=\"keyword\">fi</span></div><div class=\"line\">       <span class=\"keyword\">fi</span></div><div class=\"line\">   <span class=\"keyword\">done</span></div><div class=\"line\">&#125;</div><div class=\"line\"> </div><div class=\"line\"><span class=\"function\"><span class=\"title\">start</span></span>() &#123;</div><div class=\"line\">    [ -x <span class=\"variable\">$nginx</span> ] || <span class=\"built_in\">exit</span> 5</div><div class=\"line\">    [ -f <span class=\"variable\">$NGINX_CONF_FILE</span> ] || <span class=\"built_in\">exit</span> 6</div><div class=\"line\">    make_dirs</div><div class=\"line\">    <span class=\"built_in\">echo</span> -n $<span class=\"string\">\"Starting <span class=\"variable\">$prog</span>: \"</span></div><div class=\"line\">    daemon <span class=\"variable\">$nginx</span> -c <span class=\"variable\">$NGINX_CONF_FILE</span></div><div class=\"line\">    retval=$?</div><div class=\"line\">    <span class=\"built_in\">echo</span></div><div class=\"line\">    [ <span class=\"variable\">$retval</span> -eq 0 ] &amp;&amp; touch <span class=\"variable\">$lockfile</span></div><div class=\"line\">    <span class=\"built_in\">return</span> <span class=\"variable\">$retval</span></div><div class=\"line\">&#125;</div><div class=\"line\"> </div><div class=\"line\"><span class=\"function\"><span class=\"title\">stop</span></span>() &#123;</div><div class=\"line\">    <span class=\"built_in\">echo</span> -n $<span class=\"string\">\"Stopping <span class=\"variable\">$prog</span>: \"</span></div><div class=\"line\">    killproc <span class=\"variable\">$prog</span> -QUIT</div><div class=\"line\">    retval=$?</div><div class=\"line\">    <span class=\"built_in\">echo</span></div><div class=\"line\">    [ <span class=\"variable\">$retval</span> -eq 0 ] &amp;&amp; rm -f <span class=\"variable\">$lockfile</span></div><div class=\"line\">    <span class=\"built_in\">return</span> <span class=\"variable\">$retval</span></div><div class=\"line\">&#125;</div><div class=\"line\"> </div><div class=\"line\"><span class=\"function\"><span class=\"title\">restart</span></span>() &#123;</div><div class=\"line\">    configtest || <span class=\"built_in\">return</span> $?</div><div class=\"line\">    stop</div><div class=\"line\">    sleep 1</div><div class=\"line\">    start</div><div class=\"line\">&#125;</div><div class=\"line\"> </div><div class=\"line\"><span class=\"function\"><span class=\"title\">reload</span></span>() &#123;</div><div class=\"line\">    configtest || <span class=\"built_in\">return</span> $?</div><div class=\"line\">    <span class=\"built_in\">echo</span> -n $<span class=\"string\">\"Reloading <span class=\"variable\">$prog</span>: \"</span></div><div class=\"line\">    killproc <span class=\"variable\">$nginx</span> -HUP</div><div class=\"line\">    RETVAL=$?</div><div class=\"line\">    <span class=\"built_in\">echo</span></div><div class=\"line\">&#125;</div><div class=\"line\"> </div><div class=\"line\"><span class=\"function\"><span class=\"title\">force_reload</span></span>() &#123;</div><div class=\"line\">    restart</div><div class=\"line\">&#125;</div><div class=\"line\"> </div><div class=\"line\"><span class=\"function\"><span class=\"title\">configtest</span></span>() &#123;</div><div class=\"line\">  <span class=\"variable\">$nginx</span> -t -c <span class=\"variable\">$NGINX_CONF_FILE</span></div><div class=\"line\">&#125;</div><div class=\"line\"> </div><div class=\"line\"><span class=\"function\"><span class=\"title\">rh_status</span></span>() &#123;</div><div class=\"line\">    status <span class=\"variable\">$prog</span></div><div class=\"line\">&#125;</div><div class=\"line\"> </div><div class=\"line\"><span class=\"function\"><span class=\"title\">rh_status_q</span></span>() &#123;</div><div class=\"line\">    rh_status &gt;/dev/null 2&gt;&amp;1</div><div class=\"line\">&#125;</div><div class=\"line\"> </div><div class=\"line\"><span class=\"keyword\">case</span> <span class=\"string\">\"<span class=\"variable\">$1</span>\"</span> <span class=\"keyword\">in</span></div><div class=\"line\">    start)</div><div class=\"line\">        rh_status_q &amp;&amp; <span class=\"built_in\">exit</span> 0</div><div class=\"line\">        <span class=\"variable\">$1</span></div><div class=\"line\">        ;;</div><div class=\"line\">    stop)</div><div class=\"line\">        rh_status_q || <span class=\"built_in\">exit</span> 0</div><div class=\"line\">        <span class=\"variable\">$1</span></div><div class=\"line\">        ;;</div><div class=\"line\">    restart|configtest)</div><div class=\"line\">        <span class=\"variable\">$1</span></div><div class=\"line\">        ;;</div><div class=\"line\">    reload)</div><div class=\"line\">        rh_status_q || <span class=\"built_in\">exit</span> 7</div><div class=\"line\">        <span class=\"variable\">$1</span></div><div class=\"line\">        ;;</div><div class=\"line\">    force-reload)</div><div class=\"line\">        force_reload</div><div class=\"line\">        ;;</div><div class=\"line\">    status)</div><div class=\"line\">        rh_status</div><div class=\"line\">        ;;</div><div class=\"line\">    condrestart|try-restart)</div><div class=\"line\">        rh_status_q || <span class=\"built_in\">exit</span> 0</div><div class=\"line\">            ;;</div><div class=\"line\">    *)</div><div class=\"line\">        <span class=\"built_in\">echo</span> $<span class=\"string\">\"Usage: <span class=\"variable\">$0</span> &#123;start|stop|status|restart|condrestart|try-restart|reload|force-reload|configtest&#125;\"</span></div><div class=\"line\">        <span class=\"built_in\">exit</span> 2</div><div class=\"line\"><span class=\"keyword\">esac</span></div></pre></td></tr></table></figure></p>\n<p>而后为此脚本赋予执行权限：<br><figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"># chmod +x <span class=\"regexp\">/etc/</span>rc.d<span class=\"regexp\">/init.d/</span>nginx</div></pre></td></tr></table></figure></p>\n<p>添加至服务管理列表，并让其开机自动启动：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> chkconfig --add nginx</span></div><div class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> chkconfig nginx on</span></div></pre></td></tr></table></figure></p>\n<p>而后就可以启动服务并测试了：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> service nginx start</span></div></pre></td></tr></table></figure></p>\n<h2 id=\"php\"><a href=\"#php\" class=\"headerlink\" title=\"php\"></a>php</h2><p>1、下载<br><a href=\"http://php.net/downloads.php\" target=\"_blank\" rel=\"external\">http://php.net/downloads.php</a><br>这里选择5.6.31版本</p>\n<p>2、编译安装<br><figure class=\"highlight brainfuck\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"title\">[</span><span class=\"comment\">root@lnmp</span> <span class=\"comment\">php</span><span class=\"literal\">-</span><span class=\"comment\">5</span><span class=\"string\">.</span><span class=\"comment\">6</span><span class=\"string\">.</span><span class=\"comment\">31</span><span class=\"title\">]</span><span class=\"comment\">#</span>  <span class=\"string\">.</span><span class=\"comment\">/configure</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">prefix=/usr/local/php</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">with</span><span class=\"literal\">-</span><span class=\"comment\">mysql=/usr/local/mysql</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">with</span><span class=\"literal\">-</span><span class=\"comment\">openssl</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">enable</span><span class=\"literal\">-</span><span class=\"comment\">fpm</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">enable</span><span class=\"literal\">-</span><span class=\"comment\">sockets</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">enable</span><span class=\"literal\">-</span><span class=\"comment\">sysvshm</span>  <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">with</span><span class=\"literal\">-</span><span class=\"comment\">mysqli=/usr/local/mysql/bin/mysql_config</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">enable</span><span class=\"literal\">-</span><span class=\"comment\">mbstring</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">with</span><span class=\"literal\">-</span><span class=\"comment\">freetype</span><span class=\"literal\">-</span><span class=\"comment\">dir</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">with</span><span class=\"literal\">-</span><span class=\"comment\">jpeg</span><span class=\"literal\">-</span><span class=\"comment\">dir</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">with</span><span class=\"literal\">-</span><span class=\"comment\">png</span><span class=\"literal\">-</span><span class=\"comment\">dir</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">with</span><span class=\"literal\">-</span><span class=\"comment\">zlib</span><span class=\"literal\">-</span><span class=\"comment\">dir</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">with</span><span class=\"literal\">-</span><span class=\"comment\">libxml</span><span class=\"literal\">-</span><span class=\"comment\">dir=/usr</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">enable</span><span class=\"literal\">-</span><span class=\"comment\">xml</span>  <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">with</span><span class=\"literal\">-</span><span class=\"comment\">mhash</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">with</span><span class=\"literal\">-</span><span class=\"comment\">mcrypt</span>  <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">with</span><span class=\"literal\">-</span><span class=\"comment\">config</span><span class=\"literal\">-</span><span class=\"comment\">file</span><span class=\"literal\">-</span><span class=\"comment\">path=/etc</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">with</span><span class=\"literal\">-</span><span class=\"comment\">config</span><span class=\"literal\">-</span><span class=\"comment\">file</span><span class=\"literal\">-</span><span class=\"comment\">scan</span><span class=\"literal\">-</span><span class=\"comment\">dir=/etc/php</span><span class=\"string\">.</span><span class=\"comment\">d</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">with</span><span class=\"literal\">-</span><span class=\"comment\">bz2</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">with</span><span class=\"literal\">-</span><span class=\"comment\">curl</span> </div><div class=\"line\"></div><div class=\"line\"><span class=\"title\">[</span><span class=\"comment\">root@lnmp</span> <span class=\"comment\">php</span><span class=\"literal\">-</span><span class=\"comment\">5</span><span class=\"string\">.</span><span class=\"comment\">6</span><span class=\"string\">.</span><span class=\"comment\">31</span><span class=\"title\">]</span><span class=\"comment\">#</span> <span class=\"comment\">make</span></div><div class=\"line\"><span class=\"title\">[</span><span class=\"comment\">root@lnmp</span> <span class=\"comment\">php</span><span class=\"literal\">-</span><span class=\"comment\">5</span><span class=\"string\">.</span><span class=\"comment\">6</span><span class=\"string\">.</span><span class=\"comment\">31</span><span class=\"title\">]</span><span class=\"comment\">#</span> <span class=\"comment\">make</span> <span class=\"comment\">test</span>  <span class=\"comment\">#此步骤可以不做，非常耗时间</span></div><div class=\"line\"><span class=\"title\">[</span><span class=\"comment\">root@lnmp</span> <span class=\"comment\">php</span><span class=\"literal\">-</span><span class=\"comment\">5</span><span class=\"string\">.</span><span class=\"comment\">6</span><span class=\"string\">.</span><span class=\"comment\">31</span><span class=\"title\">]</span><span class=\"comment\">#</span> <span class=\"comment\">make</span> <span class=\"comment\">intall</span></div></pre></td></tr></table></figure></p>\n<p>3、为php提供配置文件：<br><figure class=\"highlight autoit\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root<span class=\"symbol\">@lnmp</span> php<span class=\"number\">-5.6</span><span class=\"number\">.31</span>]<span class=\"meta\"># cp php.ini-production /etc/php.ini</span></div></pre></td></tr></table></figure></p>\n<p>4、为php-fpm提供Sysv init脚本，并将其添加至服务列表：<br><figure class=\"highlight autoit\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root<span class=\"symbol\">@lnmp</span> php<span class=\"number\">-5.6</span><span class=\"number\">.31</span>]<span class=\"meta\"># cp sapi/fpm/init.d.php-fpm  /etc/init.d/php-fpm</span></div><div class=\"line\">[root<span class=\"symbol\">@lnmp</span> php<span class=\"number\">-5.6</span><span class=\"number\">.31</span>]<span class=\"meta\"># chmod +x /etc/rc.d/init.d/php-fpm</span></div><div class=\"line\">[root<span class=\"symbol\">@lnmp</span> php<span class=\"number\">-5.6</span><span class=\"number\">.31</span>]<span class=\"meta\"># chkconfig --add php-fpm</span></div><div class=\"line\">[root<span class=\"symbol\">@lnmp</span> php<span class=\"number\">-5.6</span><span class=\"number\">.31</span>]<span class=\"meta\"># chkconfig php-fpm on</span></div></pre></td></tr></table></figure></p>\n<p>5、为php-fpm提供配置文件：<br><figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@lnmp php-<span class=\"number\">5.6</span>.<span class=\"number\">31</span>]# cp <span class=\"regexp\">/usr/</span>local<span class=\"regexp\">/php/</span>etc<span class=\"regexp\">/php-fpm.conf.default /u</span>sr<span class=\"regexp\">/local/</span>php<span class=\"regexp\">/etc/</span>php-fpm.conf</div></pre></td></tr></table></figure></p>\n<p>6、编辑php-fpm的配置文件：<br><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@lnmp php-5.6.31]# vim /usr/local/php/etc/php-fpm.conf</div><div class=\"line\">配置fpm的相关选项为你所需要的值，并启用pid文件（如下最后一行）：</div><div class=\"line\">pm.max_children = 150</div><div class=\"line\">pm.start_servers = 8</div><div class=\"line\">pm.min_spare_servers = 5</div><div class=\"line\">pm.max_spare_servers = 10</div><div class=\"line\">pid = /usr/local/php/var/run/php-fpm.pid </div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 可以设置运行用户和组</span><span class=\"built_in\"></span></div><div class=\"line\">user = nginx<span class=\"built_in\"></span></div><div class=\"line\">group = nginx</div></pre></td></tr></table></figure></p>\n<p>接下来就可以启动php-fpm了：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> service php-fpm start</span></div></pre></td></tr></table></figure></p>\n<p>使用如下命令来验正（如果此命令输出有中几个php-fpm进程就说明启动成功了）：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> ps aux | grep php-fpm</span></div></pre></td></tr></table></figure></p>\n<h2 id=\"整合nginx和php5\"><a href=\"#整合nginx和php5\" class=\"headerlink\" title=\"整合nginx和php5\"></a>整合nginx和php5</h2><p>1、编辑/etc/nginx/nginx.conf，启用如下选项：<br><figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attribute\">location</span> <span class=\"regexp\">~ \\.php$</span> &#123;</div><div class=\"line\">      <span class=\"comment\">#root html;</span></div><div class=\"line\">      <span class=\"attribute\">root</span>   html; <span class=\"comment\">#可以自定义根路径</span></div><div class=\"line\">      <span class=\"attribute\">fastcgi_pass</span> <span class=\"number\">127.0.0.1:9000</span>;</div><div class=\"line\">      <span class=\"attribute\">fastcgi_index</span> index.php;</div><div class=\"line\">      <span class=\"attribute\">include</span> /etc/nginx/fastcgi.conf;</div><div class=\"line\">   &#125;</div></pre></td></tr></table></figure></p>\n<p>并在所支持的主页面格式中添加php格式的主页，类似如下：<br><figure class=\"highlight glsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">location</span> / &#123;</div><div class=\"line\">            root   html; <span class=\"meta\">#可以自定义根路径</span></div><div class=\"line\">            <span class=\"keyword\">index</span>  <span class=\"keyword\">index</span>.php <span class=\"keyword\">index</span>.html <span class=\"keyword\">index</span>.htm;</div><div class=\"line\">        &#125;</div></pre></td></tr></table></figure></p>\n<p>而后重新载入nginx的配置文件：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> service nginx reload</span></div></pre></td></tr></table></figure></p>\n<p>3、在/usr/local/nginx/html新建index.php的测试页面，测试php是否能正常工作：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"># vim /usr/local/nginx/html/index.php</div><div class=\"line\"><span class=\"php\"><span class=\"meta\">&lt;?php</span></span></div><div class=\"line\">  phpinfo();</div><div class=\"line\"><span class=\"meta\">?&gt;</span></div></pre></td></tr></table></figure></p>\n<p>接着就可以通过浏览器访问此测试页面了。</p>\n<h2 id=\"测试php和MySQL联通性\"><a href=\"#测试php和MySQL联通性\" class=\"headerlink\" title=\"测试php和MySQL联通性\"></a>测试php和MySQL联通性</h2><p>在/usr/local/nginx/html新建index2.php的测试页面，测试php是否能正常工作<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"># vim /usr/local/nginx/html/index2.php</div><div class=\"line\"></div><div class=\"line\"><span class=\"php\"><span class=\"meta\">&lt;?php</span></span></div><div class=\"line\">$con=mysql_connect(<span class=\"string\">'127.0.0.1:3306'</span>,<span class=\"string\">'root'</span>,<span class=\"string\">'password'</span>);</div><div class=\"line\">    <span class=\"keyword\">if</span>($con)</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">die</span>(<span class=\"string\">'ok'</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">else</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">die</span>(<span class=\"string\">'Could not connect: '</span> . mysql_error());</div><div class=\"line\">    &#125;</div><div class=\"line\"><span class=\"meta\">?&gt;</span></div></pre></td></tr></table></figure></p>"},{"title":"Python函数定义&调用","abbrlink":"7b381b54","date":"2017-03-26T16:00:00.000Z","_content":"\n为代码块起一个名字，在需要执行代码块时，直接使用函数名调用\n\n## 定义\n```\ndef hello():\n\tprint(\"hello,world!\")\n```\n如上示例:\n使用`def`关键字定义函数\n`hello`为函数名，需要满足Python变量的命名规范\n小括号`()`定义函数参数\n冒号`:`表示函数定义结束\n使用缩进代码块定义函数体\n<!-- more -->\n## 调用\n```\nhello()\n```\n> 使用`函数名()`进行函数调用(执行函数体内代码)\n\n\n\n# 函数返回值\n函数一般会在经过一系列语句处理后为调用者返回执行结果\n```\ndef return_hello():\n\treturn \"hello,world!\"\n\n调用\n>>> rt = return_hello()\n>>> rt\n'hello,world!'\n```\n在函数体内使用`return`关键字为调用者返回执行结果\n使用变量赋值的方式用变量接收函数执行结果\n函数可以有多个返回值(元组类型)，并使用多个变量接收函数返回值\n\n## 参数定义 & 调用（标准调用）\n示例：\n```\ndef add(a,b):\n\tprint(a,'+',b,'=',a+b)\n\n>>> add(1,2)\n1 + 2 = 3\n```\n\n在函数定义语句括号内定义函数参数变量，可设置任意多个\n在函数调用语句括号内将数据传递到函数定义内\n在函数定义多个参数时，在函数调用时需要传递多个数据，数据之间使用逗号分隔，数据按照索引位置依次对应传递给函数定义的参数中\n## 函数调用\n### 关键字参数\n```\ndef add(a,b,c):\n\tprint(a,b,c)\n\n>>> add(1,c=2,b=3)\n```\n在函数调用时使用参数名赋值方式，为参数指定对应的数据\n标准调用和关键字参数调用可混用，标准参数在前，关键字参数在后\n\n\n### 默认参数\n```\n\ndef add(a,b,c=1):\n\tprint(a+b)\n\n>>> add(1,2)\n```\n在定义函数时可以为参数设置默认值，在调用时未设置对应数据时，则使用默认值\n默认参数必须置于函数参数最后\n\n标准参数--关键字参数--默认参数\n\n### 可变参数\n可变参数就是传入的参数个数是可变的，可以是1个、2个到任意个，还可以是0个。\n列表可变参数\n```\ndef test(a,b,*args):\n\tprint('a=',a,'b=',b,'args=',args)\n\n>>> test(1,2)\na= 1 b= 2 args= ()\n>>> test(2,3,4,5,6)\na= 2 b= 3 args= (4, 5, 6)\n```\n> 有上面的实例可以得知，列表可变参数中，列表可变参数返回的是包含多个参数的元组\n\n关键字可变参数\n```\ndef test(a,b,**kargs):\n\tprint('a=',a,'b=',b,'kargs=',kargs)\n\n>>> test(2,3,c=4,d=5)\na= 2 b= 3 kargs= {'c': 4, 'd': 5}\n```\n> 有上面的实例可以得知，关键字可变参数中，关键字参数返回的是包含多个key,value的字典\n\n混用\n```\ndef test(a,b,*args,**kargs):\n\tprint('a=',a,'b=',b,'args=',args,'kargs=',kargs)\n\n>>> test(2,3,111,666,888,c=4,d=5)\na= 2 b= 3 args= (111, 666, 888) kargs= {'c': 4, 'd': 5}\n\n```\n混用时，列表可变参数在前，关键字参数在后\n列表参数和关键字可变参数之间可定义多个变量(Python2.7不支持)\n\n## 忽略返回值\n```\n>>> nums = [1,2,3,4,5,6]\n>>> a,*b,c= nums\n>>> print(a,c)\n1 6\n>>> print(b)\n[2, 3, 4, 5]\n```\n\n## 函数也是变量\n可以将函数赋值给某个变量，此变量和函数名称一样\n函数名称可以传递给其它函数\n实例：\n```\ndef add(a,b):\n\treturn a + b\n>>> add(1,2)\n3\n>>> add2 = add\n>>> add2(2,3)\n5\n\n```\n还可以将函数直接当成参数传递给另一个函数\n实例：\n```\ndef result(a,b,func):\n\tprint('a=',a,'b=',b,'result=',func(a,b))\n\ndef add(a,b):\n\treturn a+b\n\n>>> result(1,2,add)\na= 1 b= 2 result= 3\n\n```\n\n\n# 函数作用域\n在函数中变量的查找顺序为LGB原则\nL local 函数体和参数内\t\t(p_a, p_b, l_a)\nG global 模块内\t\t\t(g_a, g_b)\nB buildints python内置\n\n\n# 传值与传址\n对于基本类型在函数传递时，直接传递值，在函数内修改值不影响函数体外的值\n\n对引用类型在函数传递时，传递数据的地址，在函数内修改地址内的数据会影响函数体外（重新赋值后，则为在函数体内重新定义，与函数外变量指向已不同，不会影响函数体外）\n\n# 匿名函数&sorted&list.sort\nlambda匿名函数\n\t不需要定义函数名称（临时函数）\n\t只做简单运算，并返回值，没有复杂的函数体\n\nPython里的Lambda就是个匿名函数。典型的应用场景是结合sorted,filter,map,reduce等函数，通过闭包的特性，读取函数内部的某个变量，然后做相应简单的处理。\n例：\n```\nlambda x: x * x\n```\n等价于：\n```\ndef f(x):\n  return x * x\n```\n\n实例：\n```\ndef result(a,b,func):\n\tprint('a=',a,'b=',b,'result=',func(a,b))\n\n\n>>> result(1,2,lambda a,b:a+b)\na= 1 b= 2 result= 3\n```\n\nsorted()函数和list.sort()函数：\n相同点：\n\t都可以为list进行排序\n\t参数相同，通过key指定排序的元素，使用reverse指定升序或者降序\n\n区别：\n\tsorted返回一个新的list不影响原list，list.sort在原list上进行排序\n实例：\n```\nnums = [2,1,4,3,6,7,5]\nprint(sorted(nums))\nprint(nums)\n```\n根据第二项排序\n实例：\n```\nnums = [(4,1),(2,2),(5,4),(1,3),(3,5)]\nprint(sorted(nums,key=lambda nums:nums[1]))\n\n结果：\n[(4, 1), (2, 2), (1, 3), (5, 4), (3, 5)]\n```\n\n","source":"_posts/函数.md","raw":"---\ntitle: Python函数定义&调用\ncategories: 实践与总结\ntag: 实践与总结\nabbrlink: 7b381b54\ndate: 2017-03-27 00:00:00\n---\n\n为代码块起一个名字，在需要执行代码块时，直接使用函数名调用\n\n## 定义\n```\ndef hello():\n\tprint(\"hello,world!\")\n```\n如上示例:\n使用`def`关键字定义函数\n`hello`为函数名，需要满足Python变量的命名规范\n小括号`()`定义函数参数\n冒号`:`表示函数定义结束\n使用缩进代码块定义函数体\n<!-- more -->\n## 调用\n```\nhello()\n```\n> 使用`函数名()`进行函数调用(执行函数体内代码)\n\n\n\n# 函数返回值\n函数一般会在经过一系列语句处理后为调用者返回执行结果\n```\ndef return_hello():\n\treturn \"hello,world!\"\n\n调用\n>>> rt = return_hello()\n>>> rt\n'hello,world!'\n```\n在函数体内使用`return`关键字为调用者返回执行结果\n使用变量赋值的方式用变量接收函数执行结果\n函数可以有多个返回值(元组类型)，并使用多个变量接收函数返回值\n\n## 参数定义 & 调用（标准调用）\n示例：\n```\ndef add(a,b):\n\tprint(a,'+',b,'=',a+b)\n\n>>> add(1,2)\n1 + 2 = 3\n```\n\n在函数定义语句括号内定义函数参数变量，可设置任意多个\n在函数调用语句括号内将数据传递到函数定义内\n在函数定义多个参数时，在函数调用时需要传递多个数据，数据之间使用逗号分隔，数据按照索引位置依次对应传递给函数定义的参数中\n## 函数调用\n### 关键字参数\n```\ndef add(a,b,c):\n\tprint(a,b,c)\n\n>>> add(1,c=2,b=3)\n```\n在函数调用时使用参数名赋值方式，为参数指定对应的数据\n标准调用和关键字参数调用可混用，标准参数在前，关键字参数在后\n\n\n### 默认参数\n```\n\ndef add(a,b,c=1):\n\tprint(a+b)\n\n>>> add(1,2)\n```\n在定义函数时可以为参数设置默认值，在调用时未设置对应数据时，则使用默认值\n默认参数必须置于函数参数最后\n\n标准参数--关键字参数--默认参数\n\n### 可变参数\n可变参数就是传入的参数个数是可变的，可以是1个、2个到任意个，还可以是0个。\n列表可变参数\n```\ndef test(a,b,*args):\n\tprint('a=',a,'b=',b,'args=',args)\n\n>>> test(1,2)\na= 1 b= 2 args= ()\n>>> test(2,3,4,5,6)\na= 2 b= 3 args= (4, 5, 6)\n```\n> 有上面的实例可以得知，列表可变参数中，列表可变参数返回的是包含多个参数的元组\n\n关键字可变参数\n```\ndef test(a,b,**kargs):\n\tprint('a=',a,'b=',b,'kargs=',kargs)\n\n>>> test(2,3,c=4,d=5)\na= 2 b= 3 kargs= {'c': 4, 'd': 5}\n```\n> 有上面的实例可以得知，关键字可变参数中，关键字参数返回的是包含多个key,value的字典\n\n混用\n```\ndef test(a,b,*args,**kargs):\n\tprint('a=',a,'b=',b,'args=',args,'kargs=',kargs)\n\n>>> test(2,3,111,666,888,c=4,d=5)\na= 2 b= 3 args= (111, 666, 888) kargs= {'c': 4, 'd': 5}\n\n```\n混用时，列表可变参数在前，关键字参数在后\n列表参数和关键字可变参数之间可定义多个变量(Python2.7不支持)\n\n## 忽略返回值\n```\n>>> nums = [1,2,3,4,5,6]\n>>> a,*b,c= nums\n>>> print(a,c)\n1 6\n>>> print(b)\n[2, 3, 4, 5]\n```\n\n## 函数也是变量\n可以将函数赋值给某个变量，此变量和函数名称一样\n函数名称可以传递给其它函数\n实例：\n```\ndef add(a,b):\n\treturn a + b\n>>> add(1,2)\n3\n>>> add2 = add\n>>> add2(2,3)\n5\n\n```\n还可以将函数直接当成参数传递给另一个函数\n实例：\n```\ndef result(a,b,func):\n\tprint('a=',a,'b=',b,'result=',func(a,b))\n\ndef add(a,b):\n\treturn a+b\n\n>>> result(1,2,add)\na= 1 b= 2 result= 3\n\n```\n\n\n# 函数作用域\n在函数中变量的查找顺序为LGB原则\nL local 函数体和参数内\t\t(p_a, p_b, l_a)\nG global 模块内\t\t\t(g_a, g_b)\nB buildints python内置\n\n\n# 传值与传址\n对于基本类型在函数传递时，直接传递值，在函数内修改值不影响函数体外的值\n\n对引用类型在函数传递时，传递数据的地址，在函数内修改地址内的数据会影响函数体外（重新赋值后，则为在函数体内重新定义，与函数外变量指向已不同，不会影响函数体外）\n\n# 匿名函数&sorted&list.sort\nlambda匿名函数\n\t不需要定义函数名称（临时函数）\n\t只做简单运算，并返回值，没有复杂的函数体\n\nPython里的Lambda就是个匿名函数。典型的应用场景是结合sorted,filter,map,reduce等函数，通过闭包的特性，读取函数内部的某个变量，然后做相应简单的处理。\n例：\n```\nlambda x: x * x\n```\n等价于：\n```\ndef f(x):\n  return x * x\n```\n\n实例：\n```\ndef result(a,b,func):\n\tprint('a=',a,'b=',b,'result=',func(a,b))\n\n\n>>> result(1,2,lambda a,b:a+b)\na= 1 b= 2 result= 3\n```\n\nsorted()函数和list.sort()函数：\n相同点：\n\t都可以为list进行排序\n\t参数相同，通过key指定排序的元素，使用reverse指定升序或者降序\n\n区别：\n\tsorted返回一个新的list不影响原list，list.sort在原list上进行排序\n实例：\n```\nnums = [2,1,4,3,6,7,5]\nprint(sorted(nums))\nprint(nums)\n```\n根据第二项排序\n实例：\n```\nnums = [(4,1),(2,2),(5,4),(1,3),(3,5)]\nprint(sorted(nums,key=lambda nums:nums[1]))\n\n结果：\n[(4, 1), (2, 2), (1, 3), (5, 4), (3, 5)]\n```\n\n","slug":"函数","published":1,"updated":"2017-07-27T13:29:25.791Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5mkehsr002wao944jmc09y3","content":"<p>为代码块起一个名字，在需要执行代码块时，直接使用函数名调用</p>\n<h2 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">hello</span><span class=\"params\">()</span>:</span></div><div class=\"line\">\tprint(<span class=\"string\">\"hello,world!\"</span>)</div></pre></td></tr></table></figure>\n<p>如上示例:<br>使用<code>def</code>关键字定义函数<br><code>hello</code>为函数名，需要满足Python变量的命名规范<br>小括号<code>()</code>定义函数参数<br>冒号<code>:</code>表示函数定义结束<br>使用缩进代码块定义函数体<br><a id=\"more\"></a></p>\n<h2 id=\"调用\"><a href=\"#调用\" class=\"headerlink\" title=\"调用\"></a>调用</h2><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"title\">hello</span><span class=\"params\">()</span></span></div></pre></td></tr></table></figure>\n<blockquote>\n<p>使用<code>函数名()</code>进行函数调用(执行函数体内代码)</p>\n</blockquote>\n<h1 id=\"函数返回值\"><a href=\"#函数返回值\" class=\"headerlink\" title=\"函数返回值\"></a>函数返回值</h1><p>函数一般会在经过一系列语句处理后为调用者返回执行结果<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">return_hello</span><span class=\"params\">()</span></span>:</div><div class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"string\">\"hello,world!\"</span></div><div class=\"line\"></div><div class=\"line\">调用</div><div class=\"line\"><span class=\"meta\">&gt;&gt;</span>&gt; rt = return_hello()</div><div class=\"line\"><span class=\"meta\">&gt;&gt;</span>&gt; rt</div><div class=\"line\"><span class=\"string\">'hello,world!'</span></div></pre></td></tr></table></figure></p>\n<p>在函数体内使用<code>return</code>关键字为调用者返回执行结果<br>使用变量赋值的方式用变量接收函数执行结果<br>函数可以有多个返回值(元组类型)，并使用多个变量接收函数返回值</p>\n<h2 id=\"参数定义-amp-调用（标准调用）\"><a href=\"#参数定义-amp-调用（标准调用）\" class=\"headerlink\" title=\"参数定义 &amp; 调用（标准调用）\"></a>参数定义 &amp; 调用（标准调用）</h2><p>示例：<br><figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">def <span class=\"keyword\">add</span><span class=\"bash\">(a,b):</span></div><div class=\"line\">\tprint(a,<span class=\"string\">'+'</span>,b,<span class=\"string\">'='</span>,a+b)</div><div class=\"line\"></div><div class=\"line\">&gt;&gt;&gt; <span class=\"keyword\">add</span><span class=\"bash\">(1,2)</span></div><div class=\"line\"><span class=\"number\">1</span> + <span class=\"number\">2</span> = <span class=\"number\">3</span></div></pre></td></tr></table></figure></p>\n<p>在函数定义语句括号内定义函数参数变量，可设置任意多个<br>在函数调用语句括号内将数据传递到函数定义内<br>在函数定义多个参数时，在函数调用时需要传递多个数据，数据之间使用逗号分隔，数据按照索引位置依次对应传递给函数定义的参数中</p>\n<h2 id=\"函数调用\"><a href=\"#函数调用\" class=\"headerlink\" title=\"函数调用\"></a>函数调用</h2><h3 id=\"关键字参数\"><a href=\"#关键字参数\" class=\"headerlink\" title=\"关键字参数\"></a>关键字参数</h3><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">def <span class=\"builtin-name\">add</span>(a,b,c):</div><div class=\"line\">\t<span class=\"builtin-name\">print</span>(a,b,c)</div><div class=\"line\"></div><div class=\"line\">&gt;&gt;&gt; <span class=\"builtin-name\">add</span>(1,<span class=\"attribute\">c</span>=2,b=3)</div></pre></td></tr></table></figure>\n<p>在函数调用时使用参数名赋值方式，为参数指定对应的数据<br>标准调用和关键字参数调用可混用，标准参数在前，关键字参数在后</p>\n<h3 id=\"默认参数\"><a href=\"#默认参数\" class=\"headerlink\" title=\"默认参数\"></a>默认参数</h3><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">def <span class=\"builtin-name\">add</span>(a,b,<span class=\"attribute\">c</span>=1):</div><div class=\"line\">\t<span class=\"builtin-name\">print</span>(a+b)</div><div class=\"line\"></div><div class=\"line\">&gt;&gt;&gt; <span class=\"builtin-name\">add</span>(1,2)</div></pre></td></tr></table></figure>\n<p>在定义函数时可以为参数设置默认值，在调用时未设置对应数据时，则使用默认值<br>默认参数必须置于函数参数最后</p>\n<p>标准参数–关键字参数–默认参数</p>\n<h3 id=\"可变参数\"><a href=\"#可变参数\" class=\"headerlink\" title=\"可变参数\"></a>可变参数</h3><p>可变参数就是传入的参数个数是可变的，可以是1个、2个到任意个，还可以是0个。<br>列表可变参数<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">test</span><span class=\"params\">(a,b,*args)</span></span>:</div><div class=\"line\">\tprint(<span class=\"string\">'a='</span>,a,<span class=\"string\">'b='</span>,b,<span class=\"string\">'args='</span>,args)</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">&gt;&gt;</span>&gt; test(<span class=\"number\">1</span>,<span class=\"number\">2</span>)</div><div class=\"line\">a= <span class=\"number\">1</span> b= <span class=\"number\">2</span> args= ()</div><div class=\"line\"><span class=\"meta\">&gt;&gt;</span>&gt; test(<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>)</div><div class=\"line\">a= <span class=\"number\">2</span> b= <span class=\"number\">3</span> args= (<span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>)</div></pre></td></tr></table></figure></p>\n<blockquote>\n<p>有上面的实例可以得知，列表可变参数中，列表可变参数返回的是包含多个参数的元组</p>\n</blockquote>\n<p>关键字可变参数<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">test</span><span class=\"params\">(a,b,**kargs)</span></span>:</div><div class=\"line\">\tprint(<span class=\"string\">'a='</span>,a,<span class=\"string\">'b='</span>,b,<span class=\"string\">'kargs='</span>,kargs)</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">&gt;&gt;</span>&gt; test(<span class=\"number\">2</span>,<span class=\"number\">3</span>,c=<span class=\"number\">4</span>,d=<span class=\"number\">5</span>)</div><div class=\"line\">a= <span class=\"number\">2</span> b= <span class=\"number\">3</span> kargs= &#123;<span class=\"string\">'c'</span>: <span class=\"number\">4</span>, <span class=\"string\">'d'</span>: <span class=\"number\">5</span>&#125;</div></pre></td></tr></table></figure></p>\n<blockquote>\n<p>有上面的实例可以得知，关键字可变参数中，关键字参数返回的是包含多个key,value的字典</p>\n</blockquote>\n<p>混用<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">test</span><span class=\"params\">(a,b,*args,**kargs)</span></span>:</div><div class=\"line\">\tprint(<span class=\"string\">'a='</span>,a,<span class=\"string\">'b='</span>,b,<span class=\"string\">'args='</span>,args,<span class=\"string\">'kargs='</span>,kargs)</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">&gt;&gt;</span>&gt; test(<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">111</span>,<span class=\"number\">666</span>,<span class=\"number\">888</span>,c=<span class=\"number\">4</span>,d=<span class=\"number\">5</span>)</div><div class=\"line\">a= <span class=\"number\">2</span> b= <span class=\"number\">3</span> args= (<span class=\"number\">111</span>, <span class=\"number\">666</span>, <span class=\"number\">888</span>) kargs= &#123;<span class=\"string\">'c'</span>: <span class=\"number\">4</span>, <span class=\"string\">'d'</span>: <span class=\"number\">5</span>&#125;</div></pre></td></tr></table></figure></p>\n<p>混用时，列表可变参数在前，关键字参数在后<br>列表参数和关键字可变参数之间可定义多个变量(Python2.7不支持)</p>\n<h2 id=\"忽略返回值\"><a href=\"#忽略返回值\" class=\"headerlink\" title=\"忽略返回值\"></a>忽略返回值</h2><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt;&gt;&gt; nums = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>]</div><div class=\"line\">&gt;&gt;&gt; a,*b,c= nums</div><div class=\"line\">&gt;&gt;&gt; print(a,c)</div><div class=\"line\"><span class=\"number\">1</span> <span class=\"number\">6</span></div><div class=\"line\">&gt;&gt;&gt; print(b)</div><div class=\"line\">[<span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>]</div></pre></td></tr></table></figure>\n<h2 id=\"函数也是变量\"><a href=\"#函数也是变量\" class=\"headerlink\" title=\"函数也是变量\"></a>函数也是变量</h2><p>可以将函数赋值给某个变量，此变量和函数名称一样<br>函数名称可以传递给其它函数<br>实例：<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">add</span><span class=\"params\">(a,b)</span></span>:</div><div class=\"line\">\t<span class=\"keyword\">return</span> a + b</div><div class=\"line\"><span class=\"meta\">&gt;&gt;</span>&gt; add(<span class=\"number\">1</span>,<span class=\"number\">2</span>)</div><div class=\"line\"><span class=\"number\">3</span></div><div class=\"line\"><span class=\"meta\">&gt;&gt;</span>&gt; add2 = add</div><div class=\"line\"><span class=\"meta\">&gt;&gt;</span>&gt; add2(<span class=\"number\">2</span>,<span class=\"number\">3</span>)</div><div class=\"line\"><span class=\"number\">5</span></div></pre></td></tr></table></figure></p>\n<p>还可以将函数直接当成参数传递给另一个函数<br>实例：<br><figure class=\"highlight livecodeserver\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">def <span class=\"built_in\">result</span>(<span class=\"keyword\">a</span>,b,func):</div><div class=\"line\">\tprint(<span class=\"string\">'a='</span>,<span class=\"keyword\">a</span>,<span class=\"string\">'b='</span>,b,<span class=\"string\">'result='</span>,func(<span class=\"keyword\">a</span>,b))</div><div class=\"line\"></div><div class=\"line\">def <span class=\"built_in\">add</span>(<span class=\"keyword\">a</span>,b):</div><div class=\"line\">\t<span class=\"literal\">return</span> <span class=\"keyword\">a</span>+b</div><div class=\"line\"></div><div class=\"line\">&gt;&gt;&gt; <span class=\"built_in\">result</span>(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"built_in\">add</span>)</div><div class=\"line\"><span class=\"keyword\">a</span>= <span class=\"number\">1</span> b= <span class=\"number\">2</span> <span class=\"built_in\">result</span>= <span class=\"number\">3</span></div></pre></td></tr></table></figure></p>\n<h1 id=\"函数作用域\"><a href=\"#函数作用域\" class=\"headerlink\" title=\"函数作用域\"></a>函数作用域</h1><p>在函数中变量的查找顺序为LGB原则<br>L local 函数体和参数内        (p_a, p_b, l_a)<br>G global 模块内            (g_a, g_b)<br>B buildints python内置</p>\n<h1 id=\"传值与传址\"><a href=\"#传值与传址\" class=\"headerlink\" title=\"传值与传址\"></a>传值与传址</h1><p>对于基本类型在函数传递时，直接传递值，在函数内修改值不影响函数体外的值</p>\n<p>对引用类型在函数传递时，传递数据的地址，在函数内修改地址内的数据会影响函数体外（重新赋值后，则为在函数体内重新定义，与函数外变量指向已不同，不会影响函数体外）</p>\n<h1 id=\"匿名函数-amp-sorted-amp-list-sort\"><a href=\"#匿名函数-amp-sorted-amp-list-sort\" class=\"headerlink\" title=\"匿名函数&amp;sorted&amp;list.sort\"></a>匿名函数&amp;sorted&amp;list.sort</h1><p>lambda匿名函数<br>    不需要定义函数名称（临时函数）<br>    只做简单运算，并返回值，没有复杂的函数体</p>\n<p>Python里的Lambda就是个匿名函数。典型的应用场景是结合sorted,filter,map,reduce等函数，通过闭包的特性，读取函数内部的某个变量，然后做相应简单的处理。<br>例：<br><figure class=\"highlight llvm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">lambda <span class=\"keyword\">x</span>: <span class=\"keyword\">x</span> * <span class=\"keyword\">x</span></div></pre></td></tr></table></figure></p>\n<p>等价于：<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">f</span><span class=\"params\">(x)</span></span>:</div><div class=\"line\">  <span class=\"keyword\">return</span> x * x</div></pre></td></tr></table></figure></p>\n<p>实例：<br><figure class=\"highlight livecodeserver\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">def <span class=\"built_in\">result</span>(<span class=\"keyword\">a</span>,b,func):</div><div class=\"line\">\tprint(<span class=\"string\">'a='</span>,<span class=\"keyword\">a</span>,<span class=\"string\">'b='</span>,b,<span class=\"string\">'result='</span>,func(<span class=\"keyword\">a</span>,b))</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">&gt;&gt;&gt; <span class=\"built_in\">result</span>(<span class=\"number\">1</span>,<span class=\"number\">2</span>,lambda <span class=\"keyword\">a</span>,b:<span class=\"keyword\">a</span>+b)</div><div class=\"line\"><span class=\"keyword\">a</span>= <span class=\"number\">1</span> b= <span class=\"number\">2</span> <span class=\"built_in\">result</span>= <span class=\"number\">3</span></div></pre></td></tr></table></figure></p>\n<p>sorted()函数和list.sort()函数：<br>相同点：<br>    都可以为list进行排序<br>    参数相同，通过key指定排序的元素，使用reverse指定升序或者降序</p>\n<p>区别：<br>    sorted返回一个新的list不影响原list，list.sort在原list上进行排序<br>实例：<br><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">nums = [<span class=\"number\">2</span>,<span class=\"number\">1</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">5</span>]</div><div class=\"line\">print(sorted(nums))</div><div class=\"line\">print(nums)</div></pre></td></tr></table></figure></p>\n<p>根据第二项排序<br>实例：<br><figure class=\"highlight erlang\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">nums = [(<span class=\"number\">4</span>,<span class=\"number\">1</span>),(<span class=\"number\">2</span>,<span class=\"number\">2</span>),(<span class=\"number\">5</span>,<span class=\"number\">4</span>),(<span class=\"number\">1</span>,<span class=\"number\">3</span>),(<span class=\"number\">3</span>,<span class=\"number\">5</span>)]</div><div class=\"line\"><span class=\"function\"><span class=\"title\">print</span><span class=\"params\">(sorted(nums,key=lambda nums:nums[<span class=\"number\">1</span>]))</span></span></div><div class=\"line\"></div><div class=\"line\">结果：</div><div class=\"line\">[<span class=\"params\">(<span class=\"number\">4</span>, <span class=\"number\">1</span>)</span>, <span class=\"params\">(<span class=\"number\">2</span>, <span class=\"number\">2</span>)</span>, <span class=\"params\">(<span class=\"number\">1</span>, <span class=\"number\">3</span>)</span>, <span class=\"params\">(<span class=\"number\">5</span>, <span class=\"number\">4</span>)</span>, <span class=\"params\">(<span class=\"number\">3</span>, <span class=\"number\">5</span>)</span>]</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<p>为代码块起一个名字，在需要执行代码块时，直接使用函数名调用</p>\n<h2 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">hello</span><span class=\"params\">()</span>:</span></div><div class=\"line\">\tprint(<span class=\"string\">\"hello,world!\"</span>)</div></pre></td></tr></table></figure>\n<p>如上示例:<br>使用<code>def</code>关键字定义函数<br><code>hello</code>为函数名，需要满足Python变量的命名规范<br>小括号<code>()</code>定义函数参数<br>冒号<code>:</code>表示函数定义结束<br>使用缩进代码块定义函数体<br>","more":"</p>\n<h2 id=\"调用\"><a href=\"#调用\" class=\"headerlink\" title=\"调用\"></a>调用</h2><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"title\">hello</span><span class=\"params\">()</span></span></div></pre></td></tr></table></figure>\n<blockquote>\n<p>使用<code>函数名()</code>进行函数调用(执行函数体内代码)</p>\n</blockquote>\n<h1 id=\"函数返回值\"><a href=\"#函数返回值\" class=\"headerlink\" title=\"函数返回值\"></a>函数返回值</h1><p>函数一般会在经过一系列语句处理后为调用者返回执行结果<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">return_hello</span><span class=\"params\">()</span></span>:</div><div class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"string\">\"hello,world!\"</span></div><div class=\"line\"></div><div class=\"line\">调用</div><div class=\"line\"><span class=\"meta\">&gt;&gt;</span>&gt; rt = return_hello()</div><div class=\"line\"><span class=\"meta\">&gt;&gt;</span>&gt; rt</div><div class=\"line\"><span class=\"string\">'hello,world!'</span></div></pre></td></tr></table></figure></p>\n<p>在函数体内使用<code>return</code>关键字为调用者返回执行结果<br>使用变量赋值的方式用变量接收函数执行结果<br>函数可以有多个返回值(元组类型)，并使用多个变量接收函数返回值</p>\n<h2 id=\"参数定义-amp-调用（标准调用）\"><a href=\"#参数定义-amp-调用（标准调用）\" class=\"headerlink\" title=\"参数定义 &amp; 调用（标准调用）\"></a>参数定义 &amp; 调用（标准调用）</h2><p>示例：<br><figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">def <span class=\"keyword\">add</span><span class=\"bash\">(a,b):</span></div><div class=\"line\">\tprint(a,<span class=\"string\">'+'</span>,b,<span class=\"string\">'='</span>,a+b)</div><div class=\"line\"></div><div class=\"line\">&gt;&gt;&gt; <span class=\"keyword\">add</span><span class=\"bash\">(1,2)</span></div><div class=\"line\"><span class=\"number\">1</span> + <span class=\"number\">2</span> = <span class=\"number\">3</span></div></pre></td></tr></table></figure></p>\n<p>在函数定义语句括号内定义函数参数变量，可设置任意多个<br>在函数调用语句括号内将数据传递到函数定义内<br>在函数定义多个参数时，在函数调用时需要传递多个数据，数据之间使用逗号分隔，数据按照索引位置依次对应传递给函数定义的参数中</p>\n<h2 id=\"函数调用\"><a href=\"#函数调用\" class=\"headerlink\" title=\"函数调用\"></a>函数调用</h2><h3 id=\"关键字参数\"><a href=\"#关键字参数\" class=\"headerlink\" title=\"关键字参数\"></a>关键字参数</h3><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">def <span class=\"builtin-name\">add</span>(a,b,c):</div><div class=\"line\">\t<span class=\"builtin-name\">print</span>(a,b,c)</div><div class=\"line\"></div><div class=\"line\">&gt;&gt;&gt; <span class=\"builtin-name\">add</span>(1,<span class=\"attribute\">c</span>=2,b=3)</div></pre></td></tr></table></figure>\n<p>在函数调用时使用参数名赋值方式，为参数指定对应的数据<br>标准调用和关键字参数调用可混用，标准参数在前，关键字参数在后</p>\n<h3 id=\"默认参数\"><a href=\"#默认参数\" class=\"headerlink\" title=\"默认参数\"></a>默认参数</h3><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">def <span class=\"builtin-name\">add</span>(a,b,<span class=\"attribute\">c</span>=1):</div><div class=\"line\">\t<span class=\"builtin-name\">print</span>(a+b)</div><div class=\"line\"></div><div class=\"line\">&gt;&gt;&gt; <span class=\"builtin-name\">add</span>(1,2)</div></pre></td></tr></table></figure>\n<p>在定义函数时可以为参数设置默认值，在调用时未设置对应数据时，则使用默认值<br>默认参数必须置于函数参数最后</p>\n<p>标准参数–关键字参数–默认参数</p>\n<h3 id=\"可变参数\"><a href=\"#可变参数\" class=\"headerlink\" title=\"可变参数\"></a>可变参数</h3><p>可变参数就是传入的参数个数是可变的，可以是1个、2个到任意个，还可以是0个。<br>列表可变参数<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">test</span><span class=\"params\">(a,b,*args)</span></span>:</div><div class=\"line\">\tprint(<span class=\"string\">'a='</span>,a,<span class=\"string\">'b='</span>,b,<span class=\"string\">'args='</span>,args)</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">&gt;&gt;</span>&gt; test(<span class=\"number\">1</span>,<span class=\"number\">2</span>)</div><div class=\"line\">a= <span class=\"number\">1</span> b= <span class=\"number\">2</span> args= ()</div><div class=\"line\"><span class=\"meta\">&gt;&gt;</span>&gt; test(<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>)</div><div class=\"line\">a= <span class=\"number\">2</span> b= <span class=\"number\">3</span> args= (<span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>)</div></pre></td></tr></table></figure></p>\n<blockquote>\n<p>有上面的实例可以得知，列表可变参数中，列表可变参数返回的是包含多个参数的元组</p>\n</blockquote>\n<p>关键字可变参数<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">test</span><span class=\"params\">(a,b,**kargs)</span></span>:</div><div class=\"line\">\tprint(<span class=\"string\">'a='</span>,a,<span class=\"string\">'b='</span>,b,<span class=\"string\">'kargs='</span>,kargs)</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">&gt;&gt;</span>&gt; test(<span class=\"number\">2</span>,<span class=\"number\">3</span>,c=<span class=\"number\">4</span>,d=<span class=\"number\">5</span>)</div><div class=\"line\">a= <span class=\"number\">2</span> b= <span class=\"number\">3</span> kargs= &#123;<span class=\"string\">'c'</span>: <span class=\"number\">4</span>, <span class=\"string\">'d'</span>: <span class=\"number\">5</span>&#125;</div></pre></td></tr></table></figure></p>\n<blockquote>\n<p>有上面的实例可以得知，关键字可变参数中，关键字参数返回的是包含多个key,value的字典</p>\n</blockquote>\n<p>混用<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">test</span><span class=\"params\">(a,b,*args,**kargs)</span></span>:</div><div class=\"line\">\tprint(<span class=\"string\">'a='</span>,a,<span class=\"string\">'b='</span>,b,<span class=\"string\">'args='</span>,args,<span class=\"string\">'kargs='</span>,kargs)</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">&gt;&gt;</span>&gt; test(<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">111</span>,<span class=\"number\">666</span>,<span class=\"number\">888</span>,c=<span class=\"number\">4</span>,d=<span class=\"number\">5</span>)</div><div class=\"line\">a= <span class=\"number\">2</span> b= <span class=\"number\">3</span> args= (<span class=\"number\">111</span>, <span class=\"number\">666</span>, <span class=\"number\">888</span>) kargs= &#123;<span class=\"string\">'c'</span>: <span class=\"number\">4</span>, <span class=\"string\">'d'</span>: <span class=\"number\">5</span>&#125;</div></pre></td></tr></table></figure></p>\n<p>混用时，列表可变参数在前，关键字参数在后<br>列表参数和关键字可变参数之间可定义多个变量(Python2.7不支持)</p>\n<h2 id=\"忽略返回值\"><a href=\"#忽略返回值\" class=\"headerlink\" title=\"忽略返回值\"></a>忽略返回值</h2><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt;&gt;&gt; nums = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>]</div><div class=\"line\">&gt;&gt;&gt; a,*b,c= nums</div><div class=\"line\">&gt;&gt;&gt; print(a,c)</div><div class=\"line\"><span class=\"number\">1</span> <span class=\"number\">6</span></div><div class=\"line\">&gt;&gt;&gt; print(b)</div><div class=\"line\">[<span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>]</div></pre></td></tr></table></figure>\n<h2 id=\"函数也是变量\"><a href=\"#函数也是变量\" class=\"headerlink\" title=\"函数也是变量\"></a>函数也是变量</h2><p>可以将函数赋值给某个变量，此变量和函数名称一样<br>函数名称可以传递给其它函数<br>实例：<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">add</span><span class=\"params\">(a,b)</span></span>:</div><div class=\"line\">\t<span class=\"keyword\">return</span> a + b</div><div class=\"line\"><span class=\"meta\">&gt;&gt;</span>&gt; add(<span class=\"number\">1</span>,<span class=\"number\">2</span>)</div><div class=\"line\"><span class=\"number\">3</span></div><div class=\"line\"><span class=\"meta\">&gt;&gt;</span>&gt; add2 = add</div><div class=\"line\"><span class=\"meta\">&gt;&gt;</span>&gt; add2(<span class=\"number\">2</span>,<span class=\"number\">3</span>)</div><div class=\"line\"><span class=\"number\">5</span></div></pre></td></tr></table></figure></p>\n<p>还可以将函数直接当成参数传递给另一个函数<br>实例：<br><figure class=\"highlight livecodeserver\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">def <span class=\"built_in\">result</span>(<span class=\"keyword\">a</span>,b,func):</div><div class=\"line\">\tprint(<span class=\"string\">'a='</span>,<span class=\"keyword\">a</span>,<span class=\"string\">'b='</span>,b,<span class=\"string\">'result='</span>,func(<span class=\"keyword\">a</span>,b))</div><div class=\"line\"></div><div class=\"line\">def <span class=\"built_in\">add</span>(<span class=\"keyword\">a</span>,b):</div><div class=\"line\">\t<span class=\"literal\">return</span> <span class=\"keyword\">a</span>+b</div><div class=\"line\"></div><div class=\"line\">&gt;&gt;&gt; <span class=\"built_in\">result</span>(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"built_in\">add</span>)</div><div class=\"line\"><span class=\"keyword\">a</span>= <span class=\"number\">1</span> b= <span class=\"number\">2</span> <span class=\"built_in\">result</span>= <span class=\"number\">3</span></div></pre></td></tr></table></figure></p>\n<h1 id=\"函数作用域\"><a href=\"#函数作用域\" class=\"headerlink\" title=\"函数作用域\"></a>函数作用域</h1><p>在函数中变量的查找顺序为LGB原则<br>L local 函数体和参数内        (p_a, p_b, l_a)<br>G global 模块内            (g_a, g_b)<br>B buildints python内置</p>\n<h1 id=\"传值与传址\"><a href=\"#传值与传址\" class=\"headerlink\" title=\"传值与传址\"></a>传值与传址</h1><p>对于基本类型在函数传递时，直接传递值，在函数内修改值不影响函数体外的值</p>\n<p>对引用类型在函数传递时，传递数据的地址，在函数内修改地址内的数据会影响函数体外（重新赋值后，则为在函数体内重新定义，与函数外变量指向已不同，不会影响函数体外）</p>\n<h1 id=\"匿名函数-amp-sorted-amp-list-sort\"><a href=\"#匿名函数-amp-sorted-amp-list-sort\" class=\"headerlink\" title=\"匿名函数&amp;sorted&amp;list.sort\"></a>匿名函数&amp;sorted&amp;list.sort</h1><p>lambda匿名函数<br>    不需要定义函数名称（临时函数）<br>    只做简单运算，并返回值，没有复杂的函数体</p>\n<p>Python里的Lambda就是个匿名函数。典型的应用场景是结合sorted,filter,map,reduce等函数，通过闭包的特性，读取函数内部的某个变量，然后做相应简单的处理。<br>例：<br><figure class=\"highlight llvm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">lambda <span class=\"keyword\">x</span>: <span class=\"keyword\">x</span> * <span class=\"keyword\">x</span></div></pre></td></tr></table></figure></p>\n<p>等价于：<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">f</span><span class=\"params\">(x)</span></span>:</div><div class=\"line\">  <span class=\"keyword\">return</span> x * x</div></pre></td></tr></table></figure></p>\n<p>实例：<br><figure class=\"highlight livecodeserver\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">def <span class=\"built_in\">result</span>(<span class=\"keyword\">a</span>,b,func):</div><div class=\"line\">\tprint(<span class=\"string\">'a='</span>,<span class=\"keyword\">a</span>,<span class=\"string\">'b='</span>,b,<span class=\"string\">'result='</span>,func(<span class=\"keyword\">a</span>,b))</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">&gt;&gt;&gt; <span class=\"built_in\">result</span>(<span class=\"number\">1</span>,<span class=\"number\">2</span>,lambda <span class=\"keyword\">a</span>,b:<span class=\"keyword\">a</span>+b)</div><div class=\"line\"><span class=\"keyword\">a</span>= <span class=\"number\">1</span> b= <span class=\"number\">2</span> <span class=\"built_in\">result</span>= <span class=\"number\">3</span></div></pre></td></tr></table></figure></p>\n<p>sorted()函数和list.sort()函数：<br>相同点：<br>    都可以为list进行排序<br>    参数相同，通过key指定排序的元素，使用reverse指定升序或者降序</p>\n<p>区别：<br>    sorted返回一个新的list不影响原list，list.sort在原list上进行排序<br>实例：<br><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">nums = [<span class=\"number\">2</span>,<span class=\"number\">1</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">5</span>]</div><div class=\"line\">print(sorted(nums))</div><div class=\"line\">print(nums)</div></pre></td></tr></table></figure></p>\n<p>根据第二项排序<br>实例：<br><figure class=\"highlight erlang\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">nums = [(<span class=\"number\">4</span>,<span class=\"number\">1</span>),(<span class=\"number\">2</span>,<span class=\"number\">2</span>),(<span class=\"number\">5</span>,<span class=\"number\">4</span>),(<span class=\"number\">1</span>,<span class=\"number\">3</span>),(<span class=\"number\">3</span>,<span class=\"number\">5</span>)]</div><div class=\"line\"><span class=\"function\"><span class=\"title\">print</span><span class=\"params\">(sorted(nums,key=lambda nums:nums[<span class=\"number\">1</span>]))</span></span></div><div class=\"line\"></div><div class=\"line\">结果：</div><div class=\"line\">[<span class=\"params\">(<span class=\"number\">4</span>, <span class=\"number\">1</span>)</span>, <span class=\"params\">(<span class=\"number\">2</span>, <span class=\"number\">2</span>)</span>, <span class=\"params\">(<span class=\"number\">1</span>, <span class=\"number\">3</span>)</span>, <span class=\"params\">(<span class=\"number\">5</span>, <span class=\"number\">4</span>)</span>, <span class=\"params\">(<span class=\"number\">3</span>, <span class=\"number\">5</span>)</span>]</div></pre></td></tr></table></figure></p>"},{"title":"samba服务器搭建","abbrlink":"eb0f8299","date":"2017-03-26T16:00:00.000Z","_content":"### 安装\n```\n~]# yum -y install samba samba-common samba-client \n```\n\n### samba服务器访问过慢的问题\n```\n具体表现：\n\tsamba服务正常启动，win下可以访问，打开时要等待很久\n解决办法：\n\t1、查看/etc/sysconfig/network中hostname\n\t2、编辑/etc/hosts文件，添加hostname的值到127.0.0.1\n\t3、重启服务或服务器\n```\n<!-- more -->\n### 配置\n\n#### samba配置\n\n```\n~]# vim /etc/samba/smb.conf\n[global]\n\tworkgroup = WORKGROUP\n\tserver string = Samba Server Version %v\n\tlog file = /var/log/samba/log.%m\n\tmax log size = 50\n\tsecurity = user\n\tpassdb backend = tdbsam\n\tload printers = yes\n\thosts allow = 192.168.1.\n\tcups options = raw\n\n[公共]\n    comment = This is a public directory\n    path = /data/public\n    public = yes\n    writable = yes\n    create mask = 0755\n    directory mask = 0755\n\n[开发组]\n    path = /data/kaifazu\n    valid users = @kaifazu\n    group = kaifazu\n\tread list = @kaifazu\n    write list = @kaifazu\n\tcreate mode = 0664\n\tdirectory mode = 0775\n\n[测试组]\n    path = /data/ceshizu\n    valid users = @ceshizu\n    group = @ceshizu\n    write list = @ceshizu\n\tcreate mode = 0664\n\tdirectory mode = 0775\n\n```\n#### 组配置\n```\nkaifazu:x:531:zhangsan,lisi\nceshizu:x:532:wangwu\n\n```\n\n### samba服务器磁盘检测脚本\n```\n#!/bin/bash\nfunction fun_chksize() \n{\n    # $1 file_name\n    # $2 file_size\n    # $3 max_size\n    # $4 mail_addr\n    # switch_file_size=file_size/1024  将K转换为M，方便阅读\n    if [ $2 -ge $3 ];then\n        switch_file_size=$(($2/1024))\n        echo -n -e \"samba服务器 ${1} 空间已使用${switch_file_size}M\\n\" | mail -s \"samba服务器空间使用告警\"  $4\n    fi\n}\n#定义一些变量\nsmb_dir=/data\nip=`ifconfig | grep Bcast | awk '{print $2}' | awk -F: '{print $2}'` #IP地址\nadmin_mail_addr=\"123456@qq.com\" #管理员邮箱\ntotal_max_size=1024000 #总空间最大可用1G，单位K\ntotal_use_size=`du -s $smb_dir | awk '{print $1}'` #总使用大小，单位K\nmax_size=10240 #子目录默认最大可用10M  \npublic_max_size=10240 #public最大可用10M\n#检测总目录大小\nfun_chksize $smb_dir $total_use_size $total_max_size $admin_mail_addr\n#检测子目录大小\nfor list1 in ${smb_dir}/*; do\n    file_list=`basename $list1` #列表\n    cd $smb_dir\n    file_size=`du -s $file_list | awk '{print $1}'` #大小，单位K\n    switch_file_size=$(($file_size/1024)) #将K转换为M\n    file_name=`du -s $file_list | awk '{print $2}'` #文件名或目录名\n    case $file_name in\n        public)\n\t    fun_chksize $file_name $file_size $public_max_size $admin_mail_addr\n\t    ;;\n\t    kaifazu)\n\t    fun_chksize $file_name $file_size $max_size $admin_mail_addr\n\t    ;;\n        *)\n\t    fun_chksize $file_name $file_size $max_size $admin_mail_addr\n\t    ;;\n    esac\ndone\n```\n\n","source":"_posts/samba.md","raw":"---\ntitle: samba服务器搭建\ncategories: 实践与总结\ntag: 实践与总结\nabbrlink: eb0f8299\ndate: 2017-03-27 00:00:00\n---\n### 安装\n```\n~]# yum -y install samba samba-common samba-client \n```\n\n### samba服务器访问过慢的问题\n```\n具体表现：\n\tsamba服务正常启动，win下可以访问，打开时要等待很久\n解决办法：\n\t1、查看/etc/sysconfig/network中hostname\n\t2、编辑/etc/hosts文件，添加hostname的值到127.0.0.1\n\t3、重启服务或服务器\n```\n<!-- more -->\n### 配置\n\n#### samba配置\n\n```\n~]# vim /etc/samba/smb.conf\n[global]\n\tworkgroup = WORKGROUP\n\tserver string = Samba Server Version %v\n\tlog file = /var/log/samba/log.%m\n\tmax log size = 50\n\tsecurity = user\n\tpassdb backend = tdbsam\n\tload printers = yes\n\thosts allow = 192.168.1.\n\tcups options = raw\n\n[公共]\n    comment = This is a public directory\n    path = /data/public\n    public = yes\n    writable = yes\n    create mask = 0755\n    directory mask = 0755\n\n[开发组]\n    path = /data/kaifazu\n    valid users = @kaifazu\n    group = kaifazu\n\tread list = @kaifazu\n    write list = @kaifazu\n\tcreate mode = 0664\n\tdirectory mode = 0775\n\n[测试组]\n    path = /data/ceshizu\n    valid users = @ceshizu\n    group = @ceshizu\n    write list = @ceshizu\n\tcreate mode = 0664\n\tdirectory mode = 0775\n\n```\n#### 组配置\n```\nkaifazu:x:531:zhangsan,lisi\nceshizu:x:532:wangwu\n\n```\n\n### samba服务器磁盘检测脚本\n```\n#!/bin/bash\nfunction fun_chksize() \n{\n    # $1 file_name\n    # $2 file_size\n    # $3 max_size\n    # $4 mail_addr\n    # switch_file_size=file_size/1024  将K转换为M，方便阅读\n    if [ $2 -ge $3 ];then\n        switch_file_size=$(($2/1024))\n        echo -n -e \"samba服务器 ${1} 空间已使用${switch_file_size}M\\n\" | mail -s \"samba服务器空间使用告警\"  $4\n    fi\n}\n#定义一些变量\nsmb_dir=/data\nip=`ifconfig | grep Bcast | awk '{print $2}' | awk -F: '{print $2}'` #IP地址\nadmin_mail_addr=\"123456@qq.com\" #管理员邮箱\ntotal_max_size=1024000 #总空间最大可用1G，单位K\ntotal_use_size=`du -s $smb_dir | awk '{print $1}'` #总使用大小，单位K\nmax_size=10240 #子目录默认最大可用10M  \npublic_max_size=10240 #public最大可用10M\n#检测总目录大小\nfun_chksize $smb_dir $total_use_size $total_max_size $admin_mail_addr\n#检测子目录大小\nfor list1 in ${smb_dir}/*; do\n    file_list=`basename $list1` #列表\n    cd $smb_dir\n    file_size=`du -s $file_list | awk '{print $1}'` #大小，单位K\n    switch_file_size=$(($file_size/1024)) #将K转换为M\n    file_name=`du -s $file_list | awk '{print $2}'` #文件名或目录名\n    case $file_name in\n        public)\n\t    fun_chksize $file_name $file_size $public_max_size $admin_mail_addr\n\t    ;;\n\t    kaifazu)\n\t    fun_chksize $file_name $file_size $max_size $admin_mail_addr\n\t    ;;\n        *)\n\t    fun_chksize $file_name $file_size $max_size $admin_mail_addr\n\t    ;;\n    esac\ndone\n```\n\n","slug":"samba","published":1,"updated":"2017-07-28T13:18:59.253Z","_id":"cj5mkehss002zao94ttg8yet3","comments":1,"layout":"post","photos":[],"link":"","content":"<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">~]<span class=\"comment\"># yum -y install samba samba-common samba-client</span></div></pre></td></tr></table></figure>\n<h3 id=\"samba服务器访问过慢的问题\"><a href=\"#samba服务器访问过慢的问题\" class=\"headerlink\" title=\"samba服务器访问过慢的问题\"></a>samba服务器访问过慢的问题</h3><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">具体表现：</div><div class=\"line\">\tsamba服务正常启动，win下可以访问，打开时要等待很久</div><div class=\"line\">解决办法：</div><div class=\"line\">\t<span class=\"number\">1</span>、查看/etc/sysconfig/network中hostname</div><div class=\"line\">\t<span class=\"number\">2</span>、编辑/etc/hosts文件，添加hostname的值到<span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span></div><div class=\"line\">\t<span class=\"number\">3</span>、重启服务或服务器</div></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h3 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h3><h4 id=\"samba配置\"><a href=\"#samba配置\" class=\"headerlink\" title=\"samba配置\"></a>samba配置</h4><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div></pre></td><td class=\"code\"><pre><div class=\"line\">~]# vim /etc/samba/smb.conf</div><div class=\"line\">[global]</div><div class=\"line\">\tworkgroup = WORKGROUP</div><div class=\"line\"><span class=\"built_in\">\tserver </span>string = Samba<span class=\"built_in\"> Server </span>Version %v</div><div class=\"line\">\tlog file = /var/log/samba/log.%m</div><div class=\"line\">\tmax log size = 50</div><div class=\"line\">\tsecurity =<span class=\"built_in\"> user</span></div><div class=\"line\">\tpassdb backend = tdbsam</div><div class=\"line\">\tload printers = <span class=\"literal\">yes</span></div><div class=\"line\">\thosts allow = 192.168.1.</div><div class=\"line\">\tcups options =<span class=\"built_in\"> raw</span></div><div class=\"line\"></div><div class=\"line\">[公共]</div><div class=\"line\">    comment = This is a public directory</div><div class=\"line\">    path = /data/public</div><div class=\"line\">    public = <span class=\"literal\">yes</span></div><div class=\"line\">    writable = <span class=\"literal\">yes</span></div><div class=\"line\">    create mask = 0755</div><div class=\"line\">    directory mask = 0755</div><div class=\"line\"></div><div class=\"line\">[开发组]</div><div class=\"line\">    path = /data/kaifazu</div><div class=\"line\">    valid<span class=\"built_in\"> users </span>= @kaifazu</div><div class=\"line\">   <span class=\"built_in\"> group </span>= kaifazu</div><div class=\"line\">\tread list = @kaifazu</div><div class=\"line\">    write list = @kaifazu</div><div class=\"line\">\tcreate mode = 0664</div><div class=\"line\">\tdirectory mode = 0775</div><div class=\"line\"></div><div class=\"line\">[测试组]</div><div class=\"line\">    path = /data/ceshizu</div><div class=\"line\">    valid<span class=\"built_in\"> users </span>= @ceshizu</div><div class=\"line\">   <span class=\"built_in\"> group </span>= @ceshizu</div><div class=\"line\">    write list = @ceshizu</div><div class=\"line\">\tcreate mode = 0664</div><div class=\"line\">\tdirectory mode = 0775</div></pre></td></tr></table></figure>\n<h4 id=\"组配置\"><a href=\"#组配置\" class=\"headerlink\" title=\"组配置\"></a>组配置</h4><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">kaifazu</span><span class=\"selector-pseudo\">:x</span><span class=\"selector-pseudo\">:531</span><span class=\"selector-pseudo\">:zhangsan</span>,<span class=\"selector-tag\">lisi</span></div><div class=\"line\"><span class=\"selector-tag\">ceshizu</span><span class=\"selector-pseudo\">:x</span><span class=\"selector-pseudo\">:532</span><span class=\"selector-pseudo\">:wangwu</span></div></pre></td></tr></table></figure>\n<h3 id=\"samba服务器磁盘检测脚本\"><a href=\"#samba服务器磁盘检测脚本\" class=\"headerlink\" title=\"samba服务器磁盘检测脚本\"></a>samba服务器磁盘检测脚本</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#!/bin/bash</span></div><div class=\"line\"><span class=\"keyword\">function</span> <span class=\"function\"><span class=\"title\">fun_chksize</span></span>() </div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"comment\"># $1 file_name</span></div><div class=\"line\">    <span class=\"comment\"># $2 file_size</span></div><div class=\"line\">    <span class=\"comment\"># $3 max_size</span></div><div class=\"line\">    <span class=\"comment\"># $4 mail_addr</span></div><div class=\"line\">    <span class=\"comment\"># switch_file_size=file_size/1024  将K转换为M，方便阅读</span></div><div class=\"line\">    <span class=\"keyword\">if</span> [ <span class=\"variable\">$2</span> -ge <span class=\"variable\">$3</span> ];<span class=\"keyword\">then</span></div><div class=\"line\">        switch_file_size=$((<span class=\"variable\">$2</span>/1024))</div><div class=\"line\">        <span class=\"built_in\">echo</span> -n -e <span class=\"string\">\"samba服务器 <span class=\"variable\">$&#123;1&#125;</span> 空间已使用<span class=\"variable\">$&#123;switch_file_size&#125;</span>M\\n\"</span> | mail -s <span class=\"string\">\"samba服务器空间使用告警\"</span>  <span class=\"variable\">$4</span></div><div class=\"line\">    <span class=\"keyword\">fi</span></div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\">#定义一些变量</span></div><div class=\"line\">smb_dir=/data</div><div class=\"line\">ip=`ifconfig | grep Bcast | awk <span class=\"string\">'&#123;print $2&#125;'</span> | awk -F: <span class=\"string\">'&#123;print $2&#125;'</span>` <span class=\"comment\">#IP地址</span></div><div class=\"line\">admin_mail_addr=<span class=\"string\">\"123456@qq.com\"</span> <span class=\"comment\">#管理员邮箱</span></div><div class=\"line\">total_max_size=1024000 <span class=\"comment\">#总空间最大可用1G，单位K</span></div><div class=\"line\">total_use_size=`du -s <span class=\"variable\">$smb_dir</span> | awk <span class=\"string\">'&#123;print $1&#125;'</span>` <span class=\"comment\">#总使用大小，单位K</span></div><div class=\"line\">max_size=10240 <span class=\"comment\">#子目录默认最大可用10M  </span></div><div class=\"line\">public_max_size=10240 <span class=\"comment\">#public最大可用10M</span></div><div class=\"line\"><span class=\"comment\">#检测总目录大小</span></div><div class=\"line\">fun_chksize <span class=\"variable\">$smb_dir</span> <span class=\"variable\">$total_use_size</span> <span class=\"variable\">$total_max_size</span> <span class=\"variable\">$admin_mail_addr</span></div><div class=\"line\"><span class=\"comment\">#检测子目录大小</span></div><div class=\"line\"><span class=\"keyword\">for</span> list1 <span class=\"keyword\">in</span> <span class=\"variable\">$&#123;smb_dir&#125;</span>/*; <span class=\"keyword\">do</span></div><div class=\"line\">    file_list=`basename <span class=\"variable\">$list1</span>` <span class=\"comment\">#列表</span></div><div class=\"line\">    <span class=\"built_in\">cd</span> <span class=\"variable\">$smb_dir</span></div><div class=\"line\">    file_size=`du -s <span class=\"variable\">$file_list</span> | awk <span class=\"string\">'&#123;print $1&#125;'</span>` <span class=\"comment\">#大小，单位K</span></div><div class=\"line\">    switch_file_size=$((<span class=\"variable\">$file_size</span>/1024)) <span class=\"comment\">#将K转换为M</span></div><div class=\"line\">    file_name=`du -s <span class=\"variable\">$file_list</span> | awk <span class=\"string\">'&#123;print $2&#125;'</span>` <span class=\"comment\">#文件名或目录名</span></div><div class=\"line\">    <span class=\"keyword\">case</span> <span class=\"variable\">$file_name</span> <span class=\"keyword\">in</span></div><div class=\"line\">        public)</div><div class=\"line\">\t    fun_chksize <span class=\"variable\">$file_name</span> <span class=\"variable\">$file_size</span> <span class=\"variable\">$public_max_size</span> <span class=\"variable\">$admin_mail_addr</span></div><div class=\"line\">\t    ;;</div><div class=\"line\">\t    kaifazu)</div><div class=\"line\">\t    fun_chksize <span class=\"variable\">$file_name</span> <span class=\"variable\">$file_size</span> <span class=\"variable\">$max_size</span> <span class=\"variable\">$admin_mail_addr</span></div><div class=\"line\">\t    ;;</div><div class=\"line\">        *)</div><div class=\"line\">\t    fun_chksize <span class=\"variable\">$file_name</span> <span class=\"variable\">$file_size</span> <span class=\"variable\">$max_size</span> <span class=\"variable\">$admin_mail_addr</span></div><div class=\"line\">\t    ;;</div><div class=\"line\">    <span class=\"keyword\">esac</span></div><div class=\"line\"><span class=\"keyword\">done</span></div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">~]<span class=\"comment\"># yum -y install samba samba-common samba-client</span></div></pre></td></tr></table></figure>\n<h3 id=\"samba服务器访问过慢的问题\"><a href=\"#samba服务器访问过慢的问题\" class=\"headerlink\" title=\"samba服务器访问过慢的问题\"></a>samba服务器访问过慢的问题</h3><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">具体表现：</div><div class=\"line\">\tsamba服务正常启动，win下可以访问，打开时要等待很久</div><div class=\"line\">解决办法：</div><div class=\"line\">\t<span class=\"number\">1</span>、查看/etc/sysconfig/network中hostname</div><div class=\"line\">\t<span class=\"number\">2</span>、编辑/etc/hosts文件，添加hostname的值到<span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span></div><div class=\"line\">\t<span class=\"number\">3</span>、重启服务或服务器</div></pre></td></tr></table></figure>","more":"<h3 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h3><h4 id=\"samba配置\"><a href=\"#samba配置\" class=\"headerlink\" title=\"samba配置\"></a>samba配置</h4><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div></pre></td><td class=\"code\"><pre><div class=\"line\">~]# vim /etc/samba/smb.conf</div><div class=\"line\">[global]</div><div class=\"line\">\tworkgroup = WORKGROUP</div><div class=\"line\"><span class=\"built_in\">\tserver </span>string = Samba<span class=\"built_in\"> Server </span>Version %v</div><div class=\"line\">\tlog file = /var/log/samba/log.%m</div><div class=\"line\">\tmax log size = 50</div><div class=\"line\">\tsecurity =<span class=\"built_in\"> user</span></div><div class=\"line\">\tpassdb backend = tdbsam</div><div class=\"line\">\tload printers = <span class=\"literal\">yes</span></div><div class=\"line\">\thosts allow = 192.168.1.</div><div class=\"line\">\tcups options =<span class=\"built_in\"> raw</span></div><div class=\"line\"></div><div class=\"line\">[公共]</div><div class=\"line\">    comment = This is a public directory</div><div class=\"line\">    path = /data/public</div><div class=\"line\">    public = <span class=\"literal\">yes</span></div><div class=\"line\">    writable = <span class=\"literal\">yes</span></div><div class=\"line\">    create mask = 0755</div><div class=\"line\">    directory mask = 0755</div><div class=\"line\"></div><div class=\"line\">[开发组]</div><div class=\"line\">    path = /data/kaifazu</div><div class=\"line\">    valid<span class=\"built_in\"> users </span>= @kaifazu</div><div class=\"line\">   <span class=\"built_in\"> group </span>= kaifazu</div><div class=\"line\">\tread list = @kaifazu</div><div class=\"line\">    write list = @kaifazu</div><div class=\"line\">\tcreate mode = 0664</div><div class=\"line\">\tdirectory mode = 0775</div><div class=\"line\"></div><div class=\"line\">[测试组]</div><div class=\"line\">    path = /data/ceshizu</div><div class=\"line\">    valid<span class=\"built_in\"> users </span>= @ceshizu</div><div class=\"line\">   <span class=\"built_in\"> group </span>= @ceshizu</div><div class=\"line\">    write list = @ceshizu</div><div class=\"line\">\tcreate mode = 0664</div><div class=\"line\">\tdirectory mode = 0775</div></pre></td></tr></table></figure>\n<h4 id=\"组配置\"><a href=\"#组配置\" class=\"headerlink\" title=\"组配置\"></a>组配置</h4><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">kaifazu</span><span class=\"selector-pseudo\">:x</span><span class=\"selector-pseudo\">:531</span><span class=\"selector-pseudo\">:zhangsan</span>,<span class=\"selector-tag\">lisi</span></div><div class=\"line\"><span class=\"selector-tag\">ceshizu</span><span class=\"selector-pseudo\">:x</span><span class=\"selector-pseudo\">:532</span><span class=\"selector-pseudo\">:wangwu</span></div></pre></td></tr></table></figure>\n<h3 id=\"samba服务器磁盘检测脚本\"><a href=\"#samba服务器磁盘检测脚本\" class=\"headerlink\" title=\"samba服务器磁盘检测脚本\"></a>samba服务器磁盘检测脚本</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#!/bin/bash</span></div><div class=\"line\"><span class=\"keyword\">function</span> <span class=\"function\"><span class=\"title\">fun_chksize</span></span>() </div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"comment\"># $1 file_name</span></div><div class=\"line\">    <span class=\"comment\"># $2 file_size</span></div><div class=\"line\">    <span class=\"comment\"># $3 max_size</span></div><div class=\"line\">    <span class=\"comment\"># $4 mail_addr</span></div><div class=\"line\">    <span class=\"comment\"># switch_file_size=file_size/1024  将K转换为M，方便阅读</span></div><div class=\"line\">    <span class=\"keyword\">if</span> [ <span class=\"variable\">$2</span> -ge <span class=\"variable\">$3</span> ];<span class=\"keyword\">then</span></div><div class=\"line\">        switch_file_size=$((<span class=\"variable\">$2</span>/1024))</div><div class=\"line\">        <span class=\"built_in\">echo</span> -n -e <span class=\"string\">\"samba服务器 <span class=\"variable\">$&#123;1&#125;</span> 空间已使用<span class=\"variable\">$&#123;switch_file_size&#125;</span>M\\n\"</span> | mail -s <span class=\"string\">\"samba服务器空间使用告警\"</span>  <span class=\"variable\">$4</span></div><div class=\"line\">    <span class=\"keyword\">fi</span></div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\">#定义一些变量</span></div><div class=\"line\">smb_dir=/data</div><div class=\"line\">ip=`ifconfig | grep Bcast | awk <span class=\"string\">'&#123;print $2&#125;'</span> | awk -F: <span class=\"string\">'&#123;print $2&#125;'</span>` <span class=\"comment\">#IP地址</span></div><div class=\"line\">admin_mail_addr=<span class=\"string\">\"123456@qq.com\"</span> <span class=\"comment\">#管理员邮箱</span></div><div class=\"line\">total_max_size=1024000 <span class=\"comment\">#总空间最大可用1G，单位K</span></div><div class=\"line\">total_use_size=`du -s <span class=\"variable\">$smb_dir</span> | awk <span class=\"string\">'&#123;print $1&#125;'</span>` <span class=\"comment\">#总使用大小，单位K</span></div><div class=\"line\">max_size=10240 <span class=\"comment\">#子目录默认最大可用10M  </span></div><div class=\"line\">public_max_size=10240 <span class=\"comment\">#public最大可用10M</span></div><div class=\"line\"><span class=\"comment\">#检测总目录大小</span></div><div class=\"line\">fun_chksize <span class=\"variable\">$smb_dir</span> <span class=\"variable\">$total_use_size</span> <span class=\"variable\">$total_max_size</span> <span class=\"variable\">$admin_mail_addr</span></div><div class=\"line\"><span class=\"comment\">#检测子目录大小</span></div><div class=\"line\"><span class=\"keyword\">for</span> list1 <span class=\"keyword\">in</span> <span class=\"variable\">$&#123;smb_dir&#125;</span>/*; <span class=\"keyword\">do</span></div><div class=\"line\">    file_list=`basename <span class=\"variable\">$list1</span>` <span class=\"comment\">#列表</span></div><div class=\"line\">    <span class=\"built_in\">cd</span> <span class=\"variable\">$smb_dir</span></div><div class=\"line\">    file_size=`du -s <span class=\"variable\">$file_list</span> | awk <span class=\"string\">'&#123;print $1&#125;'</span>` <span class=\"comment\">#大小，单位K</span></div><div class=\"line\">    switch_file_size=$((<span class=\"variable\">$file_size</span>/1024)) <span class=\"comment\">#将K转换为M</span></div><div class=\"line\">    file_name=`du -s <span class=\"variable\">$file_list</span> | awk <span class=\"string\">'&#123;print $2&#125;'</span>` <span class=\"comment\">#文件名或目录名</span></div><div class=\"line\">    <span class=\"keyword\">case</span> <span class=\"variable\">$file_name</span> <span class=\"keyword\">in</span></div><div class=\"line\">        public)</div><div class=\"line\">\t    fun_chksize <span class=\"variable\">$file_name</span> <span class=\"variable\">$file_size</span> <span class=\"variable\">$public_max_size</span> <span class=\"variable\">$admin_mail_addr</span></div><div class=\"line\">\t    ;;</div><div class=\"line\">\t    kaifazu)</div><div class=\"line\">\t    fun_chksize <span class=\"variable\">$file_name</span> <span class=\"variable\">$file_size</span> <span class=\"variable\">$max_size</span> <span class=\"variable\">$admin_mail_addr</span></div><div class=\"line\">\t    ;;</div><div class=\"line\">        *)</div><div class=\"line\">\t    fun_chksize <span class=\"variable\">$file_name</span> <span class=\"variable\">$file_size</span> <span class=\"variable\">$max_size</span> <span class=\"variable\">$admin_mail_addr</span></div><div class=\"line\">\t    ;;</div><div class=\"line\">    <span class=\"keyword\">esac</span></div><div class=\"line\"><span class=\"keyword\">done</span></div></pre></td></tr></table></figure>"},{"title":"指尖流沙","abbrlink":"3080612f","date":"2016-12-31T16:00:00.000Z","password":"password","_content":"> 世界上最容易失去的便是时间了，我们总是蓦然回首，而时间早已流去。\n曾经的种种，时时刻刻在我们脑中出现，让我们感到开心，快乐，幸福等。\n有时好想有一种冲动，回到过去，再感受一下心中的那份触动。\n\n<!--more-->\n\n> 毕业就像指尖流沙，而我们便是那从指尖流过的沙子。我不知道该怎样来总结我的大学，大一在一个校区，大二又去了一个校区，大三，本该去实习的我们，有一半的人又去了洛阳。所以，大家大二结束后吃了一顿饭，也是班里仅有的一次集体聚餐。\n或许大家都认为我这个人比较沉默，可是对我而言，我只是想做一个简简单单的人而已。在我的心里我当做朋友的会一直当作朋友，即使以后大家都鲜有机会再聚在一起，我讨厌酒桌上的朋友，所以我不会用喝酒这件事情来作为我们彼此情感的见证。我是一个不善于卖弄和殷勤的人，可能我太简单，可能我又爱又恨，可是那是因为我想做一个表里如一的人。朋友对我而言，一直是我所珍视的人，我想我喜欢的是大家在一起的时光，而不是在一起喝酒的时候。\n\n\n** 2015年感悟：人有两种状态要不得，一种是没有想法，一种是有很多种想法，这两种都是原地踏步，其实最简单的就是，及时出发。 **\n\n又一年过去了，2016，继续前进，开创永远的回忆。\n\n\n==================更新于2017年==============\n\n> 2016年，培训，第一份工作：自学能力(专业技能，生活技能)无论何时都是重要的。\n> 找到工作，离开了小伙伴，自己一个人生活。说实话，孤独，害怕。但是，总要一个人的，不是吗？\n\n2017，多写博客分享技术经验和生活杂谈，专注于博客内容而不是博客版式、UI、特效等。\n我要换一份工作，换一个居住的更好地方\n要努力学习Python，年底要能做到开发一个cmdb监控系统、实现一些其它的好玩的功能\n一年呢，就做着试试呗。\n\n** 2016年感悟：改变现状不一定能更好，但是不改变一定只会越来越差，安逸的环境容易丧失斗志，既然不愿接受，那就试着反抗下吧。 **","source":"_posts/指尖流沙.md","raw":"---\ntitle: 指尖流沙\ntags: 杂谈与鸡汤\ncategories: 杂谈与鸡汤\nabbrlink: 3080612f\ndate: 2017-01-01\npassword: password\n---\n> 世界上最容易失去的便是时间了，我们总是蓦然回首，而时间早已流去。\n曾经的种种，时时刻刻在我们脑中出现，让我们感到开心，快乐，幸福等。\n有时好想有一种冲动，回到过去，再感受一下心中的那份触动。\n\n<!--more-->\n\n> 毕业就像指尖流沙，而我们便是那从指尖流过的沙子。我不知道该怎样来总结我的大学，大一在一个校区，大二又去了一个校区，大三，本该去实习的我们，有一半的人又去了洛阳。所以，大家大二结束后吃了一顿饭，也是班里仅有的一次集体聚餐。\n或许大家都认为我这个人比较沉默，可是对我而言，我只是想做一个简简单单的人而已。在我的心里我当做朋友的会一直当作朋友，即使以后大家都鲜有机会再聚在一起，我讨厌酒桌上的朋友，所以我不会用喝酒这件事情来作为我们彼此情感的见证。我是一个不善于卖弄和殷勤的人，可能我太简单，可能我又爱又恨，可是那是因为我想做一个表里如一的人。朋友对我而言，一直是我所珍视的人，我想我喜欢的是大家在一起的时光，而不是在一起喝酒的时候。\n\n\n** 2015年感悟：人有两种状态要不得，一种是没有想法，一种是有很多种想法，这两种都是原地踏步，其实最简单的就是，及时出发。 **\n\n又一年过去了，2016，继续前进，开创永远的回忆。\n\n\n==================更新于2017年==============\n\n> 2016年，培训，第一份工作：自学能力(专业技能，生活技能)无论何时都是重要的。\n> 找到工作，离开了小伙伴，自己一个人生活。说实话，孤独，害怕。但是，总要一个人的，不是吗？\n\n2017，多写博客分享技术经验和生活杂谈，专注于博客内容而不是博客版式、UI、特效等。\n我要换一份工作，换一个居住的更好地方\n要努力学习Python，年底要能做到开发一个cmdb监控系统、实现一些其它的好玩的功能\n一年呢，就做着试试呗。\n\n** 2016年感悟：改变现状不一定能更好，但是不改变一定只会越来越差，安逸的环境容易丧失斗志，既然不愿接受，那就试着反抗下吧。 **","slug":"指尖流沙","published":1,"updated":"2017-02-15T14:53:16.604Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5mkehsu0033ao949lkqb175","content":"<blockquote>\n<p>世界上最容易失去的便是时间了，我们总是蓦然回首，而时间早已流去。<br>曾经的种种，时时刻刻在我们脑中出现，让我们感到开心，快乐，幸福等。<br>有时好想有一种冲动，回到过去，再感受一下心中的那份触动。</p>\n</blockquote>\n<a id=\"more\"></a>\n<blockquote>\n<p>毕业就像指尖流沙，而我们便是那从指尖流过的沙子。我不知道该怎样来总结我的大学，大一在一个校区，大二又去了一个校区，大三，本该去实习的我们，有一半的人又去了洛阳。所以，大家大二结束后吃了一顿饭，也是班里仅有的一次集体聚餐。<br>或许大家都认为我这个人比较沉默，可是对我而言，我只是想做一个简简单单的人而已。在我的心里我当做朋友的会一直当作朋友，即使以后大家都鲜有机会再聚在一起，我讨厌酒桌上的朋友，所以我不会用喝酒这件事情来作为我们彼此情感的见证。我是一个不善于卖弄和殷勤的人，可能我太简单，可能我又爱又恨，可是那是因为我想做一个表里如一的人。朋友对我而言，一直是我所珍视的人，我想我喜欢的是大家在一起的时光，而不是在一起喝酒的时候。</p>\n</blockquote>\n<p><strong> 2015年感悟：人有两种状态要不得，一种是没有想法，一种是有很多种想法，这两种都是原地踏步，其实最简单的就是，及时出发。 </strong></p>\n<p>又一年过去了，2016，继续前进，开创永远的回忆。</p>\n<p>==================更新于2017年==============</p>\n<blockquote>\n<p>2016年，培训，第一份工作：自学能力(专业技能，生活技能)无论何时都是重要的。<br>找到工作，离开了小伙伴，自己一个人生活。说实话，孤独，害怕。但是，总要一个人的，不是吗？</p>\n</blockquote>\n<p>2017，多写博客分享技术经验和生活杂谈，专注于博客内容而不是博客版式、UI、特效等。<br>我要换一份工作，换一个居住的更好地方<br>要努力学习Python，年底要能做到开发一个cmdb监控系统、实现一些其它的好玩的功能<br>一年呢，就做着试试呗。</p>\n<p><strong> 2016年感悟：改变现状不一定能更好，但是不改变一定只会越来越差，安逸的环境容易丧失斗志，既然不愿接受，那就试着反抗下吧。 </strong></p>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>世界上最容易失去的便是时间了，我们总是蓦然回首，而时间早已流去。<br>曾经的种种，时时刻刻在我们脑中出现，让我们感到开心，快乐，幸福等。<br>有时好想有一种冲动，回到过去，再感受一下心中的那份触动。</p>\n</blockquote>","more":"<blockquote>\n<p>毕业就像指尖流沙，而我们便是那从指尖流过的沙子。我不知道该怎样来总结我的大学，大一在一个校区，大二又去了一个校区，大三，本该去实习的我们，有一半的人又去了洛阳。所以，大家大二结束后吃了一顿饭，也是班里仅有的一次集体聚餐。<br>或许大家都认为我这个人比较沉默，可是对我而言，我只是想做一个简简单单的人而已。在我的心里我当做朋友的会一直当作朋友，即使以后大家都鲜有机会再聚在一起，我讨厌酒桌上的朋友，所以我不会用喝酒这件事情来作为我们彼此情感的见证。我是一个不善于卖弄和殷勤的人，可能我太简单，可能我又爱又恨，可是那是因为我想做一个表里如一的人。朋友对我而言，一直是我所珍视的人，我想我喜欢的是大家在一起的时光，而不是在一起喝酒的时候。</p>\n</blockquote>\n<p><strong> 2015年感悟：人有两种状态要不得，一种是没有想法，一种是有很多种想法，这两种都是原地踏步，其实最简单的就是，及时出发。 </strong></p>\n<p>又一年过去了，2016，继续前进，开创永远的回忆。</p>\n<p>==================更新于2017年==============</p>\n<blockquote>\n<p>2016年，培训，第一份工作：自学能力(专业技能，生活技能)无论何时都是重要的。<br>找到工作，离开了小伙伴，自己一个人生活。说实话，孤独，害怕。但是，总要一个人的，不是吗？</p>\n</blockquote>\n<p>2017，多写博客分享技术经验和生活杂谈，专注于博客内容而不是博客版式、UI、特效等。<br>我要换一份工作，换一个居住的更好地方<br>要努力学习Python，年底要能做到开发一个cmdb监控系统、实现一些其它的好玩的功能<br>一年呢，就做着试试呗。</p>\n<p><strong> 2016年感悟：改变现状不一定能更好，但是不改变一定只会越来越差，安逸的环境容易丧失斗志，既然不愿接受，那就试着反抗下吧。 </strong></p>"},{"title":"Python进阶","abbrlink":"37f2eeef","date":"2017-01-07T16:00:00.000Z","_content":"\n# 一、循环设计\n在上一节，我们已经讨论了Python基本的语法。这一节，我们将接触更加灵活的循环方式。\n## 1、range()\n在Python中，for循环后的in跟随一个序列的话，循环每次使用的序列元素，而不是序列的下标。\n之前我们已经使用过 range() 来控制for循环。现在，我们继续开发range的功能，以实现下标对循环的控制：\n```\nS = 'abcdefghijk'\nfor i in range(0,len(S),2):\n    print(S[i])\n```\n在该例子中，我们利用 len() 函数和 range() 函数，用 i 作为 S 序列的下标来控制循环。在range函数中，分别定义上限，下限和每次循环的步长。这就和C语言中的for循环相类似了。\n<!-- more -->\n## 2、enumerate()\n利用enumerate()函数，可以在每次循环中同时得到下标和元素：\n```\nS = 'abcdefghijk'\nfor (index,char) in enumerate(S):\n    print(index)\n    print(char)\n```\n实际上，enumerate()在每次循环中，返回的是一个包含两个元素的定值表(tuple)，两个元素分别赋予index和char。\n## 3、zip()\n如果你多个等长的序列，然后想要每次循环时从各个序列分别取出一个元素，可以利用zip()方便地实现：\n```\nta = [1,2,3]\ntb = [9,8,7]\ntc = ['a','b','c']\nfor (a,b,c) in zip(ta,tb,tc):\n    print(a,b,c)\n```\n每次循环时，从各个序列分别从左到右取出一个元素，合并成一个tuple，然后tuple的元素赋予给a,b,c 。\nzip()函数的功能，就是从多个列表中，依次各取出一个元素。每次取出的(来自不同列表的)元素合成一个元组，合并成的元组放入zip()返回的列表中。zip()函数起到了聚合列表的功能。\n我们可以分解聚合后的列表，如下:\n```\nta = [1,2,3]\ntb = [9,8,7]\n\n# cluster\nzipped = zip(ta,tb)\nprint(zipped)\n\n# decompose\nna, nb = zip(*zipped)\nprint(na, nb)\n```\n# 二、循环对象\n这一讲的主要目的是为了大家在读Python程序的时候对循环对象有一个基本概念。\n循环对象的并不是随着Python的诞生就存在的，但它的发展迅速，特别是Python 3x的时代，循环对象正在成为循环的标准形式。\n## 1、什么是循环对象\n循环对象是这样一个对象，它包含有一个next()方法 ( __next__() 方法，在python 3x中 )， 这个方法的目的是进行到下一个结果，而在结束一系列结果之后，举出StopIteration错误。\n当一个循环结构（比如for）调用循环对象时，它就会每次循环的时候调用next()方法，直到StopIteration出现，for循环接收到，就知道循环已经结束，停止调用next()。\n假设我们有一个test.txt的文件:\n```\n1234\nabcd\nefg\n```\n我们运行一下python命令行：\n```\n>>>f = open('test.txt')\n\n>>>f.next()\n\n>>>f.next()\n\n...\n\n```\n不断输入`f.next()`，直到最后出现`StopIteration` 。\nopen()返回的实际上是一个循环对象，包含有next()方法。而该next()方法每次返回的就是新的一行的内容，到达文件结尾时举出StopIteration。这样，我们相当于手工进行了循环。\n自动进行的话，就是：\n```\nfor line in open('test.txt'):\n    print(line)\n```\n在这里，for结构自动调用`next()`方法，将该方法的返回值赋予给line。循环直到出现`StopIteration`的时候结束。\n相对于序列，用循环对象的好处在于：不用在循环还没有开始的时候，就生成好要使用的元素。所使用的元素可以在循环过程中逐次生成。这样，节省了空间，提高了效率，编程更灵活。\n## 2、迭代器\n从技术上来说，循环对象和for循环调用之间还有一个中间层，就是要将循环对象转换成迭代器(iterator)。这一转换是通过使用iter()函数实现的。但从逻辑层面上，常常可以忽略这一层，所以循环对象和迭代器常常相互指代对方。\n## 3、生成器\n生成器(generator)的主要目的是构成一个用户自定义的循环对象。\n生成器的编写方法和函数定义类似，只是在return的地方改为yield。生成器中可以有多个yield。当生成器遇到一个yield时，会暂停运行生成器，返回`yield`后面的值。当再次调用生成器的时候，会从刚才暂停的地方继续运行，直到下一个yield。生成器自身又构成一个循环器，每次循环使用一个`yield`返回的值。\n下面是一个生成器:\n```\ndef gen():\n    a = 100\n    yield a\n    a = a*8\n    yield a\n    yield 1000\n```\n该生成器共有三个`yield`， 如果用作循环器时，会进行三次循环。\n```\nfor i in gen():\n    print(i)\n```\n再考虑如下一个生成器:\n```\ndef gen():\n    for i in range(4):\n        yield i\n```\n它又可以写成生成器表达式(Generator Expression)：\n```\nG = (x for x in range(4))\n```\n生成器表达式是生成器的一种简便的编写方式。读者可进一步查阅。\n## 4、表推导\n表推导(list comprehension)是快速生成表的方法。它的语法简单，很有实用价值。\n假设我们生成表 L ：\n```\nL = []\nfor x in range(10):\n    L.append(x**2)\n```\n以上产生了表L，但实际上有快捷的写法，也就是表推导的方式:\n```\nL = [x**2 for x in range(10)]\n```\n这与生成器表达式类似，只不过用的是中括号。\n（表推导的机制实际上是利用循环对象，有兴趣可以查阅。）\n# 三、函数对象\n秉承着一切皆对象的理念，我们再次回头来看函数(function)。函数也是一个对象，具有属性（可以使用dir()查询）。作为对象，它还可以赋值给其它对象名，或者作为参数传递。\n## 1、lambda函数\n在展开之前，我们先提一下lambda函数。可以利用lambda函数的语法，定义函数。lambda例子如下：\n```\nfunc = lambda x,y: x + y\nprint(func(3,4))\n```\nlambda生成一个函数对象。该函数参数为x,y，返回值为x+y。函数对象赋给func。func的调用与正常函数无异。\n以上定义可以写成以下形式：\n```\ndef func(x, y):\n    return x + y\n```\n## 2、函数作为参数传递\n函数可以作为一个对象，进行参数传递。函数名(比如func)即该对象。比如说:\n```\ndef test(f, a, b):\n    print('test')\n    print(f(a, b))\n\ntest(func, 3, 5)\n```\ntest函数的第一个参数f就是一个函数对象。将func传递给f，test中的f()就拥有了func()的功能。\n我们因此可以提高程序的灵活性。可以使用上面的test函数，带入不同的函数参数。比如:\n```\ntest((lambda x,y: x**2 + y), 6, 9)\n```\n## 3、map()函数\nmap()是Python的内置函数。它的第一个参数是一个函数对象。\n```\nre = map((lambda x: x+3),[1,3,5,6])\n```\n这里，map()有两个参数，一个是lambda所定义的函数对象，一个是包含有多个元素的表。map()的功能是将函数对象依次作用于表的每一个元素，每次作用的结果储存于返回的表re中。map通过读入的函数(这里是lambda函数)来操作数据（这里“数据”是表中的每一个元素，“操作”是对每个数据加3）。\n在Python 3.X中，map()的返回值是一个循环对象。可以利用list()函数，将该循环对象转换成表。\n如果作为参数的函数对象有多个参数，可使用下面的方式，向map()传递函数参数的多个参数：\n```\nre = map((lambda x,y: x+y),[1,2,3],[6,7,9])\n```\n`map()`将每次从两个表中分别取出一个元素，带入lambda所定义的函数。\n\n## 4、filter()函数\nfilter函数的第一个参数也是一个函数对象。它也是将作为参数的函数对象作用于多个元素。如果函数对象返回的是True，则该次的元素被储存于返回的表中。 filter通过读入的函数来筛选数据。同样，在Python 3.X中，filter返回的不是表，而是循环对象。\nfilter函数的使用如下例:\n```\ndef func(a):\n    if a > 100:\n        return True\n    else:\n        return False\n\nprint(filter(func,[10,56,101,500])\n```\n## 5、reduce()函数\nreduce函数的第一个参数也是函数，但有一个要求，就是这个函数自身能接收两个参数。reduce可以累进地将函数作用于各个参数。如下例：\n```\nprint(reduce((lambda x,y: x+y),[1,2,5,7,9])\n```\nreduce的第一个参数是lambda函数，它接收两个参数x,y, 返回x+y。\nreduce将表中的前两个元素(1和2)传递给lambda函数，得到3。该返回值(3)将作为lambda函数的第一个参数，而表中的下一个元素(5)作为lambda函数的第二个参数，进行下一次的对lambda函数的调用，得到8。依次调用lambda函数，每次lambda函数的第一个参数是上一次运算结果，而第二个参数为表中的下一个元素，直到表中没有剩余元素。\n上面例子，相当于(((1+2)+5)+7)+9\n提醒： reduce()函数在3.0里面不能直接用的，它被定义在了functools包里面，需要引入包。\n# 四、错误处理\n## 1、异常处理\n在项目开发中，异常处理是不可或缺的。异常处理帮助人们debug，通过更加丰富的信息，让人们更容易找到bug的所在。异常处理还可以提高程序的容错性。\n我们之前在讲循环对象的时候，曾提到一个StopIteration的异常，该异常是在循环对象穷尽所有元素时的报错。\n我们以它为例，来说明基本的异常处理。\n一个包含异常的程序:\n```\nre = iter(range(5))\n\nfor i in range(100):\n    print(re.next())\n\nprint('HaHaHaHa')\n```\n首先，我们定义了一个循环对象re，该循环对象将进行5次循环，每次使用序列的一个元素。\n在随后的for循环中，我们手工调用next()函数。当循环进行到第6次的时候，re.next()不会再返回元素，而是抛出(raise)StopIteration的异常。整个程序将会中断。\n我们可以修改以上异常程序，直到完美的没有bug。但另一方面，如果我们在写程序的时候，知道这里可能犯错以及可能的犯错类型，我们可以针对该异常类型定义好\"应急预案\"。\n```\nre = iter(range(5))\n\ntry:\n    for i in range(100):\n        print(re.next()\nexcept StopIteration:\n    print('here is end ',i)\n\nprint('HaHaHaHa')\n```\n在try程序段中，我们放入容易犯错的部分。我们可以跟上except，来说明如果在try部分的语句发生StopIteration时，程序该做的事情。如果没有发生异常，则except部分被跳过。\n随后，程序将继续运行，而不是彻底中断。\n完整的语法结构如下：\n```\ntry:\n    ...\nexcept exception1:\n    ...\nexcept exception2:\n    ...\nexcept:\n    ...\nelse:\n    ...\nfinally:\n    ...\n```\n如果try中有异常发生时，将执行异常的归属，执行except。异常层层比较，看是否是exception1, exception2...，直到找到其归属，执行相应的except中的语句。如果except后面没有任何参数，那么表示所有的exception都交给这段程序处理。比如:\n```\ntry:\n    print(a*2)\nexcept TypeError:\n    print(\"TypeError\")\nexcept:\n    print(\"Not Type Error & Error noted\")\n```\n由于a没有定义，所以是NameError。异常最终被except:部分的程序捕捉。\n如果无法将异常交给合适的对象，异常将继续向上层抛出，直到被捕捉或者造成主程序报错。比如下面的程序：\n```\ndef test_func():\n    try:\n        m = 1/0\n    except NameError:\n        print(\"Catch NameError in the sub-function\")\n\ntry:\n    test_func()\nexcept ZeroDivisionError:\n    print(\"Catch error in the main program\")\n```\n子程序的try...except...结构无法处理相应的除以0的错误，所以错误被抛给上层的主程序。\n如果try中没有异常，那么except部分将跳过，执行else中的语句。\nfinally是无论是否有异常，最后都要做的一些事情。\n流程如下:\n  ● try->异常->except->finally\n  ● try->无异常->else->finally\n## 2、抛出异常\n我们也可以自己写一个抛出异常的例子:\n```\nprint('Lalala')\nraise StopIteration\nprint('Hahaha')\n```\n这个例子不具备任何实际意义。只是为了说明raise语句的作用。\nStopIteration是一个类。抛出异常时，会自动有一个中间环节，就是生成StopIteration的一个对象。Python实际上抛出的，是这个对象。当然，也可以自行生成对象:\n```\nraise StopIteration()\n```\n# 五、动态类型\n动态类型(dynamic typing)是Python另一个重要的核心概念。我们之前说过，Python的变量(variable)不需要声明，而在赋值时，变量可以重新赋值为任意值。这些都与动态类型的概念相关。\n## 1、动态类型\n在我们接触的对象中，有一类特殊的对象，是用于存储数据的。常见的该类对象包括各种数字，字符串，表，词典。在C语言中，我们称这样一些数据结构为变量。而在Python中，这些是对象。\n对象是储存在内存中的实体。但我们并不能直接接触到该对象。我们在程序中写的对象名，只是指向这一对象的引用(reference)。\n引用和对象分离，是动态类型的核心。引用可以随时指向一个新的对象：\n```\na = 3\na = 'at'\n```\n第一个语句中，3是储存在内存中的一个整数对象。通过赋值，引用a指向对象3。\n第二个语句中，内存中建立对象‘at’，是一个字符串(string)。引用a指向了'at'。此时，对象3不再有引用指向它。Python会自动将没有引用指向的对象销毁(destruct)，释放相应内存。\n(对于小的整数和短字符串，Python会缓存这些对象，而不是频繁的建立和销毁。)\n```\na = 5\nb = a\na = a + 2\n```\n再看这个例子。通过前两个句子，我们让a,b指向同一个整数对象5( b = a的含义是让引用b指向引用a所指的那一个对象)。但第三个句子实际上对引用a重新赋值，让a指向一个新的对象7。此时a,b分别指向不同的对象。我们看到，即使是多个引用指向同一个对象，如果一个引用值发生变化，那么实际上是让这个引用指向一个新的引用，并不影响其他的引用的指向。从效果上看，就是各个引用各自独立，互不影响。\n其它数据对象也是如此:\n```\nL1 = [1,2,3]\nL2 = L1\nL1 = 1\n```\n但注意以下情况:\n```\nL1 = [1,2,3]\nL2 = L1\nL1[0] = 10\nprint(L2)\n```\n在该情况下，我们不再对L1这一引用赋值，而是对L1所指向的表的元素赋值。结果是，L2也同时发生变化。\n原因何在呢？因为L1，L2的指向没有发生变化，依然指向那个表。表实际上是包含了多个引用的对象（每个引用是一个元素，比如L1[0]，L1[1]..., 每个引用指向一个对象，比如1,2,3), 。而L1[0] = 10这一赋值操作，并不是改变L1的指向，而是对L1[0], 也就是表对象的一部份(一个元素)，进行操作，所以所有指向该对象的引用都受到影响。\n（与之形成对比的是，我们之前的赋值操作都没有对对象自身发生作用，只是改变引用指向。）\n列表可以通过引用其元素，改变对象自身(in-place change)。这种对象类型，称为可变数据对象(mutable object)，词典也是这样的数据类型。\n而像之前的数字和字符串，不能改变对象本身，只能改变引用的指向，称为不可变数据对象(immutable object)。\n我们之前学的元组(tuple)，尽管可以调用引用元素，但不可以赋值，因此不能改变对象自身，所以也算是immutable object。\n## 2、从动态类型看函数的参数传递\n函数的参数传递，本质上传递的是引用。比如说：\n```\ndef f(x):\n    x = 100\n    print(x)\n\na = 1\nf(a)\nprint(a)\n```\n参数x是一个新的引用，指向a所指的对象。如果参数是不可变(immutable)的对象，a和x引用之间相互独立。对参数x的操作不会影响引用a。这样的传递类似于C语言中的值传递。\n如果传递的是可变(mutable)的对象，那么改变函数参数，有可能改变原对象。所有指向原对象的引用都会受影响，编程的时候要对此问题留心。比如说：\n```\ndef f(x):\n    x[0] = 100\n    print(x)\n\na = [1,2,3]\nf(a)\nprint(a)\n```\n动态类型是Python的核心机制之一。可以在应用中慢慢熟悉。\n","source":"_posts/python进阶.md","raw":"---\ntitle: Python进阶\ncategories: 技术与干货\ntag: Python\nabbrlink: 37f2eeef\ndate: 2017-01-08 00:00:00\n---\n\n# 一、循环设计\n在上一节，我们已经讨论了Python基本的语法。这一节，我们将接触更加灵活的循环方式。\n## 1、range()\n在Python中，for循环后的in跟随一个序列的话，循环每次使用的序列元素，而不是序列的下标。\n之前我们已经使用过 range() 来控制for循环。现在，我们继续开发range的功能，以实现下标对循环的控制：\n```\nS = 'abcdefghijk'\nfor i in range(0,len(S),2):\n    print(S[i])\n```\n在该例子中，我们利用 len() 函数和 range() 函数，用 i 作为 S 序列的下标来控制循环。在range函数中，分别定义上限，下限和每次循环的步长。这就和C语言中的for循环相类似了。\n<!-- more -->\n## 2、enumerate()\n利用enumerate()函数，可以在每次循环中同时得到下标和元素：\n```\nS = 'abcdefghijk'\nfor (index,char) in enumerate(S):\n    print(index)\n    print(char)\n```\n实际上，enumerate()在每次循环中，返回的是一个包含两个元素的定值表(tuple)，两个元素分别赋予index和char。\n## 3、zip()\n如果你多个等长的序列，然后想要每次循环时从各个序列分别取出一个元素，可以利用zip()方便地实现：\n```\nta = [1,2,3]\ntb = [9,8,7]\ntc = ['a','b','c']\nfor (a,b,c) in zip(ta,tb,tc):\n    print(a,b,c)\n```\n每次循环时，从各个序列分别从左到右取出一个元素，合并成一个tuple，然后tuple的元素赋予给a,b,c 。\nzip()函数的功能，就是从多个列表中，依次各取出一个元素。每次取出的(来自不同列表的)元素合成一个元组，合并成的元组放入zip()返回的列表中。zip()函数起到了聚合列表的功能。\n我们可以分解聚合后的列表，如下:\n```\nta = [1,2,3]\ntb = [9,8,7]\n\n# cluster\nzipped = zip(ta,tb)\nprint(zipped)\n\n# decompose\nna, nb = zip(*zipped)\nprint(na, nb)\n```\n# 二、循环对象\n这一讲的主要目的是为了大家在读Python程序的时候对循环对象有一个基本概念。\n循环对象的并不是随着Python的诞生就存在的，但它的发展迅速，特别是Python 3x的时代，循环对象正在成为循环的标准形式。\n## 1、什么是循环对象\n循环对象是这样一个对象，它包含有一个next()方法 ( __next__() 方法，在python 3x中 )， 这个方法的目的是进行到下一个结果，而在结束一系列结果之后，举出StopIteration错误。\n当一个循环结构（比如for）调用循环对象时，它就会每次循环的时候调用next()方法，直到StopIteration出现，for循环接收到，就知道循环已经结束，停止调用next()。\n假设我们有一个test.txt的文件:\n```\n1234\nabcd\nefg\n```\n我们运行一下python命令行：\n```\n>>>f = open('test.txt')\n\n>>>f.next()\n\n>>>f.next()\n\n...\n\n```\n不断输入`f.next()`，直到最后出现`StopIteration` 。\nopen()返回的实际上是一个循环对象，包含有next()方法。而该next()方法每次返回的就是新的一行的内容，到达文件结尾时举出StopIteration。这样，我们相当于手工进行了循环。\n自动进行的话，就是：\n```\nfor line in open('test.txt'):\n    print(line)\n```\n在这里，for结构自动调用`next()`方法，将该方法的返回值赋予给line。循环直到出现`StopIteration`的时候结束。\n相对于序列，用循环对象的好处在于：不用在循环还没有开始的时候，就生成好要使用的元素。所使用的元素可以在循环过程中逐次生成。这样，节省了空间，提高了效率，编程更灵活。\n## 2、迭代器\n从技术上来说，循环对象和for循环调用之间还有一个中间层，就是要将循环对象转换成迭代器(iterator)。这一转换是通过使用iter()函数实现的。但从逻辑层面上，常常可以忽略这一层，所以循环对象和迭代器常常相互指代对方。\n## 3、生成器\n生成器(generator)的主要目的是构成一个用户自定义的循环对象。\n生成器的编写方法和函数定义类似，只是在return的地方改为yield。生成器中可以有多个yield。当生成器遇到一个yield时，会暂停运行生成器，返回`yield`后面的值。当再次调用生成器的时候，会从刚才暂停的地方继续运行，直到下一个yield。生成器自身又构成一个循环器，每次循环使用一个`yield`返回的值。\n下面是一个生成器:\n```\ndef gen():\n    a = 100\n    yield a\n    a = a*8\n    yield a\n    yield 1000\n```\n该生成器共有三个`yield`， 如果用作循环器时，会进行三次循环。\n```\nfor i in gen():\n    print(i)\n```\n再考虑如下一个生成器:\n```\ndef gen():\n    for i in range(4):\n        yield i\n```\n它又可以写成生成器表达式(Generator Expression)：\n```\nG = (x for x in range(4))\n```\n生成器表达式是生成器的一种简便的编写方式。读者可进一步查阅。\n## 4、表推导\n表推导(list comprehension)是快速生成表的方法。它的语法简单，很有实用价值。\n假设我们生成表 L ：\n```\nL = []\nfor x in range(10):\n    L.append(x**2)\n```\n以上产生了表L，但实际上有快捷的写法，也就是表推导的方式:\n```\nL = [x**2 for x in range(10)]\n```\n这与生成器表达式类似，只不过用的是中括号。\n（表推导的机制实际上是利用循环对象，有兴趣可以查阅。）\n# 三、函数对象\n秉承着一切皆对象的理念，我们再次回头来看函数(function)。函数也是一个对象，具有属性（可以使用dir()查询）。作为对象，它还可以赋值给其它对象名，或者作为参数传递。\n## 1、lambda函数\n在展开之前，我们先提一下lambda函数。可以利用lambda函数的语法，定义函数。lambda例子如下：\n```\nfunc = lambda x,y: x + y\nprint(func(3,4))\n```\nlambda生成一个函数对象。该函数参数为x,y，返回值为x+y。函数对象赋给func。func的调用与正常函数无异。\n以上定义可以写成以下形式：\n```\ndef func(x, y):\n    return x + y\n```\n## 2、函数作为参数传递\n函数可以作为一个对象，进行参数传递。函数名(比如func)即该对象。比如说:\n```\ndef test(f, a, b):\n    print('test')\n    print(f(a, b))\n\ntest(func, 3, 5)\n```\ntest函数的第一个参数f就是一个函数对象。将func传递给f，test中的f()就拥有了func()的功能。\n我们因此可以提高程序的灵活性。可以使用上面的test函数，带入不同的函数参数。比如:\n```\ntest((lambda x,y: x**2 + y), 6, 9)\n```\n## 3、map()函数\nmap()是Python的内置函数。它的第一个参数是一个函数对象。\n```\nre = map((lambda x: x+3),[1,3,5,6])\n```\n这里，map()有两个参数，一个是lambda所定义的函数对象，一个是包含有多个元素的表。map()的功能是将函数对象依次作用于表的每一个元素，每次作用的结果储存于返回的表re中。map通过读入的函数(这里是lambda函数)来操作数据（这里“数据”是表中的每一个元素，“操作”是对每个数据加3）。\n在Python 3.X中，map()的返回值是一个循环对象。可以利用list()函数，将该循环对象转换成表。\n如果作为参数的函数对象有多个参数，可使用下面的方式，向map()传递函数参数的多个参数：\n```\nre = map((lambda x,y: x+y),[1,2,3],[6,7,9])\n```\n`map()`将每次从两个表中分别取出一个元素，带入lambda所定义的函数。\n\n## 4、filter()函数\nfilter函数的第一个参数也是一个函数对象。它也是将作为参数的函数对象作用于多个元素。如果函数对象返回的是True，则该次的元素被储存于返回的表中。 filter通过读入的函数来筛选数据。同样，在Python 3.X中，filter返回的不是表，而是循环对象。\nfilter函数的使用如下例:\n```\ndef func(a):\n    if a > 100:\n        return True\n    else:\n        return False\n\nprint(filter(func,[10,56,101,500])\n```\n## 5、reduce()函数\nreduce函数的第一个参数也是函数，但有一个要求，就是这个函数自身能接收两个参数。reduce可以累进地将函数作用于各个参数。如下例：\n```\nprint(reduce((lambda x,y: x+y),[1,2,5,7,9])\n```\nreduce的第一个参数是lambda函数，它接收两个参数x,y, 返回x+y。\nreduce将表中的前两个元素(1和2)传递给lambda函数，得到3。该返回值(3)将作为lambda函数的第一个参数，而表中的下一个元素(5)作为lambda函数的第二个参数，进行下一次的对lambda函数的调用，得到8。依次调用lambda函数，每次lambda函数的第一个参数是上一次运算结果，而第二个参数为表中的下一个元素，直到表中没有剩余元素。\n上面例子，相当于(((1+2)+5)+7)+9\n提醒： reduce()函数在3.0里面不能直接用的，它被定义在了functools包里面，需要引入包。\n# 四、错误处理\n## 1、异常处理\n在项目开发中，异常处理是不可或缺的。异常处理帮助人们debug，通过更加丰富的信息，让人们更容易找到bug的所在。异常处理还可以提高程序的容错性。\n我们之前在讲循环对象的时候，曾提到一个StopIteration的异常，该异常是在循环对象穷尽所有元素时的报错。\n我们以它为例，来说明基本的异常处理。\n一个包含异常的程序:\n```\nre = iter(range(5))\n\nfor i in range(100):\n    print(re.next())\n\nprint('HaHaHaHa')\n```\n首先，我们定义了一个循环对象re，该循环对象将进行5次循环，每次使用序列的一个元素。\n在随后的for循环中，我们手工调用next()函数。当循环进行到第6次的时候，re.next()不会再返回元素，而是抛出(raise)StopIteration的异常。整个程序将会中断。\n我们可以修改以上异常程序，直到完美的没有bug。但另一方面，如果我们在写程序的时候，知道这里可能犯错以及可能的犯错类型，我们可以针对该异常类型定义好\"应急预案\"。\n```\nre = iter(range(5))\n\ntry:\n    for i in range(100):\n        print(re.next()\nexcept StopIteration:\n    print('here is end ',i)\n\nprint('HaHaHaHa')\n```\n在try程序段中，我们放入容易犯错的部分。我们可以跟上except，来说明如果在try部分的语句发生StopIteration时，程序该做的事情。如果没有发生异常，则except部分被跳过。\n随后，程序将继续运行，而不是彻底中断。\n完整的语法结构如下：\n```\ntry:\n    ...\nexcept exception1:\n    ...\nexcept exception2:\n    ...\nexcept:\n    ...\nelse:\n    ...\nfinally:\n    ...\n```\n如果try中有异常发生时，将执行异常的归属，执行except。异常层层比较，看是否是exception1, exception2...，直到找到其归属，执行相应的except中的语句。如果except后面没有任何参数，那么表示所有的exception都交给这段程序处理。比如:\n```\ntry:\n    print(a*2)\nexcept TypeError:\n    print(\"TypeError\")\nexcept:\n    print(\"Not Type Error & Error noted\")\n```\n由于a没有定义，所以是NameError。异常最终被except:部分的程序捕捉。\n如果无法将异常交给合适的对象，异常将继续向上层抛出，直到被捕捉或者造成主程序报错。比如下面的程序：\n```\ndef test_func():\n    try:\n        m = 1/0\n    except NameError:\n        print(\"Catch NameError in the sub-function\")\n\ntry:\n    test_func()\nexcept ZeroDivisionError:\n    print(\"Catch error in the main program\")\n```\n子程序的try...except...结构无法处理相应的除以0的错误，所以错误被抛给上层的主程序。\n如果try中没有异常，那么except部分将跳过，执行else中的语句。\nfinally是无论是否有异常，最后都要做的一些事情。\n流程如下:\n  ● try->异常->except->finally\n  ● try->无异常->else->finally\n## 2、抛出异常\n我们也可以自己写一个抛出异常的例子:\n```\nprint('Lalala')\nraise StopIteration\nprint('Hahaha')\n```\n这个例子不具备任何实际意义。只是为了说明raise语句的作用。\nStopIteration是一个类。抛出异常时，会自动有一个中间环节，就是生成StopIteration的一个对象。Python实际上抛出的，是这个对象。当然，也可以自行生成对象:\n```\nraise StopIteration()\n```\n# 五、动态类型\n动态类型(dynamic typing)是Python另一个重要的核心概念。我们之前说过，Python的变量(variable)不需要声明，而在赋值时，变量可以重新赋值为任意值。这些都与动态类型的概念相关。\n## 1、动态类型\n在我们接触的对象中，有一类特殊的对象，是用于存储数据的。常见的该类对象包括各种数字，字符串，表，词典。在C语言中，我们称这样一些数据结构为变量。而在Python中，这些是对象。\n对象是储存在内存中的实体。但我们并不能直接接触到该对象。我们在程序中写的对象名，只是指向这一对象的引用(reference)。\n引用和对象分离，是动态类型的核心。引用可以随时指向一个新的对象：\n```\na = 3\na = 'at'\n```\n第一个语句中，3是储存在内存中的一个整数对象。通过赋值，引用a指向对象3。\n第二个语句中，内存中建立对象‘at’，是一个字符串(string)。引用a指向了'at'。此时，对象3不再有引用指向它。Python会自动将没有引用指向的对象销毁(destruct)，释放相应内存。\n(对于小的整数和短字符串，Python会缓存这些对象，而不是频繁的建立和销毁。)\n```\na = 5\nb = a\na = a + 2\n```\n再看这个例子。通过前两个句子，我们让a,b指向同一个整数对象5( b = a的含义是让引用b指向引用a所指的那一个对象)。但第三个句子实际上对引用a重新赋值，让a指向一个新的对象7。此时a,b分别指向不同的对象。我们看到，即使是多个引用指向同一个对象，如果一个引用值发生变化，那么实际上是让这个引用指向一个新的引用，并不影响其他的引用的指向。从效果上看，就是各个引用各自独立，互不影响。\n其它数据对象也是如此:\n```\nL1 = [1,2,3]\nL2 = L1\nL1 = 1\n```\n但注意以下情况:\n```\nL1 = [1,2,3]\nL2 = L1\nL1[0] = 10\nprint(L2)\n```\n在该情况下，我们不再对L1这一引用赋值，而是对L1所指向的表的元素赋值。结果是，L2也同时发生变化。\n原因何在呢？因为L1，L2的指向没有发生变化，依然指向那个表。表实际上是包含了多个引用的对象（每个引用是一个元素，比如L1[0]，L1[1]..., 每个引用指向一个对象，比如1,2,3), 。而L1[0] = 10这一赋值操作，并不是改变L1的指向，而是对L1[0], 也就是表对象的一部份(一个元素)，进行操作，所以所有指向该对象的引用都受到影响。\n（与之形成对比的是，我们之前的赋值操作都没有对对象自身发生作用，只是改变引用指向。）\n列表可以通过引用其元素，改变对象自身(in-place change)。这种对象类型，称为可变数据对象(mutable object)，词典也是这样的数据类型。\n而像之前的数字和字符串，不能改变对象本身，只能改变引用的指向，称为不可变数据对象(immutable object)。\n我们之前学的元组(tuple)，尽管可以调用引用元素，但不可以赋值，因此不能改变对象自身，所以也算是immutable object。\n## 2、从动态类型看函数的参数传递\n函数的参数传递，本质上传递的是引用。比如说：\n```\ndef f(x):\n    x = 100\n    print(x)\n\na = 1\nf(a)\nprint(a)\n```\n参数x是一个新的引用，指向a所指的对象。如果参数是不可变(immutable)的对象，a和x引用之间相互独立。对参数x的操作不会影响引用a。这样的传递类似于C语言中的值传递。\n如果传递的是可变(mutable)的对象，那么改变函数参数，有可能改变原对象。所有指向原对象的引用都会受影响，编程的时候要对此问题留心。比如说：\n```\ndef f(x):\n    x[0] = 100\n    print(x)\n\na = [1,2,3]\nf(a)\nprint(a)\n```\n动态类型是Python的核心机制之一。可以在应用中慢慢熟悉。\n","slug":"python进阶","published":1,"updated":"2017-07-30T08:41:50.242Z","_id":"cj5qh1za00000wk943bkcmcu2","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"一、循环设计\"><a href=\"#一、循环设计\" class=\"headerlink\" title=\"一、循环设计\"></a>一、循环设计</h1><p>在上一节，我们已经讨论了Python基本的语法。这一节，我们将接触更加灵活的循环方式。</p>\n<h2 id=\"1、range\"><a href=\"#1、range\" class=\"headerlink\" title=\"1、range()\"></a>1、range()</h2><p>在Python中，for循环后的in跟随一个序列的话，循环每次使用的序列元素，而不是序列的下标。<br>之前我们已经使用过 range() 来控制for循环。现在，我们继续开发range的功能，以实现下标对循环的控制：<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">S = <span class=\"string\">'abcdefghijk'</span></div><div class=\"line\"><span class=\"keyword\">for</span> i in <span class=\"keyword\">range</span>(<span class=\"number\">0</span>,<span class=\"built_in\">len</span>(S),<span class=\"number\">2</span>):</div><div class=\"line\">    <span class=\"built_in\">print</span>(S[i])</div></pre></td></tr></table></figure></p>\n<p>在该例子中，我们利用 len() 函数和 range() 函数，用 i 作为 S 序列的下标来控制循环。在range函数中，分别定义上限，下限和每次循环的步长。这就和C语言中的for循环相类似了。<br><a id=\"more\"></a></p>\n<h2 id=\"2、enumerate\"><a href=\"#2、enumerate\" class=\"headerlink\" title=\"2、enumerate()\"></a>2、enumerate()</h2><p>利用enumerate()函数，可以在每次循环中同时得到下标和元素：<br><figure class=\"highlight fortran\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">S = <span class=\"string\">'abcdefghijk'</span></div><div class=\"line\">for (<span class=\"built_in\">index</span>,<span class=\"built_in\">char</span>) <span class=\"keyword\">in</span> enumerate(S):</div><div class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"built_in\">index</span>)</div><div class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"built_in\">char</span>)</div></pre></td></tr></table></figure></p>\n<p>实际上，enumerate()在每次循环中，返回的是一个包含两个元素的定值表(tuple)，两个元素分别赋予index和char。</p>\n<h2 id=\"3、zip\"><a href=\"#3、zip\" class=\"headerlink\" title=\"3、zip()\"></a>3、zip()</h2><p>如果你多个等长的序列，然后想要每次循环时从各个序列分别取出一个元素，可以利用zip()方便地实现：<br><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">ta = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]</div><div class=\"line\">tb = [<span class=\"number\">9</span>,<span class=\"number\">8</span>,<span class=\"number\">7</span>]</div><div class=\"line\">tc = [<span class=\"string\">'a'</span>,<span class=\"string\">'b'</span>,<span class=\"string\">'c'</span>]</div><div class=\"line\"><span class=\"keyword\">for</span> (<span class=\"selector-tag\">a</span>,<span class=\"selector-tag\">b</span>,c) <span class=\"keyword\">in</span> zip(ta,tb,tc):</div><div class=\"line\">    print(<span class=\"selector-tag\">a</span>,<span class=\"selector-tag\">b</span>,c)</div></pre></td></tr></table></figure></p>\n<p>每次循环时，从各个序列分别从左到右取出一个元素，合并成一个tuple，然后tuple的元素赋予给a,b,c 。<br>zip()函数的功能，就是从多个列表中，依次各取出一个元素。每次取出的(来自不同列表的)元素合成一个元组，合并成的元组放入zip()返回的列表中。zip()函数起到了聚合列表的功能。<br>我们可以分解聚合后的列表，如下:<br><figure class=\"highlight makefile\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">ta = [1,2,3]</div><div class=\"line\">tb = [9,8,7]</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># cluster</span></div><div class=\"line\">zipped = zip(ta,tb)</div><div class=\"line\">print(zipped)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># decompose</span></div><div class=\"line\">na, nb = zip(*zipped)</div><div class=\"line\">print(na, nb)</div></pre></td></tr></table></figure></p>\n<h1 id=\"二、循环对象\"><a href=\"#二、循环对象\" class=\"headerlink\" title=\"二、循环对象\"></a>二、循环对象</h1><p>这一讲的主要目的是为了大家在读Python程序的时候对循环对象有一个基本概念。<br>循环对象的并不是随着Python的诞生就存在的，但它的发展迅速，特别是Python 3x的时代，循环对象正在成为循环的标准形式。</p>\n<h2 id=\"1、什么是循环对象\"><a href=\"#1、什么是循环对象\" class=\"headerlink\" title=\"1、什么是循环对象\"></a>1、什么是循环对象</h2><p>循环对象是这样一个对象，它包含有一个next()方法 ( <strong>next</strong>() 方法，在python 3x中 )， 这个方法的目的是进行到下一个结果，而在结束一系列结果之后，举出StopIteration错误。<br>当一个循环结构（比如for）调用循环对象时，它就会每次循环的时候调用next()方法，直到StopIteration出现，for循环接收到，就知道循环已经结束，停止调用next()。<br>假设我们有一个test.txt的文件:<br><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"number\">1234</span></div><div class=\"line\">abcd</div><div class=\"line\">efg</div></pre></td></tr></table></figure></p>\n<p>我们运行一下python命令行：<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&gt;&gt;</span>&gt;f = open(<span class=\"string\">'test.txt'</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">&gt;&gt;</span>&gt;f.next()</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">&gt;&gt;</span>&gt;f.next()</div><div class=\"line\"></div><div class=\"line\">...</div></pre></td></tr></table></figure></p>\n<p>不断输入<code>f.next()</code>，直到最后出现<code>StopIteration</code> 。<br>open()返回的实际上是一个循环对象，包含有next()方法。而该next()方法每次返回的就是新的一行的内容，到达文件结尾时举出StopIteration。这样，我们相当于手工进行了循环。<br>自动进行的话，就是：<br><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">for</span> <span class=\"keyword\">line</span> <span class=\"keyword\">in</span> <span class=\"keyword\">open</span>('<span class=\"keyword\">test</span>.txt'):</div><div class=\"line\">    <span class=\"keyword\">print</span>(<span class=\"keyword\">line</span>)</div></pre></td></tr></table></figure></p>\n<p>在这里，for结构自动调用<code>next()</code>方法，将该方法的返回值赋予给line。循环直到出现<code>StopIteration</code>的时候结束。<br>相对于序列，用循环对象的好处在于：不用在循环还没有开始的时候，就生成好要使用的元素。所使用的元素可以在循环过程中逐次生成。这样，节省了空间，提高了效率，编程更灵活。</p>\n<h2 id=\"2、迭代器\"><a href=\"#2、迭代器\" class=\"headerlink\" title=\"2、迭代器\"></a>2、迭代器</h2><p>从技术上来说，循环对象和for循环调用之间还有一个中间层，就是要将循环对象转换成迭代器(iterator)。这一转换是通过使用iter()函数实现的。但从逻辑层面上，常常可以忽略这一层，所以循环对象和迭代器常常相互指代对方。</p>\n<h2 id=\"3、生成器\"><a href=\"#3、生成器\" class=\"headerlink\" title=\"3、生成器\"></a>3、生成器</h2><p>生成器(generator)的主要目的是构成一个用户自定义的循环对象。<br>生成器的编写方法和函数定义类似，只是在return的地方改为yield。生成器中可以有多个yield。当生成器遇到一个yield时，会暂停运行生成器，返回<code>yield</code>后面的值。当再次调用生成器的时候，会从刚才暂停的地方继续运行，直到下一个yield。生成器自身又构成一个循环器，每次循环使用一个<code>yield</code>返回的值。<br>下面是一个生成器:<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">gen</span><span class=\"params\">()</span></span>:</div><div class=\"line\">    a = <span class=\"number\">100</span></div><div class=\"line\">    <span class=\"keyword\">yield</span> a</div><div class=\"line\">    a = a*<span class=\"number\">8</span></div><div class=\"line\">    <span class=\"keyword\">yield</span> a</div><div class=\"line\">    <span class=\"keyword\">yield</span> <span class=\"number\">1000</span></div></pre></td></tr></table></figure></p>\n<p>该生成器共有三个<code>yield</code>， 如果用作循环器时，会进行三次循环。<br><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> gen():</div><div class=\"line\">    <span class=\"builtin-name\">print</span>(i)</div></pre></td></tr></table></figure></p>\n<p>再考虑如下一个生成器:<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">gen</span><span class=\"params\">()</span></span>:</div><div class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">4</span>):</div><div class=\"line\">        <span class=\"keyword\">yield</span> i</div></pre></td></tr></table></figure></p>\n<p>它又可以写成生成器表达式(Generator Expression)：<br><figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">G = (x <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> <span class=\"keyword\">range</span>(<span class=\"number\">4</span>))</div></pre></td></tr></table></figure></p>\n<p>生成器表达式是生成器的一种简便的编写方式。读者可进一步查阅。</p>\n<h2 id=\"4、表推导\"><a href=\"#4、表推导\" class=\"headerlink\" title=\"4、表推导\"></a>4、表推导</h2><p>表推导(list comprehension)是快速生成表的方法。它的语法简单，很有实用价值。<br>假设我们生成表 L ：<br><figure class=\"highlight maxima\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">L = []</div><div class=\"line\"><span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">10</span>):</div><div class=\"line\">    L.<span class=\"built_in\">append</span>(x**<span class=\"number\">2</span>)</div></pre></td></tr></table></figure></p>\n<p>以上产生了表L，但实际上有快捷的写法，也就是表推导的方式:<br><figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">L = [x**<span class=\"number\">2</span> <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> <span class=\"keyword\">range</span>(<span class=\"number\">10</span>)]</div></pre></td></tr></table></figure></p>\n<p>这与生成器表达式类似，只不过用的是中括号。<br>（表推导的机制实际上是利用循环对象，有兴趣可以查阅。）</p>\n<h1 id=\"三、函数对象\"><a href=\"#三、函数对象\" class=\"headerlink\" title=\"三、函数对象\"></a>三、函数对象</h1><p>秉承着一切皆对象的理念，我们再次回头来看函数(function)。函数也是一个对象，具有属性（可以使用dir()查询）。作为对象，它还可以赋值给其它对象名，或者作为参数传递。</p>\n<h2 id=\"1、lambda函数\"><a href=\"#1、lambda函数\" class=\"headerlink\" title=\"1、lambda函数\"></a>1、lambda函数</h2><p>在展开之前，我们先提一下lambda函数。可以利用lambda函数的语法，定义函数。lambda例子如下：<br><figure class=\"highlight autoit\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> = <span class=\"title\">lambda</span> <span class=\"title\">x</span>,<span class=\"title\">y</span>: <span class=\"title\">x</span> + <span class=\"title\">y</span></span></div><div class=\"line\">print(<span class=\"function\"><span class=\"keyword\">func</span><span class=\"params\">(<span class=\"number\">3</span>,<span class=\"number\">4</span>)</span>)</span></div></pre></td></tr></table></figure></p>\n<p>lambda生成一个函数对象。该函数参数为x,y，返回值为x+y。函数对象赋给func。func的调用与正常函数无异。<br>以上定义可以写成以下形式：<br><figure class=\"highlight autoit\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">def <span class=\"function\"><span class=\"keyword\">func</span><span class=\"params\">(x, y)</span>:</span></div><div class=\"line\">    <span class=\"keyword\">return</span> x + y</div></pre></td></tr></table></figure></p>\n<h2 id=\"2、函数作为参数传递\"><a href=\"#2、函数作为参数传递\" class=\"headerlink\" title=\"2、函数作为参数传递\"></a>2、函数作为参数传递</h2><p>函数可以作为一个对象，进行参数传递。函数名(比如func)即该对象。比如说:<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">test</span><span class=\"params\">(f, a, b)</span>:</span></div><div class=\"line\">    print(<span class=\"string\">'test'</span>)</div><div class=\"line\">    print(f(a, b))</div><div class=\"line\"></div><div class=\"line\">test(func, <span class=\"number\">3</span>, <span class=\"number\">5</span>)</div></pre></td></tr></table></figure></p>\n<p>test函数的第一个参数f就是一个函数对象。将func传递给f，test中的f()就拥有了func()的功能。<br>我们因此可以提高程序的灵活性。可以使用上面的test函数，带入不同的函数参数。比如:<br><figure class=\"highlight lisp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">test((<span class=\"name\">lambda</span> x,y: x**2 + y), <span class=\"number\">6</span>, <span class=\"number\">9</span>)</div></pre></td></tr></table></figure></p>\n<h2 id=\"3、map-函数\"><a href=\"#3、map-函数\" class=\"headerlink\" title=\"3、map()函数\"></a>3、map()函数</h2><p>map()是Python的内置函数。它的第一个参数是一个函数对象。<br><figure class=\"highlight lisp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">re = map((<span class=\"name\">lambda</span> x: x+3),[<span class=\"number\">1</span>,<span class=\"number\">3</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>])</div></pre></td></tr></table></figure></p>\n<p>这里，map()有两个参数，一个是lambda所定义的函数对象，一个是包含有多个元素的表。map()的功能是将函数对象依次作用于表的每一个元素，每次作用的结果储存于返回的表re中。map通过读入的函数(这里是lambda函数)来操作数据（这里“数据”是表中的每一个元素，“操作”是对每个数据加3）。<br>在Python 3.X中，map()的返回值是一个循环对象。可以利用list()函数，将该循环对象转换成表。<br>如果作为参数的函数对象有多个参数，可使用下面的方式，向map()传递函数参数的多个参数：<br><figure class=\"highlight lisp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">re = map((<span class=\"name\">lambda</span> x,y: x+y),[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>],[<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">9</span>])</div></pre></td></tr></table></figure></p>\n<p><code>map()</code>将每次从两个表中分别取出一个元素，带入lambda所定义的函数。</p>\n<h2 id=\"4、filter-函数\"><a href=\"#4、filter-函数\" class=\"headerlink\" title=\"4、filter()函数\"></a>4、filter()函数</h2><p>filter函数的第一个参数也是一个函数对象。它也是将作为参数的函数对象作用于多个元素。如果函数对象返回的是True，则该次的元素被储存于返回的表中。 filter通过读入的函数来筛选数据。同样，在Python 3.X中，filter返回的不是表，而是循环对象。<br>filter函数的使用如下例:<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">func</span><span class=\"params\">(a)</span>:</span></div><div class=\"line\">    <span class=\"keyword\">if</span> a &gt; <span class=\"number\">100</span>:</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">True</span></div><div class=\"line\">    <span class=\"keyword\">else</span>:</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">False</span></div><div class=\"line\"></div><div class=\"line\">print(filter(func,[<span class=\"number\">10</span>,<span class=\"number\">56</span>,<span class=\"number\">101</span>,<span class=\"number\">500</span>])</div></pre></td></tr></table></figure></p>\n<h2 id=\"5、reduce-函数\"><a href=\"#5、reduce-函数\" class=\"headerlink\" title=\"5、reduce()函数\"></a>5、reduce()函数</h2><p>reduce函数的第一个参数也是函数，但有一个要求，就是这个函数自身能接收两个参数。reduce可以累进地将函数作用于各个参数。如下例：<br><figure class=\"highlight lisp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">print(<span class=\"name\">reduce</span>((<span class=\"name\">lambda</span> x,y: x+y),[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">5</span>,<span class=\"number\">7</span>,<span class=\"number\">9</span>])</div></pre></td></tr></table></figure></p>\n<p>reduce的第一个参数是lambda函数，它接收两个参数x,y, 返回x+y。<br>reduce将表中的前两个元素(1和2)传递给lambda函数，得到3。该返回值(3)将作为lambda函数的第一个参数，而表中的下一个元素(5)作为lambda函数的第二个参数，进行下一次的对lambda函数的调用，得到8。依次调用lambda函数，每次lambda函数的第一个参数是上一次运算结果，而第二个参数为表中的下一个元素，直到表中没有剩余元素。<br>上面例子，相当于(((1+2)+5)+7)+9<br>提醒： reduce()函数在3.0里面不能直接用的，它被定义在了functools包里面，需要引入包。</p>\n<h1 id=\"四、错误处理\"><a href=\"#四、错误处理\" class=\"headerlink\" title=\"四、错误处理\"></a>四、错误处理</h1><h2 id=\"1、异常处理\"><a href=\"#1、异常处理\" class=\"headerlink\" title=\"1、异常处理\"></a>1、异常处理</h2><p>在项目开发中，异常处理是不可或缺的。异常处理帮助人们debug，通过更加丰富的信息，让人们更容易找到bug的所在。异常处理还可以提高程序的容错性。<br>我们之前在讲循环对象的时候，曾提到一个StopIteration的异常，该异常是在循环对象穷尽所有元素时的报错。<br>我们以它为例，来说明基本的异常处理。<br>一个包含异常的程序:<br><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">re = iter(range(<span class=\"number\">5</span>))</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">for</span> <span class=\"selector-tag\">i</span> <span class=\"keyword\">in</span> range(<span class=\"number\">100</span>):</div><div class=\"line\">    print(re.next())</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"title\">print</span><span class=\"params\">(<span class=\"string\">'HaHaHaHa'</span>)</span></span></div></pre></td></tr></table></figure></p>\n<p>首先，我们定义了一个循环对象re，该循环对象将进行5次循环，每次使用序列的一个元素。<br>在随后的for循环中，我们手工调用next()函数。当循环进行到第6次的时候，re.next()不会再返回元素，而是抛出(raise)StopIteration的异常。整个程序将会中断。<br>我们可以修改以上异常程序，直到完美的没有bug。但另一方面，如果我们在写程序的时候，知道这里可能犯错以及可能的犯错类型，我们可以针对该异常类型定义好”应急预案”。<br><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">re = iter(<span class=\"built_in\">range</span>(<span class=\"number\">5</span>))</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">try</span>:</div><div class=\"line\">    <span class=\"keyword\">for</span> i in <span class=\"built_in\">range</span>(<span class=\"number\">100</span>):</div><div class=\"line\">        <span class=\"keyword\">print</span>(re.<span class=\"keyword\">next</span>()</div><div class=\"line\">except StopIteration:</div><div class=\"line\">    <span class=\"keyword\">print</span>(<span class=\"string\">'here is end '</span>,i)</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">print</span>(<span class=\"string\">'HaHaHaHa'</span>)</div></pre></td></tr></table></figure></p>\n<p>在try程序段中，我们放入容易犯错的部分。我们可以跟上except，来说明如果在try部分的语句发生StopIteration时，程序该做的事情。如果没有发生异常，则except部分被跳过。<br>随后，程序将继续运行，而不是彻底中断。<br>完整的语法结构如下：<br><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">try</span>:</div><div class=\"line\">    <span class=\"keyword\">...</span></div><div class=\"line\">except exception1:</div><div class=\"line\">    <span class=\"keyword\">...</span></div><div class=\"line\">except exception2:</div><div class=\"line\">    <span class=\"keyword\">...</span></div><div class=\"line\">except:</div><div class=\"line\">    <span class=\"keyword\">...</span></div><div class=\"line\"><span class=\"keyword\">else</span>:</div><div class=\"line\">    <span class=\"keyword\">...</span></div><div class=\"line\">finally:</div><div class=\"line\">    <span class=\"keyword\">...</span></div></pre></td></tr></table></figure></p>\n<p>如果try中有异常发生时，将执行异常的归属，执行except。异常层层比较，看是否是exception1, exception2…，直到找到其归属，执行相应的except中的语句。如果except后面没有任何参数，那么表示所有的exception都交给这段程序处理。比如:<br><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">try:</div><div class=\"line\">    <span class=\"builtin-name\">print</span>(a<span class=\"number\">*2</span>)</div><div class=\"line\">except TypeError:</div><div class=\"line\">    <span class=\"builtin-name\">print</span>(<span class=\"string\">\"TypeError\"</span>)</div><div class=\"line\">except:</div><div class=\"line\">    <span class=\"builtin-name\">print</span>(<span class=\"string\">\"Not Type Error &amp; Error noted\"</span>)</div></pre></td></tr></table></figure></p>\n<p>由于a没有定义，所以是NameError。异常最终被except:部分的程序捕捉。<br>如果无法将异常交给合适的对象，异常将继续向上层抛出，直到被捕捉或者造成主程序报错。比如下面的程序：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">test_func</span><span class=\"params\">()</span>:</span></div><div class=\"line\">    <span class=\"keyword\">try</span>:</div><div class=\"line\">        m = <span class=\"number\">1</span>/<span class=\"number\">0</span></div><div class=\"line\">    <span class=\"keyword\">except</span> NameError:</div><div class=\"line\">        print(<span class=\"string\">\"Catch NameError in the sub-function\"</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">try</span>:</div><div class=\"line\">    test_func()</div><div class=\"line\"><span class=\"keyword\">except</span> ZeroDivisionError:</div><div class=\"line\">    print(<span class=\"string\">\"Catch error in the main program\"</span>)</div></pre></td></tr></table></figure></p>\n<p>子程序的try…except…结构无法处理相应的除以0的错误，所以错误被抛给上层的主程序。<br>如果try中没有异常，那么except部分将跳过，执行else中的语句。<br>finally是无论是否有异常，最后都要做的一些事情。<br>流程如下:<br>  ● try-&gt;异常-&gt;except-&gt;finally<br>  ● try-&gt;无异常-&gt;else-&gt;finally</p>\n<h2 id=\"2、抛出异常\"><a href=\"#2、抛出异常\" class=\"headerlink\" title=\"2、抛出异常\"></a>2、抛出异常</h2><p>我们也可以自己写一个抛出异常的例子:<br><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"title\">print</span><span class=\"params\">(<span class=\"string\">'Lalala'</span>)</span></span></div><div class=\"line\">raise StopIteration</div><div class=\"line\"><span class=\"function\"><span class=\"title\">print</span><span class=\"params\">(<span class=\"string\">'Hahaha'</span>)</span></span></div></pre></td></tr></table></figure></p>\n<p>这个例子不具备任何实际意义。只是为了说明raise语句的作用。<br>StopIteration是一个类。抛出异常时，会自动有一个中间环节，就是生成StopIteration的一个对象。Python实际上抛出的，是这个对象。当然，也可以自行生成对象:<br><figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">raise</span> StopIteration()</div></pre></td></tr></table></figure></p>\n<h1 id=\"五、动态类型\"><a href=\"#五、动态类型\" class=\"headerlink\" title=\"五、动态类型\"></a>五、动态类型</h1><p>动态类型(dynamic typing)是Python另一个重要的核心概念。我们之前说过，Python的变量(variable)不需要声明，而在赋值时，变量可以重新赋值为任意值。这些都与动态类型的概念相关。</p>\n<h2 id=\"1、动态类型\"><a href=\"#1、动态类型\" class=\"headerlink\" title=\"1、动态类型\"></a>1、动态类型</h2><p>在我们接触的对象中，有一类特殊的对象，是用于存储数据的。常见的该类对象包括各种数字，字符串，表，词典。在C语言中，我们称这样一些数据结构为变量。而在Python中，这些是对象。<br>对象是储存在内存中的实体。但我们并不能直接接触到该对象。我们在程序中写的对象名，只是指向这一对象的引用(reference)。<br>引用和对象分离，是动态类型的核心。引用可以随时指向一个新的对象：<br><figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">a</span> = <span class=\"number\">3</span></div><div class=\"line\"><span class=\"attr\">a</span> = <span class=\"string\">'at'</span></div></pre></td></tr></table></figure></p>\n<p>第一个语句中，3是储存在内存中的一个整数对象。通过赋值，引用a指向对象3。<br>第二个语句中，内存中建立对象‘at’，是一个字符串(string)。引用a指向了’at’。此时，对象3不再有引用指向它。Python会自动将没有引用指向的对象销毁(destruct)，释放相应内存。<br>(对于小的整数和短字符串，Python会缓存这些对象，而不是频繁的建立和销毁。)<br><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">a</span> = <span class=\"number\">5</span></div><div class=\"line\"><span class=\"selector-tag\">b</span> = <span class=\"selector-tag\">a</span></div><div class=\"line\"><span class=\"selector-tag\">a</span> = <span class=\"selector-tag\">a</span> + <span class=\"number\">2</span></div></pre></td></tr></table></figure></p>\n<p>再看这个例子。通过前两个句子，我们让a,b指向同一个整数对象5( b = a的含义是让引用b指向引用a所指的那一个对象)。但第三个句子实际上对引用a重新赋值，让a指向一个新的对象7。此时a,b分别指向不同的对象。我们看到，即使是多个引用指向同一个对象，如果一个引用值发生变化，那么实际上是让这个引用指向一个新的引用，并不影响其他的引用的指向。从效果上看，就是各个引用各自独立，互不影响。<br>其它数据对象也是如此:<br><figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">L1</span> = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]</div><div class=\"line\"><span class=\"attr\">L2</span> = L1</div><div class=\"line\"><span class=\"attr\">L1</span> = <span class=\"number\">1</span></div></pre></td></tr></table></figure></p>\n<p>但注意以下情况:<br><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">L1 = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]</div><div class=\"line\">L2 = L1</div><div class=\"line\">L1[<span class=\"number\">0</span>] = <span class=\"number\">10</span></div><div class=\"line\">print(L2)</div></pre></td></tr></table></figure></p>\n<p>在该情况下，我们不再对L1这一引用赋值，而是对L1所指向的表的元素赋值。结果是，L2也同时发生变化。<br>原因何在呢？因为L1，L2的指向没有发生变化，依然指向那个表。表实际上是包含了多个引用的对象（每个引用是一个元素，比如L1[0]，L1[1]…, 每个引用指向一个对象，比如1,2,3), 。而L1[0] = 10这一赋值操作，并不是改变L1的指向，而是对L1[0], 也就是表对象的一部份(一个元素)，进行操作，所以所有指向该对象的引用都受到影响。<br>（与之形成对比的是，我们之前的赋值操作都没有对对象自身发生作用，只是改变引用指向。）<br>列表可以通过引用其元素，改变对象自身(in-place change)。这种对象类型，称为可变数据对象(mutable object)，词典也是这样的数据类型。<br>而像之前的数字和字符串，不能改变对象本身，只能改变引用的指向，称为不可变数据对象(immutable object)。<br>我们之前学的元组(tuple)，尽管可以调用引用元素，但不可以赋值，因此不能改变对象自身，所以也算是immutable object。</p>\n<h2 id=\"2、从动态类型看函数的参数传递\"><a href=\"#2、从动态类型看函数的参数传递\" class=\"headerlink\" title=\"2、从动态类型看函数的参数传递\"></a>2、从动态类型看函数的参数传递</h2><p>函数的参数传递，本质上传递的是引用。比如说：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">f</span><span class=\"params\">(x)</span>:</span></div><div class=\"line\">    x = <span class=\"number\">100</span></div><div class=\"line\">    print(x)</div><div class=\"line\"></div><div class=\"line\">a = <span class=\"number\">1</span></div><div class=\"line\">f(a)</div><div class=\"line\">print(a)</div></pre></td></tr></table></figure></p>\n<p>参数x是一个新的引用，指向a所指的对象。如果参数是不可变(immutable)的对象，a和x引用之间相互独立。对参数x的操作不会影响引用a。这样的传递类似于C语言中的值传递。<br>如果传递的是可变(mutable)的对象，那么改变函数参数，有可能改变原对象。所有指向原对象的引用都会受影响，编程的时候要对此问题留心。比如说：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">f</span><span class=\"params\">(x)</span>:</span></div><div class=\"line\">    x[<span class=\"number\">0</span>] = <span class=\"number\">100</span></div><div class=\"line\">    print(x)</div><div class=\"line\"></div><div class=\"line\">a = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]</div><div class=\"line\">f(a)</div><div class=\"line\">print(a)</div></pre></td></tr></table></figure></p>\n<p>动态类型是Python的核心机制之一。可以在应用中慢慢熟悉。</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"一、循环设计\"><a href=\"#一、循环设计\" class=\"headerlink\" title=\"一、循环设计\"></a>一、循环设计</h1><p>在上一节，我们已经讨论了Python基本的语法。这一节，我们将接触更加灵活的循环方式。</p>\n<h2 id=\"1、range\"><a href=\"#1、range\" class=\"headerlink\" title=\"1、range()\"></a>1、range()</h2><p>在Python中，for循环后的in跟随一个序列的话，循环每次使用的序列元素，而不是序列的下标。<br>之前我们已经使用过 range() 来控制for循环。现在，我们继续开发range的功能，以实现下标对循环的控制：<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">S = <span class=\"string\">'abcdefghijk'</span></div><div class=\"line\"><span class=\"keyword\">for</span> i in <span class=\"keyword\">range</span>(<span class=\"number\">0</span>,<span class=\"built_in\">len</span>(S),<span class=\"number\">2</span>):</div><div class=\"line\">    <span class=\"built_in\">print</span>(S[i])</div></pre></td></tr></table></figure></p>\n<p>在该例子中，我们利用 len() 函数和 range() 函数，用 i 作为 S 序列的下标来控制循环。在range函数中，分别定义上限，下限和每次循环的步长。这就和C语言中的for循环相类似了。<br>","more":"</p>\n<h2 id=\"2、enumerate\"><a href=\"#2、enumerate\" class=\"headerlink\" title=\"2、enumerate()\"></a>2、enumerate()</h2><p>利用enumerate()函数，可以在每次循环中同时得到下标和元素：<br><figure class=\"highlight fortran\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">S = <span class=\"string\">'abcdefghijk'</span></div><div class=\"line\">for (<span class=\"built_in\">index</span>,<span class=\"built_in\">char</span>) <span class=\"keyword\">in</span> enumerate(S):</div><div class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"built_in\">index</span>)</div><div class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"built_in\">char</span>)</div></pre></td></tr></table></figure></p>\n<p>实际上，enumerate()在每次循环中，返回的是一个包含两个元素的定值表(tuple)，两个元素分别赋予index和char。</p>\n<h2 id=\"3、zip\"><a href=\"#3、zip\" class=\"headerlink\" title=\"3、zip()\"></a>3、zip()</h2><p>如果你多个等长的序列，然后想要每次循环时从各个序列分别取出一个元素，可以利用zip()方便地实现：<br><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">ta = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]</div><div class=\"line\">tb = [<span class=\"number\">9</span>,<span class=\"number\">8</span>,<span class=\"number\">7</span>]</div><div class=\"line\">tc = [<span class=\"string\">'a'</span>,<span class=\"string\">'b'</span>,<span class=\"string\">'c'</span>]</div><div class=\"line\"><span class=\"keyword\">for</span> (<span class=\"selector-tag\">a</span>,<span class=\"selector-tag\">b</span>,c) <span class=\"keyword\">in</span> zip(ta,tb,tc):</div><div class=\"line\">    print(<span class=\"selector-tag\">a</span>,<span class=\"selector-tag\">b</span>,c)</div></pre></td></tr></table></figure></p>\n<p>每次循环时，从各个序列分别从左到右取出一个元素，合并成一个tuple，然后tuple的元素赋予给a,b,c 。<br>zip()函数的功能，就是从多个列表中，依次各取出一个元素。每次取出的(来自不同列表的)元素合成一个元组，合并成的元组放入zip()返回的列表中。zip()函数起到了聚合列表的功能。<br>我们可以分解聚合后的列表，如下:<br><figure class=\"highlight makefile\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">ta = [1,2,3]</div><div class=\"line\">tb = [9,8,7]</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># cluster</span></div><div class=\"line\">zipped = zip(ta,tb)</div><div class=\"line\">print(zipped)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># decompose</span></div><div class=\"line\">na, nb = zip(*zipped)</div><div class=\"line\">print(na, nb)</div></pre></td></tr></table></figure></p>\n<h1 id=\"二、循环对象\"><a href=\"#二、循环对象\" class=\"headerlink\" title=\"二、循环对象\"></a>二、循环对象</h1><p>这一讲的主要目的是为了大家在读Python程序的时候对循环对象有一个基本概念。<br>循环对象的并不是随着Python的诞生就存在的，但它的发展迅速，特别是Python 3x的时代，循环对象正在成为循环的标准形式。</p>\n<h2 id=\"1、什么是循环对象\"><a href=\"#1、什么是循环对象\" class=\"headerlink\" title=\"1、什么是循环对象\"></a>1、什么是循环对象</h2><p>循环对象是这样一个对象，它包含有一个next()方法 ( <strong>next</strong>() 方法，在python 3x中 )， 这个方法的目的是进行到下一个结果，而在结束一系列结果之后，举出StopIteration错误。<br>当一个循环结构（比如for）调用循环对象时，它就会每次循环的时候调用next()方法，直到StopIteration出现，for循环接收到，就知道循环已经结束，停止调用next()。<br>假设我们有一个test.txt的文件:<br><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"number\">1234</span></div><div class=\"line\">abcd</div><div class=\"line\">efg</div></pre></td></tr></table></figure></p>\n<p>我们运行一下python命令行：<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&gt;&gt;</span>&gt;f = open(<span class=\"string\">'test.txt'</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">&gt;&gt;</span>&gt;f.next()</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">&gt;&gt;</span>&gt;f.next()</div><div class=\"line\"></div><div class=\"line\">...</div></pre></td></tr></table></figure></p>\n<p>不断输入<code>f.next()</code>，直到最后出现<code>StopIteration</code> 。<br>open()返回的实际上是一个循环对象，包含有next()方法。而该next()方法每次返回的就是新的一行的内容，到达文件结尾时举出StopIteration。这样，我们相当于手工进行了循环。<br>自动进行的话，就是：<br><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">for</span> <span class=\"keyword\">line</span> <span class=\"keyword\">in</span> <span class=\"keyword\">open</span>('<span class=\"keyword\">test</span>.txt'):</div><div class=\"line\">    <span class=\"keyword\">print</span>(<span class=\"keyword\">line</span>)</div></pre></td></tr></table></figure></p>\n<p>在这里，for结构自动调用<code>next()</code>方法，将该方法的返回值赋予给line。循环直到出现<code>StopIteration</code>的时候结束。<br>相对于序列，用循环对象的好处在于：不用在循环还没有开始的时候，就生成好要使用的元素。所使用的元素可以在循环过程中逐次生成。这样，节省了空间，提高了效率，编程更灵活。</p>\n<h2 id=\"2、迭代器\"><a href=\"#2、迭代器\" class=\"headerlink\" title=\"2、迭代器\"></a>2、迭代器</h2><p>从技术上来说，循环对象和for循环调用之间还有一个中间层，就是要将循环对象转换成迭代器(iterator)。这一转换是通过使用iter()函数实现的。但从逻辑层面上，常常可以忽略这一层，所以循环对象和迭代器常常相互指代对方。</p>\n<h2 id=\"3、生成器\"><a href=\"#3、生成器\" class=\"headerlink\" title=\"3、生成器\"></a>3、生成器</h2><p>生成器(generator)的主要目的是构成一个用户自定义的循环对象。<br>生成器的编写方法和函数定义类似，只是在return的地方改为yield。生成器中可以有多个yield。当生成器遇到一个yield时，会暂停运行生成器，返回<code>yield</code>后面的值。当再次调用生成器的时候，会从刚才暂停的地方继续运行，直到下一个yield。生成器自身又构成一个循环器，每次循环使用一个<code>yield</code>返回的值。<br>下面是一个生成器:<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">gen</span><span class=\"params\">()</span></span>:</div><div class=\"line\">    a = <span class=\"number\">100</span></div><div class=\"line\">    <span class=\"keyword\">yield</span> a</div><div class=\"line\">    a = a*<span class=\"number\">8</span></div><div class=\"line\">    <span class=\"keyword\">yield</span> a</div><div class=\"line\">    <span class=\"keyword\">yield</span> <span class=\"number\">1000</span></div></pre></td></tr></table></figure></p>\n<p>该生成器共有三个<code>yield</code>， 如果用作循环器时，会进行三次循环。<br><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> gen():</div><div class=\"line\">    <span class=\"builtin-name\">print</span>(i)</div></pre></td></tr></table></figure></p>\n<p>再考虑如下一个生成器:<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">gen</span><span class=\"params\">()</span></span>:</div><div class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">4</span>):</div><div class=\"line\">        <span class=\"keyword\">yield</span> i</div></pre></td></tr></table></figure></p>\n<p>它又可以写成生成器表达式(Generator Expression)：<br><figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">G = (x <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> <span class=\"keyword\">range</span>(<span class=\"number\">4</span>))</div></pre></td></tr></table></figure></p>\n<p>生成器表达式是生成器的一种简便的编写方式。读者可进一步查阅。</p>\n<h2 id=\"4、表推导\"><a href=\"#4、表推导\" class=\"headerlink\" title=\"4、表推导\"></a>4、表推导</h2><p>表推导(list comprehension)是快速生成表的方法。它的语法简单，很有实用价值。<br>假设我们生成表 L ：<br><figure class=\"highlight maxima\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">L = []</div><div class=\"line\"><span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">10</span>):</div><div class=\"line\">    L.<span class=\"built_in\">append</span>(x**<span class=\"number\">2</span>)</div></pre></td></tr></table></figure></p>\n<p>以上产生了表L，但实际上有快捷的写法，也就是表推导的方式:<br><figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">L = [x**<span class=\"number\">2</span> <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> <span class=\"keyword\">range</span>(<span class=\"number\">10</span>)]</div></pre></td></tr></table></figure></p>\n<p>这与生成器表达式类似，只不过用的是中括号。<br>（表推导的机制实际上是利用循环对象，有兴趣可以查阅。）</p>\n<h1 id=\"三、函数对象\"><a href=\"#三、函数对象\" class=\"headerlink\" title=\"三、函数对象\"></a>三、函数对象</h1><p>秉承着一切皆对象的理念，我们再次回头来看函数(function)。函数也是一个对象，具有属性（可以使用dir()查询）。作为对象，它还可以赋值给其它对象名，或者作为参数传递。</p>\n<h2 id=\"1、lambda函数\"><a href=\"#1、lambda函数\" class=\"headerlink\" title=\"1、lambda函数\"></a>1、lambda函数</h2><p>在展开之前，我们先提一下lambda函数。可以利用lambda函数的语法，定义函数。lambda例子如下：<br><figure class=\"highlight autoit\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> = <span class=\"title\">lambda</span> <span class=\"title\">x</span>,<span class=\"title\">y</span>: <span class=\"title\">x</span> + <span class=\"title\">y</span></span></div><div class=\"line\">print(<span class=\"function\"><span class=\"keyword\">func</span><span class=\"params\">(<span class=\"number\">3</span>,<span class=\"number\">4</span>)</span>)</span></div></pre></td></tr></table></figure></p>\n<p>lambda生成一个函数对象。该函数参数为x,y，返回值为x+y。函数对象赋给func。func的调用与正常函数无异。<br>以上定义可以写成以下形式：<br><figure class=\"highlight autoit\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">def <span class=\"function\"><span class=\"keyword\">func</span><span class=\"params\">(x, y)</span>:</span></div><div class=\"line\">    <span class=\"keyword\">return</span> x + y</div></pre></td></tr></table></figure></p>\n<h2 id=\"2、函数作为参数传递\"><a href=\"#2、函数作为参数传递\" class=\"headerlink\" title=\"2、函数作为参数传递\"></a>2、函数作为参数传递</h2><p>函数可以作为一个对象，进行参数传递。函数名(比如func)即该对象。比如说:<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">test</span><span class=\"params\">(f, a, b)</span>:</span></div><div class=\"line\">    print(<span class=\"string\">'test'</span>)</div><div class=\"line\">    print(f(a, b))</div><div class=\"line\"></div><div class=\"line\">test(func, <span class=\"number\">3</span>, <span class=\"number\">5</span>)</div></pre></td></tr></table></figure></p>\n<p>test函数的第一个参数f就是一个函数对象。将func传递给f，test中的f()就拥有了func()的功能。<br>我们因此可以提高程序的灵活性。可以使用上面的test函数，带入不同的函数参数。比如:<br><figure class=\"highlight lisp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">test((<span class=\"name\">lambda</span> x,y: x**2 + y), <span class=\"number\">6</span>, <span class=\"number\">9</span>)</div></pre></td></tr></table></figure></p>\n<h2 id=\"3、map-函数\"><a href=\"#3、map-函数\" class=\"headerlink\" title=\"3、map()函数\"></a>3、map()函数</h2><p>map()是Python的内置函数。它的第一个参数是一个函数对象。<br><figure class=\"highlight lisp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">re = map((<span class=\"name\">lambda</span> x: x+3),[<span class=\"number\">1</span>,<span class=\"number\">3</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>])</div></pre></td></tr></table></figure></p>\n<p>这里，map()有两个参数，一个是lambda所定义的函数对象，一个是包含有多个元素的表。map()的功能是将函数对象依次作用于表的每一个元素，每次作用的结果储存于返回的表re中。map通过读入的函数(这里是lambda函数)来操作数据（这里“数据”是表中的每一个元素，“操作”是对每个数据加3）。<br>在Python 3.X中，map()的返回值是一个循环对象。可以利用list()函数，将该循环对象转换成表。<br>如果作为参数的函数对象有多个参数，可使用下面的方式，向map()传递函数参数的多个参数：<br><figure class=\"highlight lisp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">re = map((<span class=\"name\">lambda</span> x,y: x+y),[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>],[<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">9</span>])</div></pre></td></tr></table></figure></p>\n<p><code>map()</code>将每次从两个表中分别取出一个元素，带入lambda所定义的函数。</p>\n<h2 id=\"4、filter-函数\"><a href=\"#4、filter-函数\" class=\"headerlink\" title=\"4、filter()函数\"></a>4、filter()函数</h2><p>filter函数的第一个参数也是一个函数对象。它也是将作为参数的函数对象作用于多个元素。如果函数对象返回的是True，则该次的元素被储存于返回的表中。 filter通过读入的函数来筛选数据。同样，在Python 3.X中，filter返回的不是表，而是循环对象。<br>filter函数的使用如下例:<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">func</span><span class=\"params\">(a)</span>:</span></div><div class=\"line\">    <span class=\"keyword\">if</span> a &gt; <span class=\"number\">100</span>:</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">True</span></div><div class=\"line\">    <span class=\"keyword\">else</span>:</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">False</span></div><div class=\"line\"></div><div class=\"line\">print(filter(func,[<span class=\"number\">10</span>,<span class=\"number\">56</span>,<span class=\"number\">101</span>,<span class=\"number\">500</span>])</div></pre></td></tr></table></figure></p>\n<h2 id=\"5、reduce-函数\"><a href=\"#5、reduce-函数\" class=\"headerlink\" title=\"5、reduce()函数\"></a>5、reduce()函数</h2><p>reduce函数的第一个参数也是函数，但有一个要求，就是这个函数自身能接收两个参数。reduce可以累进地将函数作用于各个参数。如下例：<br><figure class=\"highlight lisp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">print(<span class=\"name\">reduce</span>((<span class=\"name\">lambda</span> x,y: x+y),[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">5</span>,<span class=\"number\">7</span>,<span class=\"number\">9</span>])</div></pre></td></tr></table></figure></p>\n<p>reduce的第一个参数是lambda函数，它接收两个参数x,y, 返回x+y。<br>reduce将表中的前两个元素(1和2)传递给lambda函数，得到3。该返回值(3)将作为lambda函数的第一个参数，而表中的下一个元素(5)作为lambda函数的第二个参数，进行下一次的对lambda函数的调用，得到8。依次调用lambda函数，每次lambda函数的第一个参数是上一次运算结果，而第二个参数为表中的下一个元素，直到表中没有剩余元素。<br>上面例子，相当于(((1+2)+5)+7)+9<br>提醒： reduce()函数在3.0里面不能直接用的，它被定义在了functools包里面，需要引入包。</p>\n<h1 id=\"四、错误处理\"><a href=\"#四、错误处理\" class=\"headerlink\" title=\"四、错误处理\"></a>四、错误处理</h1><h2 id=\"1、异常处理\"><a href=\"#1、异常处理\" class=\"headerlink\" title=\"1、异常处理\"></a>1、异常处理</h2><p>在项目开发中，异常处理是不可或缺的。异常处理帮助人们debug，通过更加丰富的信息，让人们更容易找到bug的所在。异常处理还可以提高程序的容错性。<br>我们之前在讲循环对象的时候，曾提到一个StopIteration的异常，该异常是在循环对象穷尽所有元素时的报错。<br>我们以它为例，来说明基本的异常处理。<br>一个包含异常的程序:<br><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">re = iter(range(<span class=\"number\">5</span>))</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">for</span> <span class=\"selector-tag\">i</span> <span class=\"keyword\">in</span> range(<span class=\"number\">100</span>):</div><div class=\"line\">    print(re.next())</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"title\">print</span><span class=\"params\">(<span class=\"string\">'HaHaHaHa'</span>)</span></span></div></pre></td></tr></table></figure></p>\n<p>首先，我们定义了一个循环对象re，该循环对象将进行5次循环，每次使用序列的一个元素。<br>在随后的for循环中，我们手工调用next()函数。当循环进行到第6次的时候，re.next()不会再返回元素，而是抛出(raise)StopIteration的异常。整个程序将会中断。<br>我们可以修改以上异常程序，直到完美的没有bug。但另一方面，如果我们在写程序的时候，知道这里可能犯错以及可能的犯错类型，我们可以针对该异常类型定义好”应急预案”。<br><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">re = iter(<span class=\"built_in\">range</span>(<span class=\"number\">5</span>))</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">try</span>:</div><div class=\"line\">    <span class=\"keyword\">for</span> i in <span class=\"built_in\">range</span>(<span class=\"number\">100</span>):</div><div class=\"line\">        <span class=\"keyword\">print</span>(re.<span class=\"keyword\">next</span>()</div><div class=\"line\">except StopIteration:</div><div class=\"line\">    <span class=\"keyword\">print</span>(<span class=\"string\">'here is end '</span>,i)</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">print</span>(<span class=\"string\">'HaHaHaHa'</span>)</div></pre></td></tr></table></figure></p>\n<p>在try程序段中，我们放入容易犯错的部分。我们可以跟上except，来说明如果在try部分的语句发生StopIteration时，程序该做的事情。如果没有发生异常，则except部分被跳过。<br>随后，程序将继续运行，而不是彻底中断。<br>完整的语法结构如下：<br><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">try</span>:</div><div class=\"line\">    <span class=\"keyword\">...</span></div><div class=\"line\">except exception1:</div><div class=\"line\">    <span class=\"keyword\">...</span></div><div class=\"line\">except exception2:</div><div class=\"line\">    <span class=\"keyword\">...</span></div><div class=\"line\">except:</div><div class=\"line\">    <span class=\"keyword\">...</span></div><div class=\"line\"><span class=\"keyword\">else</span>:</div><div class=\"line\">    <span class=\"keyword\">...</span></div><div class=\"line\">finally:</div><div class=\"line\">    <span class=\"keyword\">...</span></div></pre></td></tr></table></figure></p>\n<p>如果try中有异常发生时，将执行异常的归属，执行except。异常层层比较，看是否是exception1, exception2…，直到找到其归属，执行相应的except中的语句。如果except后面没有任何参数，那么表示所有的exception都交给这段程序处理。比如:<br><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">try:</div><div class=\"line\">    <span class=\"builtin-name\">print</span>(a<span class=\"number\">*2</span>)</div><div class=\"line\">except TypeError:</div><div class=\"line\">    <span class=\"builtin-name\">print</span>(<span class=\"string\">\"TypeError\"</span>)</div><div class=\"line\">except:</div><div class=\"line\">    <span class=\"builtin-name\">print</span>(<span class=\"string\">\"Not Type Error &amp; Error noted\"</span>)</div></pre></td></tr></table></figure></p>\n<p>由于a没有定义，所以是NameError。异常最终被except:部分的程序捕捉。<br>如果无法将异常交给合适的对象，异常将继续向上层抛出，直到被捕捉或者造成主程序报错。比如下面的程序：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">test_func</span><span class=\"params\">()</span>:</span></div><div class=\"line\">    <span class=\"keyword\">try</span>:</div><div class=\"line\">        m = <span class=\"number\">1</span>/<span class=\"number\">0</span></div><div class=\"line\">    <span class=\"keyword\">except</span> NameError:</div><div class=\"line\">        print(<span class=\"string\">\"Catch NameError in the sub-function\"</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">try</span>:</div><div class=\"line\">    test_func()</div><div class=\"line\"><span class=\"keyword\">except</span> ZeroDivisionError:</div><div class=\"line\">    print(<span class=\"string\">\"Catch error in the main program\"</span>)</div></pre></td></tr></table></figure></p>\n<p>子程序的try…except…结构无法处理相应的除以0的错误，所以错误被抛给上层的主程序。<br>如果try中没有异常，那么except部分将跳过，执行else中的语句。<br>finally是无论是否有异常，最后都要做的一些事情。<br>流程如下:<br>  ● try-&gt;异常-&gt;except-&gt;finally<br>  ● try-&gt;无异常-&gt;else-&gt;finally</p>\n<h2 id=\"2、抛出异常\"><a href=\"#2、抛出异常\" class=\"headerlink\" title=\"2、抛出异常\"></a>2、抛出异常</h2><p>我们也可以自己写一个抛出异常的例子:<br><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"title\">print</span><span class=\"params\">(<span class=\"string\">'Lalala'</span>)</span></span></div><div class=\"line\">raise StopIteration</div><div class=\"line\"><span class=\"function\"><span class=\"title\">print</span><span class=\"params\">(<span class=\"string\">'Hahaha'</span>)</span></span></div></pre></td></tr></table></figure></p>\n<p>这个例子不具备任何实际意义。只是为了说明raise语句的作用。<br>StopIteration是一个类。抛出异常时，会自动有一个中间环节，就是生成StopIteration的一个对象。Python实际上抛出的，是这个对象。当然，也可以自行生成对象:<br><figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">raise</span> StopIteration()</div></pre></td></tr></table></figure></p>\n<h1 id=\"五、动态类型\"><a href=\"#五、动态类型\" class=\"headerlink\" title=\"五、动态类型\"></a>五、动态类型</h1><p>动态类型(dynamic typing)是Python另一个重要的核心概念。我们之前说过，Python的变量(variable)不需要声明，而在赋值时，变量可以重新赋值为任意值。这些都与动态类型的概念相关。</p>\n<h2 id=\"1、动态类型\"><a href=\"#1、动态类型\" class=\"headerlink\" title=\"1、动态类型\"></a>1、动态类型</h2><p>在我们接触的对象中，有一类特殊的对象，是用于存储数据的。常见的该类对象包括各种数字，字符串，表，词典。在C语言中，我们称这样一些数据结构为变量。而在Python中，这些是对象。<br>对象是储存在内存中的实体。但我们并不能直接接触到该对象。我们在程序中写的对象名，只是指向这一对象的引用(reference)。<br>引用和对象分离，是动态类型的核心。引用可以随时指向一个新的对象：<br><figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">a</span> = <span class=\"number\">3</span></div><div class=\"line\"><span class=\"attr\">a</span> = <span class=\"string\">'at'</span></div></pre></td></tr></table></figure></p>\n<p>第一个语句中，3是储存在内存中的一个整数对象。通过赋值，引用a指向对象3。<br>第二个语句中，内存中建立对象‘at’，是一个字符串(string)。引用a指向了’at’。此时，对象3不再有引用指向它。Python会自动将没有引用指向的对象销毁(destruct)，释放相应内存。<br>(对于小的整数和短字符串，Python会缓存这些对象，而不是频繁的建立和销毁。)<br><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">a</span> = <span class=\"number\">5</span></div><div class=\"line\"><span class=\"selector-tag\">b</span> = <span class=\"selector-tag\">a</span></div><div class=\"line\"><span class=\"selector-tag\">a</span> = <span class=\"selector-tag\">a</span> + <span class=\"number\">2</span></div></pre></td></tr></table></figure></p>\n<p>再看这个例子。通过前两个句子，我们让a,b指向同一个整数对象5( b = a的含义是让引用b指向引用a所指的那一个对象)。但第三个句子实际上对引用a重新赋值，让a指向一个新的对象7。此时a,b分别指向不同的对象。我们看到，即使是多个引用指向同一个对象，如果一个引用值发生变化，那么实际上是让这个引用指向一个新的引用，并不影响其他的引用的指向。从效果上看，就是各个引用各自独立，互不影响。<br>其它数据对象也是如此:<br><figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">L1</span> = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]</div><div class=\"line\"><span class=\"attr\">L2</span> = L1</div><div class=\"line\"><span class=\"attr\">L1</span> = <span class=\"number\">1</span></div></pre></td></tr></table></figure></p>\n<p>但注意以下情况:<br><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">L1 = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]</div><div class=\"line\">L2 = L1</div><div class=\"line\">L1[<span class=\"number\">0</span>] = <span class=\"number\">10</span></div><div class=\"line\">print(L2)</div></pre></td></tr></table></figure></p>\n<p>在该情况下，我们不再对L1这一引用赋值，而是对L1所指向的表的元素赋值。结果是，L2也同时发生变化。<br>原因何在呢？因为L1，L2的指向没有发生变化，依然指向那个表。表实际上是包含了多个引用的对象（每个引用是一个元素，比如L1[0]，L1[1]…, 每个引用指向一个对象，比如1,2,3), 。而L1[0] = 10这一赋值操作，并不是改变L1的指向，而是对L1[0], 也就是表对象的一部份(一个元素)，进行操作，所以所有指向该对象的引用都受到影响。<br>（与之形成对比的是，我们之前的赋值操作都没有对对象自身发生作用，只是改变引用指向。）<br>列表可以通过引用其元素，改变对象自身(in-place change)。这种对象类型，称为可变数据对象(mutable object)，词典也是这样的数据类型。<br>而像之前的数字和字符串，不能改变对象本身，只能改变引用的指向，称为不可变数据对象(immutable object)。<br>我们之前学的元组(tuple)，尽管可以调用引用元素，但不可以赋值，因此不能改变对象自身，所以也算是immutable object。</p>\n<h2 id=\"2、从动态类型看函数的参数传递\"><a href=\"#2、从动态类型看函数的参数传递\" class=\"headerlink\" title=\"2、从动态类型看函数的参数传递\"></a>2、从动态类型看函数的参数传递</h2><p>函数的参数传递，本质上传递的是引用。比如说：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">f</span><span class=\"params\">(x)</span>:</span></div><div class=\"line\">    x = <span class=\"number\">100</span></div><div class=\"line\">    print(x)</div><div class=\"line\"></div><div class=\"line\">a = <span class=\"number\">1</span></div><div class=\"line\">f(a)</div><div class=\"line\">print(a)</div></pre></td></tr></table></figure></p>\n<p>参数x是一个新的引用，指向a所指的对象。如果参数是不可变(immutable)的对象，a和x引用之间相互独立。对参数x的操作不会影响引用a。这样的传递类似于C语言中的值传递。<br>如果传递的是可变(mutable)的对象，那么改变函数参数，有可能改变原对象。所有指向原对象的引用都会受影响，编程的时候要对此问题留心。比如说：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">f</span><span class=\"params\">(x)</span>:</span></div><div class=\"line\">    x[<span class=\"number\">0</span>] = <span class=\"number\">100</span></div><div class=\"line\">    print(x)</div><div class=\"line\"></div><div class=\"line\">a = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]</div><div class=\"line\">f(a)</div><div class=\"line\">print(a)</div></pre></td></tr></table></figure></p>\n<p>动态类型是Python的核心机制之一。可以在应用中慢慢熟悉。</p>"}],"PostAsset":[],"PostCategory":[{"post_id":"cj5mkehqc0009ao943jufbacq","category_id":"cj5mkehq00004ao94zxfzsx30","_id":"cj5mkehqn000hao946supmrg9"},{"post_id":"cj5mkehpq0001ao94ma0vdpxj","category_id":"cj5mkehq00004ao94zxfzsx30","_id":"cj5mkehqt000nao94nf2crzom"},{"post_id":"cj5mkehqf000bao94oyoxy9fc","category_id":"cj5mkehq00004ao94zxfzsx30","_id":"cj5mkehqw000rao9403ibrwxn"},{"post_id":"cj5mkehql000gao94lwtgkac9","category_id":"cj5mkehq00004ao94zxfzsx30","_id":"cj5mkehqz000wao94vb1l4aol"},{"post_id":"cj5mkehpy0003ao946iobfjxh","category_id":"cj5mkehq00004ao94zxfzsx30","_id":"cj5mkehr3000zao94fhshuhpv"},{"post_id":"cj5mkehqu000qao948kik73ed","category_id":"cj5mkehq00004ao94zxfzsx30","_id":"cj5mkehr80014ao949ccnrg0h"},{"post_id":"cj5mkehq70007ao94fl9buc0c","category_id":"cj5mkehq00004ao94zxfzsx30","_id":"cj5mkehrc0017ao94twf4p58x"},{"post_id":"cj5mkehr0000yao94fnfoi8ws","category_id":"cj5mkehqy000uao94osggh2zq","_id":"cj5mkehrh001aao94591cn6s6"},{"post_id":"cj5mkehqq000kao94be0bgja9","category_id":"cj5mkehqy000uao94osggh2zq","_id":"cj5mkehrj001dao9420i3vw72"},{"post_id":"cj5mkehr40011ao94zxkwvkzy","category_id":"cj5mkehq00004ao94zxfzsx30","_id":"cj5mkehrp001gao94mcetypbd"},{"post_id":"cj5mkehr90015ao94v9ochp8s","category_id":"cj5mkehqy000uao94osggh2zq","_id":"cj5mkehrr001kao9463919dro"},{"post_id":"cj5mkehqy000tao9464c0a4io","category_id":"cj5mkehqy000uao94osggh2zq","_id":"cj5mkehrt001nao94uk03fsxb"},{"post_id":"cj5mkehrd0018ao94crkybedk","category_id":"cj5mkehq00004ao94zxfzsx30","_id":"cj5mkehrv001qao94fbm1hy86"},{"post_id":"cj5mkehri001bao94sr22gdh1","category_id":"cj5mkehqy000uao94osggh2zq","_id":"cj5mkehrw001tao94r6z5tnp1"},{"post_id":"cj5mkehrm001eao94nzxjgs3u","category_id":"cj5mkehqy000uao94osggh2zq","_id":"cj5mkehs0001wao94lacb5pgz"},{"post_id":"cj5mkehrq001iao94kqo6t0ad","category_id":"cj5mkehqy000uao94osggh2zq","_id":"cj5mkehs2001zao94dw4o7gnk"},{"post_id":"cj5mkehrr001lao94lzoe01k3","category_id":"cj5mkehqy000uao94osggh2zq","_id":"cj5mkehs50023ao946f0sqe9u"},{"post_id":"cj5mkehrt001oao94k8mkl9q0","category_id":"cj5mkehqy000uao94osggh2zq","_id":"cj5mkehs60026ao945aopsi4o"},{"post_id":"cj5mkehrv001sao94jfyioxto","category_id":"cj5mkehqy000uao94osggh2zq","_id":"cj5mkehsb002aao94wf5d0bkv"},{"post_id":"cj5mkehrx001uao94do769tti","category_id":"cj5mkehqy000uao94osggh2zq","_id":"cj5mkehsc002dao94db8g306z"},{"post_id":"cj5mkehs0001xao94zk37tgm5","category_id":"cj5mkehqy000uao94osggh2zq","_id":"cj5mkehsj002gao94u632jxce"},{"post_id":"cj5mkehs20020ao94gwq667n4","category_id":"cj5mkehq00004ao94zxfzsx30","_id":"cj5mkehsl002kao94r9fltj3x"},{"post_id":"cj5mkehs50024ao94u1g9io6e","category_id":"cj5mkehq00004ao94zxfzsx30","_id":"cj5mkehsn002nao9477iyq42e"},{"post_id":"cj5mkehs60027ao94honn6g4v","category_id":"cj5mkehq00004ao94zxfzsx30","_id":"cj5mkehso002rao94wj9775sm"},{"post_id":"cj5mkehsb002bao94xx1tp8bc","category_id":"cj5mkehq00004ao94zxfzsx30","_id":"cj5mkehsq002uao94yn2pmi38"},{"post_id":"cj5mkehsd002eao94zfe1ve3m","category_id":"cj5mkehqy000uao94osggh2zq","_id":"cj5mkehss002yao94bo5q8635"},{"post_id":"cj5mkehsk002iao943na8z2in","category_id":"cj5mkehq00004ao94zxfzsx30","_id":"cj5mkehst0031ao94v0z0vomr"},{"post_id":"cj5mkehsl002lao94axig3j5i","category_id":"cj5mkehq00004ao94zxfzsx30","_id":"cj5mkehsw0035ao94t6kfuqnu"},{"post_id":"cj5mkehsn002pao94agubobjg","category_id":"cj5mkehq00004ao94zxfzsx30","_id":"cj5mkehsx0038ao94k994pxce"},{"post_id":"cj5mkehsp002sao943p60q2ls","category_id":"cj5mkehq00004ao94zxfzsx30","_id":"cj5mkehsz003bao94qwjwjyhj"},{"post_id":"cj5mkehsr002wao944jmc09y3","category_id":"cj5mkehq00004ao94zxfzsx30","_id":"cj5mkehsz003dao942myqdpz7"},{"post_id":"cj5mkehss002zao94ttg8yet3","category_id":"cj5mkehq00004ao94zxfzsx30","_id":"cj5mkeht0003gao940w61u9q4"},{"post_id":"cj5mkehsu0033ao949lkqb175","category_id":"cj5mkehsx0036ao94kyf8uhju","_id":"cj5mkeht1003iao94eufvq3i5"},{"post_id":"cj5qh1za00000wk943bkcmcu2","category_id":"cj5mkehqy000uao94osggh2zq","_id":"cj5qh1zae0002wk94ldtryzrq"}],"PostTag":[{"post_id":"cj5mkehqc0009ao943jufbacq","tag_id":"cj5mkehq40005ao94jt22kr6t","_id":"cj5mkehqk000eao94e4xsy5i0"},{"post_id":"cj5mkehpq0001ao94ma0vdpxj","tag_id":"cj5mkehq40005ao94jt22kr6t","_id":"cj5mkehqn000iao94kcf3dztt"},{"post_id":"cj5mkehqf000bao94oyoxy9fc","tag_id":"cj5mkehq40005ao94jt22kr6t","_id":"cj5mkehqt000oao94yhhq2dpx"},{"post_id":"cj5mkehpy0003ao946iobfjxh","tag_id":"cj5mkehq40005ao94jt22kr6t","_id":"cj5mkehqw000sao94n25tp3lk"},{"post_id":"cj5mkehqu000qao948kik73ed","tag_id":"cj5mkehq40005ao94jt22kr6t","_id":"cj5mkehr0000xao94qmdvgi8t"},{"post_id":"cj5mkehq70007ao94fl9buc0c","tag_id":"cj5mkehq40005ao94jt22kr6t","_id":"cj5mkehr40010ao941xkbxohj"},{"post_id":"cj5mkehql000gao94lwtgkac9","tag_id":"cj5mkehqz000vao949q7al287","_id":"cj5mkehrb0016ao9464bfzarq"},{"post_id":"cj5mkehqq000kao94be0bgja9","tag_id":"cj5mkehr60013ao94n0br896m","_id":"cj5mkehrj001cao94np6a0if9"},{"post_id":"cj5mkehrd0018ao94crkybedk","tag_id":"cj5mkehq40005ao94jt22kr6t","_id":"cj5mkehrp001fao94dilftnhv"},{"post_id":"cj5mkehri001bao94sr22gdh1","tag_id":"cj5mkehrh0019ao94hqugc7ua","_id":"cj5mkehrr001jao94gpommgp5"},{"post_id":"cj5mkehqy000tao9464c0a4io","tag_id":"cj5mkehrh0019ao94hqugc7ua","_id":"cj5mkehrt001mao94kag8a57w"},{"post_id":"cj5mkehr0000yao94fnfoi8ws","tag_id":"cj5mkehrp001hao94o7o4g4fg","_id":"cj5mkehrv001rao944fl4zj57"},{"post_id":"cj5mkehr40011ao94zxkwvkzy","tag_id":"cj5mkehru001pao94z3xkofqk","_id":"cj5mkehs1001yao94v97hh4xa"},{"post_id":"cj5mkehs0001xao94zk37tgm5","tag_id":"cj5mkehrh0019ao94hqugc7ua","_id":"cj5mkehs40022ao94x29yvl9s"},{"post_id":"cj5mkehr90015ao94v9ochp8s","tag_id":"cj5mkehrh0019ao94hqugc7ua","_id":"cj5mkehs60025ao94miqey5f9"},{"post_id":"cj5mkehs20020ao94gwq667n4","tag_id":"cj5mkehru001pao94z3xkofqk","_id":"cj5mkehsa0029ao947adi0dji"},{"post_id":"cj5mkehs50024ao94u1g9io6e","tag_id":"cj5mkehr60013ao94n0br896m","_id":"cj5mkehsc002cao94ssrx8wh7"},{"post_id":"cj5mkehrm001eao94nzxjgs3u","tag_id":"cj5mkehs40021ao94kkwx8yf8","_id":"cj5mkehsj002fao94bbcexh4k"},{"post_id":"cj5mkehs60027ao94honn6g4v","tag_id":"cj5mkehq40005ao94jt22kr6t","_id":"cj5mkehsl002jao94us5dvxiz"},{"post_id":"cj5mkehrq001iao94kqo6t0ad","tag_id":"cj5mkehsa0028ao94ao8v6oee","_id":"cj5mkehsm002mao94btrokm5c"},{"post_id":"cj5mkehsk002iao943na8z2in","tag_id":"cj5mkehr60013ao94n0br896m","_id":"cj5mkehso002qao94558yfejw"},{"post_id":"cj5mkehrr001lao94lzoe01k3","tag_id":"cj5mkehsa0028ao94ao8v6oee","_id":"cj5mkehsq002tao94oyfbj2rv"},{"post_id":"cj5mkehsl002lao94axig3j5i","tag_id":"cj5mkehru001pao94z3xkofqk","_id":"cj5mkehss002xao94n05mzp1s"},{"post_id":"cj5mkehsn002pao94agubobjg","tag_id":"cj5mkehru001pao94z3xkofqk","_id":"cj5mkehst0030ao9452o0la8h"},{"post_id":"cj5mkehrt001oao94k8mkl9q0","tag_id":"cj5mkehsa0028ao94ao8v6oee","_id":"cj5mkehsv0034ao9465rc0yvv"},{"post_id":"cj5mkehsp002sao943p60q2ls","tag_id":"cj5mkehru001pao94z3xkofqk","_id":"cj5mkehsx0037ao942hfv4dvc"},{"post_id":"cj5mkehsr002wao944jmc09y3","tag_id":"cj5mkehru001pao94z3xkofqk","_id":"cj5mkehsz003aao94jpkujroy"},{"post_id":"cj5mkehrv001sao94jfyioxto","tag_id":"cj5mkehs40021ao94kkwx8yf8","_id":"cj5mkehsz003cao94bvkxlhu2"},{"post_id":"cj5mkehss002zao94ttg8yet3","tag_id":"cj5mkehru001pao94z3xkofqk","_id":"cj5mkeht0003fao94relslsop"},{"post_id":"cj5mkehrx001uao94do769tti","tag_id":"cj5mkehsa0028ao94ao8v6oee","_id":"cj5mkeht1003hao9421nr2uoc"},{"post_id":"cj5mkehsb002bao94xx1tp8bc","tag_id":"cj5mkehsy0039ao944zpq8wv2","_id":"cj5mkeht2003kao94w0odlr70"},{"post_id":"cj5mkehsd002eao94zfe1ve3m","tag_id":"cj5mkeht0003eao94zxpq7czg","_id":"cj5mkeht3003lao94295qhm35"},{"post_id":"cj5mkehsu0033ao949lkqb175","tag_id":"cj5mkeht1003jao94codm4xxa","_id":"cj5mkeht3003mao9472i5hqex"},{"post_id":"cj5qh1za00000wk943bkcmcu2","tag_id":"cj5mkeht0003eao94zxpq7czg","_id":"cj5qh1zae0001wk94ejpgo68t"}],"Tag":[{"name":"web","_id":"cj5mkehq40005ao94jt22kr6t"},{"name":"HAProxy","_id":"cj5mkehqz000vao949q7al287"},{"name":"kvm","_id":"cj5mkehr60013ao94n0br896m"},{"name":"技术与干货","_id":"cj5mkehrh0019ao94hqugc7ua"},{"name":"shell","_id":"cj5mkehrp001hao94o7o4g4fg"},{"name":"实践与总结","_id":"cj5mkehru001pao94z3xkofqk"},{"name":"安全","_id":"cj5mkehs40021ao94kkwx8yf8"},{"name":"MySQL","_id":"cj5mkehsa0028ao94ao8v6oee"},{"name":"高可用","_id":"cj5mkehsy0039ao944zpq8wv2"},{"name":"Python","_id":"cj5mkeht0003eao94zxpq7czg"},{"name":"杂谈与鸡汤","_id":"cj5mkeht1003jao94codm4xxa"}]}}